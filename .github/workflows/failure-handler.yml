name: 'Handle failures in the workflow'
on:
  workflow_call:
    inputs:
      env:
        description: 'Environment to generate the OpenAPI Spec for.'
        required: true
        type: string
      release_name:
        description: 'Name of the release.'
        required: true
        type: string
    secrets: # all secrets are passed explicitly in this workflow
      jira_api_token:
        required: true

permissions:
  contents: write
  issues: write

jobs:
    failure-handler:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
              with:
                sparse-checkout: |
                    .github/ISSUE_TEMPLATE/GH_ACTION_ISSUE_TEMPLATE.md
                    .github/scripts/create_jira_ticket.sh

            - name: Check if an issue already exists 
              id: check-issue
              env: 
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                TARGET_ENV: ${{ inputs.env }}
                RELEASE_NAME: ${{ inputs.release_name }}
                REPO: ${{ github.repository }}
              run: |
                query="(${TARGET_ENV}}) The ${RELEASE_NAME} Release has failed."
                number_issue=$(gh search issues "${query}" --repo "${REPO}" --state open --label failed-release --json title | jq length)
                echo "number_issue=${number_issue}"
                echo "found-issue=false" >> "${GITHUB_OUTPUT}"
                if [ "${number_issue}" -gt 0 ]; then
                    echo "An issue already exists. Stopping execution."
                    echo "found-issue=true" >> "${GITHUB_OUTPUT}"
                fi
            - name: Create Issue # Create an issue in the repo if the release fails
              if: ${{ steps.check-issue.outputs.found-issue == 'false' }}
              id: create-issue
              uses: JasonEtco/create-an-issue@1b14a70e4d8dc185e5cc76d3bec9eab20257b2c5
              env:
                TARGET_ENV: ${{ inputs.env }}
                RELEASE_NAME: ${{ inputs.release_name }}
                GITHUB_RUN_ID: ${{ github.run_id }}
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                update_existing: false
              with:
                filename: .github/ISSUE_TEMPLATE/GH_ACTION_ISSUE_TEMPLATE.md
            - name: Create JIRA Ticket
              if: ${{ steps.create-issue.outputs.number != null }}
              id: create-jira-ticket
              env:
                TARGET_ENV: ${{ inputs.env }}
                RELEASE_NAME: ${{ inputs.release_name }}
                JIRA_API_TOKEN: ${{ secrets.jira_api_token }}
                ISSUE_ID: ${{ steps.create-issue.outputs.number }}
              run: .github/scripts/create_jira_ticket.sh
            - name: Add comment to GH Issue
              if: ${{ steps.create-issue.outputs.number != null }}
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                JIRA_TICKET_ID: ${{ steps.create-jira-ticket.outputs.jira-ticket-id }}
                ISSUE_URL: ${{ steps.create-issue.outputs.url }}
              run: |
                gh issue comment ${{ env.ISSUE_URL }} -b "The ticket [${{env.JIRA_TICKET_ID}}](https://jira.mongodb.org/browse/${{env.JIRA_TICKET_ID}}) was created for internal tracking."
