name: 'Handle failures in the workflow'
on:
  workflow_call:
    inputs:
      env:
        description: 'Environment the task has been failed.'
        required: true
        type: string
      task_name:
        description: 'Name of the task.'
        required: true
        type: string
      team_id:
        description: 'ID of Jira Team'
        required: true
        type: string
    secrets: # all secrets are passed explicitly in this workflow
      jira_api_token:
        required: true

permissions:
  contents: write
  issues: write

jobs:
  failure-handler:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Check if an issue already exists
        id: check-issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TARGET_ENV: ${{ inputs.env }}
          TASK_NAME: ${{ inputs.task_name }}
          REPO: ${{ github.repository }}
        run: |
          query="(${TARGET_ENV}}) The ${TASK_NAME} task has failed."
          number_issue=$(gh search issues "${query}" --repo "${REPO}" --state open --label failed-release --json title | jq length)
          
          if [ -z "${number_issue}" ]; then
              echo "There was an issue with the GH APIs. Stopping execution."
              return 1
          fi
          
          echo "number_issue=${number_issue}"
          if [ "${number_issue}" -gt 0 ]; then
              echo "An issue already exists. Stopping execution."
              echo "found-issue=true" >> "${GITHUB_OUTPUT}"
              return 0
          fi
          
          echo "found-issue=false" >> "${GITHUB_OUTPUT}"
      - name: Create Issue # Create an issue in the repo if the release fails
        if: ${{ steps.check-issue.outputs.found-issue == 'false' }}
        uses: imjohnbo/issue-bot@572eed14422c4d6ca37e870f97e7da209422f5bd
        env:
          target_env: ${{ inputs.env }}
        with:
          labels: failed-release
          title: "(${{env.target_env}}) ${{ inputs.task_name }} failed :scream_cat:"
          body: See https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          token: ${{ secrets.GITHUB_TOKEN }}
