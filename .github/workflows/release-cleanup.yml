# Release Cleanup creates a PR to delete any autogenerated file (OAS or changelog) that is no longer needed.
# This may include:
# 1) OASes files of upcoming APIs that are released to a stable api. In this event, we want to keep only the stable OAS.
name: 'Release Cleanup'
on:
  workflow_call:
    inputs:
      env:
        description: 'Environment used for the release.'
        required: true
        type: string
      branch:
        description: 'Branch used for the release.'
        required: true
        type: string
    secrets:
      api_bot_pat:
        required: true
jobs:
  delete-upcoming-versions-with-stable:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
        with:
          ref: ${{ inputs.branch }}
          token: ${{secrets.api_bot_pat}}
      - name: Download release scripts
        uses: actions/download-artifact@v4
        with:
          name: release-scripts
          github-token: ${{ secrets.api_bot_pat }}
          run-id: ${{ github.run_id }}
          path: release-scripts
      - name: Add permissions to execute scripts
        run: |
          chmod +x release-scripts/*.sh
      - name: Get List of Files to Delete
        id: list_files_to_delete
        run: ./release-scripts/get_list_files_to_delete.sh
      - name: Delete files
        env:
          V2_OPEN_API_FILES_TO_DELETE: ${{ steps.list_files_to_delete.outputs.V2_OPEN_API_FILES_TO_DELETE }}
        run: |
          pushd openapi/v2
          
          FILES_CHANGED=false
          if [ -z "${V2_OPEN_API_FILES_TO_DELETE}" ]; then
            echo "V2_OPEN_API_FILES_TO_DELETE is empty. No files to delete."
            echo "FILES_CHANGED=${FILES_CHANGED}" >> "$GITHUB_ENV"
            exit 0
          fi
          for file_to_delete in ${V2_OPEN_API_FILES_TO_DELETE}; do
            if [ -f "${file_to_delete}" ]; then
              echo "Deleting file: ${file_to_delete}"
              FILES_CHANGED=true
              rm -f "${file_to_delete}"
            fi
          done
          echo "FILES_CHANGED=${FILES_CHANGED}" >> "$GITHUB_ENV"
          
          popd
      - name: Create PR
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e
        if: env.FILES_CHANGED == 'true'
        with:
          token: ${{ secrets.api_bot_pat }}
          title: "APIBot: Release Cleanup"
          commit-message: "release cleanup"
          delete-branch: true
          branch: release-cleanup-${{ github.run_id }}
          body: |              
              > NOTE: This PR is autogenerated.
              > DO NOT MERGE THE PR IF YOU ARE UNSURE ABOUT THE CHANGE.
              
              # Description
              This PR deletes files related to an "Upcoming" api that has been released to a "Stable" API.
              
              ## Why?
              The MongoDB Admin API renders OpenAPI specifications and changelog files from this repository. 
              Since this API version is now “Stable,” the files corresponding to its previous “Upcoming” state are obsolete.
              Deleting these files prevents the Admin API from inadvertently displaying outdated or irrelevant information from these older specifications and changelogs.
