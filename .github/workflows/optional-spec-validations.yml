name: 'Optional Spec Validations'
on:
  workflow_call:
    inputs:
      spectral_version:
        description: 'Version of Spectral to use'     
        type: string
        required: true
      env:
        description: 'Environment to generate the OpenAPI Spec for.'
        required: true
        type: string
    secrets: # all secrets are passed explicitly in this workflow
      api_bot_pat:
        required: true


permissions:
  contents: write
  issues: write
  id-token: write

jobs:  
  optional-validations:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      - name: Install npm dependencies
        run: npm install
      - name: Download openapi-foas
        uses: actions/download-artifact@v4
        with:
          name: openapi-foas-${{ inputs.env }}
          github-token: ${{ secrets.api_bot_pat }}
          run-id: ${{ github.run_id }}
      - name: Validate the FOAS can be used to generate Postman collection
        id: spectral-validation
        env:
          SPECTRAL_VERSION: ${{ inputs.spectral_version }}
        run: |
          cp -rf "openapi-foas.json" "./tools/postman/openapi/atlas-api.json"
          pushd tools/postman
          make convert_to_collection
          npx -- @stoplight/spectral-cli@"${SPECTRAL_VERSION}" lint ./tmp/collection.json --ruleset=./validation/spectral.yaml
          popd
      - name: Create Issue
        if: ${{ failure() && steps.spectral-validation.outcome == 'failure' }}
        uses: imjohnbo/issue-bot@572eed14422c4d6ca37e870f97e7da209422f5bd
        env:
          target_env: ${{ inputs.env }}
        with:
          labels: failed-release
          title: "(${{env.target_env}}) Optional Postman validation failed :scream_cat:"
          body: See https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          token: ${{ secrets.GITHUB_TOKEN }}
