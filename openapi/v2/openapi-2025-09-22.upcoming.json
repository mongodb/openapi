{
  "components": {
    "parameters": {
      "collectionName": {
        "description": "Human-readable label that identifies the collection.",
        "in": "path",
        "name": "collectionName",
        "required": true,
        "schema": {
          "example": "mycoll",
          "type": "string"
        }
      },
      "databaseName": {
        "description": "Human-readable label that identifies the database.",
        "in": "path",
        "name": "databaseName",
        "required": true,
        "schema": {
          "example": "mydb",
          "type": "string"
        }
      },
      "end": {
        "description": "Date and time when MongoDB Cloud stops reporting the metrics. This parameter expresses its value in the ISO 8601 timestamp format in UTC. Include this parameter when you do not set **period**.",
        "in": "query",
        "name": "end",
        "schema": {
          "format": "date-time",
          "type": "string"
        }
      },
      "envelope": {
        "description": "Flag that indicates whether Application wraps the response in an `envelope` JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.",
        "in": "query",
        "name": "envelope",
        "schema": {
          "default": false,
          "type": "boolean"
        }
      },
      "federationSettingsId": {
        "description": "Unique 24-hexadecimal digit string that identifies your federation.",
        "in": "path",
        "name": "federationSettingsId",
        "required": true,
        "schema": {
          "example": "55fa922fb343282757d9554e",
          "pattern": "^([a-f0-9]{24})$",
          "type": "string"
        }
      },
      "granularity": {
        "description": "Duration that specifies the interval at which Atlas reports the metrics. This parameter expresses its value in the ISO 8601 duration format in UTC.",
        "in": "query",
        "name": "granularity",
        "required": true,
        "schema": {
          "example": "PT1M",
          "type": "string"
        }
      },
      "groupId": {
        "description": "Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.\n\n**NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.",
        "in": "path",
        "name": "groupId",
        "required": true,
        "schema": {
          "example": "32b6e34b3d91647abb20e7b8",
          "pattern": "^([a-f0-9]{24})$",
          "type": "string"
        },
        "x-xgen-IPA-exception": {
          "xgen-IPA-117-description-should-not-use-inline-links": "Parameters don't support externalDocs."
        }
      },
      "identityProviderId": {
        "description": "Legacy 20-hexadecimal digit string that identifies the identity provider. This id can be found within the Federation Management Console > Identity Providers tab by clicking the info icon in the IdP ID row of a configured identity provider.",
        "in": "path",
        "name": "identityProviderId",
        "required": true,
        "schema": {
          "example": "c2777a9eca931f29fc2f",
          "pattern": "^([a-f0-9]{20})$",
          "type": "string"
        }
      },
      "includeCount": {
        "description": "Flag that indicates whether the response returns the total number of items (**totalCount**) in the response.",
        "in": "query",
        "name": "includeCount",
        "schema": {
          "default": true,
          "type": "boolean"
        }
      },
      "indexName": {
        "description": "Human-readable label that identifies the index.",
        "in": "path",
        "name": "indexName",
        "required": true,
        "schema": {
          "example": "myindex",
          "type": "string"
        }
      },
      "itemsPerPage": {
        "description": "Number of items that the response returns per page.",
        "in": "query",
        "name": "itemsPerPage",
        "schema": {
          "default": 100,
          "maximum": 500,
          "minimum": 1,
          "type": "integer"
        }
      },
      "liveMigrationId": {
        "description": "Unique 24-hexadecimal digit string that identifies the migration.",
        "in": "path",
        "name": "liveMigrationId",
        "required": true,
        "schema": {
          "example": "6296fb4c7c7aa997cf94e9a8",
          "pattern": "^([a-f0-9]{24})$",
          "type": "string"
        }
      },
      "orgId": {
        "description": "Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the [/orgs](#tag/Organizations/operation/listOrganizations) endpoint to retrieve all organizations to which the authenticated user has access.",
        "in": "path",
        "name": "orgId",
        "required": true,
        "schema": {
          "example": "4888442a3354817a7320eb61",
          "pattern": "^([a-f0-9]{24})$",
          "type": "string"
        },
        "x-xgen-IPA-exception": {
          "xgen-IPA-117-description-should-not-use-inline-links": "Parameters don't support externalDocs."
        }
      },
      "pageNum": {
        "description": "Number of the page that displays the current set of the total objects that the response returns.",
        "in": "query",
        "name": "pageNum",
        "schema": {
          "default": 1,
          "minimum": 1,
          "type": "integer"
        }
      },
      "period": {
        "description": "Duration over which Atlas reports the metrics. This parameter expresses its value in the ISO 8601 duration format in UTC. Include this parameter when you do not set **start** and **end**.",
        "in": "query",
        "name": "period",
        "schema": {
          "example": "PT10H",
          "type": "string"
        }
      },
      "pretty": {
        "description": "Flag that indicates whether the response body should be in the prettyprint format.",
        "in": "query",
        "name": "pretty",
        "schema": {
          "default": false,
          "externalDocs": {
            "description": "Prettyprint",
            "url": "https://en.wikipedia.org/wiki/Prettyprint"
          },
          "type": "boolean"
        }
      },
      "processId": {
        "description": "Combination of hostname and IANA port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (mongod or mongos). The port must be the IANA port on which the MongoDB process listens for requests.",
        "in": "path",
        "name": "processId",
        "required": true,
        "schema": {
          "example": "my.host.name.com:27017",
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
          "type": "string"
        }
      },
      "sandboxConfigId": {
        "description": "Unique 24-hexadecimal digit string that identifies the sandbox configuration.",
        "in": "path",
        "name": "sandboxConfigId",
        "required": true,
        "schema": {
          "example": "507f1f77bcf86cd799439011",
          "pattern": "^([a-f0-9]{24})$",
          "type": "string"
        }
      },
      "start": {
        "description": "Date and time when MongoDB Cloud begins reporting the metrics. This parameter expresses its value in the ISO 8601 timestamp format in UTC. Include this parameter when you do not set **period**.",
        "in": "query",
        "name": "start",
        "schema": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "responses": {
      "accepted": {
        "description": "Accepted."
      },
      "badRequest": {
        "content": {
          "application/json": {
            "example": {
              "detail": "(This is just an example, the exception may not be related to this endpoint) No provider AWS exists.",
              "error": 400,
              "errorCode": "VALIDATION_ERROR",
              "reason": "Bad Request"
            },
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "description": "Bad Request."
      },
      "conflict": {
        "content": {
          "application/json": {
            "example": {
              "detail": "(This is just an example, the exception may not be related to this endpoint) Cannot delete organization link while there is active migration in following project ids: 60c4fd418ebe251047c50554",
              "error": 409,
              "errorCode": "CANNOT_DELETE_ORG_ACTIVE_LIVE_MIGRATION_ATLAS_ORG_LINK",
              "reason": "Conflict"
            },
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "description": "Conflict."
      },
      "forbidden": {
        "content": {
          "application/json": {
            "example": {
              "detail": "(This is just an example, the exception may not be related to this endpoint)",
              "error": 403,
              "errorCode": "CANNOT_CHANGE_GROUP_NAME",
              "reason": "Forbidden"
            },
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "description": "Forbidden."
      },
      "gone": {
        "content": {
          "application/json": {
            "example": {
              "detail": "This happens when a resource is marked for sunset and the sunset date is in the past.",
              "error": 410,
              "errorCode": "VERSION_GONE",
              "reason": "Gone"
            },
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "description": "Gone."
      },
      "internalServerError": {
        "content": {
          "application/json": {
            "example": {
              "detail": "(This is just an example, the exception may not be related to this endpoint)",
              "error": 500,
              "errorCode": "UNEXPECTED_ERROR",
              "reason": "Internal Server Error"
            },
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "description": "Internal Server Error."
      },
      "methodNotAllowed": {
        "content": {
          "application/json": {
            "example": {
              "detail": "(This is just an example, the exception may not be related to this endpoint)",
              "error": 405,
              "errorCode": "ATLAS_BACKUP_CANCEL_SHARD_RESTORE_JOB_NOT_ALLOWED",
              "reason": "Method Not Allowed"
            },
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "description": "Method Not Allowed."
      },
      "noBody": {
        "description": "This endpoint does not return a response body."
      },
      "notFound": {
        "content": {
          "application/json": {
            "example": {
              "detail": "(This is just an example, the exception may not be related to this endpoint) Cannot find resource AWS",
              "error": 404,
              "errorCode": "RESOURCE_NOT_FOUND",
              "reason": "Not Found"
            },
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "description": "Not Found."
      },
      "paymentRequired": {
        "content": {
          "application/json": {
            "example": {
              "detail": "(This is just an example, the exception may not be related to this endpoint)",
              "error": 402,
              "errorCode": "NO_PAYMENT_INFORMATION_FOUND",
              "reason": "Payment Required"
            },
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "description": "Payment Required."
      },
      "tooManyRequests": {
        "content": {
          "application/json": {
            "example": {
              "detail": "(This is just an example, the exception may not be related to this endpoint)",
              "error": 429,
              "errorCode": "RATE_LIMITED",
              "reason": "Too Many Requests"
            },
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "description": "Too Many Requests."
      },
      "unauthorized": {
        "content": {
          "application/json": {
            "example": {
              "detail": "(This is just an example, the exception may not be related to this endpoint)",
              "error": 401,
              "errorCode": "NOT_ORG_GROUP_CREATOR",
              "reason": "Unauthorized"
            },
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "description": "Unauthorized."
      }
    },
    "schemas": {
      "AWSCloudProviderContainer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudProviderContainer"
          },
          {
            "properties": {
              "atlasCidrBlock": {
                "description": "IP addresses expressed in Classless Inter-Domain Routing (CIDR) notation that MongoDB Cloud uses for the network peering containers in your project. MongoDB Cloud assigns all of the project's clusters deployed to this cloud provider an IP address from this range. MongoDB Cloud locks this value if an M10 or greater cluster or a network peering connection exists in this project.\n\nThese CIDR blocks must fall within the ranges reserved per RFC 1918. AWS and Azure further limit the block to between the `/24` and  `/21` ranges.\n\nTo modify the CIDR block, the target project cannot have:\n\n- Any M10 or greater clusters\n- Any other VPC peering connections\n\n You can also create a new project and create a network peering connection to set the desired MongoDB Cloud network peering container CIDR block for that project. MongoDB Cloud limits the number of MongoDB nodes per network peering connection based on the CIDR block and the region selected for the project.\n\n **Example:** A project in an Amazon Web Services (AWS) region supporting three availability zones and an MongoDB CIDR network peering container block of limit of `/24` equals 27 three-node replica sets.",
                "pattern": "^((([0-9]{1,3}\\.){3}[0-9]{1,3})|(:{0,2}([0-9a-f]{1,4}:){0,7}[0-9a-f]{1,4}[:]{0,2}))((%2[fF]|/)[0-9]{1,3})+$",
                "type": "string"
              },
              "regionName": {
                "description": "Geographic area that Amazon Web Services (AWS) defines to which MongoDB Cloud deployed this network peering container.",
                "enum": [
                  "US_EAST_1",
                  "US_EAST_2",
                  "US_WEST_1",
                  "US_WEST_2",
                  "CA_CENTRAL_1",
                  "EU_NORTH_1",
                  "EU_WEST_1",
                  "EU_WEST_2",
                  "EU_WEST_3",
                  "EU_CENTRAL_1",
                  "EU_CENTRAL_2",
                  "SA_EAST_1",
                  "AP_EAST_1",
                  "AP_SOUTHEAST_2",
                  "AP_SOUTHEAST_3",
                  "AP_SOUTHEAST_4",
                  "AP_NORTHEAST_1",
                  "AP_NORTHEAST_2",
                  "AP_NORTHEAST_3",
                  "AP_SOUTHEAST_1",
                  "AP_SOUTH_1",
                  "AP_SOUTH_2",
                  "CN_NORTH_1",
                  "CN_NORTHWEST_1",
                  "ME_CENTRAL_1",
                  "ME_SOUTH_1",
                  "AF_SOUTH_1",
                  "EU_SOUTH_1",
                  "EU_SOUTH_2",
                  "IL_CENTRAL_1",
                  "CA_WEST_1",
                  "AP_SOUTHEAST_5",
                  "AP_SOUTHEAST_7",
                  "MX_CENTRAL_1",
                  "GLOBAL",
                  "US_GOV_WEST_1",
                  "US_GOV_EAST_1"
                ],
                "type": "string"
              },
              "vpcId": {
                "description": "Unique string that identifies the MongoDB Cloud VPC on AWS.",
                "example": "vpc-b555d3b0d9cb783b0",
                "pattern": "^vpc-[0-9a-f]{17}$",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "description": "Collection of settings that configures the network container for a virtual private connection on Amazon Web Services.",
        "required": [
          "regionName"
        ],
        "title": "AWS",
        "type": "object"
      },
      "AWSCloudProviderSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ClusterProviderSettings"
          },
          {
            "properties": {
              "autoScaling": {
                "$ref": "#/components/schemas/CloudProviderAWSAutoScaling"
              },
              "diskIOPS": {
                "description": "Maximum Disk Input/Output Operations per Second (IOPS) that the database host can perform.",
                "format": "int32",
                "type": "integer"
              },
              "encryptEBSVolume": {
                "default": true,
                "deprecated": true,
                "description": "Flag that indicates whether the Amazon Elastic Block Store (EBS) encryption feature encrypts the host's root volume for both data at rest within the volume and for data moving between the volume and the cluster. Clusters always have this setting enabled.",
                "type": "boolean"
              },
              "instanceSizeName": {
                "description": "Cluster tier, with a default storage and memory capacity, that applies to all the data-bearing hosts in your cluster.",
                "enum": [
                  "M10",
                  "M20",
                  "M30",
                  "M40",
                  "M50",
                  "M60",
                  "M80",
                  "M100",
                  "M140",
                  "M200",
                  "M300",
                  "R40",
                  "R50",
                  "R60",
                  "R80",
                  "R200",
                  "R300",
                  "R400",
                  "R700",
                  "M40_NVME",
                  "M50_NVME",
                  "M60_NVME",
                  "M80_NVME",
                  "M200_NVME",
                  "M400_NVME"
                ],
                "title": "AWS Instance Sizes",
                "type": "string"
              },
              "regionName": {
                "description": "Physical location where MongoDB Cloud deploys your AWS-hosted MongoDB cluster nodes. The region you choose can affect network latency for clients accessing your databases. When MongoDB Cloud deploys a dedicated cluster, it checks if a VPC or VPC connection exists for that provider and region. If not, MongoDB Cloud creates them as part of the deployment. MongoDB Cloud assigns the VPC a CIDR block. To limit a new VPC peering connection to one CIDR block and region, create the connection first. Deploy the cluster after the connection starts.",
                "enum": [
                  "US_GOV_WEST_1",
                  "US_GOV_EAST_1",
                  "US_EAST_1",
                  "US_EAST_2",
                  "US_WEST_1",
                  "US_WEST_2",
                  "CA_CENTRAL_1",
                  "EU_NORTH_1",
                  "EU_WEST_1",
                  "EU_WEST_2",
                  "EU_WEST_3",
                  "EU_CENTRAL_1",
                  "EU_CENTRAL_2",
                  "AP_EAST_1",
                  "AP_NORTHEAST_1",
                  "AP_NORTHEAST_2",
                  "AP_NORTHEAST_3",
                  "AP_SOUTHEAST_1",
                  "AP_SOUTHEAST_2",
                  "AP_SOUTHEAST_3",
                  "AP_SOUTHEAST_4",
                  "AP_SOUTH_1",
                  "AP_SOUTH_2",
                  "SA_EAST_1",
                  "CN_NORTH_1",
                  "CN_NORTHWEST_1",
                  "ME_SOUTH_1",
                  "ME_CENTRAL_1",
                  "AF_SOUTH_1",
                  "EU_SOUTH_1",
                  "EU_SOUTH_2",
                  "IL_CENTRAL_1",
                  "CA_WEST_1",
                  "AP_SOUTHEAST_5",
                  "AP_SOUTHEAST_7",
                  "MX_CENTRAL_1",
                  "GLOBAL"
                ],
                "externalDocs": {
                  "description": "AWS",
                  "url": "https://docs.atlas.mongodb.com/reference/amazon-aws/#std-label-amazon-aws"
                },
                "title": "AWS Regions",
                "type": "string"
              },
              "volumeType": {
                "description": "Disk Input/Output Operations per Second (IOPS) setting for Amazon Web Services (AWS) storage that you configure only for abbr title=\"Amazon Web Services\">AWS</abbr>. Specify whether Disk Input/Output Operations per Second (IOPS) must not exceed the default Input/Output Operations per Second (IOPS) rate for the selected volume size (`STANDARD`), or must fall within the allowable Input/Output Operations per Second (IOPS) range for the selected volume size (`PROVISIONED`). You must set this value to (`PROVISIONED`) for NVMe clusters.",
                "enum": [
                  "STANDARD",
                  "PROVISIONED"
                ],
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "type": "object"
      },
      "AWSComputeAutoScaling": {
        "description": "Collection of settings that configures how a cluster might scale its cluster tier and whether the cluster can scale down. Cluster tier auto-scaling is unavailable for clusters using Low CPU or NVME storage classes.",
        "properties": {
          "maxInstanceSize": {
            "description": "Maximum instance size to which your cluster can automatically scale.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M100",
              "M140",
              "M200",
              "M300",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "R700",
              "M40_NVME",
              "M50_NVME",
              "M60_NVME",
              "M80_NVME",
              "M200_NVME",
              "M400_NVME"
            ],
            "title": "AWS Instance Sizes",
            "type": "string"
          },
          "minInstanceSize": {
            "description": "Minimum instance size to which your cluster can automatically scale.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M100",
              "M140",
              "M200",
              "M300",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "R700",
              "M40_NVME",
              "M50_NVME",
              "M60_NVME",
              "M80_NVME",
              "M200_NVME",
              "M400_NVME"
            ],
            "title": "AWS Instance Sizes",
            "type": "string"
          }
        },
        "title": "AWS",
        "type": "object"
      },
      "AWSCreateDataProcessRegionView": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateDataProcessRegionView"
          },
          {
            "properties": {
              "region": {
                "description": "Human-readable label that identifies the geographic location of the region where you wish to store your archived data.",
                "enum": [
                  "US_EAST_1",
                  "US_WEST_2",
                  "SA_EAST_1",
                  "EU_WEST_1",
                  "EU_WEST_2",
                  "EU_CENTRAL_1",
                  "AP_SOUTH_1",
                  "AP_SOUTHEAST_1",
                  "AP_SOUTHEAST_2",
                  "AP_NORTHEAST_2"
                ],
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "type": "object"
      },
      "AWSDataProcessRegionView": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataProcessRegionView"
          },
          {
            "properties": {
              "region": {
                "description": "Human-readable label that identifies the geographic location of the region where you store your archived data.",
                "enum": [
                  "US_EAST_1",
                  "US_WEST_2",
                  "SA_EAST_1",
                  "EU_WEST_1",
                  "EU_WEST_2",
                  "EU_CENTRAL_1",
                  "AP_SOUTH_1",
                  "AP_SOUTHEAST_1",
                  "AP_SOUTHEAST_2",
                  "AP_NORTHEAST_2"
                ],
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "type": "object"
      },
      "AWSHardwareSpec": {
        "description": "Hardware specifications for nodes deployed in the region.",
        "properties": {
          "diskIOPS": {
            "description": "Target IOPS (Input/Output Operations Per Second) desired for storage attached to this hardware.\n\n Change this parameter if you:\n\n- set `\"replicationSpecs[n].regionConfigs[m].providerName\" to \"AWS\"`.\n- set `\"replicationSpecs[n].regionConfigs[m].electableSpecs.instanceSize\" to \"M30\"` or greater (not including `Mxx_NVME` tiers).\n\n- set `\"replicationSpecs[n].regionConfigs[m].electableSpecs.ebsVolumeType\" to \"PROVISIONED\"`.\n\nThe maximum input/output operations per second (IOPS) depend on the selected **.instanceSize** and **.diskSizeGB**.\nThis parameter defaults to the cluster tier's standard IOPS value.\nChanging this value impacts cluster cost.\nMongoDB Cloud enforces minimum ratios of storage capacity to system memory for given cluster tiers. This keeps cluster performance consistent with large datasets.\n\n- Instance sizes `M10` to `M40` have a ratio of disk capacity to system memory of 60:1.\n- Instance sizes greater than `M40` have a ratio of 120:1.",
            "format": "int32",
            "type": "integer"
          },
          "ebsVolumeType": {
            "default": "STANDARD",
            "description": "Type of storage you want to attach to your AWS-provisioned cluster.\n\n- `STANDARD` volume types can't exceed the default input/output operations per second (IOPS) rate for the selected volume size. \n\n- `PROVISIONED` volume types must fall within the allowable IOPS range for the selected volume size. You must set this value to (`PROVISIONED`) for NVMe clusters.",
            "enum": [
              "STANDARD",
              "PROVISIONED"
            ],
            "type": "string"
          },
          "instanceSize": {
            "description": "Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts of the node type.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M100",
              "M140",
              "M200",
              "M300",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "R700",
              "M40_NVME",
              "M50_NVME",
              "M60_NVME",
              "M80_NVME",
              "M200_NVME",
              "M400_NVME"
            ],
            "title": "AWS Instance Sizes",
            "type": "string"
          },
          "nodeCount": {
            "description": "Number of nodes of the given type for MongoDB Cloud to deploy to the region.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "AWS Cluster Hardware Settings",
        "type": "object"
      },
      "AWSHardwareSpec20240805": {
        "description": "Hardware specifications for nodes deployed in the region.",
        "properties": {
          "diskIOPS": {
            "description": "Target IOPS (Input/Output Operations Per Second) desired for storage attached to this hardware.\n\n You can set different IOPS values on different shards when provisioned IOPS are supported.\n\n Change this parameter if you:\n\n- set `\"replicationSpecs[n].regionConfigs[m].providerName\" to \"AWS\"`.\n- set `\"replicationSpecs[n].regionConfigs[m].electableSpecs.instanceSize\" to \"M30\"` or greater (not including `Mxx_NVME` tiers).\n\n- set `\"replicationSpecs[n].regionConfigs[m].electableSpecs.ebsVolumeType\" to \"PROVISIONED\"`.\n\nThe maximum input/output operations per second (IOPS) depend on the selected **.instanceSize** and **.diskSizeGB**.\nThis parameter defaults to the cluster tier's standard IOPS value.\nChanging this value impacts cluster cost.\nMongoDB Cloud enforces minimum ratios of storage capacity to system memory for given cluster tiers. This keeps cluster performance consistent with large datasets.\n\n- Instance sizes `M10` to `M40` have a ratio of disk capacity to system memory of 60:1.\n- Instance sizes greater than `M40` have a ratio of 120:1.",
            "format": "int32",
            "type": "integer"
          },
          "diskSizeGB": {
            "description": "Storage capacity of instance data volumes expressed in gigabytes. Increase this number to add capacity.\n\n This value must be equal for all shards and node types.\n\n This value is not configurable on M0/M2/M5 clusters.\n\n MongoDB Cloud requires this parameter if you set **replicationSpecs**.\n\n If you specify a disk size below the minimum (10 GB), this parameter defaults to the minimum disk size value. \n\n Storage charge calculations depend on whether you choose the default value or a custom value.\n\n The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require more storage space, consider upgrading your cluster to a higher tier.",
            "externalDocs": {
              "description": "Customize Storage",
              "url": "https://dochub.mongodb.org/core/customize-storage"
            },
            "format": "double",
            "type": "number"
          },
          "ebsVolumeType": {
            "default": "STANDARD",
            "description": "Type of storage you want to attach to your AWS-provisioned cluster.\n\n- `STANDARD` volume types can't exceed the default input/output operations per second (IOPS) rate for the selected volume size. \n\n- `PROVISIONED` volume types must fall within the allowable IOPS range for the selected volume size. You must set this value to (`PROVISIONED`) for NVMe clusters.",
            "enum": [
              "STANDARD",
              "PROVISIONED"
            ],
            "type": "string"
          },
          "instanceSize": {
            "description": "Hardware specification for the instance sizes in this region in this shard. Each instance size has a default storage and memory capacity. Electable nodes and read-only nodes (known as \"base nodes\") within a single shard must use the same instance size. Analytics nodes can scale independently from base nodes within a shard. Both base nodes and analytics nodes can scale independently from their equivalents in other shards.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M100",
              "M140",
              "M200",
              "M300",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "R700",
              "M40_NVME",
              "M50_NVME",
              "M60_NVME",
              "M80_NVME",
              "M200_NVME",
              "M400_NVME"
            ],
            "title": "AWS Instance Sizes",
            "type": "string"
          },
          "nodeCount": {
            "description": "Number of nodes of the given type for MongoDB Cloud to deploy to the region.",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "AWS Cluster Hardware Settings",
        "type": "object"
      },
      "AWSRegionConfig": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudRegionConfig"
          },
          {
            "properties": {
              "analyticsAutoScaling": {
                "$ref": "#/components/schemas/AdvancedAutoScalingSettings"
              },
              "analyticsSpecs": {
                "$ref": "#/components/schemas/DedicatedHardwareSpec"
              },
              "autoScaling": {
                "$ref": "#/components/schemas/AdvancedAutoScalingSettings"
              },
              "readOnlySpecs": {
                "$ref": "#/components/schemas/DedicatedHardwareSpec"
              }
            },
            "type": "object"
          }
        ],
        "description": "Details that explain how MongoDB Cloud replicates data in one region on the specified MongoDB database.",
        "title": "AWS Regional Replication Specifications",
        "type": "object"
      },
      "AWSRegionConfig20240805": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudRegionConfig20240805"
          },
          {
            "properties": {
              "analyticsAutoScaling": {
                "$ref": "#/components/schemas/AdvancedAutoScalingSettings"
              },
              "analyticsSpecs": {
                "$ref": "#/components/schemas/DedicatedHardwareSpec20240805"
              },
              "autoScaling": {
                "$ref": "#/components/schemas/AdvancedAutoScalingSettings"
              },
              "readOnlySpecs": {
                "$ref": "#/components/schemas/DedicatedHardwareSpec20240805"
              }
            },
            "type": "object"
          }
        ],
        "description": "Details that explain how MongoDB Cloud replicates data in one region on the specified MongoDB database.",
        "title": "AWS Regional Replication Specifications",
        "type": "object"
      },
      "AdvancedAutoScalingSettings": {
        "description": "Options that determine how this cluster handles resource scaling.",
        "properties": {
          "compute": {
            "$ref": "#/components/schemas/AdvancedComputeAutoScaling"
          },
          "diskGB": {
            "$ref": "#/components/schemas/DiskGBAutoScaling"
          }
        },
        "title": "Automatic Scaling Settings",
        "type": "object"
      },
      "AdvancedComputeAutoScaling": {
        "description": "Options that determine how this cluster handles CPU scaling.",
        "properties": {
          "enabled": {
            "description": "Flag that indicates whether instance size reactive auto-scaling is enabled.\n\n- Set to `true` to enable instance size reactive auto-scaling. If enabled, you must specify a value for **replicationSpecs[n].regionConfigs[m].autoScaling.compute.maxInstanceSize**.\n- Set to `false` to disable instance size reactive auto-scaling.",
            "type": "boolean"
          },
          "maxInstanceSize": {
            "$ref": "#/components/schemas/BaseCloudProviderInstanceSize"
          },
          "minInstanceSize": {
            "$ref": "#/components/schemas/BaseCloudProviderInstanceSize"
          },
          "predictiveEnabled": {
            "description": "Flag that indicates whether predictive instance size auto-scaling is enabled.\n\n- Set to `true` to enable predictive instance size auto-scaling. MongoDB Cloud requires **replicationSpecs[n].regionConfigs[m].autoScaling.compute.enabled** to be `true` in order to enable this feature.\n- Set to `false` to disable predictive instance size auto-scaling.",
            "type": "boolean"
          },
          "scaleDownEnabled": {
            "description": "Flag that indicates whether the instance size may scale down via reactive auto-scaling. MongoDB Cloud requires this parameter if **replicationSpecs[n].regionConfigs[m].autoScaling.compute.enabled** is `true`. If you enable this option, specify a value for **replicationSpecs[n].regionConfigs[m].autoScaling.compute.minInstanceSize**.",
            "type": "boolean"
          }
        },
        "title": "Automatic Compute Scaling Settings",
        "type": "object"
      },
      "AlertAudit": {
        "description": "Alert audit indicates acknowledgement status of an alert.",
        "properties": {
          "alertId": {
            "description": "Unique 24-hexadecimal digit string that identifies the alert associated with the event.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "apiKeyId": {
            "description": "Unique 24-hexadecimal digit string that identifies the API Key that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "example": "32b6e34b3d91647abb20e7b8",
            "externalDocs": {
              "description": "Create Programmatic API Key",
              "url": "https://dochub.mongodb.org/core/atlas-create-prog-api-key"
            },
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "created": {
            "description": "Date and time when this event occurred. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "externalDocs": {
              "description": "ISO 8601",
              "url": "https://en.wikipedia.org/wiki/ISO_8601"
            },
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/AlertAuditTypeView"
          },
          "groupId": {
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "isGlobalAdmin": {
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "type": "boolean"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "orgId": {
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "publicKey": {
            "description": "Public part of the API key that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "externalDocs": {
              "url": "https://dochub.mongodb.org/core/atlas-create-prog-api-key"
            },
            "readOnly": true,
            "type": "string"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "example": "216.172.40.186",
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "readOnly": true,
            "type": "string"
          },
          "userId": {
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "username": {
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "created",
          "eventTypeName",
          "id"
        ],
        "title": "Alert Audits",
        "type": "object"
      },
      "AlertAuditTypeView": {
        "description": "Unique identifier of event type.",
        "enum": [
          "ALERT_ACKNOWLEDGED_AUDIT",
          "ALERT_UNACKNOWLEDGED_AUDIT"
        ],
        "example": "ALERT_ACKNOWLEDGED_AUDIT",
        "title": "Alert Audit Types",
        "type": "string"
      },
      "AlertConfigAudit": {
        "description": "Alert config audit indicates any activities around alert settings.",
        "properties": {
          "alertConfigId": {
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration associated with the **alertId**.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "apiKeyId": {
            "description": "Unique 24-hexadecimal digit string that identifies the API Key that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "example": "32b6e34b3d91647abb20e7b8",
            "externalDocs": {
              "description": "Create Programmatic API Key",
              "url": "https://dochub.mongodb.org/core/atlas-create-prog-api-key"
            },
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "created": {
            "description": "Date and time when this event occurred. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "externalDocs": {
              "description": "ISO 8601",
              "url": "https://en.wikipedia.org/wiki/ISO_8601"
            },
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/AlertConfigAuditTypeView"
          },
          "groupId": {
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "isGlobalAdmin": {
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "type": "boolean"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "orgId": {
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "publicKey": {
            "description": "Public part of the API key that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "externalDocs": {
              "url": "https://dochub.mongodb.org/core/atlas-create-prog-api-key"
            },
            "readOnly": true,
            "type": "string"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "example": "216.172.40.186",
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "readOnly": true,
            "type": "string"
          },
          "userId": {
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "username": {
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "created",
          "eventTypeName",
          "id"
        ],
        "title": "Alert Config Audits",
        "type": "object"
      },
      "AlertConfigAuditTypeView": {
        "description": "Unique identifier of event type.",
        "enum": [
          "ALERT_CONFIG_DISABLED_AUDIT",
          "ALERT_CONFIG_ENABLED_AUDIT",
          "ALERT_CONFIG_ADDED_AUDIT",
          "ALERT_CONFIG_DELETED_AUDIT",
          "ALERT_CONFIG_CHANGED_AUDIT"
        ],
        "example": "ALERT_CONFIG_ADDED_AUDIT",
        "title": "Alert Audit Types",
        "type": "string"
      },
      "ApiAtlasCloudProviderAccessFeatureUsageFeatureIdView": {
        "description": "Object that contains the identifying characteristics of the Amazon Web Services (AWS) Key Management Service (KMS). This field always returns a null value.",
        "nullable": true,
        "type": "object"
      },
      "ApiAtlasFTSAnalyzersViewManual": {
        "description": "Settings that describe one Atlas Search custom analyzer.",
        "properties": {
          "charFilters": {
            "description": "Filters that examine text one character at a time and perform filtering operations.",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/charFilterhtmlStrip"
                },
                {
                  "$ref": "#/components/schemas/charFiltericuNormalize"
                },
                {
                  "$ref": "#/components/schemas/charFiltermapping"
                },
                {
                  "$ref": "#/components/schemas/charFilterpersian"
                }
              ],
              "type": "object"
            },
            "type": "array"
          },
          "name": {
            "description": "Human-readable name that identifies the custom analyzer. Names must be unique within an index, and must not start with any of the following strings:\n- `lucene.`\n- `builtin.`\n- `mongodb.`",
            "type": "string"
          },
          "tokenFilters": {
            "description": "Filter that performs operations such as:\n\n- Stemming, which reduces related words, such as \"talking\", \"talked\", and \"talks\" to their root word \"talk\".\n\n- Redaction, the removal of sensitive information from public documents.",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/tokenFilterasciiFolding"
                },
                {
                  "$ref": "#/components/schemas/tokenFilterdaitchMokotoffSoundex"
                },
                {
                  "$ref": "#/components/schemas/tokenFilteredgeGram"
                },
                {
                  "$ref": "#/components/schemas/TokenFilterEnglishPossessive"
                },
                {
                  "$ref": "#/components/schemas/TokenFilterFlattenGraph"
                },
                {
                  "$ref": "#/components/schemas/tokenFiltericuFolding"
                },
                {
                  "$ref": "#/components/schemas/tokenFiltericuNormalizer"
                },
                {
                  "$ref": "#/components/schemas/TokenFilterkStemming"
                },
                {
                  "$ref": "#/components/schemas/tokenFilterlength"
                },
                {
                  "$ref": "#/components/schemas/tokenFilterlowercase"
                },
                {
                  "$ref": "#/components/schemas/tokenFilternGram"
                },
                {
                  "$ref": "#/components/schemas/TokenFilterPorterStemming"
                },
                {
                  "$ref": "#/components/schemas/tokenFilterregex"
                },
                {
                  "$ref": "#/components/schemas/tokenFilterreverse"
                },
                {
                  "$ref": "#/components/schemas/tokenFiltershingle"
                },
                {
                  "$ref": "#/components/schemas/tokenFiltersnowballStemming"
                },
                {
                  "$ref": "#/components/schemas/TokenFilterSpanishPluralStemming"
                },
                {
                  "$ref": "#/components/schemas/TokenFilterStempel"
                },
                {
                  "$ref": "#/components/schemas/tokenFilterstopword"
                },
                {
                  "$ref": "#/components/schemas/tokenFiltertrim"
                },
                {
                  "$ref": "#/components/schemas/TokenFilterWordDelimiterGraph"
                }
              ]
            },
            "type": "array"
          },
          "tokenizer": {
            "description": "Tokenizer that you want to use to create tokens. Tokens determine how Atlas Search splits up text into discrete chunks for indexing.",
            "discriminator": {
              "mapping": {
                "edgeGram": "#/components/schemas/tokenizeredgeGram",
                "keyword": "#/components/schemas/tokenizerkeyword",
                "nGram": "#/components/schemas/tokenizernGram",
                "regexCaptureGroup": "#/components/schemas/tokenizerregexCaptureGroup",
                "regexSplit": "#/components/schemas/tokenizerregexSplit",
                "standard": "#/components/schemas/tokenizerstandard",
                "uaxUrlEmail": "#/components/schemas/tokenizeruaxUrlEmail",
                "whitespace": "#/components/schemas/tokenizerwhitespace"
              },
              "propertyName": "type"
            },
            "oneOf": [
              {
                "$ref": "#/components/schemas/tokenizeredgeGram"
              },
              {
                "$ref": "#/components/schemas/tokenizerkeyword"
              },
              {
                "$ref": "#/components/schemas/tokenizernGram"
              },
              {
                "$ref": "#/components/schemas/tokenizerregexCaptureGroup"
              },
              {
                "$ref": "#/components/schemas/tokenizerregexSplit"
              },
              {
                "$ref": "#/components/schemas/tokenizerstandard"
              },
              {
                "$ref": "#/components/schemas/tokenizeruaxUrlEmail"
              },
              {
                "$ref": "#/components/schemas/tokenizerwhitespace"
              }
            ],
            "type": "object"
          }
        },
        "required": [
          "name",
          "tokenizer"
        ],
        "title": "analyzers",
        "type": "object"
      },
      "ApiAtlasFTSMappingsViewManual": {
        "description": "Index specifications for the collection's fields.",
        "properties": {
          "dynamic": {
            "default": false,
            "description": "Flag that indicates whether the index uses dynamic or static mappings. Required if **mappings.fields** is omitted.",
            "externalDocs": {
              "description": "Dynamic or Static Mappings",
              "url": "https://dochub.mongodb.org/core/index-definitions-fts#field-mapping-examples"
            },
            "type": "boolean"
          },
          "fields": {
            "additionalProperties": {
              "externalDocs": {
                "description": "Atlas Search Field Mappings",
                "url": "https://dochub.mongodb.org/core/field-mapping-definition-fts#define-field-mappings"
              },
              "type": "object"
            },
            "description": "One or more field specifications for the Atlas Search index. Required if **mappings.dynamic** is omitted or set to **false**.",
            "externalDocs": {
              "description": "Atlas Search Index",
              "url": "https://dochub.mongodb.org/core/index-definitions-fts"
            },
            "type": "object"
          }
        },
        "title": "mappings",
        "type": "object"
      },
      "ApiBSONTimestampView": {
        "description": "BSON timestamp that indicates when the checkpoint token entry in the oplog occurred.",
        "properties": {
          "date": {
            "description": "Date and time when the oplog recorded this database operation. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "increment": {
            "description": "Order of the database operation that the oplog recorded at specific date and time.",
            "example": 1199145600,
            "format": "int32",
            "minimum": 1199145600,
            "readOnly": true,
            "type": "integer"
          }
        },
        "readOnly": true,
        "title": "BSON Timestamp",
        "type": "object"
      },
      "ApiError": {
        "properties": {
          "badRequestDetail": {
            "$ref": "#/components/schemas/BadRequestDetail"
          },
          "detail": {
            "description": "Describes the specific conditions or reasons that cause each type of error.",
            "type": "string"
          },
          "error": {
            "description": "HTTP status code returned with this error.",
            "externalDocs": {
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status"
            },
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "errorCode": {
            "description": "Application error code returned with this error.",
            "readOnly": true,
            "type": "string"
          },
          "parameters": {
            "description": "Parameters used to give more information about the error.",
            "items": {
              "readOnly": true,
              "type": "object"
            },
            "readOnly": true,
            "type": "array"
          },
          "reason": {
            "description": "Application error message returned with this error.",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "error",
          "errorCode"
        ],
        "type": "object"
      },
      "AppServiceMetricMatcher": {
        "description": "Rules to apply when comparing an app service metric against this alert configuration.",
        "properties": {
          "fieldName": {
            "$ref": "#/components/schemas/AppServiceMetricMatcherField"
          },
          "operator": {
            "description": "Comparison operator to apply when checking the current metric value against **matcher[n].value**.",
            "enum": [
              "EQUALS",
              "CONTAINS",
              "STARTS_WITH",
              "ENDS_WITH",
              "NOT_EQUALS",
              "NOT_CONTAINS",
              "REGEX"
            ],
            "type": "string"
          },
          "value": {
            "description": "Value to match or exceed using the specified **matchers.operator**.",
            "example": "event-replica-set",
            "type": "string"
          }
        },
        "required": [
          "fieldName",
          "operator",
          "value"
        ],
        "title": "Matchers",
        "type": "object"
      },
      "AppServiceMetricMatcherField": {
        "description": "Name of the parameter in the target object that MongoDB Cloud checks. The parameter must match all rules for MongoDB Cloud to check for alert configurations.",
        "enum": [
          "APPLICATION_ID"
        ],
        "example": "APPLICATION_ID",
        "title": "App Services Metric Matcher Fields",
        "type": "string"
      },
      "AtlasSearchAnalyzer": {
        "properties": {
          "charFilters": {
            "description": "Filters that examine text one character at a time and perform filtering operations.",
            "items": {
              "$ref": "#/components/schemas/BasicDBObject"
            },
            "type": "array"
          },
          "name": {
            "description": "Name that identifies the custom analyzer. Names must be unique within an index, and must not start with any of the following strings:\n- `lucene.`\n- `builtin.`\n- `mongodb.`",
            "type": "string"
          },
          "tokenFilters": {
            "description": "Filter that performs operations such as:\n\n- Stemming, which reduces related words, such as \"talking\", \"talked\", and \"talks\" to their root word \"talk\".\n\n- Redaction, which is the removal of sensitive information from public documents.",
            "items": {
              "$ref": "#/components/schemas/BasicDBObject"
            },
            "type": "array"
          },
          "tokenizer": {
            "additionalProperties": {
              "description": "Tokenizer that you want to use to create tokens. Tokens determine how Atlas Search splits up text into discrete chunks for indexing.",
              "type": "object"
            },
            "description": "Tokenizer that you want to use to create tokens. Tokens determine how Atlas Search splits up text into discrete chunks for indexing.",
            "type": "object"
          }
        },
        "required": [
          "name",
          "tokenizer"
        ],
        "title": "Atlas Search Analyzer",
        "type": "object"
      },
      "AuthFederationRoleMapping": {
        "description": "Mapping settings that link one IdP and MongoDB Cloud.",
        "properties": {
          "externalGroupName": {
            "description": "Unique human-readable label that identifies the identity provider group to which this role mapping applies.",
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          },
          "id": {
            "description": "Unique 24-hexadecimal digit string that identifies this role mapping.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "roleAssignments": {
            "description": "Atlas roles and the unique identifiers of the groups and organizations associated with each role. The array must include at least one element with an Organization role and its respective **orgId**. Each element in the array can have a value for **orgId** or **groupId**, but not both.",
            "items": {
              "$ref": "#/components/schemas/ConnectedOrgConfigRoleAssignment"
            },
            "type": "array",
            "uniqueItems": true
          }
        },
        "required": [
          "externalGroupName"
        ],
        "title": "Federated Authentication Role Mapping",
        "type": "object"
      },
      "AzureCloudProviderContainer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudProviderContainer"
          },
          {
            "properties": {
              "atlasCidrBlock": {
                "description": "IP addresses expressed in Classless Inter-Domain Routing (CIDR) notation that MongoDB Cloud uses for the network peering containers in your project. MongoDB Cloud assigns all of the project's clusters deployed to this cloud provider an IP address from this range. MongoDB Cloud locks this value if an M10 or greater cluster or a network peering connection exists in this project.\n\nThese CIDR blocks must fall within the ranges reserved per RFC 1918. AWS and Azure further limit the block to between the `/24` and  `/21` ranges.\n\nTo modify the CIDR block, the target project cannot have:\n\n- Any M10 or greater clusters\n- Any other VPC peering connections\n\n You can also create a new project and create a network peering connection to set the desired MongoDB Cloud network peering container CIDR block for that project. MongoDB Cloud limits the number of MongoDB nodes per network peering connection based on the CIDR block and the region selected for the project.\n\n **Example:** A project in an Amazon Web Services (AWS) region supporting three availability zones and an MongoDB CIDR network peering container block of limit of `/24` equals 27 three-node replica sets.",
                "pattern": "^((([0-9]{1,3}\\.){3}[0-9]{1,3})|(:{0,2}([0-9a-f]{1,4}:){0,7}[0-9a-f]{1,4}[:]{0,2}))((%2[fF]|/)[0-9]{1,3})+$",
                "type": "string"
              },
              "azureSubscriptionId": {
                "description": "Unique string that identifies the Azure subscription in which the MongoDB Cloud VNet resides.",
                "example": "32b6e34b3d91647abb20e7b8",
                "pattern": "^([a-f0-9]{24})$",
                "readOnly": true,
                "type": "string"
              },
              "region": {
                "description": "Azure region to which MongoDB Cloud deployed this network peering container.",
                "enum": [
                  "US_CENTRAL",
                  "US_EAST",
                  "US_EAST_2",
                  "US_EAST_2_EUAP",
                  "US_NORTH_CENTRAL",
                  "US_WEST",
                  "US_SOUTH_CENTRAL",
                  "EUROPE_NORTH",
                  "EUROPE_WEST",
                  "US_WEST_CENTRAL",
                  "US_WEST_2",
                  "US_WEST_3",
                  "CANADA_EAST",
                  "CANADA_CENTRAL",
                  "BRAZIL_SOUTH",
                  "BRAZIL_SOUTHEAST",
                  "AUSTRALIA_EAST",
                  "AUSTRALIA_SOUTH_EAST",
                  "AUSTRALIA_CENTRAL",
                  "AUSTRALIA_CENTRAL_2",
                  "UAE_NORTH",
                  "GERMANY_WEST_CENTRAL",
                  "GERMANY_NORTH",
                  "SWITZERLAND_NORTH",
                  "SWITZERLAND_WEST",
                  "SWEDEN_CENTRAL",
                  "SWEDEN_SOUTH",
                  "UK_SOUTH",
                  "UK_WEST",
                  "INDIA_CENTRAL",
                  "INDIA_WEST",
                  "INDIA_SOUTH",
                  "CHINA_EAST",
                  "CHINA_NORTH",
                  "ASIA_EAST",
                  "JAPAN_EAST",
                  "JAPAN_WEST",
                  "ASIA_SOUTH_EAST",
                  "KOREA_CENTRAL",
                  "KOREA_SOUTH",
                  "FRANCE_CENTRAL",
                  "FRANCE_SOUTH",
                  "SOUTH_AFRICA_NORTH",
                  "SOUTH_AFRICA_WEST",
                  "NORWAY_EAST",
                  "NORWAY_WEST",
                  "UAE_CENTRAL",
                  "QATAR_CENTRAL",
                  "POLAND_CENTRAL",
                  "ISRAEL_CENTRAL",
                  "ITALY_NORTH",
                  "SPAIN_CENTRAL",
                  "MEXICO_CENTRAL",
                  "NEW_ZEALAND_NORTH"
                ],
                "type": "string"
              },
              "vnetName": {
                "description": "Unique string that identifies the Azure VNet in which MongoDB Cloud clusters in this network peering container exist. The response returns **null** if no clusters exist in this network peering container.",
                "pattern": "^([-\\w._()])$",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "description": "Collection of settings that configures the network container for a virtual private connection on Amazon Web Services.",
        "required": [
          "atlasCidrBlock",
          "region"
        ],
        "title": "AZURE",
        "type": "object"
      },
      "AzureCloudProviderSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ClusterProviderSettings"
          },
          {
            "properties": {
              "autoScaling": {
                "$ref": "#/components/schemas/CloudProviderAzureAutoScaling"
              },
              "diskTypeName": {
                "description": "Disk type that corresponds to the host's root volume for Azure instances. If omitted, the default disk type for the selected **providerSettings.instanceSizeName** applies.",
                "enum": [
                  "P2",
                  "P3",
                  "P4",
                  "P6",
                  "P10",
                  "P15",
                  "P20",
                  "P30",
                  "P40",
                  "P50"
                ],
                "externalDocs": {
                  "description": "Disk type",
                  "url": "https://docs.microsoft.com/en-us/azure/virtual-machines/premium-storage-performance#premium-storage-disk-sizes"
                },
                "type": "string"
              },
              "instanceSizeName": {
                "description": "Cluster tier, with a default storage and memory capacity, that applies to all the data-bearing hosts in your cluster.",
                "enum": [
                  "M10",
                  "M20",
                  "M30",
                  "M40",
                  "M50",
                  "M60",
                  "M80",
                  "M90",
                  "M200",
                  "R40",
                  "R50",
                  "R60",
                  "R80",
                  "R200",
                  "R300",
                  "R400",
                  "M60_NVME",
                  "M80_NVME",
                  "M200_NVME",
                  "M300_NVME",
                  "M400_NVME",
                  "M600_NVME"
                ],
                "title": "Azure Instance Sizes",
                "type": "string"
              },
              "regionName": {
                "description": "Microsoft Azure Regions.",
                "enum": [
                  "US_CENTRAL",
                  "US_EAST",
                  "US_EAST_2",
                  "US_NORTH_CENTRAL",
                  "US_WEST",
                  "US_SOUTH_CENTRAL",
                  "EUROPE_NORTH",
                  "EUROPE_WEST",
                  "US_WEST_CENTRAL",
                  "US_WEST_2",
                  "US_WEST_3",
                  "CANADA_EAST",
                  "CANADA_CENTRAL",
                  "BRAZIL_SOUTH",
                  "BRAZIL_SOUTHEAST",
                  "AUSTRALIA_CENTRAL",
                  "AUSTRALIA_CENTRAL_2",
                  "AUSTRALIA_EAST",
                  "AUSTRALIA_SOUTH_EAST",
                  "GERMANY_WEST_CENTRAL",
                  "GERMANY_NORTH",
                  "SWEDEN_CENTRAL",
                  "SWEDEN_SOUTH",
                  "SWITZERLAND_NORTH",
                  "SWITZERLAND_WEST",
                  "UK_SOUTH",
                  "UK_WEST",
                  "NORWAY_EAST",
                  "NORWAY_WEST",
                  "INDIA_CENTRAL",
                  "INDIA_SOUTH",
                  "INDIA_WEST",
                  "CHINA_EAST",
                  "CHINA_NORTH",
                  "ASIA_EAST",
                  "JAPAN_EAST",
                  "JAPAN_WEST",
                  "ASIA_SOUTH_EAST",
                  "KOREA_CENTRAL",
                  "KOREA_SOUTH",
                  "FRANCE_CENTRAL",
                  "FRANCE_SOUTH",
                  "SOUTH_AFRICA_NORTH",
                  "SOUTH_AFRICA_WEST",
                  "UAE_CENTRAL",
                  "UAE_NORTH",
                  "QATAR_CENTRAL",
                  "POLAND_CENTRAL",
                  "ISRAEL_CENTRAL",
                  "ITALY_NORTH",
                  "SPAIN_CENTRAL",
                  "MEXICO_CENTRAL",
                  "NEW_ZEALAND_NORTH"
                ],
                "externalDocs": {
                  "description": "Azure",
                  "url": "https://docs.atlas.mongodb.com/reference/microsoft-azure/"
                },
                "title": "Azure Regions",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "type": "object"
      },
      "AzureComputeAutoScalingRules": {
        "description": "Collection of settings that configures how a cluster might scale its cluster tier and whether the cluster can scale down. Cluster tier auto-scaling is unavailable for clusters using Low CPU or NVME storage classes.",
        "properties": {
          "maxInstanceSize": {
            "description": "Maximum instance size to which your cluster can automatically scale.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M90",
              "M200",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "M60_NVME",
              "M80_NVME",
              "M200_NVME",
              "M300_NVME",
              "M400_NVME",
              "M600_NVME"
            ],
            "title": "Azure Instance Sizes",
            "type": "string"
          },
          "minInstanceSize": {
            "description": "Minimum instance size to which your cluster can automatically scale.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M90",
              "M200",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "M60_NVME",
              "M80_NVME",
              "M200_NVME",
              "M300_NVME",
              "M400_NVME",
              "M600_NVME"
            ],
            "title": "Azure Instance Sizes",
            "type": "string"
          }
        },
        "title": "Azure",
        "type": "object"
      },
      "AzureCreateDataProcessRegionView": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateDataProcessRegionView"
          },
          {
            "properties": {
              "region": {
                "description": "Human-readable label that identifies the geographic location of the region where you wish to store your archived data.",
                "enum": [
                  "US_EAST_2",
                  "EUROPE_WEST",
                  "BRAZIL_SOUTH"
                ],
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "type": "object"
      },
      "AzureDataProcessRegionView": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataProcessRegionView"
          },
          {
            "properties": {
              "region": {
                "description": "Human-readable label that identifies the geographic location of the region where you store your archived data.",
                "enum": [
                  "US_EAST_2",
                  "EUROPE_WEST",
                  "BRAZIL_SOUTH"
                ],
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "type": "object"
      },
      "AzureHardwareSpec": {
        "properties": {
          "diskIOPS": {
            "description": "Target throughput desired for storage attached to your Azure-provisioned cluster. Change this parameter if you:\n\n- set `\"replicationSpecs[n].regionConfigs[m].providerName\" : \"Azure\"`.\n- set `\"replicationSpecs[n].regionConfigs[m].electableSpecs.instanceSize\" : \"M40\"` or greater not including `Mxx_NVME` tiers.\n\nThe maximum input/output operations per second (IOPS) depend on the selected **.instanceSize** and **.diskSizeGB**.\nThis parameter defaults to the cluster tier's standard IOPS value.\nChanging this value impacts cluster cost.",
            "externalDocs": {
              "description": "Programmatic API Keys",
              "url": "https://www.mongodb.com/docs/atlas/customize-storage/#extend-iops-on-azure"
            },
            "format": "int32",
            "type": "integer"
          },
          "instanceSize": {
            "description": "Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts of the node type.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M90",
              "M200",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "M60_NVME",
              "M80_NVME",
              "M200_NVME",
              "M300_NVME",
              "M400_NVME",
              "M600_NVME"
            ],
            "title": "Azure Instance Sizes",
            "type": "string"
          },
          "nodeCount": {
            "description": "Number of nodes of the given type for MongoDB Cloud to deploy to the region.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AzureHardwareSpec20240805": {
        "properties": {
          "diskIOPS": {
            "description": "Target throughput desired for storage attached to your Azure-provisioned cluster. Change this parameter if you:\n\n- set `\"replicationSpecs[n].regionConfigs[m].providerName\" : \"Azure\"`.\n- set `\"replicationSpecs[n].regionConfigs[m].electableSpecs.instanceSize\" : \"M40\"` or greater not including `Mxx_NVME` tiers.\n\nThe maximum input/output operations per second (IOPS) depend on the selected **.instanceSize** and **.diskSizeGB**.\nThis parameter defaults to the cluster tier's standard IOPS value.\nChanging this value impacts cluster cost.",
            "externalDocs": {
              "description": "Programmatic API Keys",
              "url": "https://www.mongodb.com/docs/atlas/customize-storage/#extend-iops-on-azure"
            },
            "format": "int32",
            "type": "integer"
          },
          "diskSizeGB": {
            "description": "Storage capacity of instance data volumes expressed in gigabytes. Increase this number to add capacity.\n\n This value must be equal for all shards and node types.\n\n This value is not configurable on M0/M2/M5 clusters.\n\n MongoDB Cloud requires this parameter if you set **replicationSpecs**.\n\n If you specify a disk size below the minimum (10 GB), this parameter defaults to the minimum disk size value. \n\n Storage charge calculations depend on whether you choose the default value or a custom value.\n\n The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require more storage space, consider upgrading your cluster to a higher tier.",
            "externalDocs": {
              "description": "Customize Storage",
              "url": "https://dochub.mongodb.org/core/customize-storage"
            },
            "format": "double",
            "type": "number"
          },
          "instanceSize": {
            "description": "Hardware specification for the instance sizes in this region in this shard. Each instance size has a default storage and memory capacity. Electable nodes and read-only nodes (known as \"base nodes\") within a single shard must use the same instance size. Analytics nodes can scale independently from base nodes within a shard. Both base nodes and analytics nodes can scale independently from their equivalents in other shards.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M90",
              "M200",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "M60_NVME",
              "M80_NVME",
              "M200_NVME",
              "M300_NVME",
              "M400_NVME",
              "M600_NVME"
            ],
            "title": "Azure Instance Sizes",
            "type": "string"
          },
          "nodeCount": {
            "description": "Number of nodes of the given type for MongoDB Cloud to deploy to the region.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AzureRegionConfig": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudRegionConfig"
          },
          {
            "properties": {
              "analyticsAutoScaling": {
                "$ref": "#/components/schemas/AdvancedAutoScalingSettings"
              },
              "analyticsSpecs": {
                "$ref": "#/components/schemas/DedicatedHardwareSpec"
              },
              "autoScaling": {
                "$ref": "#/components/schemas/AdvancedAutoScalingSettings"
              },
              "readOnlySpecs": {
                "$ref": "#/components/schemas/DedicatedHardwareSpec"
              }
            },
            "type": "object"
          }
        ],
        "description": "Details that explain how MongoDB Cloud replicates data in one region on the specified MongoDB database.",
        "title": "Azure Regional Replication Specifications",
        "type": "object"
      },
      "AzureRegionConfig20240805": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudRegionConfig20240805"
          },
          {
            "properties": {
              "analyticsAutoScaling": {
                "$ref": "#/components/schemas/AdvancedAutoScalingSettings"
              },
              "analyticsSpecs": {
                "$ref": "#/components/schemas/DedicatedHardwareSpec20240805"
              },
              "autoScaling": {
                "$ref": "#/components/schemas/AdvancedAutoScalingSettings"
              },
              "readOnlySpecs": {
                "$ref": "#/components/schemas/DedicatedHardwareSpec20240805"
              }
            },
            "type": "object"
          }
        ],
        "description": "Details that explain how MongoDB Cloud replicates data in one region on the specified MongoDB database.",
        "title": "Azure Regional Replication Specifications",
        "type": "object"
      },
      "BackupRestoreJob": {
        "properties": {
          "batchId": {
            "description": "Unique 24-hexadecimal digit string that identifies the batch to which this restore job belongs. This parameter exists only for a sharded cluster restore.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "checkpointId": {
            "description": "Unique 24-hexadecimal digit string that identifies the sharded cluster checkpoint. The checkpoint represents the point in time back to which you want to restore you data. This parameter applies when `\"delivery.methodName\" : \"AUTOMATED_RESTORE\"`. Use this parameter with sharded clusters only.\n\n- If you set **checkpointId**, you can't set **oplogInc**, **oplogTs**, **snapshotId**, or **pointInTimeUTCMillis**.\n- If you provide this parameter, this endpoint restores all data up to this checkpoint to the database you specify in the **delivery** object.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "writeOnly": true
          },
          "clusterId": {
            "description": "Unique 24-hexadecimal digit string that identifies the cluster with the snapshot you want to return. This parameter returns for restore clusters.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "clusterName": {
            "description": "Human-readable label that identifies the cluster containing the snapshots you want to retrieve.",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "readOnly": true,
            "type": "string"
          },
          "created": {
            "description": "Date and time when someone requested this restore job. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "delivery": {
            "$ref": "#/components/schemas/BackupRestoreJobDelivery"
          },
          "encryptionEnabled": {
            "description": "Flag that indicates whether someone encrypted the data in the restored snapshot.",
            "readOnly": true,
            "type": "boolean"
          },
          "groupId": {
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns the snapshots.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "hashes": {
            "description": "List that contains documents mapping each restore file to a hashed checksum. This parameter applies after you download the corresponding **delivery.url**. If `\"methodName\" : \"HTTP\"`, this list contains one object that represents the hash of the **.tar.gz** file.",
            "items": {
              "$ref": "#/components/schemas/RestoreJobFileHash"
            },
            "readOnly": true,
            "type": "array"
          },
          "id": {
            "description": "Unique 24-hexadecimal digit string that identifies the restore job.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "masterKeyUUID": {
            "description": "Universally Unique Identifier (UUID) that identifies the Key Management Interoperability (KMIP) master key used to encrypt the snapshot data. This parameter applies only when `\"encryptionEnabled\" : \"true\"`.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "oplogInc": {
            "description": "Thirty-two-bit incrementing ordinal that represents operations within a given second. When paired with **oplogTs**, this represents the point in time to which MongoDB Cloud restores your data. This parameter applies when `\"delivery.methodName\" : \"AUTOMATED_RESTORE\"`.\n\n- If you set **oplogInc**, you must set **oplogTs**, and can't set **checkpointId**, **snapshotId**, or **pointInTimeUTCMillis**.\n- If you provide this parameter, this endpoint restores all data up to and including this Oplog timestamp to the database you specified in the **delivery** object.",
            "format": "int32",
            "minimum": 1,
            "type": "integer",
            "writeOnly": true
          },
          "oplogTs": {
            "description": "Date and time from which you want to restore this snapshot. This parameter expresses its value in ISO 8601 format in UTC. This represents the first part of an Oplog timestamp. When paired with **oplogInc**, they represent the last database operation to which you want to restore your data. This parameter applies when `\"delivery.methodName\" : \"AUTOMATED_RESTORE\"`. Run a query against **local.oplog.rs** on your replica set to find the desired timestamp.\n\n- If you set **oplogTs**, you must set **oplogInc**, and you can't set **checkpointId**, **snapshotId**, or **pointInTimeUTCMillis**.\n- If you provide this parameter, this endpoint restores all data up to and including this Oplog timestamp to the database you specified in the **delivery** object.",
            "pattern": "^(?:[1-9]\\\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d(?:\\\\.\\\\d{1,9})?(?:Z|[+-][01]\\\\d:[0-5]\\\\d)$",
            "type": "string",
            "writeOnly": true
          },
          "pointInTimeUTCMillis": {
            "description": "Timestamp from which you want to restore this snapshot. This parameter expresses its value in the number of milliseconds elapsed since the UNIX epoch. This timestamp must fall within the last 24 hours of the current time. This parameter applies when `\"delivery.methodName\" : \"AUTOMATED_RESTORE\"`.\n\n- If you provide this parameter, this endpoint restores all data up to this point in time to the database you specified in the **delivery** object.\n- If you set **pointInTimeUTCMillis**, you can't set **oplogInc**, **oplogTs**, **snapshotId**, or **checkpointId**.",
            "externalDocs": {
              "description": "UNIX Epoch",
              "url": "https://en.wikipedia.org/wiki/Unix_time"
            },
            "format": "int64",
            "minimum": 1199145600000,
            "type": "integer",
            "writeOnly": true
          },
          "snapshotId": {
            "description": "Unique 24-hexadecimal digit string that identifies the snapshot to restore. If you set **snapshotId**, you can't set **oplogInc**, **oplogTs**, **pointInTimeUTCMillis**, or **checkpointId**.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "type": "string"
          },
          "statusName": {
            "description": "Human-readable label that identifies the status of the downloadable file at the time of the request.",
            "enum": [
              "IN_PROGRESS",
              "BROKEN",
              "KILLED",
              "FINISHED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "timestamp": {
            "$ref": "#/components/schemas/ApiBSONTimestampView"
          }
        },
        "required": [
          "delivery"
        ],
        "type": "object"
      },
      "BackupRestoreJobDelivery": {
        "description": "Method and details that indicate how to deliver the restored snapshot data.",
        "properties": {
          "authHeader": {
            "description": "Header name to use when downloading the restore, used with `\"delivery.methodName\" : \"HTTP\"`.",
            "readOnly": true,
            "type": "string"
          },
          "authValue": {
            "description": "Header value to use when downloading the restore, used with `\"delivery.methodName\" : \"HTTP\"`.",
            "readOnly": true,
            "type": "string"
          },
          "expirationHours": {
            "description": "Number of hours after the restore job completes that indicates when the Uniform Resource Locator (URL) for the snapshot download file expires. The resource returns this parameter when `\"delivery.methodName\" : \"HTTP\"`.",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "expires": {
            "description": "Date and time when the Uniform Resource Locator (URL) for the snapshot download file expires. This parameter expresses its value in the ISO 8601 timestamp format in UTC. The resource returns this parameter when `\"delivery.methodName\" : \"HTTP\"`.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "maxDownloads": {
            "description": "Positive integer that indicates how many times you can use the Uniform Resource Locator (URL) for the snapshot download file. The resource returns this parameter when `\"delivery.methodName\" : \"HTTP\"`.",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "methodName": {
            "description": "Human-readable label that identifies the means for delivering the data. If you set `\"delivery.methodName\" : \"AUTOMATED_RESTORE\"`, you must also set: **delivery.targetGroupId** and **delivery.targetClusterName** or **delivery.targetClusterId**. The response returns `\"delivery.methodName\" : \"HTTP\"` as an automated restore uses HyperText Transport Protocol (HTTP) to deliver the restore job to the target host.",
            "enum": [
              "CLIENT_PIT_HTTP",
              "QUERY",
              "AUTOMATED_RESTORE",
              "HTTP",
              "THIRD_PARTY_COPY",
              "CLIENT_PIT_SCP",
              "SCP"
            ],
            "type": "string"
          },
          "statusName": {
            "description": "State of the downloadable snapshot file when MongoDB Cloud received this request.",
            "enum": [
              "NOT_STARTED",
              "IN_PROGRESS",
              "READY",
              "FAILED",
              "INTERRUPTED",
              "EXPIRED",
              "MAX_DOWNLOADS_EXCEEDED",
              "PENDING"
            ],
            "readOnly": true,
            "type": "string"
          },
          "targetClusterId": {
            "description": "Unique 24-hexadecimal digit string that identifies the target cluster. Use the **clusterId** returned in the response body of the **Get All Snapshots** and **Get a Snapshot** endpoints. This parameter applies when `\"delivery.methodName\" : \"AUTOMATED_RESTORE\"`.\n\n If the target cluster doesn't have backup enabled, two resources return parameters with empty values:\n\n- **Get All Snapshots** endpoint returns an empty results array without **clusterId** elements\n- **Get a Snapshot** endpoint doesn't return a **clusterId** parameter.\n\nTo return a response with the **clusterId** parameter, either use the **delivery.targetClusterName** parameter or enable backup on the target cluster.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "type": "string"
          },
          "targetClusterName": {
            "description": "Human-readable label that identifies the target cluster. Use the **clusterName** returned in the response body of the **Get All Snapshots** and **Get a Snapshot** endpoints.  This parameter applies when `\"delivery.methodName\" : \"AUTOMATED_RESTORE\"`.\n\nIf the target cluster doesn't have backup enabled, two resources return parameters with empty values:\n\n- **Get All Snapshots** endpoint returns an empty results array without **clusterId** elements\n- **Get a Snapshot** endpoint doesn't return a **clusterId** parameter.\n\nTo return a response with the **clusterId** parameter, either use the **delivery.targetClusterName** parameter or enable backup on the target cluster.",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string"
          },
          "targetGroupId": {
            "description": "Unique 24-hexadecimal digit string that identifies the project that contains the destination cluster for the restore job. The resource returns this parameter when `\"delivery.methodName\" : \"AUTOMATED_RESTORE\"`.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "type": "string"
          },
          "url": {
            "deprecated": true,
            "description": "Uniform Resource Locator (URL) from which you can download the restored snapshot data. Url includes the verification key. The resource returns this parameter when `\"delivery.methodName\" : \"HTTP\"`.",
            "readOnly": true,
            "type": "string"
          },
          "urlV2": {
            "description": "Uniform Resource Locator (URL) from which you can download the restored snapshot data. This should be preferred over **url**. The verification key must be sent as an HTTP header. The resource returns this parameter when `\"delivery.methodName\" : \"HTTP\"`.",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "methodName"
        ],
        "title": "Restore Snapshot Delivery Metadata",
        "type": "object"
      },
      "BackupSnapshot": {
        "properties": {
          "clusterId": {
            "description": "Unique 24-hexadecimal digit string that identifies the cluster with the snapshots you want to return.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "clusterName": {
            "description": "Human-readable label that identifies the cluster.",
            "readOnly": true,
            "type": "string"
          },
          "complete": {
            "description": "Flag that indicates whether the snapshot exists. This flag returns `false` while MongoDB Cloud creates the snapshot.",
            "readOnly": true,
            "type": "boolean"
          },
          "created": {
            "$ref": "#/components/schemas/ApiBSONTimestampView"
          },
          "doNotDelete": {
            "description": "Flag that indicates whether someone can delete this snapshot. You can't set `\"doNotDelete\" : true` and set a timestamp for **expires** in the same request.",
            "type": "boolean"
          },
          "expires": {
            "description": "Date and time when MongoDB Cloud deletes the snapshot. If `\"doNotDelete\" : true`, MongoDB Cloud removes any value set for this parameter. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "type": "string"
          },
          "groupId": {
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns the snapshots.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Unique 24-hexadecimal digit string that identifies the snapshot.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "incremental": {
            "description": "Flag indicating if this is an incremental or a full snapshot.",
            "readOnly": true,
            "type": "boolean"
          },
          "lastOplogAppliedTimestamp": {
            "$ref": "#/components/schemas/ApiBSONTimestampView"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "parts": {
            "description": "Metadata that describes the complete snapshot.\n\n- For a replica set, this array contains a single document.\n- For a sharded cluster, this array contains one document for each shard plus one document for the config host.",
            "items": {
              "$ref": "#/components/schemas/BackupSnapshotPart"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "BackupSnapshotPart": {
        "description": "Characteristics that identify this snapshot.",
        "properties": {
          "clusterId": {
            "description": "Unique 24-hexadecimal digit string that identifies the cluster with the snapshots you want to return.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "completedTime": {
            "description": "Date and time when the snapshot completed. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "compressionSetting": {
            "description": "Human-readable label that identifies the method of compression for the snapshot.",
            "enum": [
              "NONE",
              "GZIP"
            ],
            "readOnly": true,
            "type": "string"
          },
          "dataSizeBytes": {
            "description": "Total size of the data stored on each node in the cluster. This parameter expresses its value in bytes.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "encryptionEnabled": {
            "description": "Flag that indicates whether someone encrypted this snapshot.",
            "readOnly": true,
            "type": "boolean"
          },
          "fcv": {
            "description": "Number that indicates the feature compatibility version of MongoDB that the replica set primary ran when MongoDB Cloud created the snapshot.",
            "readOnly": true,
            "type": "string"
          },
          "fileSizeBytes": {
            "description": "Number that indicates the total size of the data files in bytes.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "machineId": {
            "description": "Hostname and port that indicate the node on which MongoDB Cloud created the snapshot.",
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
            "readOnly": true,
            "type": "string"
          },
          "masterKeyUUID": {
            "description": "Unique string that identifies the Key Management Interoperability (KMIP) master key used to encrypt the snapshot data. The resource returns this parameter when `\"parts.encryptionEnabled\" : true`.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "mongodVersion": {
            "description": "Number that indicates the version of MongoDB that the replica set primary ran when MongoDB Cloud created the snapshot.",
            "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)",
            "readOnly": true,
            "type": "string"
          },
          "replicaSetName": {
            "description": "Human-readable label that identifies the replica set.",
            "readOnly": true,
            "type": "string"
          },
          "replicaState": {
            "description": "The node's role at the time when snapshot process began.",
            "readOnly": true,
            "type": "string"
          },
          "storageSizeBytes": {
            "description": "Number that indicates the total size of space allocated for document storage.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "typeName": {
            "description": "Human-readable label that identifies the type of server from which MongoDB Cloud took this snapshot.",
            "enum": [
              "REPLICA_SET",
              "CONFIG_SERVER",
              "CONFIG_SERVER_REPLICA_SET",
              "CONFIG_SHARD_REPLICA_SET"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "readOnly": true,
        "title": "Snapshot Components",
        "type": "object"
      },
      "BadRequestDetail": {
        "description": "Bad request detail.",
        "properties": {
          "fields": {
            "description": "Describes all violations in a client request.",
            "items": {
              "$ref": "#/components/schemas/FieldViolation"
            },
            "type": "array"
          }
        },
        "readOnly": true,
        "type": "object"
      },
      "BaseCloudProviderInstanceSize": {
        "description": "Instance size boundary to which your cluster can automatically scale.",
        "oneOf": [
          {
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M100",
              "M140",
              "M200",
              "M300",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "R700",
              "M40_NVME",
              "M50_NVME",
              "M60_NVME",
              "M80_NVME",
              "M200_NVME",
              "M400_NVME"
            ],
            "title": "AWS Instance Sizes",
            "type": "string",
            "x-xgen-IPA-exception": {
              "xgen-IPA-123-allowable-enum-values-should-not-exceed-20": "Enum values standardized by cloud providers."
            }
          },
          {
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M90",
              "M200",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "M60_NVME",
              "M80_NVME",
              "M200_NVME",
              "M300_NVME",
              "M400_NVME",
              "M600_NVME"
            ],
            "title": "Azure Instance Sizes",
            "type": "string",
            "x-xgen-IPA-exception": {
              "xgen-IPA-123-allowable-enum-values-should-not-exceed-20": "Enum values standardized by cloud providers."
            }
          },
          {
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M140",
              "M200",
              "M250",
              "M300",
              "M400",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "R600"
            ],
            "title": "GCP Instance Sizes",
            "type": "string"
          }
        ],
        "readOnly": true,
        "type": "object"
      },
      "BasicDBObject": {
        "additionalProperties": {
          "type": "object"
        },
        "type": "object"
      },
      "BillingInvoice": {
        "properties": {
          "amountBilledCents": {
            "description": "Sum of services that the specified organization consumed in the period covered in this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "amountPaidCents": {
            "description": "Sum that the specified organization paid toward this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "created": {
            "description": "Date and time when MongoDB Cloud created this invoice. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "creditsCents": {
            "description": "Sum that MongoDB credited the specified organization toward this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "endDate": {
            "description": "Date and time when MongoDB Cloud finished the billing period that this invoice covers. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Unique 24-hexadecimal digit string that identifies the invoice submitted to the specified organization. Charges typically post the next day.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "lineItems": {
            "description": "List that contains individual services included in this invoice.",
            "items": {
              "$ref": "#/components/schemas/InvoiceLineItem"
            },
            "readOnly": true,
            "type": "array"
          },
          "linkedInvoices": {
            "description": "List that contains the invoices for organizations linked to the paying organization.",
            "items": {
              "$ref": "#/components/schemas/BillingInvoice"
            },
            "readOnly": true,
            "type": "array"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "orgId": {
            "description": "Unique 24-hexadecimal digit string that identifies the organization charged for services consumed from MongoDB Cloud.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "payments": {
            "description": "List that contains funds transferred to MongoDB to cover the specified service noted in this invoice.",
            "items": {
              "$ref": "#/components/schemas/BillingPayment"
            },
            "readOnly": true,
            "type": "array"
          },
          "refunds": {
            "description": "List that contains payments that MongoDB returned to the organization for this invoice.",
            "items": {
              "$ref": "#/components/schemas/BillingRefund"
            },
            "readOnly": true,
            "type": "array"
          },
          "salesTaxCents": {
            "description": "Sum of sales tax applied to this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "startDate": {
            "description": "Date and time when MongoDB Cloud began the billing period that this invoice covers. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "startingBalanceCents": {
            "description": "Sum that the specified organization owed to MongoDB when MongoDB issued this invoice. This parameter expresses its value in US Dollars.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "statusName": {
            "description": "Phase of payment processing in which this invoice exists when you made this request. Accepted phases include:\n\n- `CLOSED`: MongoDB finalized all charges in the billing cycle but has yet to charge the customer.\n- `FAILED`: MongoDB attempted to charge the provided credit card but charge for that amount failed.\n- `FORGIVEN`: Customer initiated payment which MongoDB later forgave.\n- `FREE`: All charges totalled zero so the customer won't be charged.\n- `INVOICED`: MongoDB handled these charges using elastic invoicing.\n- `PAID`: MongoDB succeeded in charging the provided credit card.\n- `PENDING`: Invoice includes charges for the current billing cycle.\n- `PREPAID`: Customer has a pre-paid plan so they won't be charged.",
            "enum": [
              "PENDING",
              "CLOSED",
              "FORGIVEN",
              "FAILED",
              "PAID",
              "FREE",
              "PREPAID",
              "INVOICED"
            ],
            "type": "string"
          },
          "subtotalCents": {
            "description": "Sum of all positive invoice line items contained in this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "updated": {
            "description": "Date and time when MongoDB Cloud last updated the value of this payment. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "BillingInvoiceMetadata": {
        "properties": {
          "amountBilledCents": {
            "description": "Sum of services that the specified organization consumed in the period covered in this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "amountPaidCents": {
            "description": "Sum that the specified organization paid toward this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "created": {
            "description": "Date and time when MongoDB Cloud created this invoice. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "creditsCents": {
            "description": "Sum that MongoDB credited the specified organization toward this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "endDate": {
            "description": "Date and time when MongoDB Cloud finished the billing period that this invoice covers. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Unique 24-hexadecimal digit string that identifies the invoice submitted to the specified organization. Charges typically post the next day.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "linkedInvoices": {
            "description": "List that contains the invoices for organizations linked to the paying organization.",
            "items": {
              "$ref": "#/components/schemas/BillingInvoiceMetadata"
            },
            "readOnly": true,
            "type": "array"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "orgId": {
            "description": "Unique 24-hexadecimal digit string that identifies the organization charged for services consumed from MongoDB Cloud.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "salesTaxCents": {
            "description": "Sum of sales tax applied to this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "startDate": {
            "description": "Date and time when MongoDB Cloud began the billing period that this invoice covers. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "startingBalanceCents": {
            "description": "Sum that the specified organization owed to MongoDB when MongoDB issued this invoice. This parameter expresses its value in US Dollars.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "statusName": {
            "description": "Phase of payment processing in which this invoice exists when you made this request. Accepted phases include:\n\n- `CLOSED`: MongoDB finalized all charges in the billing cycle but has yet to charge the customer.\n- `FAILED`: MongoDB attempted to charge the provided credit card but charge for that amount failed.\n- `FORGIVEN`: Customer initiated payment which MongoDB later forgave.\n- `FREE`: All charges totalled zero so the customer won't be charged.\n- `INVOICED`: MongoDB handled these charges using elastic invoicing.\n- `PAID`: MongoDB succeeded in charging the provided credit card.\n- `PENDING`: Invoice includes charges for the current billing cycle.\n- `PREPAID`: Customer has a pre-paid plan so they won't be charged.",
            "enum": [
              "PENDING",
              "CLOSED",
              "FORGIVEN",
              "FAILED",
              "PAID",
              "FREE",
              "PREPAID",
              "INVOICED"
            ],
            "type": "string"
          },
          "subtotalCents": {
            "description": "Sum of all positive invoice line items contained in this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "updated": {
            "description": "Date and time when MongoDB Cloud last updated the value of this payment. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "BillingPayment": {
        "description": "Funds transferred to MongoDB to cover the specified service in this invoice.",
        "properties": {
          "amountBilledCents": {
            "description": "Sum of services that the specified organization consumed in the period covered in this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "amountPaidCents": {
            "description": "Sum that the specified organization paid toward the associated invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "created": {
            "description": "Date and time when the customer made this payment attempt. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "currency": {
            "description": "The currency in which payment was paid. This parameter expresses its value in 3-letter ISO 4217 currency code.",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Unique 24-hexadecimal digit string that identifies this payment toward the associated invoice.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "salesTaxCents": {
            "description": "Sum of sales tax applied to this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "statusName": {
            "description": "Phase of payment processing for the associated invoice when you made this request. These phases include:\n\n- `CANCELLED`: Customer or MongoDB cancelled the payment.\n- `ERROR`: Issue arose when attempting to complete payment.\n- `FAILED`: MongoDB tried to charge the credit card without success.\n- `FAILED_AUTHENTICATION`: Strong Customer Authentication has failed. Confirm that your payment method is authenticated.\n- `FORGIVEN`: Customer initiated payment which MongoDB later forgave.\n- `INVOICED`: MongoDB issued an invoice that included this line item.\n- `NEW`: Customer provided a method of payment, but MongoDB hasn't tried to charge the credit card.\n- `PAID`: Customer submitted a successful payment.\n- `PARTIAL_PAID`: Customer paid for part of this line item.",
            "enum": [
              "NEW",
              "FORGIVEN",
              "FAILED",
              "PAID",
              "PARTIAL_PAID",
              "CANCELLED",
              "INVOICED",
              "FAILED_AUTHENTICATION",
              "PROCESSING",
              "PENDING_REVERSAL",
              "REFUNDED"
            ],
            "type": "string"
          },
          "subtotalCents": {
            "description": "Sum of all positive invoice line items contained in this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "unitPrice": {
            "description": "The unit price applied to amountBilledCents to compute total payment amount. This value is represented as a decimal string.",
            "readOnly": true,
            "type": "string"
          },
          "updated": {
            "description": "Date and time when the customer made an update to this payment attempt. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "title": "Payment",
        "type": "object"
      },
      "BillingRefund": {
        "description": "One payment that MongoDB returned to the organization for this invoice.",
        "properties": {
          "amountCents": {
            "description": "Sum of the funds returned to the specified organization expressed in cents (100th of US Dollar).",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "created": {
            "description": "Date and time when MongoDB Cloud created this refund. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "paymentId": {
            "description": "Unique 24-hexadecimal digit string that identifies the payment that the organization had made.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "reason": {
            "description": "Justification that MongoDB accepted to return funds to the organization.",
            "readOnly": true,
            "type": "string"
          }
        },
        "title": "Refund",
        "type": "object"
      },
      "ChartsAudit": {
        "description": "Audit events related to Atlas Charts.",
        "properties": {
          "apiKeyId": {
            "description": "Unique 24-hexadecimal digit string that identifies the API Key that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "example": "32b6e34b3d91647abb20e7b8",
            "externalDocs": {
              "description": "Create Programmatic API Key",
              "url": "https://dochub.mongodb.org/core/atlas-create-prog-api-key"
            },
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "created": {
            "description": "Date and time when this event occurred. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "externalDocs": {
              "description": "ISO 8601",
              "url": "https://en.wikipedia.org/wiki/ISO_8601"
            },
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/ChartsAuditTypeView"
          },
          "groupId": {
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "isGlobalAdmin": {
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "type": "boolean"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "orgId": {
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "publicKey": {
            "description": "Public part of the API key that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "externalDocs": {
              "url": "https://dochub.mongodb.org/core/atlas-create-prog-api-key"
            },
            "readOnly": true,
            "type": "string"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "example": "216.172.40.186",
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "readOnly": true,
            "type": "string"
          },
          "userId": {
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "username": {
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "created",
          "eventTypeName",
          "id"
        ],
        "type": "object"
      },
      "ChartsAuditTypeView": {
        "description": "Unique identifier of event type.",
        "enum": [
          "CHARTS_API_SUCCESS",
          "CHARTS_API_FAILURE"
        ],
        "example": "CHARTS_API_SUCCESS",
        "title": "Charts Api Call Audit Types",
        "type": "string"
      },
      "CloudGCPProviderSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ClusterProviderSettings"
          },
          {
            "properties": {
              "autoScaling": {
                "$ref": "#/components/schemas/CloudProviderGCPAutoScaling"
              },
              "instanceSizeName": {
                "description": "Cluster tier, with a default storage and memory capacity, that applies to all the data-bearing hosts in your cluster.",
                "enum": [
                  "M10",
                  "M20",
                  "M30",
                  "M40",
                  "M50",
                  "M60",
                  "M80",
                  "M140",
                  "M200",
                  "M250",
                  "M300",
                  "M400",
                  "R40",
                  "R50",
                  "R60",
                  "R80",
                  "R200",
                  "R300",
                  "R400",
                  "R600"
                ],
                "title": "GCP Instance Sizes",
                "type": "string"
              },
              "regionName": {
                "description": "Google Compute Regions.",
                "enum": [
                  "EASTERN_US",
                  "EASTERN_US_AW",
                  "US_EAST_4",
                  "US_EAST_4_AW",
                  "US_EAST_5",
                  "US_EAST_5_AW",
                  "US_WEST_2",
                  "US_WEST_2_AW",
                  "US_WEST_3",
                  "US_WEST_3_AW",
                  "US_WEST_4",
                  "US_WEST_4_AW",
                  "US_SOUTH_1",
                  "US_SOUTH_1_AW",
                  "CENTRAL_US",
                  "CENTRAL_US_AW",
                  "WESTERN_US",
                  "WESTERN_US_AW",
                  "NORTH_AMERICA_NORTHEAST_1",
                  "NORTH_AMERICA_NORTHEAST_2",
                  "NORTH_AMERICA_SOUTH_1",
                  "SOUTH_AMERICA_EAST_1",
                  "SOUTH_AMERICA_WEST_1",
                  "WESTERN_EUROPE",
                  "EUROPE_NORTH_1",
                  "EUROPE_WEST_2",
                  "EUROPE_WEST_3",
                  "EUROPE_WEST_4",
                  "EUROPE_WEST_6",
                  "EUROPE_WEST_8",
                  "EUROPE_WEST_9",
                  "EUROPE_WEST_10",
                  "EUROPE_WEST_12",
                  "EUROPE_SOUTHWEST_1",
                  "EUROPE_CENTRAL_2",
                  "MIDDLE_EAST_CENTRAL_1",
                  "MIDDLE_EAST_CENTRAL_2",
                  "MIDDLE_EAST_WEST_1",
                  "AUSTRALIA_SOUTHEAST_1",
                  "AUSTRALIA_SOUTHEAST_2",
                  "AFRICA_SOUTH_1",
                  "EASTERN_ASIA_PACIFIC",
                  "NORTHEASTERN_ASIA_PACIFIC",
                  "SOUTHEASTERN_ASIA_PACIFIC",
                  "ASIA_EAST_2",
                  "ASIA_NORTHEAST_2",
                  "ASIA_NORTHEAST_3",
                  "ASIA_SOUTH_1",
                  "ASIA_SOUTH_2",
                  "ASIA_SOUTHEAST_2"
                ],
                "externalDocs": {
                  "description": "GCP",
                  "url": "https://docs.atlas.mongodb.com/reference/google-gcp/"
                },
                "title": "GCP Regions",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "type": "object"
      },
      "CloudProviderAWSAutoScaling": {
        "description": "Range of instance sizes to which your cluster can scale.",
        "properties": {
          "compute": {
            "$ref": "#/components/schemas/AWSComputeAutoScaling"
          }
        },
        "type": "object"
      },
      "CloudProviderAccessAWSIAMRole": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudProviderAccessRole"
          },
          {
            "properties": {
              "atlasAWSAccountArn": {
                "description": "Amazon Resource Name that identifies the Amazon Web Services (AWS) user account that MongoDB Cloud uses when it assumes the Identity and Access Management (IAM) role.",
                "example": "arn:aws:iam::772401394250:role/my-test-aws-role",
                "maxLength": 2048,
                "minLength": 20,
                "readOnly": true,
                "type": "string"
              },
              "atlasAssumedRoleExternalId": {
                "description": "Unique external ID that MongoDB Cloud uses when it assumes the IAM role in your Amazon Web Services (AWS) account.",
                "format": "uuid",
                "readOnly": true,
                "type": "string"
              },
              "authorizedDate": {
                "description": "Date and time when someone authorized this role for the specified cloud service provider. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "createdDate": {
                "description": "Date and time when someone created this role for the specified cloud service provider. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "featureUsages": {
                "description": "List that contains application features associated with this Amazon Web Services (AWS) Identity and Access Management (IAM) role.",
                "items": {
                  "$ref": "#/components/schemas/CloudProviderAccessFeatureUsage"
                },
                "readOnly": true,
                "type": "array"
              },
              "iamAssumedRoleArn": {
                "description": "Amazon Resource Name (ARN) that identifies the Amazon Web Services (AWS) Identity and Access Management (IAM) role that MongoDB Cloud assumes when it accesses resources in your AWS account.",
                "example": "arn:aws:iam::123456789012:root",
                "maxLength": 2048,
                "minLength": 20,
                "type": "string"
              },
              "roleId": {
                "description": "Unique 24-hexadecimal digit string that identifies the role.",
                "example": "32b6e34b3d91647abb20e7b8",
                "pattern": "^([a-f0-9]{24})$",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "description": "Details that describe the features linked to the Amazon Web Services (AWS) Identity and Access Management (IAM) role.",
        "required": [
          "providerName"
        ],
        "type": "object"
      },
      "CloudProviderAccessAWSIAMRoleRequest": {
        "description": "Details that describe the features linked to the Amazon Web Services (AWS) Identity and Access Management (IAM) role.",
        "properties": {
          "atlasAWSAccountArn": {
            "description": "Amazon Resource Name that identifies the Amazon Web Services (AWS) user account that MongoDB Cloud uses when it assumes the Identity and Access Management (IAM) role.",
            "example": "arn:aws:iam::772401394250:role/my-test-aws-role",
            "maxLength": 2048,
            "minLength": 20,
            "readOnly": true,
            "type": "string"
          },
          "atlasAssumedRoleExternalId": {
            "description": "Unique external ID that MongoDB Cloud uses when it assumes the IAM role in your Amazon Web Services (AWS) account.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "authorizedDate": {
            "description": "Date and time when someone authorized this role for the specified cloud service provider. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "createdDate": {
            "description": "Date and time when someone created this role for the specified cloud service provider. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "featureUsages": {
            "description": "List that contains application features associated with this Amazon Web Services (AWS) Identity and Access Management (IAM) role.",
            "items": {
              "$ref": "#/components/schemas/CloudProviderAccessFeatureUsage"
            },
            "readOnly": true,
            "type": "array"
          },
          "providerName": {
            "description": "Human-readable label that identifies the cloud provider of the role.",
            "enum": [
              "AWS",
              "AZURE",
              "GCP"
            ],
            "type": "string"
          },
          "roleId": {
            "description": "Unique 24-hexadecimal digit string that identifies the role.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "providerName"
        ],
        "type": "object"
      },
      "CloudProviderAccessAWSIAMRoleRequestUpdate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudProviderAccessRoleRequestUpdate"
          },
          {
            "properties": {
              "atlasAWSAccountArn": {
                "description": "Amazon Resource Name that identifies the Amazon Web Services (AWS) user account that MongoDB Cloud uses when it assumes the Identity and Access Management (IAM) role.",
                "example": "arn:aws:iam::772401394250:role/my-test-aws-role",
                "maxLength": 2048,
                "minLength": 20,
                "readOnly": true,
                "type": "string"
              },
              "atlasAssumedRoleExternalId": {
                "description": "Unique external ID that MongoDB Cloud uses when it assumes the IAM role in your Amazon Web Services (AWS) account.",
                "format": "uuid",
                "readOnly": true,
                "type": "string"
              },
              "authorizedDate": {
                "description": "Date and time when someone authorized this role for the specified cloud service provider. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "createdDate": {
                "description": "Date and time when someone created this role for the specified cloud service provider. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "featureUsages": {
                "description": "List that contains application features associated with this Amazon Web Services (AWS) Identity and Access Management (IAM) role.",
                "items": {
                  "$ref": "#/components/schemas/CloudProviderAccessFeatureUsage"
                },
                "readOnly": true,
                "type": "array"
              },
              "iamAssumedRoleArn": {
                "description": "Amazon Resource Name (ARN) that identifies the Amazon Web Services (AWS) Identity and Access Management (IAM) role that MongoDB Cloud assumes when it accesses resources in your AWS account.",
                "example": "arn:aws:iam::123456789012:root",
                "maxLength": 2048,
                "minLength": 20,
                "type": "string"
              },
              "roleId": {
                "description": "Unique 24-hexadecimal digit string that identifies the role.",
                "example": "32b6e34b3d91647abb20e7b8",
                "pattern": "^([a-f0-9]{24})$",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "description": "Details that describe the features linked to the Amazon Web Services (AWS) Identity and Access Management (IAM) role.",
        "required": [
          "providerName"
        ],
        "type": "object"
      },
      "CloudProviderAccessAzureServicePrincipal": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudProviderAccessRole"
          },
          {
            "properties": {
              "_id": {
                "description": "Unique 24-hexadecimal digit string that identifies the role.",
                "example": "32b6e34b3d91647abb20e7b8",
                "pattern": "^([a-f0-9]{24})$",
                "readOnly": true,
                "type": "string"
              },
              "atlasAzureAppId": {
                "description": "Azure Active Directory Application ID of Atlas.",
                "format": "uuid",
                "type": "string"
              },
              "createdDate": {
                "description": "Date and time when this Azure Service Principal was created. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "featureUsages": {
                "description": "List that contains application features associated with this Azure Service Principal.",
                "items": {
                  "$ref": "#/components/schemas/CloudProviderAccessFeatureUsage"
                },
                "readOnly": true,
                "type": "array"
              },
              "lastUpdatedDate": {
                "description": "Date and time when this Azure Service Principal was last updated. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "servicePrincipalId": {
                "description": "UUID string that identifies the Azure Service Principal.",
                "format": "uuid",
                "type": "string"
              },
              "tenantId": {
                "description": "UUID String that identifies the Azure Active Directory Tenant ID.",
                "format": "uuid",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "description": "Details that describe the features linked to the Azure Service Principal.",
        "required": [
          "providerName"
        ],
        "type": "object"
      },
      "CloudProviderAccessAzureServicePrincipalRequest": {
        "description": "Details that describe the features linked to the Azure Service Principal.",
        "properties": {
          "_id": {
            "description": "Unique 24-hexadecimal digit string that identifies the role.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "atlasAzureAppId": {
            "description": "Azure Active Directory Application ID of Atlas.",
            "format": "uuid",
            "type": "string"
          },
          "createdDate": {
            "description": "Date and time when this Azure Service Principal was created. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "featureUsages": {
            "description": "List that contains application features associated with this Azure Service Principal.",
            "items": {
              "$ref": "#/components/schemas/CloudProviderAccessFeatureUsage"
            },
            "readOnly": true,
            "type": "array"
          },
          "lastUpdatedDate": {
            "description": "Date and time when this Azure Service Principal was last updated. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "providerName": {
            "description": "Human-readable label that identifies the cloud provider of the role.",
            "enum": [
              "AWS",
              "AZURE",
              "GCP"
            ],
            "type": "string"
          },
          "servicePrincipalId": {
            "description": "UUID string that identifies the Azure Service Principal.",
            "format": "uuid",
            "type": "string"
          },
          "tenantId": {
            "description": "UUID String that identifies the Azure Active Directory Tenant ID.",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "providerName"
        ],
        "type": "object"
      },
      "CloudProviderAccessAzureServicePrincipalRequestUpdate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudProviderAccessRoleRequestUpdate"
          },
          {
            "properties": {
              "_id": {
                "description": "Unique 24-hexadecimal digit string that identifies the role.",
                "example": "32b6e34b3d91647abb20e7b8",
                "pattern": "^([a-f0-9]{24})$",
                "readOnly": true,
                "type": "string"
              },
              "atlasAzureAppId": {
                "description": "Azure Active Directory Application ID of Atlas.",
                "format": "uuid",
                "type": "string"
              },
              "createdDate": {
                "description": "Date and time when this Azure Service Principal was created. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "featureUsages": {
                "description": "List that contains application features associated with this Azure Service Principal.",
                "items": {
                  "$ref": "#/components/schemas/CloudProviderAccessFeatureUsage"
                },
                "readOnly": true,
                "type": "array"
              },
              "lastUpdatedDate": {
                "description": "Date and time when this Azure Service Principal was last updated. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "servicePrincipalId": {
                "description": "UUID string that identifies the Azure Service Principal.",
                "format": "uuid",
                "type": "string"
              },
              "tenantId": {
                "description": "UUID String that identifies the Azure Active Directory Tenant ID.",
                "format": "uuid",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "description": "Details that describe the features linked to the Azure Service Principal.",
        "required": [
          "providerName"
        ],
        "type": "object"
      },
      "CloudProviderAccessDataLakeFeatureUsage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudProviderAccessFeatureUsage"
          },
          {
            "properties": {
              "featureId": {
                "$ref": "#/components/schemas/CloudProviderAccessFeatureUsageDataLakeFeatureId"
              }
            },
            "type": "object"
          }
        ],
        "description": "Details that describe the Atlas Data Lakes linked to this Amazon Web Services (AWS) Identity and Access Management (IAM) role.",
        "type": "object"
      },
      "CloudProviderAccessEncryptionAtRestFeatureUsage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudProviderAccessFeatureUsage"
          },
          {
            "properties": {
              "featureId": {
                "$ref": "#/components/schemas/ApiAtlasCloudProviderAccessFeatureUsageFeatureIdView"
              }
            },
            "type": "object"
          }
        ],
        "description": "Details that describe the Key Management Service (KMS) linked to this Amazon Web Services (AWS) Identity and Access Management (IAM) role.",
        "type": "object"
      },
      "CloudProviderAccessExportSnapshotFeatureUsage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudProviderAccessFeatureUsage"
          },
          {
            "properties": {
              "featureId": {
                "$ref": "#/components/schemas/CloudProviderAccessFeatureUsageExportSnapshotFeatureId"
              }
            },
            "type": "object"
          }
        ],
        "description": "Details that describe the Amazon Web Services (AWS) Simple Storage Service (S3) export buckets linked to this AWS Identity and Access Management (IAM) role.",
        "type": "object"
      },
      "CloudProviderAccessFeatureUsage": {
        "description": "MongoDB Cloud features associated with this Amazon Web Services (AWS) Identity and Access Management (IAM) role.",
        "discriminator": {
          "mapping": {
            "ATLAS_DATA_LAKE": "#/components/schemas/CloudProviderAccessDataLakeFeatureUsage",
            "ENCRYPTION_AT_REST": "#/components/schemas/CloudProviderAccessEncryptionAtRestFeatureUsage",
            "EXPORT_SNAPSHOT": "#/components/schemas/CloudProviderAccessExportSnapshotFeatureUsage",
            "PUSH_BASED_LOG_EXPORT": "#/components/schemas/CloudProviderAccessPushBasedLogExportFeatureUsage"
          },
          "propertyName": "featureType"
        },
        "properties": {
          "featureType": {
            "description": "Human-readable label that describes one MongoDB Cloud feature linked to this Amazon Web Services (AWS) Identity and Access Management (IAM) role.",
            "enum": [
              "ATLAS_DATA_LAKE",
              "ENCRYPTION_AT_REST",
              "EXPORT_SNAPSHOT",
              "PUSH_BASED_LOG_EXPORT"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CloudProviderAccessFeatureUsageDataLakeFeatureId": {
        "description": "Identifying characteristics about the data lake linked to this Amazon Web Services (AWS) Identity and Access Management (IAM) role.",
        "properties": {
          "groupId": {
            "description": "Unique 24-hexadecimal digit string that identifies your project.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Human-readable label that identifies the data lake.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CloudProviderAccessFeatureUsageExportSnapshotFeatureId": {
        "description": "Identifying characteristics about the Amazon Web Services (AWS) Simple Storage Service (S3) export bucket linked to this AWS Identity and Access Management (IAM) role.",
        "properties": {
          "exportBucketId": {
            "description": "Unique 24-hexadecimal digit string that identifies the AWS S3 bucket to which you export your snapshots.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "groupId": {
            "description": "Unique 24-hexadecimal digit string that identifies your project.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CloudProviderAccessFeatureUsagePushBasedLogExportFeatureId": {
        "description": "Identifying characteristics about the Amazon Web Services (AWS) Simple Storage Service (S3) export bucket linked to this AWS Identity and Access Management (IAM) role.",
        "properties": {
          "bucketName": {
            "description": "Name of the AWS S3 bucket to which your logs will be exported to.",
            "readOnly": true,
            "type": "string"
          },
          "groupId": {
            "description": "Unique 24-hexadecimal digit string that identifies your project.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CloudProviderAccessGCPServiceAccount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudProviderAccessRole"
          },
          {
            "properties": {
              "createdDate": {
                "description": "Date and time when this Google Service Account was created. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "featureUsages": {
                "description": "List that contains application features associated with this Google Service Account.",
                "items": {
                  "$ref": "#/components/schemas/CloudProviderAccessFeatureUsage"
                },
                "readOnly": true,
                "type": "array"
              },
              "gcpServiceAccountForAtlas": {
                "description": "Email address for the Google Service Account created by Atlas.",
                "pattern": "^mongodb-atlas-[0-9a-z]{16}@p-[0-9a-z]{24}.iam.gserviceaccount.com$",
                "type": "string"
              },
              "roleId": {
                "description": "Unique 24-hexadecimal digit string that identifies the role.",
                "example": "32b6e34b3d91647abb20e7b8",
                "pattern": "^([a-f0-9]{24})$",
                "readOnly": true,
                "type": "string"
              },
              "status": {
                "description": "Provision status of the service account.",
                "enum": [
                  "IN_PROGRESS",
                  "COMPLETE",
                  "FAILED",
                  "NOT_INITIATED"
                ],
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "description": "Details that describe the features linked to the GCP Service Account.",
        "required": [
          "providerName"
        ],
        "type": "object"
      },
      "CloudProviderAccessGCPServiceAccountRequest": {
        "description": "Details that describe the features linked to the GCP Service Account.",
        "properties": {
          "createdDate": {
            "description": "Date and time when this GCP Service Account was created. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "featureUsages": {
            "description": "List that contains application features associated with this GCP Service Account.",
            "items": {
              "$ref": "#/components/schemas/CloudProviderAccessFeatureUsage"
            },
            "readOnly": true,
            "type": "array"
          },
          "gcpServiceAccountForAtlas": {
            "description": "ID string that identifies the GCP Service Account used by Atlas.",
            "readOnly": true,
            "type": "string"
          },
          "providerName": {
            "description": "Human-readable label that identifies the cloud provider of the role.",
            "enum": [
              "AWS",
              "AZURE",
              "GCP"
            ],
            "type": "string"
          },
          "roleId": {
            "description": "Unique 24-hexadecimal digit string that identifies the role.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "providerName"
        ],
        "type": "object"
      },
      "CloudProviderAccessGCPServiceAccountRequestUpdate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudProviderAccessRoleRequestUpdate"
          }
        ],
        "description": "Details that describe the features linked to the GCP Service Account.",
        "required": [
          "providerName"
        ],
        "type": "object"
      },
      "CloudProviderAccessPushBasedLogExportFeatureUsage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudProviderAccessFeatureUsage"
          },
          {
            "properties": {
              "featureId": {
                "$ref": "#/components/schemas/CloudProviderAccessFeatureUsagePushBasedLogExportFeatureId"
              }
            },
            "type": "object"
          }
        ],
        "description": "Details that describe the Amazon Web Services (AWS) Simple Storage Service (S3) export buckets linked to this AWS Identity and Access Management (IAM) role.",
        "type": "object"
      },
      "CloudProviderAccessRole": {
        "description": "Cloud provider access role.",
        "discriminator": {
          "mapping": {
            "AWS": "#/components/schemas/CloudProviderAccessAWSIAMRole",
            "AZURE": "#/components/schemas/CloudProviderAccessAzureServicePrincipal",
            "GCP": "#/components/schemas/CloudProviderAccessGCPServiceAccount"
          },
          "propertyName": "providerName"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/CloudProviderAccessAWSIAMRole"
          },
          {
            "$ref": "#/components/schemas/CloudProviderAccessAzureServicePrincipal"
          },
          {
            "$ref": "#/components/schemas/CloudProviderAccessGCPServiceAccount"
          }
        ],
        "properties": {
          "providerName": {
            "description": "Human-readable label that identifies the cloud provider of the role.",
            "enum": [
              "AWS",
              "AZURE",
              "GCP"
            ],
            "type": "string"
          }
        },
        "required": [
          "providerName"
        ],
        "type": "object"
      },
      "CloudProviderAccessRoleRequest": {
        "description": "Cloud provider access role.",
        "discriminator": {
          "mapping": {
            "AWS": "#/components/schemas/CloudProviderAccessAWSIAMRoleRequest",
            "AZURE": "#/components/schemas/CloudProviderAccessAzureServicePrincipalRequest",
            "GCP": "#/components/schemas/CloudProviderAccessGCPServiceAccountRequest"
          },
          "propertyName": "providerName"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/CloudProviderAccessAWSIAMRoleRequest"
          },
          {
            "$ref": "#/components/schemas/CloudProviderAccessAzureServicePrincipalRequest"
          },
          {
            "$ref": "#/components/schemas/CloudProviderAccessGCPServiceAccountRequest"
          }
        ],
        "properties": {
          "providerName": {
            "description": "Human-readable label that identifies the cloud provider of the role.",
            "enum": [
              "AWS",
              "AZURE",
              "GCP"
            ],
            "type": "string"
          }
        },
        "required": [
          "providerName"
        ],
        "type": "object"
      },
      "CloudProviderAccessRoleRequestUpdate": {
        "description": "Cloud provider access role.",
        "discriminator": {
          "mapping": {
            "AWS": "#/components/schemas/CloudProviderAccessAWSIAMRoleRequestUpdate",
            "AZURE": "#/components/schemas/CloudProviderAccessAzureServicePrincipalRequestUpdate",
            "GCP": "#/components/schemas/CloudProviderAccessGCPServiceAccountRequestUpdate"
          },
          "propertyName": "providerName"
        },
        "properties": {
          "providerName": {
            "description": "Human-readable label that identifies the cloud provider of the role.",
            "enum": [
              "AWS",
              "AZURE",
              "GCP"
            ],
            "type": "string"
          }
        },
        "required": [
          "providerName"
        ],
        "type": "object"
      },
      "CloudProviderAzureAutoScaling": {
        "description": "Range of instance sizes to which your cluster can scale.",
        "properties": {
          "compute": {
            "$ref": "#/components/schemas/AzureComputeAutoScalingRules"
          }
        },
        "type": "object"
      },
      "CloudProviderContainer": {
        "description": "Collection of settings that configures the network container for a virtual private connection on Amazon Web Services.",
        "discriminator": {
          "mapping": {
            "AWS": "#/components/schemas/AWSCloudProviderContainer",
            "AZURE": "#/components/schemas/AzureCloudProviderContainer",
            "GCP": "#/components/schemas/GCPCloudProviderContainer"
          },
          "propertyName": "providerName"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/AzureCloudProviderContainer"
          },
          {
            "$ref": "#/components/schemas/GCPCloudProviderContainer"
          },
          {
            "$ref": "#/components/schemas/AWSCloudProviderContainer"
          }
        ],
        "properties": {
          "id": {
            "description": "Unique 24-hexadecimal digit string that identifies the network peering container.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "providerName": {
            "description": "Cloud service provider that serves the requested network peering containers.",
            "enum": [
              "AWS",
              "GCP",
              "AZURE",
              "TENANT",
              "SERVERLESS"
            ],
            "type": "string"
          },
          "provisioned": {
            "description": "Flag that indicates whether MongoDB Cloud clusters exist in the specified network peering container.",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "CloudProviderGCPAutoScaling": {
        "description": "Range of instance sizes to which your cluster can scale.",
        "properties": {
          "compute": {
            "$ref": "#/components/schemas/GCPComputeAutoScaling"
          }
        },
        "type": "object"
      },
      "CloudRegionConfig": {
        "description": "Cloud service provider on which MongoDB Cloud provisions the hosts.",
        "discriminator": {
          "mapping": {
            "AWS": "#/components/schemas/AWSRegionConfig",
            "AZURE": "#/components/schemas/AzureRegionConfig",
            "GCP": "#/components/schemas/GCPRegionConfig",
            "TENANT": "#/components/schemas/TenantRegionConfig"
          },
          "propertyName": "providerName"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/AWSRegionConfig"
          },
          {
            "$ref": "#/components/schemas/AzureRegionConfig"
          },
          {
            "$ref": "#/components/schemas/GCPRegionConfig"
          },
          {
            "$ref": "#/components/schemas/TenantRegionConfig"
          }
        ],
        "properties": {
          "electableSpecs": {
            "$ref": "#/components/schemas/HardwareSpec"
          },
          "priority": {
            "description": "Precedence is given to this region when a primary election occurs. If your **regionConfigs** has only **readOnlySpecs**, **analyticsSpecs**, or both, set this value to `0`. If you have multiple **regionConfigs** objects (your cluster is multi-region or multi-cloud), they must have priorities in descending order. The highest priority is `7`.\n\n**Example:** If you have three regions, their priorities would be `7`, `6`, and `5` respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be `4` and `3` respectively.",
            "format": "int32",
            "maximum": 7,
            "minimum": 0,
            "type": "integer"
          },
          "providerName": {
            "description": "Cloud service provider on which MongoDB Cloud provisions the hosts. Set dedicated clusters to `AWS`, `GCP`, `AZURE` or `TENANT`.",
            "enum": [
              "AWS",
              "AZURE",
              "GCP",
              "TENANT"
            ],
            "type": "string"
          },
          "regionName": {
            "description": "Physical location of your MongoDB cluster nodes. The region you choose can affect network latency for clients accessing your databases. The region name is only returned in the response for single-region clusters. When MongoDB Cloud deploys a dedicated cluster, it checks if a VPC or VPC connection exists for that provider and region. If not, MongoDB Cloud creates them as part of the deployment. It assigns the VPC a Classless Inter-Domain Routing (CIDR) block. To limit a new VPC peering connection to one Classless Inter-Domain Routing (CIDR) block and region, create the connection first. Deploy the cluster after the connection starts. GCP Clusters and Multi-region clusters require one VPC peering connection for each region. MongoDB nodes can use only the peering connection that resides in the same region as the nodes to communicate with the peered VPC.",
            "oneOf": [
              {
                "description": "Physical location where MongoDB Cloud deploys your AWS-hosted MongoDB cluster nodes. The region you choose can affect network latency for clients accessing your databases. When MongoDB Cloud deploys a dedicated cluster, it checks if a VPC or VPC connection exists for that provider and region. If not, MongoDB Cloud creates them as part of the deployment. MongoDB Cloud assigns the VPC a CIDR block. To limit a new VPC peering connection to one CIDR block and region, create the connection first. Deploy the cluster after the connection starts.",
                "enum": [
                  "US_GOV_WEST_1",
                  "US_GOV_EAST_1",
                  "US_EAST_1",
                  "US_EAST_2",
                  "US_WEST_1",
                  "US_WEST_2",
                  "CA_CENTRAL_1",
                  "EU_NORTH_1",
                  "EU_WEST_1",
                  "EU_WEST_2",
                  "EU_WEST_3",
                  "EU_CENTRAL_1",
                  "EU_CENTRAL_2",
                  "AP_EAST_1",
                  "AP_NORTHEAST_1",
                  "AP_NORTHEAST_2",
                  "AP_NORTHEAST_3",
                  "AP_SOUTHEAST_1",
                  "AP_SOUTHEAST_2",
                  "AP_SOUTHEAST_3",
                  "AP_SOUTHEAST_4",
                  "AP_SOUTH_1",
                  "AP_SOUTH_2",
                  "SA_EAST_1",
                  "CN_NORTH_1",
                  "CN_NORTHWEST_1",
                  "ME_SOUTH_1",
                  "ME_CENTRAL_1",
                  "AF_SOUTH_1",
                  "EU_SOUTH_1",
                  "EU_SOUTH_2",
                  "IL_CENTRAL_1",
                  "CA_WEST_1",
                  "AP_SOUTHEAST_5",
                  "AP_SOUTHEAST_7",
                  "MX_CENTRAL_1",
                  "GLOBAL"
                ],
                "title": "AWS Regions",
                "type": "string",
                "x-xgen-IPA-exception": {
                  "xgen-IPA-123-allowable-enum-values-should-not-exceed-20": "Enum values standardized by cloud providers."
                }
              },
              {
                "description": "Microsoft Azure Regions.",
                "enum": [
                  "US_CENTRAL",
                  "US_EAST",
                  "US_EAST_2",
                  "US_NORTH_CENTRAL",
                  "US_WEST",
                  "US_SOUTH_CENTRAL",
                  "EUROPE_NORTH",
                  "EUROPE_WEST",
                  "US_WEST_CENTRAL",
                  "US_WEST_2",
                  "US_WEST_3",
                  "CANADA_EAST",
                  "CANADA_CENTRAL",
                  "BRAZIL_SOUTH",
                  "BRAZIL_SOUTHEAST",
                  "AUSTRALIA_CENTRAL",
                  "AUSTRALIA_CENTRAL_2",
                  "AUSTRALIA_EAST",
                  "AUSTRALIA_SOUTH_EAST",
                  "GERMANY_WEST_CENTRAL",
                  "GERMANY_NORTH",
                  "SWEDEN_CENTRAL",
                  "SWEDEN_SOUTH",
                  "SWITZERLAND_NORTH",
                  "SWITZERLAND_WEST",
                  "UK_SOUTH",
                  "UK_WEST",
                  "NORWAY_EAST",
                  "NORWAY_WEST",
                  "INDIA_CENTRAL",
                  "INDIA_SOUTH",
                  "INDIA_WEST",
                  "CHINA_EAST",
                  "CHINA_NORTH",
                  "ASIA_EAST",
                  "JAPAN_EAST",
                  "JAPAN_WEST",
                  "ASIA_SOUTH_EAST",
                  "KOREA_CENTRAL",
                  "KOREA_SOUTH",
                  "FRANCE_CENTRAL",
                  "FRANCE_SOUTH",
                  "SOUTH_AFRICA_NORTH",
                  "SOUTH_AFRICA_WEST",
                  "UAE_CENTRAL",
                  "UAE_NORTH",
                  "QATAR_CENTRAL",
                  "POLAND_CENTRAL",
                  "ISRAEL_CENTRAL",
                  "ITALY_NORTH",
                  "SPAIN_CENTRAL",
                  "MEXICO_CENTRAL",
                  "NEW_ZEALAND_NORTH"
                ],
                "title": "Azure Regions",
                "type": "string",
                "x-xgen-IPA-exception": {
                  "xgen-IPA-123-allowable-enum-values-should-not-exceed-20": "Enum values standardized by cloud providers."
                }
              },
              {
                "description": "Google Compute Regions.",
                "enum": [
                  "EASTERN_US",
                  "EASTERN_US_AW",
                  "US_EAST_4",
                  "US_EAST_4_AW",
                  "US_EAST_5",
                  "US_EAST_5_AW",
                  "US_WEST_2",
                  "US_WEST_2_AW",
                  "US_WEST_3",
                  "US_WEST_3_AW",
                  "US_WEST_4",
                  "US_WEST_4_AW",
                  "US_SOUTH_1",
                  "US_SOUTH_1_AW",
                  "CENTRAL_US",
                  "CENTRAL_US_AW",
                  "WESTERN_US",
                  "WESTERN_US_AW",
                  "NORTH_AMERICA_NORTHEAST_1",
                  "NORTH_AMERICA_NORTHEAST_2",
                  "NORTH_AMERICA_SOUTH_1",
                  "SOUTH_AMERICA_EAST_1",
                  "SOUTH_AMERICA_WEST_1",
                  "WESTERN_EUROPE",
                  "EUROPE_NORTH_1",
                  "EUROPE_WEST_2",
                  "EUROPE_WEST_3",
                  "EUROPE_WEST_4",
                  "EUROPE_WEST_6",
                  "EUROPE_WEST_8",
                  "EUROPE_WEST_9",
                  "EUROPE_WEST_10",
                  "EUROPE_WEST_12",
                  "EUROPE_SOUTHWEST_1",
                  "EUROPE_CENTRAL_2",
                  "MIDDLE_EAST_CENTRAL_1",
                  "MIDDLE_EAST_CENTRAL_2",
                  "MIDDLE_EAST_WEST_1",
                  "AUSTRALIA_SOUTHEAST_1",
                  "AUSTRALIA_SOUTHEAST_2",
                  "AFRICA_SOUTH_1",
                  "EASTERN_ASIA_PACIFIC",
                  "NORTHEASTERN_ASIA_PACIFIC",
                  "SOUTHEASTERN_ASIA_PACIFIC",
                  "ASIA_EAST_2",
                  "ASIA_NORTHEAST_2",
                  "ASIA_NORTHEAST_3",
                  "ASIA_SOUTH_1",
                  "ASIA_SOUTH_2",
                  "ASIA_SOUTHEAST_2"
                ],
                "title": "GCP Regions",
                "type": "string",
                "x-xgen-IPA-exception": {
                  "xgen-IPA-123-allowable-enum-values-should-not-exceed-20": "Enum values standardized by cloud providers."
                }
              }
            ],
            "type": "object"
          }
        },
        "title": "Cloud Service Provider Settings for Multi-Cloud Clusters",
        "type": "object"
      },
      "CloudRegionConfig20240805": {
        "description": "Cloud service provider on which MongoDB Cloud provisions the hosts.",
        "discriminator": {
          "mapping": {
            "AWS": "#/components/schemas/AWSRegionConfig20240805",
            "AZURE": "#/components/schemas/AzureRegionConfig20240805",
            "GCP": "#/components/schemas/GCPRegionConfig20240805",
            "TENANT": "#/components/schemas/TenantRegionConfig20240805"
          },
          "propertyName": "providerName"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/AWSRegionConfig20240805"
          },
          {
            "$ref": "#/components/schemas/AzureRegionConfig20240805"
          },
          {
            "$ref": "#/components/schemas/GCPRegionConfig20240805"
          },
          {
            "$ref": "#/components/schemas/TenantRegionConfig20240805"
          }
        ],
        "properties": {
          "electableSpecs": {
            "$ref": "#/components/schemas/HardwareSpec20240805"
          },
          "priority": {
            "description": "Precedence is given to this region when a primary election occurs. If your **regionConfigs** has only **readOnlySpecs**, **analyticsSpecs**, or both, set this value to `0`. If you have multiple **regionConfigs** objects (your cluster is multi-region or multi-cloud), they must have priorities in descending order. The highest priority is `7`.\n\n**Example:** If you have three regions, their priorities would be `7`, `6`, and `5` respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be `4` and `3` respectively.",
            "format": "int32",
            "maximum": 7,
            "minimum": 0,
            "type": "integer"
          },
          "providerName": {
            "description": "Cloud service provider on which MongoDB Cloud provisions the hosts. Set dedicated clusters to `AWS`, `GCP`, `AZURE` or `TENANT`.",
            "enum": [
              "AWS",
              "AZURE",
              "GCP",
              "TENANT"
            ],
            "type": "string"
          },
          "regionName": {
            "description": "Physical location of your MongoDB cluster nodes. The region you choose can affect network latency for clients accessing your databases. The region name is only returned in the response for single-region clusters. When MongoDB Cloud deploys a dedicated cluster, it checks if a VPC or VPC connection exists for that provider and region. If not, MongoDB Cloud creates them as part of the deployment. It assigns the VPC a Classless Inter-Domain Routing (CIDR) block. To limit a new VPC peering connection to one Classless Inter-Domain Routing (CIDR) block and region, create the connection first. Deploy the cluster after the connection starts. GCP Clusters and Multi-region clusters require one VPC peering connection for each region. MongoDB nodes can use only the peering connection that resides in the same region as the nodes to communicate with the peered VPC.",
            "oneOf": [
              {
                "description": "Physical location where MongoDB Cloud deploys your AWS-hosted MongoDB cluster nodes. The region you choose can affect network latency for clients accessing your databases. When MongoDB Cloud deploys a dedicated cluster, it checks if a VPC or VPC connection exists for that provider and region. If not, MongoDB Cloud creates them as part of the deployment. MongoDB Cloud assigns the VPC a CIDR block. To limit a new VPC peering connection to one CIDR block and region, create the connection first. Deploy the cluster after the connection starts.",
                "enum": [
                  "US_GOV_WEST_1",
                  "US_GOV_EAST_1",
                  "US_EAST_1",
                  "US_EAST_2",
                  "US_WEST_1",
                  "US_WEST_2",
                  "CA_CENTRAL_1",
                  "EU_NORTH_1",
                  "EU_WEST_1",
                  "EU_WEST_2",
                  "EU_WEST_3",
                  "EU_CENTRAL_1",
                  "EU_CENTRAL_2",
                  "AP_EAST_1",
                  "AP_NORTHEAST_1",
                  "AP_NORTHEAST_2",
                  "AP_NORTHEAST_3",
                  "AP_SOUTHEAST_1",
                  "AP_SOUTHEAST_2",
                  "AP_SOUTHEAST_3",
                  "AP_SOUTHEAST_4",
                  "AP_SOUTH_1",
                  "AP_SOUTH_2",
                  "SA_EAST_1",
                  "CN_NORTH_1",
                  "CN_NORTHWEST_1",
                  "ME_SOUTH_1",
                  "ME_CENTRAL_1",
                  "AF_SOUTH_1",
                  "EU_SOUTH_1",
                  "EU_SOUTH_2",
                  "IL_CENTRAL_1",
                  "CA_WEST_1",
                  "AP_SOUTHEAST_5",
                  "AP_SOUTHEAST_7",
                  "MX_CENTRAL_1",
                  "GLOBAL"
                ],
                "title": "AWS Regions",
                "type": "string",
                "x-xgen-IPA-exception": {
                  "xgen-IPA-123-allowable-enum-values-should-not-exceed-20": "Enum values standardized by cloud providers."
                }
              },
              {
                "description": "Microsoft Azure Regions.",
                "enum": [
                  "US_CENTRAL",
                  "US_EAST",
                  "US_EAST_2",
                  "US_NORTH_CENTRAL",
                  "US_WEST",
                  "US_SOUTH_CENTRAL",
                  "EUROPE_NORTH",
                  "EUROPE_WEST",
                  "US_WEST_CENTRAL",
                  "US_WEST_2",
                  "US_WEST_3",
                  "CANADA_EAST",
                  "CANADA_CENTRAL",
                  "BRAZIL_SOUTH",
                  "BRAZIL_SOUTHEAST",
                  "AUSTRALIA_CENTRAL",
                  "AUSTRALIA_CENTRAL_2",
                  "AUSTRALIA_EAST",
                  "AUSTRALIA_SOUTH_EAST",
                  "GERMANY_WEST_CENTRAL",
                  "GERMANY_NORTH",
                  "SWEDEN_CENTRAL",
                  "SWEDEN_SOUTH",
                  "SWITZERLAND_NORTH",
                  "SWITZERLAND_WEST",
                  "UK_SOUTH",
                  "UK_WEST",
                  "NORWAY_EAST",
                  "NORWAY_WEST",
                  "INDIA_CENTRAL",
                  "INDIA_SOUTH",
                  "INDIA_WEST",
                  "CHINA_EAST",
                  "CHINA_NORTH",
                  "ASIA_EAST",
                  "JAPAN_EAST",
                  "JAPAN_WEST",
                  "ASIA_SOUTH_EAST",
                  "KOREA_CENTRAL",
                  "KOREA_SOUTH",
                  "FRANCE_CENTRAL",
                  "FRANCE_SOUTH",
                  "SOUTH_AFRICA_NORTH",
                  "SOUTH_AFRICA_WEST",
                  "UAE_CENTRAL",
                  "UAE_NORTH",
                  "QATAR_CENTRAL",
                  "POLAND_CENTRAL",
                  "ISRAEL_CENTRAL",
                  "ITALY_NORTH",
                  "SPAIN_CENTRAL",
                  "MEXICO_CENTRAL",
                  "NEW_ZEALAND_NORTH"
                ],
                "title": "Azure Regions",
                "type": "string",
                "x-xgen-IPA-exception": {
                  "xgen-IPA-123-allowable-enum-values-should-not-exceed-20": "Enum values standardized by cloud providers."
                }
              },
              {
                "description": "Google Compute Regions.",
                "enum": [
                  "EASTERN_US",
                  "EASTERN_US_AW",
                  "US_EAST_4",
                  "US_EAST_4_AW",
                  "US_EAST_5",
                  "US_EAST_5_AW",
                  "US_WEST_2",
                  "US_WEST_2_AW",
                  "US_WEST_3",
                  "US_WEST_3_AW",
                  "US_WEST_4",
                  "US_WEST_4_AW",
                  "US_SOUTH_1",
                  "US_SOUTH_1_AW",
                  "CENTRAL_US",
                  "CENTRAL_US_AW",
                  "WESTERN_US",
                  "WESTERN_US_AW",
                  "NORTH_AMERICA_NORTHEAST_1",
                  "NORTH_AMERICA_NORTHEAST_2",
                  "NORTH_AMERICA_SOUTH_1",
                  "SOUTH_AMERICA_EAST_1",
                  "SOUTH_AMERICA_WEST_1",
                  "WESTERN_EUROPE",
                  "EUROPE_NORTH_1",
                  "EUROPE_WEST_2",
                  "EUROPE_WEST_3",
                  "EUROPE_WEST_4",
                  "EUROPE_WEST_6",
                  "EUROPE_WEST_8",
                  "EUROPE_WEST_9",
                  "EUROPE_WEST_10",
                  "EUROPE_WEST_12",
                  "EUROPE_SOUTHWEST_1",
                  "EUROPE_CENTRAL_2",
                  "MIDDLE_EAST_CENTRAL_1",
                  "MIDDLE_EAST_CENTRAL_2",
                  "MIDDLE_EAST_WEST_1",
                  "AUSTRALIA_SOUTHEAST_1",
                  "AUSTRALIA_SOUTHEAST_2",
                  "AFRICA_SOUTH_1",
                  "EASTERN_ASIA_PACIFIC",
                  "NORTHEASTERN_ASIA_PACIFIC",
                  "SOUTHEASTERN_ASIA_PACIFIC",
                  "ASIA_EAST_2",
                  "ASIA_NORTHEAST_2",
                  "ASIA_NORTHEAST_3",
                  "ASIA_SOUTH_1",
                  "ASIA_SOUTH_2",
                  "ASIA_SOUTHEAST_2"
                ],
                "title": "GCP Regions",
                "type": "string",
                "x-xgen-IPA-exception": {
                  "xgen-IPA-123-allowable-enum-values-should-not-exceed-20": "Enum values standardized by cloud providers."
                }
              }
            ],
            "type": "object"
          }
        },
        "title": "Cloud Service Provider Settings",
        "type": "object"
      },
      "ClusterDescriptionConnectionStringsPrivateEndpoint": {
        "description": "Private endpoint-aware connection string that you can use to connect to this cluster through a private endpoint.",
        "externalDocs": {
          "description": "Private Endpoint for Dedicated Cluster",
          "url": "https://docs.atlas.mongodb.com/security-private-endpoint/"
        },
        "properties": {
          "connectionString": {
            "description": "Private endpoint-aware connection string that uses the `mongodb://` protocol to connect to MongoDB Cloud through a private endpoint.",
            "readOnly": true,
            "type": "string"
          },
          "endpoints": {
            "description": "List that contains the private endpoints through which you connect to MongoDB Cloud when you use **connectionStrings.privateEndpoint[n].connectionString** or **connectionStrings.privateEndpoint[n].srvConnectionString**.",
            "items": {
              "$ref": "#/components/schemas/ClusterDescriptionConnectionStringsPrivateEndpointEndpoint"
            },
            "readOnly": true,
            "type": "array"
          },
          "srvConnectionString": {
            "description": "Private endpoint-aware connection string that uses the `mongodb+srv://` protocol to connect to MongoDB Cloud through a private endpoint. The `mongodb+srv` protocol tells the driver to look up the seed list of hosts in the Domain Name System (DNS). This list synchronizes with the nodes in a cluster. If the connection string uses this Uniform Resource Identifier (URI) format, you don't need to append the seed list or change the Uniform Resource Identifier (URI) if the nodes change. Use this Uniform Resource Identifier (URI) format if your application supports it. If it doesn't, use connectionStrings.privateEndpoint[n].connectionString.",
            "readOnly": true,
            "type": "string"
          },
          "srvShardOptimizedConnectionString": {
            "description": "Private endpoint-aware connection string optimized for sharded clusters that uses the `mongodb+srv://` protocol to connect to MongoDB Cloud through a private endpoint. If the connection string uses this Uniform Resource Identifier (URI) format, you don't need to change the Uniform Resource Identifier (URI) if the nodes change. Use this Uniform Resource Identifier (URI) format if your application and Atlas cluster supports it. If it doesn't, use and consult the documentation for connectionStrings.privateEndpoint[n].srvConnectionString.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "MongoDB process type to which your application connects. Use `MONGOD` for replica sets and `MONGOS` for sharded clusters.",
            "enum": [
              "MONGOD",
              "MONGOS"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "title": "Cluster Private Endpoint Connection String",
        "type": "object"
      },
      "ClusterDescriptionConnectionStringsPrivateEndpointEndpoint": {
        "description": "Details of a private endpoint deployed for this cluster.",
        "properties": {
          "endpointId": {
            "description": "Unique string that the cloud provider uses to identify the private endpoint.",
            "readOnly": true,
            "type": "string"
          },
          "providerName": {
            "description": "Cloud provider in which MongoDB Cloud deploys the private endpoint.",
            "enum": [
              "AWS",
              "AZURE",
              "GCP"
            ],
            "readOnly": true,
            "type": "string"
          },
          "region": {
            "description": "Region where the private endpoint is deployed.",
            "readOnly": true,
            "type": "string"
          }
        },
        "title": "Cluster Private Endpoint Connection Strings Endpoint",
        "type": "object"
      },
      "ClusterFlexProviderSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ClusterProviderSettings"
          },
          {
            "properties": {
              "backingProviderName": {
                "description": "Cloud service provider on which MongoDB Cloud provisioned the multi-tenant host. The resource returns this parameter when **providerSettings.providerName** is `FLEX` and **providerSetting.instanceSizeName** is `FLEX`.",
                "enum": [
                  "AWS",
                  "GCP",
                  "AZURE"
                ],
                "type": "string"
              },
              "instanceSizeName": {
                "description": "Cluster tier, with a default storage and memory capacity, that applies to all the data-bearing hosts in your cluster. You must set **providerSettings.providerName** to `FLEX` and specify the cloud service provider in **providerSettings.backingProviderName**.",
                "enum": [
                  "FLEX"
                ],
                "title": "Flex Instance Sizes",
                "type": "string"
              },
              "regionName": {
                "description": "Human-readable label that identifies the geographic location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases. For a complete list of region names, see [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/#std-label-amazon-aws), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), and [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "type": "object"
      },
      "ClusterFreeAutoScaling": {
        "description": "Range of instance sizes to which your cluster can scale.",
        "properties": {
          "compute": {
            "$ref": "#/components/schemas/FreeComputeAutoScalingRules"
          }
        },
        "type": "object"
      },
      "ClusterFreeProviderSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ClusterProviderSettings"
          },
          {
            "properties": {
              "autoScaling": {
                "$ref": "#/components/schemas/ClusterFreeAutoScaling"
              },
              "backingProviderName": {
                "description": "Cloud service provider on which MongoDB Cloud provisioned the multi-tenant host. The resource returns this parameter when **providerSettings.providerName** is `TENANT` and **providerSetting.instanceSizeName** is `M0`, `M2` or `M5`. \n\nPlease note that using an instanceSize of M2 or M5 will create a Flex cluster instead. Support for the instanceSize of M2 or M5 will be discontinued in January 2026. We recommend using the createFlexCluster API for such configurations moving forward.",
                "enum": [
                  "AWS",
                  "GCP",
                  "AZURE"
                ],
                "externalDocs": {
                  "description": "createFlexCluster API",
                  "url": "https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Flex-Clusters/operation/createFlexCluster"
                },
                "type": "string"
              },
              "effectiveInstanceSizeName": {
                "description": "The true tenant instance size. This is present to support backwards compatibility for deprecated provider types and/or instance sizes.",
                "enum": [
                  "FLEX",
                  "M2",
                  "M5",
                  "M0"
                ],
                "readOnly": true,
                "type": "string"
              },
              "instanceSizeName": {
                "description": "Cluster tier, with a default storage and memory capacity, that applies to all the data-bearing hosts in your cluster. You must set **providerSettings.providerName** to `TENANT` and specify the cloud service provider in **providerSettings.backingProviderName**.",
                "enum": [
                  "M0",
                  "M2",
                  "M5"
                ],
                "title": "Tenant Instance Sizes",
                "type": "string"
              },
              "regionName": {
                "description": "Human-readable label that identifies the geographic location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases. For a complete list of region names, see [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/#std-label-amazon-aws), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), and [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/). For multi-region clusters, see **replicationSpec.{region}**.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "type": "object"
      },
      "ClusterMatcher": {
        "description": "Rules to apply when comparing an cluster against this alert configuration.",
        "properties": {
          "fieldName": {
            "$ref": "#/components/schemas/ClusterMatcherField"
          },
          "operator": {
            "description": "Comparison operator to apply when checking the current metric value against **matcher[n].value**.",
            "enum": [
              "EQUALS",
              "CONTAINS",
              "STARTS_WITH",
              "ENDS_WITH",
              "NOT_EQUALS",
              "NOT_CONTAINS",
              "REGEX"
            ],
            "type": "string"
          },
          "value": {
            "description": "Value to match or exceed using the specified **matchers.operator**.",
            "example": "event-replica-set",
            "type": "string"
          }
        },
        "required": [
          "fieldName",
          "operator",
          "value"
        ],
        "title": "Matchers",
        "type": "object"
      },
      "ClusterMatcherField": {
        "description": "Name of the parameter in the target object that MongoDB Cloud checks. The parameter must match all rules for MongoDB Cloud to check for alert configurations.",
        "enum": [
          "CLUSTER_NAME"
        ],
        "example": "CLUSTER_NAME",
        "title": "Cluster Matcher Fields",
        "type": "string"
      },
      "ClusterProviderSettings": {
        "description": "Group of cloud provider settings that configure the provisioned MongoDB hosts.",
        "discriminator": {
          "mapping": {
            "AWS": "#/components/schemas/AWSCloudProviderSettings",
            "AZURE": "#/components/schemas/AzureCloudProviderSettings",
            "FLEX": "#/components/schemas/ClusterFlexProviderSettings",
            "GCP": "#/components/schemas/CloudGCPProviderSettings",
            "TENANT": "#/components/schemas/ClusterFreeProviderSettings"
          },
          "propertyName": "providerName"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/AWSCloudProviderSettings"
          },
          {
            "$ref": "#/components/schemas/AzureCloudProviderSettings"
          },
          {
            "$ref": "#/components/schemas/CloudGCPProviderSettings"
          },
          {
            "$ref": "#/components/schemas/ClusterFreeProviderSettings"
          },
          {
            "$ref": "#/components/schemas/ClusterFlexProviderSettings"
          }
        ],
        "properties": {
          "providerName": {
            "type": "string"
          }
        },
        "required": [
          "providerName"
        ],
        "title": "Cloud Service Provider Settings for a Cluster",
        "type": "object"
      },
      "ClusterSearchIndex": {
        "discriminator": {
          "mapping": {
            "search": "#/components/schemas/SearchIndex",
            "vectorSearch": "#/components/schemas/VectorSearchIndex"
          },
          "propertyName": "type"
        },
        "properties": {
          "collectionName": {
            "description": "Human-readable label that identifies the collection that contains one or more Atlas Search indexes.",
            "type": "string"
          },
          "database": {
            "description": "Human-readable label that identifies the database that contains the collection with one or more Atlas Search indexes.",
            "type": "string"
          },
          "indexID": {
            "description": "Unique 24-hexadecimal digit string that identifies this Atlas Search index.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Human-readable label that identifies this index. Within each namespace, names of all indexes in the namespace must be unique.",
            "type": "string"
          },
          "numPartitions": {
            "default": 1,
            "description": "Number of index partitions. Allowed values are [1, 2, 4].",
            "format": "int32",
            "type": "integer"
          },
          "status": {
            "description": "Condition of the search index when you made this request.\n\n- `IN_PROGRESS`: Atlas is building or re-building the index after an edit.\n- `STEADY`: You can use this search index.\n- `FAILED`: Atlas could not build the index.\n- `MIGRATING`: Atlas is upgrading the underlying cluster tier and migrating indexes.\n- `PAUSED`: The cluster is paused.",
            "enum": [
              "IN_PROGRESS",
              "STEADY",
              "FAILED",
              "MIGRATING",
              "STALE",
              "PAUSED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Type of the index. Default type is search.",
            "enum": [
              "search",
              "vectorSearch"
            ],
            "type": "string"
          }
        },
        "required": [
          "collectionName",
          "database",
          "name"
        ],
        "type": "object"
      },
      "ClusterServerlessBackupOptions": {
        "description": "Group of settings that configure serverless backup.",
        "properties": {
          "serverlessContinuousBackupEnabled": {
            "default": true,
            "description": "Flag that indicates whether the serverless instance uses **Serverless Continuous Backup**.\n If this parameter is `false`, the serverless instance uses **Basic Backup**.\n\n | Option | Description |\n |---|---|\n | Serverless Continuous Backup | Atlas takes incremental [snapshots](https://www.mongodb.com/docs/atlas/backup/cloud-backup/overview/#std-label-serverless-snapshots) of the data in your serverless instance every six hours and lets you restore the data from a selected point in time within the last 72 hours. Atlas also takes daily snapshots and retains these daily snapshots for 35 days. To learn more, see [Serverless Instance Costs](https://www.mongodb.com/docs/atlas/billing/serverless-instance-costs/#std-label-serverless-instance-costs). |\n | Basic Backup | Atlas takes incremental [snapshots](https://www.mongodb.com/docs/atlas/backup/cloud-backup/overview/#std-label-serverless-snapshots) of the data in your serverless instance every six hours and retains only the two most recent snapshots. You can use this option for free. |",
            "type": "boolean"
          }
        },
        "title": "Serverless Backup Options",
        "type": "object"
      },
      "ConnectedOrgConfig": {
        "properties": {
          "dataAccessIdentityProviderIds": {
            "description": "The collection of unique ids representing the identity providers that can be used for data access in this organization.",
            "items": {
              "description": "Unique 24-hexadecimal digit string that represents the id of the identity providers that can be used for data access in this organization.",
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "domainAllowList": {
            "description": "Approved domains that restrict users who can join the organization based on their email address.",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "domainRestrictionEnabled": {
            "description": "Value that indicates whether domain restriction is enabled for this connected org.",
            "type": "boolean"
          },
          "identityProviderId": {
            "description": "Legacy 20-hexadecimal digit string that identifies the UI access identity provider that this connected org config is associated with. This id can be found within the Federation Management Console > Identity Providers tab by clicking the info icon in the IdP ID row of a configured identity provider.",
            "pattern": "^([a-f0-9]{20})$",
            "type": "string"
          },
          "orgId": {
            "description": "Unique 24-hexadecimal digit string that identifies the connected organization configuration.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "postAuthRoleGrants": {
            "description": "Atlas roles that are granted to a user in this organization after authenticating. Roles are a human-readable label that identifies the collection of privileges that MongoDB Cloud grants a specific MongoDB Cloud user. These roles can only be organization specific roles.",
            "items": {
              "enum": [
                "ORG_OWNER",
                "ORG_MEMBER",
                "ORG_GROUP_CREATOR",
                "ORG_BILLING_ADMIN",
                "ORG_BILLING_READ_ONLY",
                "ORG_STREAM_PROCESSING_ADMIN",
                "ORG_READ_ONLY"
              ],
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "roleMappings": {
            "description": "Role mappings that are configured in this organization.",
            "items": {
              "$ref": "#/components/schemas/AuthFederationRoleMapping"
            },
            "type": "array",
            "uniqueItems": true
          },
          "userConflicts": {
            "description": "List that contains the users who have an email address that doesn't match any domain on the allowed list.",
            "items": {
              "$ref": "#/components/schemas/FederatedUser"
            },
            "type": "array"
          }
        },
        "required": [
          "domainRestrictionEnabled",
          "orgId"
        ],
        "type": "object"
      },
      "ConnectedOrgConfigRoleAssignment": {
        "properties": {
          "groupId": {
            "description": "Unique 24-hexadecimal digit string that identifies the project to which this role belongs. Each element within **roleAssignments** can have a value for **groupId** or **orgId**, but not both.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "type": "string"
          },
          "orgId": {
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which this role belongs. Each element within **roleAssignments** can have a value for **orgId** or **groupId**, but not both.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "type": "string"
          },
          "role": {
            "description": "Human-readable label that identifies the collection of privileges that MongoDB Cloud grants a specific API key, MongoDB Cloud user, or MongoDB Cloud team. These roles include organization- and project-level roles.",
            "enum": [
              "ORG_OWNER",
              "ORG_MEMBER",
              "ORG_GROUP_CREATOR",
              "ORG_BILLING_ADMIN",
              "ORG_BILLING_READ_ONLY",
              "ORG_STREAM_PROCESSING_ADMIN",
              "ORG_READ_ONLY",
              "GROUP_BACKUP_MANAGER",
              "GROUP_CLUSTER_MANAGER",
              "GROUP_DATA_ACCESS_ADMIN",
              "GROUP_DATA_ACCESS_READ_ONLY",
              "GROUP_DATA_ACCESS_READ_WRITE",
              "GROUP_DATABASE_ACCESS_ADMIN",
              "GROUP_OBSERVABILITY_VIEWER",
              "GROUP_OWNER",
              "GROUP_READ_ONLY",
              "GROUP_SEARCH_INDEX_EDITOR",
              "GROUP_STREAM_PROCESSING_OWNER"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateAWSEndpointRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateEndpointRequest"
          },
          {
            "properties": {
              "id": {
                "description": "Unique string that identifies the private endpoint's network interface that someone added to this private endpoint service.",
                "example": "vpce-3bf78b0ddee411ba1",
                "pattern": "^vpce-[0-9a-f]{17}$",
                "type": "string",
                "writeOnly": true
              }
            },
            "type": "object"
          }
        ],
        "description": "Group of Private Endpoint settings.",
        "required": [
          "id"
        ],
        "title": "AWS",
        "type": "object"
      },
      "CreateAzureEndpointRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateEndpointRequest"
          },
          {
            "properties": {
              "id": {
                "description": "Unique string that identifies the private endpoint's network interface that someone added to this private endpoint service.",
                "example": "/subscriptions/cba6d9c6-1d3f-3c11-03cb-c705d895e636/resourcegroups/qrRTqi4TSN)7yB5YLRjVDveH3.yLzpNR7Br0D3-SGrU3j0.0/providers/Microsoft.Network/privateEndpoints/pVP(vb(XeckpxtXzP0NaOsDjeWDbOK)DX8A2j2E_vBYL2.GEYIdln",
                "type": "string",
                "writeOnly": true
              },
              "privateEndpointIPAddress": {
                "description": "IPv4 address of the private endpoint in your Azure VNet that someone added to this private endpoint service.",
                "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "description": "Group of Private Endpoint settings.",
        "required": [
          "id",
          "privateEndpointIPAddress"
        ],
        "title": "AZURE",
        "type": "object"
      },
      "CreateDataProcessRegionView": {
        "description": "Settings to configure the region where you wish to store your archived data.",
        "discriminator": {
          "mapping": {
            "AWS": "#/components/schemas/AWSCreateDataProcessRegionView",
            "AZURE": "#/components/schemas/AzureCreateDataProcessRegionView",
            "GCP": "#/components/schemas/GCPCreateDataProcessRegionView"
          },
          "propertyName": "cloudProvider"
        },
        "properties": {
          "cloudProvider": {
            "description": "Human-readable label that identifies the Cloud service provider where you wish to store your archived data. **AZURE** or **GCP** may be selected only if it is the Cloud service provider for the cluster and no archives for any other cloud provider have been created for the cluster.",
            "enum": [
              "AWS",
              "AZURE",
              "GCP"
            ],
            "type": "string"
          }
        },
        "type": "object",
        "writeOnly": true
      },
      "CreateEndpointRequest": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/CreateAWSEndpointRequest"
          },
          {
            "$ref": "#/components/schemas/CreateAzureEndpointRequest"
          },
          {
            "$ref": "#/components/schemas/CreateGCPEndpointGroupRequest"
          }
        ],
        "type": "object"
      },
      "CreateGCPEndpointGroupRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateEndpointRequest"
          },
          {
            "properties": {
              "endpointGroupName": {
                "description": "Human-readable label that identifies a set of endpoints.",
                "type": "string",
                "writeOnly": true
              },
              "endpoints": {
                "description": "List of individual private endpoints that comprise this endpoint group.",
                "externalDocs": {
                  "description": "Google Cloud Forwarding Rule Concepts",
                  "url": "https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts"
                },
                "items": {
                  "$ref": "#/components/schemas/CreateGCPForwardingRuleRequest"
                },
                "type": "array"
              },
              "gcpProjectId": {
                "description": "Unique string that identifies the Google Cloud project in which you created the endpoints.",
                "example": "p-fdeeb3e43b8e733e5ab627b1",
                "externalDocs": {
                  "description": "Google Cloud Creating and Managing Projects",
                  "url": "https://cloud.google.com/resource-manager/docs/creating-managing-projects"
                },
                "pattern": "^p-[0-9a-z]{24}$",
                "type": "string",
                "writeOnly": true
              }
            },
            "type": "object"
          }
        ],
        "description": "Group of Private Endpoint settings.",
        "required": [
          "endpointGroupName",
          "gcpProjectId"
        ],
        "title": "GCP",
        "type": "object"
      },
      "CreateGCPForwardingRuleRequest": {
        "properties": {
          "endpointName": {
            "description": "Human-readable label that identifies the Google Cloud consumer forwarding rule that you created.",
            "externalDocs": {
              "description": "Google Cloud Forwarding Rule Concepts",
              "url": "https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts"
            },
            "type": "string",
            "writeOnly": true
          },
          "ipAddress": {
            "description": "One Private Internet Protocol version 4 (IPv4) address to which this Google Cloud consumer forwarding rule resolves.",
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "writeOnly": true
          }
        },
        "title": "GCP Forwarding Rules",
        "type": "object"
      },
      "CriteriaView": {
        "description": "Rules by which MongoDB Cloud archives data.\n\nUse the **criteria.type** field to choose how MongoDB Cloud selects data to archive. Choose data using the age of the data or a MongoDB query.\n**\"criteria.type\": \"DATE\"** selects documents to archive based on a date.\n**\"criteria.type\": \"CUSTOM\"** selects documents to archive based on a custom JSON query. MongoDB Cloud doesn't support **\"criteria.type\": \"CUSTOM\"** when **\"collectionType\": \"TIMESERIES\"**.",
        "discriminator": {
          "mapping": {
            "CUSTOM": "#/components/schemas/CustomCriteriaView",
            "DATE": "#/components/schemas/DateCriteriaView"
          },
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "description": "Means by which MongoDB Cloud selects data to archive. Data can be chosen using the age of the data or a MongoDB query.\n**DATE** selects documents to archive based on a date.\n**CUSTOM** selects documents to archive based on a custom JSON query. MongoDB Cloud doesn't support **CUSTOM** when `\"collectionType\": \"TIMESERIES\"`.",
            "enum": [
              "DATE",
              "CUSTOM"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomCriteriaView": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CriteriaView"
          },
          {
            "properties": {
              "query": {
                "description": "MongoDB find query that selects documents to archive. The specified query follows the syntax of the `db.collection.find(query)` command. This query can't use the empty document (`{}`) to return all documents. Set this parameter when **\"criteria.type\" : \"CUSTOM\"**.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "description": "Custom archival criteria.",
        "required": [
          "query"
        ],
        "title": "Archival Criteria",
        "type": "object"
      },
      "DBRoleToExecute": {
        "description": "The name of a Built in or Custom DB Role to connect to an Atlas Cluster.",
        "properties": {
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "role": {
            "description": "The name of the role to use. Can be a built in role or a custom role.",
            "type": "string"
          },
          "type": {
            "description": "Type of the DB role. Can be either BuiltIn or Custom.",
            "enum": [
              "BUILT_IN",
              "CUSTOM"
            ],
            "title": "DB Role Type",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DLSIngestionSink": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IngestionSink"
          },
          {
            "properties": {
              "metadataProvider": {
                "description": "Target cloud provider for this Data Lake Pipeline.",
                "enum": [
                  "AWS"
                ],
                "type": "string"
              },
              "metadataRegion": {
                "description": "Target cloud provider region for this Data Lake Pipeline.",
                "externalDocs": {
                  "description": "Supported cloud provider regions",
                  "url": "https://www.mongodb.com/docs/datalake/limitations"
                },
                "type": "string"
              },
              "partitionFields": {
                "description": "Ordered fields used to physically organize data in the destination.",
                "items": {
                  "$ref": "#/components/schemas/DataLakePipelinesPartitionField"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ],
        "description": "Atlas Data Lake Storage as the destination for a Data Lake Pipeline.",
        "title": "DLS Ingestion Destination",
        "type": "object"
      },
      "DailyScheduleView": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OnlineArchiveSchedule"
          },
          {
            "properties": {
              "endHour": {
                "description": "Hour of the day when the scheduled window to run one online archive ends.",
                "format": "int32",
                "maximum": 23,
                "minimum": 0,
                "type": "integer"
              },
              "endMinute": {
                "description": "Minute of the hour when the scheduled window to run one online archive ends.",
                "format": "int32",
                "maximum": 59,
                "minimum": 0,
                "type": "integer"
              },
              "startHour": {
                "description": "Hour of the day when the when the scheduled window to run one online archive starts.",
                "format": "int32",
                "maximum": 23,
                "minimum": 0,
                "type": "integer"
              },
              "startMinute": {
                "description": "Minute of the hour when the scheduled window to run one online archive starts.",
                "format": "int32",
                "maximum": 59,
                "minimum": 0,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ],
        "required": [
          "type"
        ],
        "type": "object"
      },
      "DataExplorerEvent": {
        "description": "Data Explorer event tracks different Data Explorer operations.",
        "properties": {
          "apiKeyId": {
            "description": "Unique 24-hexadecimal digit string that identifies the API Key that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "example": "32b6e34b3d91647abb20e7b8",
            "externalDocs": {
              "description": "Create Programmatic API Key",
              "url": "https://dochub.mongodb.org/core/atlas-create-prog-api-key"
            },
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "created": {
            "description": "Date and time when this event occurred. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "externalDocs": {
              "description": "ISO 8601",
              "url": "https://en.wikipedia.org/wiki/ISO_8601"
            },
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/DataExplorerEventTypeView"
          },
          "groupId": {
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "isGlobalAdmin": {
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "type": "boolean"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "orgId": {
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "publicKey": {
            "description": "Public part of the API key that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "externalDocs": {
              "url": "https://dochub.mongodb.org/core/atlas-create-prog-api-key"
            },
            "readOnly": true,
            "type": "string"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "example": "216.172.40.186",
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "readOnly": true,
            "type": "string"
          },
          "sessionId": {
            "description": "Unique 24-hexadecimal digit string that identifies the Data Explorer session associated with the event.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "userId": {
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "username": {
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "created",
          "eventTypeName",
          "id"
        ],
        "title": "Data Explorer Events",
        "type": "object"
      },
      "DataExplorerEventTypeView": {
        "description": "Unique identifier of event type.",
        "enum": [
          "DATA_EXPLORER_SESSION_CREATED"
        ],
        "example": "DATA_EXPLORER_SESSION_CREATED",
        "title": "Data Explorer Event Types",
        "type": "string"
      },
      "DataLakeAtlasStoreInstance": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataLakeStoreSettings"
          },
          {
            "properties": {
              "clusterName": {
                "description": "Human-readable label of the MongoDB Cloud cluster on which the store is based.",
                "type": "string"
              },
              "projectId": {
                "description": "Unique 24-hexadecimal digit string that identifies the project.",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^([a-f0-9]{24})$",
                "readOnly": true,
                "type": "string"
              },
              "readConcern": {
                "$ref": "#/components/schemas/DataLakeAtlasStoreReadConcern"
              },
              "readPreference": {
                "$ref": "#/components/schemas/DataLakeAtlasStoreReadPreference"
              }
            },
            "type": "object"
          }
        ],
        "type": "object"
      },
      "DataLakeAtlasStoreReadConcern": {
        "description": "MongoDB Cloud cluster read concern, which determines the consistency and isolation properties of the data read from an Atlas cluster.",
        "properties": {
          "level": {
            "description": "Read Concern level that specifies the consistency and availability of the data read.",
            "enum": [
              "LOCAL",
              "MAJORITY",
              "LINEARIZABLE",
              "SNAPSHOT",
              "AVAILABLE"
            ],
            "externalDocs": {
              "description": "Read Concern Level",
              "url": "https://www.mongodb.com/docs/manual/reference/read-concern/#read-concern-levels"
            },
            "type": "string"
          }
        },
        "type": "object"
      },
      "DataLakeAtlasStoreReadPreference": {
        "description": "MongoDB Cloud cluster read preference, which describes how to route read requests to the cluster.",
        "properties": {
          "maxStalenessSeconds": {
            "description": "Maximum replication lag, or **staleness**, for reads from secondaries.",
            "format": "int32",
            "type": "integer"
          },
          "mode": {
            "description": "Read preference mode that specifies to which replica set member to route the read requests.",
            "enum": [
              "primary",
              "primaryPreferred",
              "secondary",
              "secondaryPreferred",
              "nearest"
            ],
            "externalDocs": {
              "description": "Read Preference Modes",
              "url": "https://docs.mongodb.com/manual/core/read-preference/#read-preference-modes"
            },
            "type": "string"
          },
          "tagSets": {
            "description": "List that contains tag sets or tag specification documents. If specified, Atlas Data Lake routes read requests to replica set member or members that are associated with the specified tags.",
            "externalDocs": {
              "description": "Read Preference Tag Set Lists",
              "url": "https://docs.mongodb.com/manual/core/read-preference-tags/"
            },
            "items": {
              "items": {
                "$ref": "#/components/schemas/DataLakeAtlasStoreReadPreferenceTag"
              },
              "type": "array"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DataLakeAtlasStoreReadPreferenceTag": {
        "properties": {
          "name": {
            "description": "Human-readable label of the tag.",
            "type": "string"
          },
          "value": {
            "description": "Value of the tag.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DataLakeAzureBlobStore": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataLakeStoreSettings"
          },
          {
            "properties": {
              "containerName": {
                "description": "Human-readable label that identifies the name of the container.",
                "type": "string"
              },
              "delimiter": {
                "description": "Delimiter.",
                "type": "string"
              },
              "prefix": {
                "description": "Prefix.",
                "type": "string"
              },
              "public": {
                "default": false,
                "description": "Flag that indicates whether the blob store is public. If set to `true`, MongoDB Cloud doesn't use the configured Azure service principal to access the blob store. If set to `false`, the configured Azure service principal must include permissions to access the blob store.",
                "type": "boolean"
              },
              "region": {
                "description": "Microsoft Azure Regions.",
                "enum": [
                  "US_CENTRAL",
                  "US_EAST",
                  "US_EAST_2",
                  "US_NORTH_CENTRAL",
                  "US_WEST",
                  "US_SOUTH_CENTRAL",
                  "EUROPE_NORTH",
                  "EUROPE_WEST",
                  "US_WEST_CENTRAL",
                  "US_WEST_2",
                  "US_WEST_3",
                  "CANADA_EAST",
                  "CANADA_CENTRAL",
                  "BRAZIL_SOUTH",
                  "BRAZIL_SOUTHEAST",
                  "AUSTRALIA_CENTRAL",
                  "AUSTRALIA_CENTRAL_2",
                  "AUSTRALIA_EAST",
                  "AUSTRALIA_SOUTH_EAST",
                  "GERMANY_CENTRAL",
                  "GERMANY_NORTH_EAST",
                  "GERMANY_WEST_CENTRAL",
                  "GERMANY_NORTH",
                  "SWEDEN_CENTRAL",
                  "SWEDEN_SOUTH",
                  "SWITZERLAND_NORTH",
                  "SWITZERLAND_WEST",
                  "UK_SOUTH",
                  "UK_WEST",
                  "NORWAY_EAST",
                  "NORWAY_WEST",
                  "INDIA_CENTRAL",
                  "INDIA_SOUTH",
                  "INDIA_WEST",
                  "CHINA_EAST",
                  "CHINA_NORTH",
                  "ASIA_EAST",
                  "JAPAN_EAST",
                  "JAPAN_WEST",
                  "ASIA_SOUTH_EAST",
                  "KOREA_CENTRAL",
                  "KOREA_SOUTH",
                  "FRANCE_CENTRAL",
                  "FRANCE_SOUTH",
                  "SOUTH_AFRICA_NORTH",
                  "SOUTH_AFRICA_WEST",
                  "UAE_CENTRAL",
                  "UAE_NORTH",
                  "QATAR_CENTRAL"
                ],
                "title": "Azure Regions",
                "type": "string"
              },
              "replacementDelimiter": {
                "description": "Replacement Delimiter.",
                "type": "string"
              },
              "serviceURL": {
                "description": "Service URL.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "type": "object"
      },
      "DataLakeDLSAWSStore": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataLakeStoreSettings"
          },
          {
            "properties": {
              "region": {
                "description": "Physical location where MongoDB Cloud deploys your AWS-hosted MongoDB cluster nodes. The region you choose can affect network latency for clients accessing your databases. When MongoDB Cloud deploys a dedicated cluster, it checks if a VPC or VPC connection exists for that provider and region. If not, MongoDB Cloud creates them as part of the deployment. MongoDB Cloud assigns the VPC a CIDR block. To limit a new VPC peering connection to one CIDR block and region, create the connection first. Deploy the cluster after the connection starts.",
                "enum": [
                  "US_GOV_WEST_1",
                  "US_GOV_EAST_1",
                  "US_EAST_1",
                  "US_EAST_2",
                  "US_WEST_1",
                  "US_WEST_2",
                  "CA_CENTRAL_1",
                  "EU_NORTH_1",
                  "EU_WEST_1",
                  "EU_WEST_2",
                  "EU_WEST_3",
                  "EU_CENTRAL_1",
                  "EU_CENTRAL_2",
                  "AP_EAST_1",
                  "AP_NORTHEAST_1",
                  "AP_NORTHEAST_2",
                  "AP_NORTHEAST_3",
                  "AP_SOUTHEAST_1",
                  "AP_SOUTHEAST_2",
                  "AP_SOUTHEAST_3",
                  "AP_SOUTHEAST_4",
                  "AP_SOUTH_1",
                  "AP_SOUTH_2",
                  "SA_EAST_1",
                  "CN_NORTH_1",
                  "CN_NORTHWEST_1",
                  "ME_SOUTH_1",
                  "ME_CENTRAL_1",
                  "AF_SOUTH_1",
                  "EU_SOUTH_1",
                  "EU_SOUTH_2",
                  "IL_CENTRAL_1",
                  "CA_WEST_1",
                  "GLOBAL"
                ],
                "title": "AWS Regions",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "type": "object"
      },
      "DataLakeDLSAzureStore": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataLakeStoreSettings"
          },
          {
            "properties": {
              "region": {
                "description": "Microsoft Azure Regions.",
                "enum": [
                  "US_CENTRAL",
                  "US_EAST",
                  "US_EAST_2",
                  "US_NORTH_CENTRAL",
                  "US_WEST",
                  "US_SOUTH_CENTRAL",
                  "EUROPE_NORTH",
                  "EUROPE_WEST",
                  "US_WEST_CENTRAL",
                  "US_WEST_2",
                  "US_WEST_3",
                  "CANADA_EAST",
                  "CANADA_CENTRAL",
                  "BRAZIL_SOUTH",
                  "BRAZIL_SOUTHEAST",
                  "AUSTRALIA_CENTRAL",
                  "AUSTRALIA_CENTRAL_2",
                  "AUSTRALIA_EAST",
                  "AUSTRALIA_SOUTH_EAST",
                  "GERMANY_CENTRAL",
                  "GERMANY_NORTH_EAST",
                  "GERMANY_WEST_CENTRAL",
                  "GERMANY_NORTH",
                  "SWEDEN_CENTRAL",
                  "SWEDEN_SOUTH",
                  "SWITZERLAND_NORTH",
                  "SWITZERLAND_WEST",
                  "UK_SOUTH",
                  "UK_WEST",
                  "NORWAY_EAST",
                  "NORWAY_WEST",
                  "INDIA_CENTRAL",
                  "INDIA_SOUTH",
                  "INDIA_WEST",
                  "CHINA_EAST",
                  "CHINA_NORTH",
                  "ASIA_EAST",
                  "JAPAN_EAST",
                  "JAPAN_WEST",
                  "ASIA_SOUTH_EAST",
                  "KOREA_CENTRAL",
                  "KOREA_SOUTH",
                  "FRANCE_CENTRAL",
                  "FRANCE_SOUTH",
                  "SOUTH_AFRICA_NORTH",
                  "SOUTH_AFRICA_WEST",
                  "UAE_CENTRAL",
                  "UAE_NORTH",
                  "QATAR_CENTRAL"
                ],
                "title": "Azure Regions",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "type": "object"
      },
      "DataLakeDLSGCPStore": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataLakeStoreSettings"
          },
          {
            "properties": {
              "region": {
                "description": "Google Cloud Platform Regions.",
                "enum": [
                  "ASIA_EAST_2",
                  "ASIA_NORTHEAST_2",
                  "ASIA_NORTHEAST_3",
                  "ASIA_SOUTH_1",
                  "ASIA_SOUTH_2",
                  "ASIA_SOUTHEAST_2",
                  "AUSTRALIA_SOUTHEAST_1",
                  "AUSTRALIA_SOUTHEAST_2",
                  "CENTRAL_US",
                  "EASTERN_ASIA_PACIFIC",
                  "EASTERN_US",
                  "EUROPE_CENTRAL_2",
                  "EUROPE_NORTH_1",
                  "EUROPE_WEST_2",
                  "EUROPE_WEST_3",
                  "EUROPE_WEST_4",
                  "EUROPE_WEST_6",
                  "EUROPE_WEST_10",
                  "EUROPE_WEST_12",
                  "MIDDLE_EAST_CENTRAL_1",
                  "MIDDLE_EAST_CENTRAL_2",
                  "MIDDLE_EAST_WEST_1",
                  "NORTH_AMERICA_NORTHEAST_1",
                  "NORTH_AMERICA_NORTHEAST_2",
                  "NORTHEASTERN_ASIA_PACIFIC",
                  "SOUTH_AMERICA_EAST_1",
                  "SOUTH_AMERICA_WEST_1",
                  "SOUTHEASTERN_ASIA_PACIFIC",
                  "US_EAST_4",
                  "US_EAST_5",
                  "US_WEST_2",
                  "US_WEST_3",
                  "US_WEST_4",
                  "US_SOUTH_1",
                  "WESTERN_EUROPE",
                  "WESTERN_US"
                ],
                "title": "GCP Regions",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "type": "object"
      },
      "DataLakeGoogleCloudStorageStore": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataLakeStoreSettings"
          },
          {
            "properties": {
              "bucket": {
                "description": "Human-readable label that identifies the Google Cloud Storage bucket.",
                "type": "string"
              },
              "delimiter": {
                "description": "Delimiter.",
                "type": "string"
              },
              "prefix": {
                "description": "Prefix.",
                "type": "string"
              },
              "public": {
                "default": false,
                "description": "Flag that indicates whether the bucket is public. If set to `true`, MongoDB Cloud doesn't use the configured GCP service account to access the bucket. If set to `false`, the configured GCP service acccount must include permissions to access the bucket.",
                "type": "boolean"
              },
              "region": {
                "description": "Google Cloud Platform Regions.",
                "enum": [
                  "ASIA_EAST_2",
                  "ASIA_NORTHEAST_2",
                  "ASIA_NORTHEAST_3",
                  "ASIA_SOUTH_1",
                  "ASIA_SOUTH_2",
                  "ASIA_SOUTHEAST_2",
                  "AUSTRALIA_SOUTHEAST_1",
                  "AUSTRALIA_SOUTHEAST_2",
                  "CENTRAL_US",
                  "EASTERN_ASIA_PACIFIC",
                  "EASTERN_US",
                  "EUROPE_CENTRAL_2",
                  "EUROPE_NORTH_1",
                  "EUROPE_WEST_2",
                  "EUROPE_WEST_3",
                  "EUROPE_WEST_4",
                  "EUROPE_WEST_6",
                  "EUROPE_WEST_10",
                  "EUROPE_WEST_12",
                  "MIDDLE_EAST_CENTRAL_1",
                  "MIDDLE_EAST_CENTRAL_2",
                  "MIDDLE_EAST_WEST_1",
                  "NORTH_AMERICA_NORTHEAST_1",
                  "NORTH_AMERICA_NORTHEAST_2",
                  "NORTHEASTERN_ASIA_PACIFIC",
                  "SOUTH_AMERICA_EAST_1",
                  "SOUTH_AMERICA_WEST_1",
                  "SOUTHEASTERN_ASIA_PACIFIC",
                  "US_EAST_4",
                  "US_EAST_5",
                  "US_WEST_2",
                  "US_WEST_3",
                  "US_WEST_4",
                  "US_SOUTH_1",
                  "WESTERN_EUROPE",
                  "WESTERN_US"
                ],
                "title": "GCP Regions",
                "type": "string"
              },
              "replacementDelimiter": {
                "description": "Replacement Delimiter.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "type": "object"
      },
      "DataLakeHTTPStore": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataLakeStoreSettings"
          },
          {
            "properties": {
              "allowInsecure": {
                "default": false,
                "description": "Flag that validates the scheme in the specified URLs. If `true`, allows insecure `HTTP` scheme, doesn't verify the server's certificate chain and hostname, and accepts any certificate with any hostname presented by the server. If `false`, allows secure `HTTPS` scheme only.",
                "type": "boolean"
              },
              "defaultFormat": {
                "description": "Default format that Data Lake assumes if it encounters a file without an extension while searching the `storeName`. If omitted, Data Lake attempts to detect the file type by processing a few bytes of the file. The specified format only applies to the URLs specified in the **databases.[n].collections.[n].dataSources** object.",
                "type": "string"
              },
              "urls": {
                "description": "Comma-separated list of publicly accessible HTTP URLs where data is stored. You can't specify URLs that require authentication.",
                "items": {
                  "description": "Comma-separated list of publicly accessible HTTP URLs where data is stored. You can't specify URLs that require authentication.",
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ],
        "type": "object"
      },
      "DataLakePipelinesPartitionField": {
        "description": "Partition Field in the Data Lake Storage provider for a Data Lake Pipeline.",
        "properties": {
          "fieldName": {
            "description": "Human-readable label that identifies the field name used to partition data.",
            "maxLength": 700,
            "type": "string"
          },
          "order": {
            "default": 0,
            "description": "Sequence in which MongoDB Cloud slices the collection data to create partitions. The resource expresses this sequence starting with zero.",
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "fieldName",
          "order"
        ],
        "title": "Partition Field",
        "type": "object"
      },
      "DataLakeS3StoreSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataLakeStoreSettings"
          },
          {
            "properties": {
              "additionalStorageClasses": {
                "description": "Collection of AWS S3 [storage classes](https://aws.amazon.com/s3/storage-classes/). Atlas Data Lake includes the files in these storage classes in the query results.",
                "items": {
                  "description": "AWS S3 [storage class](https://aws.amazon.com/s3/storage-classes/) where the files to include in the results are stored.",
                  "enum": [
                    "STANDARD",
                    "INTELLIGENT_TIERING",
                    "STANDARD_IA"
                  ],
                  "type": "string"
                },
                "type": "array"
              },
              "bucket": {
                "description": "Human-readable label that identifies the AWS S3 bucket. This label must exactly match the name of an S3 bucket that the data lake can access with the configured AWS Identity and Access Management (IAM) credentials.",
                "type": "string"
              },
              "delimiter": {
                "description": "The delimiter that separates **databases.[n].collections.[n].dataSources.[n].path** segments in the data store. MongoDB Cloud uses the delimiter to efficiently traverse S3 buckets with a hierarchical directory structure. You can specify any character supported by the S3 object keys as the delimiter. For example, you can specify an underscore (_) or a plus sign (+) or multiple characters, such as double underscores (__) as the delimiter. If omitted, defaults to `/`.",
                "type": "string"
              },
              "includeTags": {
                "default": false,
                "description": "Flag that indicates whether to use S3 tags on the files in the given path as additional partition attributes. If set to `true`, data lake adds the S3 tags as additional partition attributes and adds new top-level BSON elements associating each tag to each document.",
                "type": "boolean"
              },
              "prefix": {
                "description": "Prefix that MongoDB Cloud applies when searching for files in the S3 bucket. The data store prepends the value of prefix to the **databases.[n].collections.[n].dataSources.[n].path** to create the full path for files to ingest. If omitted, MongoDB Cloud searches all files from the root of the S3 bucket.",
                "type": "string"
              },
              "public": {
                "default": false,
                "description": "Flag that indicates whether the bucket is public. If set to `true`, MongoDB Cloud doesn't use the configured AWS Identity and Access Management (IAM) role to access the S3 bucket. If set to `false`, the configured AWS IAM role must include permissions to access the S3 bucket.",
                "type": "boolean"
              },
              "region": {
                "description": "Physical location where MongoDB Cloud deploys your AWS-hosted MongoDB cluster nodes. The region you choose can affect network latency for clients accessing your databases. When MongoDB Cloud deploys a dedicated cluster, it checks if a VPC or VPC connection exists for that provider and region. If not, MongoDB Cloud creates them as part of the deployment. MongoDB Cloud assigns the VPC a CIDR block. To limit a new VPC peering connection to one CIDR block and region, create the connection first. Deploy the cluster after the connection starts.",
                "enum": [
                  "US_GOV_WEST_1",
                  "US_GOV_EAST_1",
                  "US_EAST_1",
                  "US_EAST_2",
                  "US_WEST_1",
                  "US_WEST_2",
                  "CA_CENTRAL_1",
                  "EU_NORTH_1",
                  "EU_WEST_1",
                  "EU_WEST_2",
                  "EU_WEST_3",
                  "EU_CENTRAL_1",
                  "EU_CENTRAL_2",
                  "AP_EAST_1",
                  "AP_NORTHEAST_1",
                  "AP_NORTHEAST_2",
                  "AP_NORTHEAST_3",
                  "AP_SOUTHEAST_1",
                  "AP_SOUTHEAST_2",
                  "AP_SOUTHEAST_3",
                  "AP_SOUTHEAST_4",
                  "AP_SOUTH_1",
                  "AP_SOUTH_2",
                  "SA_EAST_1",
                  "CN_NORTH_1",
                  "CN_NORTHWEST_1",
                  "ME_SOUTH_1",
                  "ME_CENTRAL_1",
                  "AF_SOUTH_1",
                  "EU_SOUTH_1",
                  "EU_SOUTH_2",
                  "IL_CENTRAL_1",
                  "CA_WEST_1",
                  "GLOBAL"
                ],
                "title": "AWS Regions",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "type": "object"
      },
      "DataLakeStoreSettings": {
        "description": "Group of settings that define where the data is stored.",
        "discriminator": {
          "mapping": {
            "atlas": "#/components/schemas/DataLakeAtlasStoreInstance",
            "azure": "#/components/schemas/DataLakeAzureBlobStore",
            "dls:aws": "#/components/schemas/DataLakeDLSAWSStore",
            "dls:azure": "#/components/schemas/DataLakeDLSAzureStore",
            "dls:gcp": "#/components/schemas/DataLakeDLSGCPStore",
            "gcs": "#/components/schemas/DataLakeGoogleCloudStorageStore",
            "http": "#/components/schemas/DataLakeHTTPStore",
            "s3": "#/components/schemas/DataLakeS3StoreSettings"
          },
          "propertyName": "provider"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/DataLakeS3StoreSettings"
          },
          {
            "$ref": "#/components/schemas/DataLakeDLSAWSStore"
          },
          {
            "$ref": "#/components/schemas/DataLakeDLSAzureStore"
          },
          {
            "$ref": "#/components/schemas/DataLakeDLSGCPStore"
          },
          {
            "$ref": "#/components/schemas/DataLakeAtlasStoreInstance"
          },
          {
            "$ref": "#/components/schemas/DataLakeHTTPStore"
          },
          {
            "$ref": "#/components/schemas/DataLakeAzureBlobStore"
          },
          {
            "$ref": "#/components/schemas/DataLakeGoogleCloudStorageStore"
          }
        ],
        "properties": {
          "name": {
            "description": "Human-readable label that identifies the data store. The **databases.[n].collections.[n].dataSources.[n].storeName** field references this values as part of the mapping configuration. To use MongoDB Cloud as a data store, the data lake requires a serverless instance or an `M10` or higher cluster.",
            "type": "string"
          },
          "provider": {
            "type": "string"
          }
        },
        "required": [
          "provider"
        ],
        "type": "object"
      },
      "DataMetricEventView": {
        "properties": {
          "apiKeyId": {
            "description": "Unique 24-hexadecimal digit string that identifies the API Key that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "example": "32b6e34b3d91647abb20e7b8",
            "externalDocs": {
              "description": "Create Programmatic API Key",
              "url": "https://dochub.mongodb.org/core/atlas-create-prog-api-key"
            },
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "created": {
            "description": "Date and time when this event occurred. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "externalDocs": {
              "description": "ISO 8601",
              "url": "https://en.wikipedia.org/wiki/ISO_8601"
            },
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "currentValue": {
            "$ref": "#/components/schemas/DataMetricValueView"
          },
          "deskLocation": {
            "description": "Desk location of MongoDB employee associated with the event.",
            "readOnly": true,
            "type": "string"
          },
          "employeeIdentifier": {
            "description": "Identifier of MongoDB employee associated with the event.",
            "readOnly": true,
            "type": "string"
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/HostMetricEventTypeView"
          },
          "groupId": {
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "isGlobalAdmin": {
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "type": "boolean"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "metricName": {
            "description": "Human-readable label of the metric associated with the **alertId**. This field may change type of **currentValue** field.",
            "readOnly": true,
            "type": "string"
          },
          "orgId": {
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "port": {
            "description": "IANA port on which the MongoDB process listens for requests.",
            "example": 27017,
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "publicKey": {
            "description": "Public part of the API key that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "externalDocs": {
              "url": "https://dochub.mongodb.org/core/atlas-create-prog-api-key"
            },
            "readOnly": true,
            "type": "string"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "example": "216.172.40.186",
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "readOnly": true,
            "type": "string"
          },
          "replicaSetName": {
            "description": "Human-readable label of the replica set associated with the event.",
            "example": "event-replica-set",
            "readOnly": true,
            "type": "string"
          },
          "shardName": {
            "description": "Human-readable label of the shard associated with the event.",
            "example": "event-sh-01",
            "readOnly": true,
            "type": "string"
          },
          "userId": {
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "username": {
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "created",
          "eventTypeName",
          "id"
        ],
        "type": "object"
      },
      "DataMetricUnits": {
        "description": "Element used to express the quantity. This can be an element of time, storage capacity, and the like.",
        "enum": [
          "BITS",
          "KILOBITS",
          "MEGABITS",
          "GIGABITS",
          "BYTES",
          "KILOBYTES",
          "MEGABYTES",
          "GIGABYTES",
          "TERABYTES",
          "PETABYTES"
        ],
        "example": "BYTES",
        "title": "Data Metric Units",
        "type": "string"
      },
      "DataMetricValueView": {
        "description": "Measurement of the **metricName** recorded at the time of the event.",
        "properties": {
          "number": {
            "description": "Amount of the **metricName** recorded at the time of the event. This value triggered the alert.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "units": {
            "$ref": "#/components/schemas/DataMetricUnits"
          }
        },
        "readOnly": true,
        "title": "Data Metric Value",
        "type": "object"
      },
      "DataProcessRegionView": {
        "description": "Settings to configure the region where you wish to store your archived data.",
        "discriminator": {
          "mapping": {
            "AWS": "#/components/schemas/AWSDataProcessRegionView",
            "AZURE": "#/components/schemas/AzureDataProcessRegionView",
            "GCP": "#/components/schemas/GCPDataProcessRegionView"
          },
          "propertyName": "cloudProvider"
        },
        "properties": {
          "cloudProvider": {
            "description": "Human-readable label that identifies the Cloud service provider where you store your archived data.",
            "enum": [
              "AWS",
              "AZURE",
              "GCP"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "readOnly": true,
        "type": "object"
      },
      "DateCriteriaView": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CriteriaView"
          },
          {
            "properties": {
              "dateField": {
                "description": "Indexed database parameter that stores the date that determines when data moves to the online archive. MongoDB Cloud archives the data when the current date exceeds the date in this database parameter plus the number of days specified through the **expireAfterDays** parameter. Set this parameter when you set `\"criteria.type\" : \"DATE\"`.",
                "type": "string"
              },
              "dateFormat": {
                "default": "ISODATE",
                "description": "Syntax used to write the date after which data moves to the online archive. Date can be expressed as ISO 8601, Epoch timestamps, or ObjectId. The Epoch timestamp can be expressed as nanoseconds, milliseconds, or seconds. Set this parameter when **\"criteria.type\" : \"DATE\"**.\nYou must set **\"criteria.type\" : \"DATE\"** if **\"collectionType\": \"TIMESERIES\"**.",
                "enum": [
                  "ISODATE",
                  "EPOCH_SECONDS",
                  "EPOCH_MILLIS",
                  "EPOCH_NANOSECONDS",
                  "OBJECT_ID"
                ],
                "type": "string"
              },
              "expireAfterDays": {
                "description": "Number of days after the value in the **criteria.dateField** when MongoDB Cloud archives data in the specified cluster. Set this parameter when you set **\"criteria.type\" : \"DATE\"**.",
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        ],
        "description": "Date-Based archival criteria.",
        "title": "Archival Criteria",
        "type": "object"
      },
      "DedicatedHardwareSpec": {
        "description": "Hardware specifications for read-only nodes in the region. Read-only nodes can never become the primary member, but can enable local reads.If you don't specify this parameter, no read-only nodes are deployed to the region.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/AWSHardwareSpec"
          },
          {
            "$ref": "#/components/schemas/AzureHardwareSpec"
          },
          {
            "$ref": "#/components/schemas/GCPHardwareSpec"
          }
        ],
        "properties": {
          "nodeCount": {
            "description": "Number of nodes of the given type for MongoDB Cloud to deploy to the region.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DedicatedHardwareSpec20240805": {
        "description": "Hardware specifications for read-only nodes in the region. Read-only nodes can never become the primary member, but can enable local reads. If you don't specify this parameter, no read-only nodes are deployed to the region.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/AWSHardwareSpec20240805"
          },
          {
            "$ref": "#/components/schemas/AzureHardwareSpec20240805"
          },
          {
            "$ref": "#/components/schemas/GCPHardwareSpec20240805"
          }
        ],
        "properties": {
          "diskSizeGB": {
            "description": "Storage capacity of instance data volumes expressed in gigabytes. Increase this number to add capacity.\n\n This value must be equal for all shards and node types.\n\n This value is not configurable on M0/M2/M5 clusters.\n\n MongoDB Cloud requires this parameter if you set **replicationSpecs**.\n\n If you specify a disk size below the minimum (10 GB), this parameter defaults to the minimum disk size value. \n\n Storage charge calculations depend on whether you choose the default value or a custom value.\n\n The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require more storage space, consider upgrading your cluster to a higher tier.",
            "externalDocs": {
              "description": "Customize Storage",
              "url": "https://dochub.mongodb.org/core/customize-storage"
            },
            "format": "double",
            "type": "number"
          },
          "nodeCount": {
            "description": "Number of nodes of the given type for MongoDB Cloud to deploy to the region.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DefaultScheduleView": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OnlineArchiveSchedule"
          }
        ],
        "required": [
          "type"
        ],
        "type": "object"
      },
      "DiskBackupReplicaSet": {
        "description": "Details of the replica set snapshot that MongoDB Cloud created.",
        "properties": {
          "cloudProvider": {
            "description": "Human-readable label that identifies the cloud provider that stores this snapshot. The resource returns this parameter when `\"type\": \"replicaSet\"`.",
            "enum": [
              "AWS",
              "AZURE",
              "GCP"
            ],
            "readOnly": true,
            "type": "string"
          },
          "copyRegions": {
            "description": "List that identifies the regions to which MongoDB Cloud copies the snapshot.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "createdAt": {
            "description": "Date and time when MongoDB Cloud took the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Human-readable phrase or sentence that explains the purpose of the snapshot. The resource returns this parameter when `\"status\": \"onDemand\"`.",
            "readOnly": true,
            "type": "string"
          },
          "expiresAt": {
            "description": "Date and time when MongoDB Cloud deletes the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "frequencyType": {
            "description": "Human-readable label that identifies how often this snapshot triggers.",
            "enum": [
              "hourly",
              "daily",
              "weekly",
              "monthly",
              "yearly"
            ],
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Unique 24-hexadecimal digit string that identifies the snapshot.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "masterKeyUUID": {
            "description": "Unique string that identifies the Amazon Web Services (AWS) Key Management Service (KMS) Customer Master Key (CMK) used to encrypt the snapshot. The resource returns this value when `\"encryptionEnabled\" : true`.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "mongodVersion": {
            "description": "Version of the MongoDB host that this snapshot backs up.",
            "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)",
            "readOnly": true,
            "type": "string"
          },
          "policyItems": {
            "description": "List that contains unique identifiers for the policy items.",
            "items": {
              "description": "Unique 24-hexadecimal digit string that identifies one policy item.",
              "example": "32b6e34b3d91647abb20e7b8",
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "replicaSetName": {
            "description": "Human-readable label that identifies the replica set from which MongoDB Cloud took this snapshot. The resource returns this parameter when `\"type\": \"replicaSet\"`.",
            "readOnly": true,
            "type": "string"
          },
          "snapshotType": {
            "description": "Human-readable label that identifies when this snapshot triggers.",
            "enum": [
              "onDemand",
              "scheduled",
              "fallback"
            ],
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "description": "Human-readable label that indicates the stage of the backup process for this snapshot.",
            "enum": [
              "queued",
              "inProgress",
              "completed",
              "failed"
            ],
            "readOnly": true,
            "type": "string"
          },
          "storageSizeBytes": {
            "description": "Number of bytes taken to store the backup at time of snapshot.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "type": {
            "description": "Human-readable label that categorizes the cluster as a replica set or sharded cluster.",
            "enum": [
              "replicaSet",
              "shardedCluster"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "title": "Replica Set Snapshot",
        "type": "object"
      },
      "DiskBackupShardedClusterSnapshot": {
        "description": "Details of the sharded cluster snapshot that MongoDB Cloud created.",
        "properties": {
          "configServerType": {
            "description": "Describes a sharded cluster's config server type.",
            "enum": [
              "EMBEDDED",
              "DEDICATED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "createdAt": {
            "description": "Date and time when MongoDB Cloud took the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Human-readable phrase or sentence that explains the purpose of the snapshot. The resource returns this parameter when `\"status\": \"onDemand\"`.",
            "readOnly": true,
            "type": "string"
          },
          "expiresAt": {
            "description": "Date and time when MongoDB Cloud deletes the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "frequencyType": {
            "description": "Human-readable label that identifies how often this snapshot triggers.",
            "enum": [
              "hourly",
              "daily",
              "weekly",
              "monthly",
              "yearly"
            ],
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Unique 24-hexadecimal digit string that identifies the snapshot.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "masterKeyUUID": {
            "description": "Unique string that identifies the Amazon Web Services (AWS) Key Management Service (KMS) Customer Master Key (CMK) used to encrypt the snapshot. The resource returns this value when `\"encryptionEnabled\" : true`.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "members": {
            "description": "List that includes the snapshots and the cloud provider that stores the snapshots. The resource returns this parameter when `\"type\" : \"SHARDED_CLUSTER\"`.",
            "items": {
              "$ref": "#/components/schemas/DiskBackupShardedClusterSnapshotMember"
            },
            "readOnly": true,
            "type": "array"
          },
          "mongodVersion": {
            "description": "Version of the MongoDB host that this snapshot backs up.",
            "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)",
            "readOnly": true,
            "type": "string"
          },
          "policyItems": {
            "description": "List that contains unique identifiers for the policy items.",
            "items": {
              "description": "Unique 24-hexadecimal digit string that identifies one policy item.",
              "example": "32b6e34b3d91647abb20e7b8",
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "snapshotIds": {
            "description": "List that contains the unique identifiers of the snapshots created for the shards and config host for a sharded cluster. The resource returns this parameter when `\"type\": \"SHARDED_CLUSTER\"`. These identifiers should match the ones specified in the **members[n].id** parameters. This allows you to map a snapshot to its shard or config host name.",
            "items": {
              "description": "Unique 24-hexadecimal digit string that identifies the snapshot for part of the sharded cluster.",
              "example": "32b6e34b3d91647abb20e7b8",
              "pattern": "^([a-f0-9]{24})$",
              "readOnly": true,
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "snapshotType": {
            "description": "Human-readable label that identifies when this snapshot triggers.",
            "enum": [
              "onDemand",
              "scheduled",
              "fallback"
            ],
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "description": "Human-readable label that indicates the stage of the backup process for this snapshot.",
            "enum": [
              "queued",
              "inProgress",
              "completed",
              "failed"
            ],
            "readOnly": true,
            "type": "string"
          },
          "storageSizeBytes": {
            "description": "Number of bytes taken to store the backup at time of snapshot.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "type": {
            "description": "Human-readable label that categorizes the cluster as a replica set or sharded cluster.",
            "enum": [
              "replicaSet",
              "shardedCluster"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "title": "Sharded Cluster Snapshot",
        "type": "object"
      },
      "DiskBackupShardedClusterSnapshotMember": {
        "properties": {
          "cloudProvider": {
            "description": "Human-readable label that identifies the cloud provider that stores this snapshot. The resource returns this parameter when `\"type\": \"replicaSet\"`.",
            "enum": [
              "AWS",
              "AZURE",
              "GCP"
            ],
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Unique 24-hexadecimal digit string that identifies the snapshot.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "replicaSetName": {
            "description": "Human-readable label that identifies the shard or config host from which MongoDB Cloud took this snapshot.",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "cloudProvider",
          "id",
          "replicaSetName"
        ],
        "type": "object"
      },
      "DiskBackupSnapshot": {
        "discriminator": {
          "mapping": {
            "replicaSet": "#/components/schemas/DiskBackupReplicaSet",
            "shardedCluster": "#/components/schemas/DiskBackupShardedClusterSnapshot"
          },
          "propertyName": "type"
        },
        "properties": {
          "createdAt": {
            "description": "Date and time when MongoDB Cloud took the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Human-readable phrase or sentence that explains the purpose of the snapshot. The resource returns this parameter when `\"status\": \"onDemand\"`.",
            "readOnly": true,
            "type": "string"
          },
          "expiresAt": {
            "description": "Date and time when MongoDB Cloud deletes the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "frequencyType": {
            "description": "Human-readable label that identifies how often this snapshot triggers.",
            "enum": [
              "hourly",
              "daily",
              "weekly",
              "monthly",
              "yearly"
            ],
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Unique 24-hexadecimal digit string that identifies the snapshot.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "masterKeyUUID": {
            "description": "Unique string that identifies the Amazon Web Services (AWS) Key Management Service (KMS) Customer Master Key (CMK) used to encrypt the snapshot. The resource returns this value when `\"encryptionEnabled\" : true`.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "mongodVersion": {
            "description": "Version of the MongoDB host that this snapshot backs up.",
            "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)",
            "readOnly": true,
            "type": "string"
          },
          "policyItems": {
            "description": "List that contains unique identifiers for the policy items.",
            "items": {
              "description": "Unique 24-hexadecimal digit string that identifies one policy item.",
              "example": "32b6e34b3d91647abb20e7b8",
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "snapshotType": {
            "description": "Human-readable label that identifies when this snapshot triggers.",
            "enum": [
              "onDemand",
              "scheduled",
              "fallback"
            ],
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "description": "Human-readable label that indicates the stage of the backup process for this snapshot.",
            "enum": [
              "queued",
              "inProgress",
              "completed",
              "failed"
            ],
            "readOnly": true,
            "type": "string"
          },
          "storageSizeBytes": {
            "description": "Number of bytes taken to store the backup at time of snapshot.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "type": {
            "description": "Human-readable label that categorizes the cluster as a replica set or sharded cluster.",
            "enum": [
              "replicaSet",
              "shardedCluster"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiskBackupSnapshotAWSExportBucketRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DiskBackupSnapshotExportBucketRequest"
          },
          {
            "properties": {
              "bucketName": {
                "description": "Human-readable label that identifies the AWS S3 Bucket that the role is authorized to export to.",
                "example": "export-bucket",
                "maxLength": 63,
                "minLength": 3,
                "type": "string"
              },
              "iamRoleId": {
                "description": "Unique 24-hexadecimal character string that identifies the Unified AWS Access role ID that MongoDB Cloud uses to access the AWS S3 bucket.",
                "example": "32b6e34b3d91647abb20e7b8",
                "externalDocs": {
                  "description": "Unified AWS Access role ID",
                  "url": "https://www.mongodb.com/docs/atlas/security/set-up-unified-aws-access/"
                },
                "pattern": "^([a-f0-9]{24})$",
                "type": "string"
              },
              "requirePrivateNetworking": {
                "description": "Indicates whether to do exports over PrivateLink as opposed to public IPs. Defaults to False.",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "required": [
          "bucketName",
          "cloudProvider",
          "iamRoleId"
        ],
        "type": "object"
      },
      "DiskBackupSnapshotAWSExportBucketResponse": {
        "properties": {
          "_id": {
            "description": "Unique 24-hexadecimal character string that identifies the Export Bucket.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "type": "string"
          },
          "bucketName": {
            "description": "The name of the AWS S3 Bucket, Azure Storage Container, or Google Cloud Storage Bucket that Snapshots are exported to.",
            "example": "export-bucket",
            "maxLength": 63,
            "minLength": 3,
            "type": "string"
          },
          "cloudProvider": {
            "description": "Human-readable label that identifies the cloud provider that Snapshots will be exported to.",
            "enum": [
              "AWS",
              "AZURE",
              "GCP"
            ],
            "type": "string"
          },
          "iamRoleId": {
            "description": "Unique 24-hexadecimal character string that identifies the Unified AWS Access role ID that MongoDB Cloud uses to access the AWS S3 bucket.",
            "example": "32b6e34b3d91647abb20e7b8",
            "externalDocs": {
              "description": "Unified AWS Access role ID",
              "url": "https://www.mongodb.com/docs/atlas/security/set-up-unified-aws-access/"
            },
            "pattern": "^([a-f0-9]{24})$",
            "type": "string"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "region": {
            "description": "AWS region for the export bucket. This is set by Atlas and is never user-supplied.",
            "example": "us-east-1",
            "readOnly": true,
            "type": "string"
          },
          "requirePrivateNetworking": {
            "description": "Indicates whether to use privatelink. User supplied.",
            "type": "boolean"
          }
        },
        "required": [
          "_id",
          "bucketName",
          "cloudProvider",
          "iamRoleId"
        ],
        "type": "object"
      },
      "DiskBackupSnapshotAzureExportBucketRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DiskBackupSnapshotExportBucketRequest"
          },
          {
            "properties": {
              "bucketName": {
                "description": "The name of the Azure Storage Container to export to. This can be omitted and computed from the serviceUrl if the serviceUrl includes a Azure Storage Container name. For example a serviceUrl of \"https://examplestorageaccount.blob.core.windows.net/exportcontainer\" will yield a computed bucketName of \"exportcontainer\". If the serviceUrl does not include a Container name, this field is required.",
                "example": "exportcontainer",
                "maxLength": 63,
                "minLength": 3,
                "type": "string"
              },
              "roleId": {
                "description": "Unique 24-hexadecimal digit string that identifies the Azure Cloud Provider Access Role that MongoDB Cloud uses to access the Azure Blob Storage Container.",
                "example": "32b6e34b3d91647abb20e7b8",
                "pattern": "^([a-f0-9]{24})$",
                "type": "string"
              },
              "serviceUrl": {
                "description": "URL of the Azure Storage Account to export to. For example: \"https://examplestorageaccount.blob.core.windows.net/exportcontainer\". Only standard endpoints (with \"blob.core.windows.net\") are supported.",
                "example": "https://examplestorageaccount.blob.core.windows.net/exportcontainer",
                "maxLength": 2048,
                "minLength": 33,
                "type": "string"
              },
              "tenantId": {
                "deprecated": true,
                "description": "UUID that identifies the Azure Active Directory Tenant ID. Deprecated: this field is ignored; the tenantId of the Cloud Provider Access role (from roleId) is used.",
                "format": "uuid",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "required": [
          "cloudProvider",
          "roleId",
          "serviceUrl"
        ],
        "type": "object"
      },
      "DiskBackupSnapshotAzureExportBucketResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DiskBackupSnapshotExportBucketResponse"
          },
          {
            "properties": {
              "roleId": {
                "description": "Unique 24-hexadecimal digit string that identifies the Azure Cloud Provider Access Role that MongoDB Cloud uses to access the Azure Blob Storage Container.",
                "example": "32b6e34b3d91647abb20e7b8",
                "pattern": "^([a-f0-9]{24})$",
                "type": "string"
              },
              "serviceUrl": {
                "description": "URL of the Azure Storage Account to export to. Only standard endpoints (with \"blob.core.windows.net\") are supported.",
                "example": "https://examplestorageaccount.blob.core.windows.net/exportcontainer",
                "maxLength": 2048,
                "minLength": 33,
                "type": "string"
              },
              "tenantId": {
                "description": "UUID that identifies the Azure Active Directory Tenant ID used during exports.",
                "format": "uuid",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "required": [
          "_id",
          "bucketName",
          "cloudProvider",
          "roleId",
          "serviceUrl",
          "tenantId"
        ],
        "type": "object"
      },
      "DiskBackupSnapshotExportBucketRequest": {
        "description": "Disk backup snapshot Export Bucket Request.",
        "discriminator": {
          "mapping": {
            "AWS": "#/components/schemas/DiskBackupSnapshotAWSExportBucketRequest",
            "AZURE": "#/components/schemas/DiskBackupSnapshotAzureExportBucketRequest",
            "GCP": "#/components/schemas/DiskBackupSnapshotGCPExportBucketRequest"
          },
          "propertyName": "cloudProvider"
        },
        "properties": {
          "cloudProvider": {
            "description": "Human-readable label that identifies the cloud provider that Snapshots are exported to.",
            "enum": [
              "AWS",
              "AZURE",
              "GCP"
            ],
            "type": "string"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "required": [
          "cloudProvider"
        ],
        "type": "object"
      },
      "DiskBackupSnapshotExportBucketResponse": {
        "description": "Disk backup snapshot Export Bucket.",
        "discriminator": {
          "mapping": {
            "AWS": "#/components/schemas/DiskBackupSnapshotAWSExportBucketResponse",
            "AZURE": "#/components/schemas/DiskBackupSnapshotAzureExportBucketResponse",
            "GCP": "#/components/schemas/DiskBackupSnapshotGCPExportBucketResponse"
          },
          "propertyName": "cloudProvider"
        },
        "properties": {
          "_id": {
            "description": "Unique 24-hexadecimal character string that identifies the Export Bucket.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "type": "string"
          },
          "bucketName": {
            "description": "The name of the AWS S3 Bucket, Azure Storage Container, or Google Cloud Storage Bucket that Snapshots are exported to.",
            "example": "export-bucket",
            "maxLength": 63,
            "minLength": 3,
            "type": "string"
          },
          "cloudProvider": {
            "description": "Human-readable label that identifies the cloud provider that Snapshots will be exported to.",
            "enum": [
              "AWS",
              "AZURE",
              "GCP"
            ],
            "type": "string"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "required": [
          "_id",
          "bucketName",
          "cloudProvider"
        ],
        "type": "object"
      },
      "DiskBackupSnapshotGCPExportBucketRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DiskBackupSnapshotExportBucketRequest"
          },
          {
            "properties": {
              "bucketName": {
                "description": "Human-readable label that identifies the Google Cloud Storage Bucket that the role is authorized to export to.",
                "example": "export-bucket",
                "maxLength": 63,
                "minLength": 3,
                "type": "string"
              },
              "roleId": {
                "description": "Unique 24-hexadecimal digit string that identifies the GCP Cloud Provider Access Role that MongoDB Cloud uses to access the Google Cloud Storage Bucket.",
                "example": "32b6e34b3d91647abb20e7b8",
                "pattern": "^([a-f0-9]{24})$",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "required": [
          "bucketName",
          "cloudProvider",
          "roleId"
        ],
        "type": "object"
      },
      "DiskBackupSnapshotGCPExportBucketResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DiskBackupSnapshotExportBucketResponse"
          },
          {
            "properties": {
              "roleId": {
                "description": "Unique 24-hexadecimal digit string that identifies the GCP Cloud Provider Access Role that MongoDB Cloud uses to access the Google Cloud Storage Bucket.",
                "example": "32b6e34b3d91647abb20e7b8",
                "pattern": "^([a-f0-9]{24})$",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "required": [
          "_id",
          "bucketName",
          "cloudProvider",
          "roleId"
        ],
        "type": "object"
      },
      "DiskGBAutoScaling": {
        "description": "Setting that enables disk auto-scaling.",
        "properties": {
          "enabled": {
            "description": "Flag that indicates whether this cluster enables disk auto-scaling. The maximum memory allowed for the selected cluster tier and the oplog size can limit storage auto-scaling.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Document": {
        "additionalProperties": {
          "type": "object"
        },
        "type": "object"
      },
      "FederatedUser": {
        "description": "MongoDB Cloud user linked to this federated authentication.",
        "properties": {
          "emailAddress": {
            "description": "Email address of the MongoDB Cloud user linked to the federated organization.",
            "format": "email",
            "type": "string"
          },
          "federationSettingsId": {
            "description": "Unique 24-hexadecimal digit string that identifies the federation to which this MongoDB Cloud user belongs.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "type": "string"
          },
          "firstName": {
            "description": "First or given name that belongs to the MongoDB Cloud user.",
            "type": "string"
          },
          "lastName": {
            "description": "Last name, family name, or surname that belongs to the MongoDB Cloud user.",
            "type": "string"
          },
          "userId": {
            "description": "Unique 24-hexadecimal digit string that identifies this user.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "emailAddress",
          "federationSettingsId",
          "firstName",
          "lastName"
        ],
        "title": "Federated User",
        "type": "object"
      },
      "FieldViolation": {
        "properties": {
          "description": {
            "description": "A description of why the request element is bad.",
            "type": "string"
          },
          "field": {
            "description": "A path that leads to a field in the request body.",
            "type": "string"
          }
        },
        "required": [
          "description",
          "field"
        ],
        "type": "object"
      },
      "Fields": {
        "externalDocs": {
          "description": "Atlas Search Field Mappings",
          "url": "https://dochub.mongodb.org/core/field-mapping-definition-fts#define-field-mappings"
        },
        "type": "object"
      },
      "FreeComputeAutoScalingRules": {
        "description": "Collection of settings that configures how a cluster might scale its cluster tier and whether the cluster can scale down.",
        "properties": {
          "maxInstanceSize": {
            "description": "Maximum instance size to which your cluster can automatically scale.",
            "enum": [
              "M0",
              "M2",
              "M5"
            ],
            "title": "Tenant Instance Sizes",
            "type": "string"
          },
          "minInstanceSize": {
            "description": "Minimum instance size to which your cluster can automatically scale.",
            "enum": [
              "M0",
              "M2",
              "M5"
            ],
            "title": "Tenant Instance Sizes",
            "type": "string"
          }
        },
        "title": "Tenant",
        "type": "object"
      },
      "GCPCloudProviderContainer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudProviderContainer"
          },
          {
            "properties": {
              "atlasCidrBlock": {
                "description": "IP addresses expressed in Classless Inter-Domain Routing (CIDR) notation that MongoDB Cloud uses for the network peering containers in your project. MongoDB Cloud assigns all of the project's clusters deployed to this cloud provider an IP address from this range. MongoDB Cloud locks this value if an M10 or greater cluster or a network peering connection exists in this project.\n\nThese CIDR blocks must fall within the ranges reserved per RFC 1918. GCP further limits the block to a lower bound of the `/18` range.\n\nTo modify the CIDR block, the target project cannot have:\n\n- Any M10 or greater clusters\n- Any other VPC peering connections\n\n You can also create a new project and create a network peering connection to set the desired MongoDB Cloud network peering container CIDR block for that project. MongoDB Cloud limits the number of MongoDB nodes per network peering connection based on the CIDR block and the region selected for the project.\n\n **Example:** A project in an Google Cloud (GCP) region supporting three availability zones and an MongoDB CIDR network peering container block of limit of `/24` equals 27 three-node replica sets.",
                "pattern": "^((([0-9]{1,3}\\.){3}[0-9]{1,3})|(:{0,2}([0-9a-f]{1,4}:){0,7}[0-9a-f]{1,4}[:]{0,2}))((%2[fF]|/)[0-9]{1,3})+$",
                "type": "string"
              },
              "gcpProjectId": {
                "description": "Unique string that identifies the GCP project in which MongoDB Cloud clusters in this network peering container exist. The response returns **null** if no clusters exist in this network peering container.",
                "pattern": "^p-[0-9a-z]{24}$",
                "readOnly": true,
                "type": "string"
              },
              "networkName": {
                "description": "Human-readable label that identifies the network in which MongoDB Cloud clusters in this network peering container exist. MongoDB Cloud returns **null** if no clusters exist in this network peering container.",
                "pattern": "^nt-[0-9a-f]{24}-[0-9a-z]{8}$",
                "readOnly": true,
                "type": "string"
              },
              "regions": {
                "description": "List of GCP regions to which you want to deploy this MongoDB Cloud network peering container.  In this MongoDB Cloud project, you can deploy clusters only to the GCP regions in this list. To deploy MongoDB Cloud clusters to other GCP regions, create additional projects.",
                "items": {
                  "description": "List of GCP regions to which you want to deploy this MongoDB Cloud network peering container.  In this MongoDB Cloud project, you can deploy clusters only to the GCP regions in this list. To deploy MongoDB Cloud clusters to other GCP regions, create additional projects.",
                  "enum": [
                    "AFRICA_SOUTH_1",
                    "ASIA_EAST_2",
                    "ASIA_NORTHEAST_2",
                    "ASIA_NORTHEAST_3",
                    "ASIA_SOUTH_1",
                    "ASIA_SOUTH_2",
                    "ASIA_SOUTHEAST_2",
                    "AUSTRALIA_SOUTHEAST_1",
                    "AUSTRALIA_SOUTHEAST_2",
                    "CENTRAL_US",
                    "EASTERN_ASIA_PACIFIC",
                    "EASTERN_US",
                    "EUROPE_CENTRAL_2",
                    "EUROPE_NORTH_1",
                    "EUROPE_WEST_2",
                    "EUROPE_WEST_3",
                    "EUROPE_WEST_4",
                    "EUROPE_WEST_6",
                    "EUROPE_WEST_10",
                    "EUROPE_WEST_12",
                    "MIDDLE_EAST_CENTRAL_1",
                    "MIDDLE_EAST_CENTRAL_2",
                    "MIDDLE_EAST_WEST_1",
                    "NORTH_AMERICA_NORTHEAST_1",
                    "NORTH_AMERICA_NORTHEAST_2",
                    "NORTH_AMERICA_SOUTH_1",
                    "NORTHEASTERN_ASIA_PACIFIC",
                    "SOUTH_AMERICA_EAST_1",
                    "SOUTH_AMERICA_WEST_1",
                    "SOUTHEASTERN_ASIA_PACIFIC",
                    "US_EAST_4",
                    "US_EAST_5",
                    "US_WEST_2",
                    "US_WEST_3",
                    "US_WEST_4",
                    "US_SOUTH_1",
                    "WESTERN_EUROPE",
                    "WESTERN_US"
                  ],
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ],
        "description": "Collection of settings that configures the network container for a virtual private connection on Amazon Web Services.",
        "required": [
          "atlasCidrBlock"
        ],
        "title": "GCP",
        "type": "object"
      },
      "GCPComputeAutoScaling": {
        "description": "Collection of settings that configures how a cluster might scale its cluster tier and whether the cluster can scale down. Cluster tier auto-scaling is unavailable for clusters using Low CPU or NVME storage classes.",
        "properties": {
          "maxInstanceSize": {
            "description": "Maximum instance size to which your cluster can automatically scale.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M140",
              "M200",
              "M250",
              "M300",
              "M400",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "R600"
            ],
            "title": "GCP Instance Sizes",
            "type": "string"
          },
          "minInstanceSize": {
            "description": "Minimum instance size to which your cluster can automatically scale.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M140",
              "M200",
              "M250",
              "M300",
              "M400",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "R600"
            ],
            "title": "GCP Instance Sizes",
            "type": "string"
          }
        },
        "title": "GCP",
        "type": "object"
      },
      "GCPCreateDataProcessRegionView": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateDataProcessRegionView"
          },
          {
            "properties": {
              "region": {
                "description": "Human-readable label that identifies the geographic location of the region where you wish to store your archived data.",
                "enum": [
                  "CENTRAL_US",
                  "WESTERN_EUROPE"
                ],
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "type": "object"
      },
      "GCPDataProcessRegionView": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataProcessRegionView"
          },
          {
            "properties": {
              "region": {
                "description": "Human-readable label that identifies the geographic location of the region where you store your archived data.",
                "enum": [
                  "CENTRAL_US",
                  "WESTERN_EUROPE"
                ],
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "type": "object"
      },
      "GCPHardwareSpec": {
        "properties": {
          "instanceSize": {
            "description": "Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts of the node type.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M140",
              "M200",
              "M250",
              "M300",
              "M400",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "R600"
            ],
            "title": "GCP Instance Sizes",
            "type": "string"
          },
          "nodeCount": {
            "description": "Number of nodes of the given type for MongoDB Cloud to deploy to the region.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GCPHardwareSpec20240805": {
        "properties": {
          "diskSizeGB": {
            "description": "Storage capacity of instance data volumes expressed in gigabytes. Increase this number to add capacity.\n\n This value must be equal for all shards and node types.\n\n This value is not configurable on M0/M2/M5 clusters.\n\n MongoDB Cloud requires this parameter if you set **replicationSpecs**.\n\n If you specify a disk size below the minimum (10 GB), this parameter defaults to the minimum disk size value. \n\n Storage charge calculations depend on whether you choose the default value or a custom value.\n\n The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require more storage space, consider upgrading your cluster to a higher tier.",
            "externalDocs": {
              "description": "Customize Storage",
              "url": "https://dochub.mongodb.org/core/customize-storage"
            },
            "format": "double",
            "type": "number"
          },
          "instanceSize": {
            "description": "Hardware specification for the instance sizes in this region in this shard. Each instance size has a default storage and memory capacity. Electable nodes and read-only nodes (known as \"base nodes\") within a single shard must use the same instance size. Analytics nodes can scale independently from base nodes within a shard. Both base nodes and analytics nodes can scale independently from their equivalents in other shards.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M140",
              "M200",
              "M250",
              "M300",
              "M400",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "R600"
            ],
            "title": "GCP Instance Sizes",
            "type": "string"
          },
          "nodeCount": {
            "description": "Number of nodes of the given type for MongoDB Cloud to deploy to the region.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GCPRegionConfig": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudRegionConfig"
          },
          {
            "properties": {
              "analyticsAutoScaling": {
                "$ref": "#/components/schemas/AdvancedAutoScalingSettings"
              },
              "analyticsSpecs": {
                "$ref": "#/components/schemas/DedicatedHardwareSpec"
              },
              "autoScaling": {
                "$ref": "#/components/schemas/AdvancedAutoScalingSettings"
              },
              "readOnlySpecs": {
                "$ref": "#/components/schemas/DedicatedHardwareSpec"
              }
            },
            "type": "object"
          }
        ],
        "description": "Details that explain how MongoDB Cloud replicates data in one region on the specified MongoDB database.",
        "title": "GCP Regional Replication Specifications",
        "type": "object"
      },
      "GCPRegionConfig20240805": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudRegionConfig20240805"
          },
          {
            "properties": {
              "analyticsAutoScaling": {
                "$ref": "#/components/schemas/AdvancedAutoScalingSettings"
              },
              "analyticsSpecs": {
                "$ref": "#/components/schemas/DedicatedHardwareSpec20240805"
              },
              "autoScaling": {
                "$ref": "#/components/schemas/AdvancedAutoScalingSettings"
              },
              "readOnlySpecs": {
                "$ref": "#/components/schemas/DedicatedHardwareSpec20240805"
              }
            },
            "type": "object"
          }
        ],
        "description": "Details that explain how MongoDB Cloud replicates data in one region on the specified MongoDB database.",
        "title": "GCP Regional Replication Specifications",
        "type": "object"
      },
      "Group": {
        "properties": {
          "clusterCount": {
            "description": "Quantity of MongoDB Cloud clusters deployed in this project.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "created": {
            "description": "Date and time when MongoDB Cloud created this project. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud project.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "name": {
            "description": "Human-readable label that identifies the project included in the MongoDB Cloud organization.",
            "pattern": "^[\\p{L}\\p{N}\\-_.(),:&@+']{1,64}$",
            "type": "string"
          },
          "orgId": {
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud organization to which the project belongs.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "type": "string"
          },
          "regionUsageRestrictions": {
            "default": "COMMERCIAL_FEDRAMP_REGIONS_ONLY",
            "description": "Applies to Atlas for Government only.\n\nIn Commercial Atlas, this field will be rejected in requests and missing in responses.\n\nThis field sets restrictions on available regions in the project.\n\n`COMMERCIAL_FEDRAMP_REGIONS_ONLY`: Only allows deployments in FedRAMP Moderate regions.\n\n`GOV_REGIONS_ONLY`: Only allows deployments in GovCloud regions.",
            "enum": [
              "COMMERCIAL_FEDRAMP_REGIONS_ONLY",
              "GOV_REGIONS_ONLY"
            ],
            "externalDocs": {
              "url": "https://www.mongodb.com/docs/atlas/government/overview/supported-regions/#supported-cloud-providers-and-regions"
            },
            "type": "string"
          },
          "tags": {
            "description": "List that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the project.",
            "externalDocs": {
              "description": "Resource Tags",
              "url": "https://www.mongodb.com/docs/atlas/tags"
            },
            "items": {
              "$ref": "#/components/schemas/ResourceTag"
            },
            "type": "array"
          },
          "withDefaultAlertsSettings": {
            "default": true,
            "description": "Flag that indicates whether to create the project with default alert settings. This setting cannot be updated after project creation.",
            "type": "boolean"
          }
        },
        "required": [
          "clusterCount",
          "created",
          "name",
          "orgId"
        ],
        "type": "object"
      },
      "GroupActiveUserResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GroupUserResponse"
          },
          {
            "properties": {
              "country": {
                "description": "Two-character alphabetical string that identifies the MongoDB Cloud user's geographic location. This parameter uses the ISO 3166-1a2 code format.",
                "example": "US",
                "pattern": "^([A-Z]{2})$",
                "readOnly": true,
                "type": "string"
              },
              "createdAt": {
                "description": "Date and time when MongoDB Cloud created the current account. This value is in the ISO 8601 timestamp format in UTC.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "firstName": {
                "description": "First or given name that belongs to the MongoDB Cloud user.",
                "example": "John",
                "readOnly": true,
                "type": "string"
              },
              "lastAuth": {
                "description": "Date and time when the current account last authenticated. This value is in the ISO 8601 timestamp format in UTC.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "lastName": {
                "description": "Last name, family name, or surname that belongs to the MongoDB Cloud user.",
                "example": "Doe",
                "readOnly": true,
                "type": "string"
              },
              "mobileNumber": {
                "description": "Mobile phone number that belongs to the MongoDB Cloud user.",
                "pattern": "(?:(?:\\\\+?1\\\\s*(?:[.-]\\\\s*)?)?(?:(\\\\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\\\\s*)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\\\\s*(?:[.-]\\\\s*)?)([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2})\\\\s*(?:[.-]\\\\s*)?([0-9]{4})$",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "required": [
          "createdAt",
          "firstName",
          "id",
          "lastName",
          "orgMembershipStatus",
          "roles",
          "username"
        ],
        "type": "object"
      },
      "GroupPendingUserResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GroupUserResponse"
          },
          {
            "properties": {
              "invitationCreatedAt": {
                "description": "Date and time when MongoDB Cloud sent the invitation. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "invitationExpiresAt": {
                "description": "Date and time when the invitation from MongoDB Cloud expires. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "inviterUsername": {
                "description": "Username of the MongoDB Cloud user who sent the invitation to join the organization.",
                "format": "email",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "required": [
          "id",
          "invitationCreatedAt",
          "invitationExpiresAt",
          "inviterUsername",
          "orgMembershipStatus",
          "roles",
          "username"
        ],
        "type": "object"
      },
      "GroupRole": {
        "properties": {
          "groupId": {
            "description": "Unique 24-hexadecimal digit string that identifies the project to which this role belongs.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "type": "string"
          },
          "groupRole": {
            "description": "Human-readable label that identifies the collection of privileges that MongoDB Cloud grants a specific API key, MongoDB Cloud user, or MongoDB Cloud team. These roles include project-level roles.",
            "enum": [
              "GROUP_BACKUP_MANAGER",
              "GROUP_CLUSTER_MANAGER",
              "GROUP_DATA_ACCESS_ADMIN",
              "GROUP_DATA_ACCESS_READ_ONLY",
              "GROUP_DATA_ACCESS_READ_WRITE",
              "GROUP_DATABASE_ACCESS_ADMIN",
              "GROUP_OBSERVABILITY_VIEWER",
              "GROUP_OWNER",
              "GROUP_READ_ONLY",
              "GROUP_SEARCH_INDEX_EDITOR",
              "GROUP_STREAM_PROCESSING_OWNER"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GroupRoleAssignment": {
        "properties": {
          "groupId": {
            "description": "Unique 24-hexadecimal digit string that identifies the project to which these roles belong.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "type": "string"
          },
          "groupRoles": {
            "description": "One or more project-level roles assigned to the MongoDB Cloud user.",
            "items": {
              "description": "Project-level role.",
              "enum": [
                "GROUP_OWNER",
                "GROUP_CLUSTER_MANAGER",
                "GROUP_STREAM_PROCESSING_OWNER",
                "GROUP_DATA_ACCESS_ADMIN",
                "GROUP_DATA_ACCESS_READ_WRITE",
                "GROUP_DATA_ACCESS_READ_ONLY",
                "GROUP_READ_ONLY",
                "GROUP_SEARCH_INDEX_EDITOR",
                "GROUP_BACKUP_MANAGER",
                "GROUP_OBSERVABILITY_VIEWER",
                "GROUP_DATABASE_ACCESS_ADMIN"
              ],
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          }
        },
        "type": "object"
      },
      "GroupUserResponse": {
        "discriminator": {
          "mapping": {
            "ACTIVE": "#/components/schemas/GroupActiveUserResponse",
            "PENDING": "#/components/schemas/GroupPendingUserResponse"
          },
          "propertyName": "orgMembershipStatus"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/GroupPendingUserResponse"
          },
          {
            "$ref": "#/components/schemas/GroupActiveUserResponse"
          }
        ],
        "properties": {
          "id": {
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud user.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "orgMembershipStatus": {
            "description": "String enum that indicates whether the MongoDB Cloud user has a pending invitation to join the organization or they are already active in the organization.",
            "enum": [
              "PENDING",
              "ACTIVE"
            ],
            "readOnly": true,
            "type": "string"
          },
          "roles": {
            "description": "One or more project-level roles assigned to the MongoDB Cloud user.",
            "items": {
              "description": "Project-level role.",
              "enum": [
                "GROUP_OWNER",
                "GROUP_CLUSTER_MANAGER",
                "GROUP_STREAM_PROCESSING_OWNER",
                "GROUP_DATA_ACCESS_ADMIN",
                "GROUP_DATA_ACCESS_READ_WRITE",
                "GROUP_DATA_ACCESS_READ_ONLY",
                "GROUP_READ_ONLY",
                "GROUP_SEARCH_INDEX_EDITOR",
                "GROUP_BACKUP_MANAGER",
                "GROUP_OBSERVABILITY_VIEWER",
                "GROUP_DATABASE_ACCESS_ADMIN"
              ],
              "type": "string"
            },
            "readOnly": true,
            "type": "array",
            "uniqueItems": true
          },
          "username": {
            "description": "Email address that represents the username of the MongoDB Cloud user.",
            "format": "email",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "id",
          "orgMembershipStatus",
          "roles",
          "username"
        ],
        "type": "object"
      },
      "HardwareSpec": {
        "description": "Hardware specifications for all electable nodes deployed in the region. Electable nodes can become the primary and can enable local reads. If you don't specify this option, MongoDB Cloud deploys no electable nodes to the region.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/AWSHardwareSpec"
          },
          {
            "$ref": "#/components/schemas/AzureHardwareSpec"
          },
          {
            "$ref": "#/components/schemas/GCPHardwareSpec"
          },
          {
            "$ref": "#/components/schemas/TenantHardwareSpec"
          }
        ],
        "type": "object"
      },
      "HardwareSpec20240805": {
        "description": "Hardware specifications for all electable nodes deployed in the region. Electable nodes can become the primary and can enable local reads. If you don't specify this option, MongoDB Cloud deploys no electable nodes to the region.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/AWSHardwareSpec20240805"
          },
          {
            "$ref": "#/components/schemas/AzureHardwareSpec20240805"
          },
          {
            "$ref": "#/components/schemas/GCPHardwareSpec20240805"
          },
          {
            "$ref": "#/components/schemas/TenantHardwareSpec20240805"
          }
        ],
        "properties": {
          "diskSizeGB": {
            "description": "Storage capacity of instance data volumes expressed in gigabytes. Increase this number to add capacity.\n\n This value must be equal for all shards and node types.\n\n This value is not configurable on M0/M2/M5 clusters.\n\n MongoDB Cloud requires this parameter if you set **replicationSpecs**.\n\n If you specify a disk size below the minimum (10 GB), this parameter defaults to the minimum disk size value. \n\n Storage charge calculations depend on whether you choose the default value or a custom value.\n\n The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require more storage space, consider upgrading your cluster to a higher tier.",
            "externalDocs": {
              "description": "Customize Storage",
              "url": "https://dochub.mongodb.org/core/customize-storage"
            },
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "HostMatcher": {
        "description": "Rules to apply when comparing an host against this alert configuration.",
        "properties": {
          "fieldName": {
            "$ref": "#/components/schemas/HostMatcherField"
          },
          "operator": {
            "description": "Comparison operator to apply when checking the current metric value against **matcher[n].value**.",
            "enum": [
              "EQUALS",
              "CONTAINS",
              "STARTS_WITH",
              "ENDS_WITH",
              "NOT_EQUALS",
              "NOT_CONTAINS",
              "REGEX"
            ],
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/MatcherHostType"
          }
        },
        "required": [
          "fieldName",
          "operator"
        ],
        "title": "Matchers",
        "type": "object"
      },
      "HostMatcherField": {
        "description": "Name of the parameter in the target object that MongoDB Cloud checks. The parameter must match all rules for MongoDB Cloud to check for alert configurations.",
        "enum": [
          "TYPE_NAME",
          "HOSTNAME",
          "PORT",
          "HOSTNAME_AND_PORT",
          "REPLICA_SET_NAME"
        ],
        "example": "HOSTNAME",
        "title": "Host Matcher Fields",
        "type": "string"
      },
      "HostMetricEvent": {
        "description": "Host Metric Event reflects different measurements and metrics about mongod host.",
        "discriminator": {
          "mapping": {
            "ASSERT_MSG": "#/components/schemas/RawMetricEventView",
            "ASSERT_REGULAR": "#/components/schemas/RawMetricEventView",
            "ASSERT_USER": "#/components/schemas/RawMetricEventView",
            "ASSERT_WARNING": "#/components/schemas/RawMetricEventView",
            "AVG_COMMAND_EXECUTION_TIME": "#/components/schemas/TimeMetricEventView",
            "AVG_READ_EXECUTION_TIME": "#/components/schemas/TimeMetricEventView",
            "AVG_WRITE_EXECUTION_TIME": "#/components/schemas/TimeMetricEventView",
            "BACKGROUND_FLUSH_AVG": "#/components/schemas/TimeMetricEventView",
            "CACHE_BYTES_READ_INTO": "#/components/schemas/DataMetricEventView",
            "CACHE_BYTES_WRITTEN_FROM": "#/components/schemas/DataMetricEventView",
            "CACHE_USAGE_DIRTY": "#/components/schemas/DataMetricEventView",
            "CACHE_USAGE_USED": "#/components/schemas/DataMetricEventView",
            "COMPUTED_MEMORY": "#/components/schemas/DataMetricEventView",
            "CONNECTIONS": "#/components/schemas/RawMetricEventView",
            "CONNECTIONS_MAX": "#/components/schemas/RawMetricEventView",
            "CONNECTIONS_PERCENT": "#/components/schemas/RawMetricEventView",
            "CURSORS_TOTAL_CLIENT_CURSORS_SIZE": "#/components/schemas/RawMetricEventView",
            "CURSORS_TOTAL_OPEN": "#/components/schemas/RawMetricEventView",
            "CURSORS_TOTAL_TIMED_OUT": "#/components/schemas/RawMetricEventView",
            "DB_DATA_SIZE_TOTAL": "#/components/schemas/DataMetricEventView",
            "DB_DATA_SIZE_TOTAL_WO_SYSTEM": "#/components/schemas/DataMetricEventView",
            "DB_INDEX_SIZE_TOTAL": "#/components/schemas/DataMetricEventView",
            "DB_STORAGE_TOTAL": "#/components/schemas/DataMetricEventView",
            "DISK_PARTITION_QUEUE_DEPTH_DATA": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_QUEUE_DEPTH_INDEX": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_QUEUE_DEPTH_JOURNAL": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_READ_IOPS_DATA": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_READ_IOPS_INDEX": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_READ_IOPS_JOURNAL": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_READ_LATENCY_DATA": "#/components/schemas/TimeMetricEventView",
            "DISK_PARTITION_READ_LATENCY_INDEX": "#/components/schemas/TimeMetricEventView",
            "DISK_PARTITION_READ_LATENCY_JOURNAL": "#/components/schemas/TimeMetricEventView",
            "DISK_PARTITION_SPACE_USED_DATA": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_SPACE_USED_INDEX": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_SPACE_USED_JOURNAL": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_UTILIZATION_DATA": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_UTILIZATION_INDEX": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_UTILIZATION_JOURNAL": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_WRITE_IOPS_DATA": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_WRITE_IOPS_INDEX": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_WRITE_IOPS_JOURNAL": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_WRITE_LATENCY_DATA": "#/components/schemas/TimeMetricEventView",
            "DISK_PARTITION_WRITE_LATENCY_INDEX": "#/components/schemas/TimeMetricEventView",
            "DISK_PARTITION_WRITE_LATENCY_JOURNAL": "#/components/schemas/TimeMetricEventView",
            "DOCUMENT_DELETED": "#/components/schemas/RawMetricEventView",
            "DOCUMENT_INSERTED": "#/components/schemas/RawMetricEventView",
            "DOCUMENT_RETURNED": "#/components/schemas/RawMetricEventView",
            "DOCUMENT_UPDATED": "#/components/schemas/RawMetricEventView",
            "EXTRA_INFO_PAGE_FAULTS": "#/components/schemas/RawMetricEventView",
            "FTS_DISK_UTILIZATION": "#/components/schemas/DataMetricEventView",
            "FTS_JVM_CURRENT_MEMORY": "#/components/schemas/DataMetricEventView",
            "FTS_JVM_MAX_MEMORY": "#/components/schemas/DataMetricEventView",
            "FTS_MEMORY_MAPPED": "#/components/schemas/DataMetricEventView",
            "FTS_MEMORY_RESIDENT": "#/components/schemas/DataMetricEventView",
            "FTS_MEMORY_VIRTUAL": "#/components/schemas/DataMetricEventView",
            "FTS_PROCESS_CPU_KERNEL": "#/components/schemas/RawMetricEventView",
            "FTS_PROCESS_CPU_USER": "#/components/schemas/RawMetricEventView",
            "GLOBAL_ACCESSES_NOT_IN_MEMORY": "#/components/schemas/RawMetricEventView",
            "GLOBAL_LOCK_CURRENT_QUEUE_READERS": "#/components/schemas/RawMetricEventView",
            "GLOBAL_LOCK_CURRENT_QUEUE_TOTAL": "#/components/schemas/RawMetricEventView",
            "GLOBAL_LOCK_CURRENT_QUEUE_WRITERS": "#/components/schemas/RawMetricEventView",
            "GLOBAL_LOCK_PERCENTAGE": "#/components/schemas/RawMetricEventView",
            "GLOBAL_PAGE_FAULT_EXCEPTIONS_THROWN": "#/components/schemas/RawMetricEventView",
            "INDEX_COUNTERS_BTREE_ACCESSES": "#/components/schemas/RawMetricEventView",
            "INDEX_COUNTERS_BTREE_HITS": "#/components/schemas/RawMetricEventView",
            "INDEX_COUNTERS_BTREE_MISSES": "#/components/schemas/RawMetricEventView",
            "INDEX_COUNTERS_BTREE_MISS_RATIO": "#/components/schemas/RawMetricEventView",
            "JOURNALING_COMMITS_IN_WRITE_LOCK": "#/components/schemas/RawMetricEventView",
            "JOURNALING_MB": "#/components/schemas/DataMetricEventView",
            "JOURNALING_WRITE_DATA_FILES_MB": "#/components/schemas/DataMetricEventView",
            "LOGICAL_SIZE": "#/components/schemas/DataMetricEventView",
            "MAX_DISK_PARTITION_QUEUE_DEPTH_DATA": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_QUEUE_DEPTH_INDEX": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_QUEUE_DEPTH_JOURNAL": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_READ_IOPS_DATA": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_READ_IOPS_INDEX": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_READ_IOPS_JOURNAL": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_READ_LATENCY_DATA": "#/components/schemas/TimeMetricEventView",
            "MAX_DISK_PARTITION_READ_LATENCY_INDEX": "#/components/schemas/TimeMetricEventView",
            "MAX_DISK_PARTITION_READ_LATENCY_JOURNAL": "#/components/schemas/TimeMetricEventView",
            "MAX_DISK_PARTITION_SPACE_USED_DATA": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_SPACE_USED_INDEX": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_SPACE_USED_JOURNAL": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_UTILIZATION_DATA": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_UTILIZATION_INDEX": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_UTILIZATION_JOURNAL": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_WRITE_IOPS_DATA": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_WRITE_IOPS_INDEX": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_WRITE_IOPS_JOURNAL": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_WRITE_LATENCY_DATA": "#/components/schemas/TimeMetricEventView",
            "MAX_DISK_PARTITION_WRITE_LATENCY_INDEX": "#/components/schemas/TimeMetricEventView",
            "MAX_DISK_PARTITION_WRITE_LATENCY_JOURNAL": "#/components/schemas/TimeMetricEventView",
            "MAX_NORMALIZED_SYSTEM_CPU_STEAL": "#/components/schemas/RawMetricEventView",
            "MAX_NORMALIZED_SYSTEM_CPU_USER": "#/components/schemas/RawMetricEventView",
            "MAX_SWAP_USAGE_FREE": "#/components/schemas/DataMetricEventView",
            "MAX_SWAP_USAGE_USED": "#/components/schemas/DataMetricEventView",
            "MAX_SYSTEM_MEMORY_AVAILABLE": "#/components/schemas/DataMetricEventView",
            "MAX_SYSTEM_MEMORY_PERCENT_USED": "#/components/schemas/RawMetricEventView",
            "MAX_SYSTEM_MEMORY_USED": "#/components/schemas/DataMetricEventView",
            "MAX_SYSTEM_NETWORK_IN": "#/components/schemas/DataMetricEventView",
            "MAX_SYSTEM_NETWORK_OUT": "#/components/schemas/DataMetricEventView",
            "MEMORY_MAPPED": "#/components/schemas/DataMetricEventView",
            "MEMORY_RESIDENT": "#/components/schemas/DataMetricEventView",
            "MEMORY_VIRTUAL": "#/components/schemas/DataMetricEventView",
            "MUNIN_CPU_IOWAIT": "#/components/schemas/RawMetricEventView",
            "MUNIN_CPU_IRQ": "#/components/schemas/RawMetricEventView",
            "MUNIN_CPU_NICE": "#/components/schemas/RawMetricEventView",
            "MUNIN_CPU_SOFTIRQ": "#/components/schemas/RawMetricEventView",
            "MUNIN_CPU_STEAL": "#/components/schemas/RawMetricEventView",
            "MUNIN_CPU_SYSTEM": "#/components/schemas/RawMetricEventView",
            "MUNIN_CPU_USER": "#/components/schemas/RawMetricEventView",
            "NETWORK_BYTES_IN": "#/components/schemas/DataMetricEventView",
            "NETWORK_BYTES_OUT": "#/components/schemas/DataMetricEventView",
            "NETWORK_NUM_REQUESTS": "#/components/schemas/RawMetricEventView",
            "NORMALIZED_FTS_PROCESS_CPU_KERNEL": "#/components/schemas/RawMetricEventView",
            "NORMALIZED_FTS_PROCESS_CPU_USER": "#/components/schemas/RawMetricEventView",
            "NORMALIZED_SYSTEM_CPU_STEAL": "#/components/schemas/RawMetricEventView",
            "NORMALIZED_SYSTEM_CPU_USER": "#/components/schemas/RawMetricEventView",
            "OPCOUNTER_CMD": "#/components/schemas/RawMetricEventView",
            "OPCOUNTER_DELETE": "#/components/schemas/RawMetricEventView",
            "OPCOUNTER_GETMORE": "#/components/schemas/RawMetricEventView",
            "OPCOUNTER_INSERT": "#/components/schemas/RawMetricEventView",
            "OPCOUNTER_QUERY": "#/components/schemas/RawMetricEventView",
            "OPCOUNTER_REPL_CMD": "#/components/schemas/RawMetricEventView",
            "OPCOUNTER_REPL_DELETE": "#/components/schemas/RawMetricEventView",
            "OPCOUNTER_REPL_INSERT": "#/components/schemas/RawMetricEventView",
            "OPCOUNTER_REPL_UPDATE": "#/components/schemas/RawMetricEventView",
            "OPCOUNTER_TTL_DELETED": "#/components/schemas/RawMetricEventView",
            "OPCOUNTER_UPDATE": "#/components/schemas/RawMetricEventView",
            "OPERATIONS_QUERIES_KILLED": "#/components/schemas/RawMetricEventView",
            "OPERATIONS_SCAN_AND_ORDER": "#/components/schemas/RawMetricEventView",
            "OPERATION_THROTTLING_REJECTED_OPERATIONS": "#/components/schemas/RawMetricEventView",
            "OPLOG_MASTER_LAG_TIME_DIFF": "#/components/schemas/TimeMetricEventView",
            "OPLOG_MASTER_TIME": "#/components/schemas/TimeMetricEventView",
            "OPLOG_MASTER_TIME_ESTIMATED_TTL": "#/components/schemas/TimeMetricEventView",
            "OPLOG_RATE_GB_PER_HOUR": "#/components/schemas/DataMetricEventView",
            "OPLOG_REPLICATION_LAG_TIME": "#/components/schemas/TimeMetricEventView",
            "OPLOG_SLAVE_LAG_MASTER_TIME": "#/components/schemas/TimeMetricEventView",
            "QUERY_EXECUTOR_SCANNED": "#/components/schemas/RawMetricEventView",
            "QUERY_EXECUTOR_SCANNED_OBJECTS": "#/components/schemas/RawMetricEventView",
            "QUERY_SPILL_TO_DISK_DURING_SORT": "#/components/schemas/RawMetricEventView",
            "QUERY_TARGETING_SCANNED_OBJECTS_PER_RETURNED": "#/components/schemas/RawMetricEventView",
            "QUERY_TARGETING_SCANNED_PER_RETURNED": "#/components/schemas/RawMetricEventView",
            "RESTARTS_IN_LAST_HOUR": "#/components/schemas/RawMetricEventView",
            "SEARCH_INDEX_SIZE": "#/components/schemas/DataMetricEventView",
            "SEARCH_MAX_NUMBER_OF_LUCENE_DOCS": "#/components/schemas/NumberMetricEventView",
            "SEARCH_NUMBER_OF_FIELDS_IN_INDEX": "#/components/schemas/RawMetricEventView",
            "SEARCH_NUMBER_OF_QUERIES_ERROR": "#/components/schemas/RawMetricEventView",
            "SEARCH_NUMBER_OF_QUERIES_SUCCESS": "#/components/schemas/RawMetricEventView",
            "SEARCH_NUMBER_OF_QUERIES_TOTAL": "#/components/schemas/RawMetricEventView",
            "SEARCH_OPCOUNTER_DELETE": "#/components/schemas/RawMetricEventView",
            "SEARCH_OPCOUNTER_GETMORE": "#/components/schemas/RawMetricEventView",
            "SEARCH_OPCOUNTER_INSERT": "#/components/schemas/RawMetricEventView",
            "SEARCH_OPCOUNTER_UPDATE": "#/components/schemas/RawMetricEventView",
            "SEARCH_REPLICATION_LAG": "#/components/schemas/TimeMetricEventView",
            "SWAP_USAGE_FREE": "#/components/schemas/DataMetricEventView",
            "SWAP_USAGE_USED": "#/components/schemas/DataMetricEventView",
            "SYSTEM_MEMORY_AVAILABLE": "#/components/schemas/DataMetricEventView",
            "SYSTEM_MEMORY_PERCENT_USED": "#/components/schemas/RawMetricEventView",
            "SYSTEM_MEMORY_USED": "#/components/schemas/DataMetricEventView",
            "SYSTEM_NETWORK_IN": "#/components/schemas/DataMetricEventView",
            "SYSTEM_NETWORK_OUT": "#/components/schemas/DataMetricEventView",
            "TICKETS_AVAILABLE_READS": "#/components/schemas/RawMetricEventView",
            "TICKETS_AVAILABLE_WRITES": "#/components/schemas/RawMetricEventView"
          },
          "propertyName": "metricName"
        },
        "properties": {
          "apiKeyId": {
            "description": "Unique 24-hexadecimal digit string that identifies the API Key that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "example": "32b6e34b3d91647abb20e7b8",
            "externalDocs": {
              "description": "Create Programmatic API Key",
              "url": "https://dochub.mongodb.org/core/atlas-create-prog-api-key"
            },
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "created": {
            "description": "Date and time when this event occurred. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "externalDocs": {
              "description": "ISO 8601",
              "url": "https://en.wikipedia.org/wiki/ISO_8601"
            },
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "currentValue": {
            "$ref": "#/components/schemas/HostMetricValue"
          },
          "deskLocation": {
            "description": "Desk location of MongoDB employee associated with the event.",
            "readOnly": true,
            "type": "string"
          },
          "employeeIdentifier": {
            "description": "Identifier of MongoDB employee associated with the event.",
            "readOnly": true,
            "type": "string"
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/HostMetricEventTypeView"
          },
          "groupId": {
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "isGlobalAdmin": {
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "type": "boolean"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "metricName": {
            "description": "Human-readable label of the metric associated with the **alertId**. This field may change type of **currentValue** field.",
            "readOnly": true,
            "type": "string"
          },
          "orgId": {
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "port": {
            "description": "IANA port on which the MongoDB process listens for requests.",
            "example": 27017,
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "publicKey": {
            "description": "Public part of the API key that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "externalDocs": {
              "url": "https://dochub.mongodb.org/core/atlas-create-prog-api-key"
            },
            "readOnly": true,
            "type": "string"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "example": "216.172.40.186",
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "readOnly": true,
            "type": "string"
          },
          "replicaSetName": {
            "description": "Human-readable label of the replica set associated with the event.",
            "example": "event-replica-set",
            "readOnly": true,
            "type": "string"
          },
          "shardName": {
            "description": "Human-readable label of the shard associated with the event.",
            "example": "event-sh-01",
            "readOnly": true,
            "type": "string"
          },
          "userId": {
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "username": {
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "created",
          "eventTypeName",
          "id"
        ],
        "title": "Host Metric Events",
        "type": "object"
      },
      "HostMetricEventTypeView": {
        "description": "Unique identifier of event type.",
        "enum": [
          "INSIDE_METRIC_THRESHOLD",
          "OUTSIDE_METRIC_THRESHOLD"
        ],
        "example": "OUTSIDE_METRIC_THRESHOLD",
        "title": "Host Metric Event Types",
        "type": "string"
      },
      "HostMetricValue": {
        "description": "Value of the metric that triggered the alert. The resource returns this parameter for alerts of events impacting hosts.",
        "properties": {
          "number": {
            "description": "Amount of the **metricName** recorded at the time of the event. This value triggered the alert.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "units": {
            "description": "Element used to express the quantity in **currentValue.number**. This can be an element of time, storage capacity, and the like. This metric triggered the alert.",
            "enum": [
              "bits",
              "Kbits",
              "Mbits",
              "Gbits",
              "bytes",
              "KB",
              "MB",
              "GB",
              "TB",
              "PB",
              "nsec",
              "msec",
              "sec",
              "min",
              "hours",
              "million minutes",
              "days",
              "requests",
              "1000 requests",
              "GB seconds",
              "GB hours",
              "GB days",
              "RPU",
              "thousand RPU",
              "million RPU",
              "WPU",
              "thousand WPU",
              "million WPU",
              "count",
              "thousand",
              "million",
              "billion"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "readOnly": true,
        "type": "object"
      },
      "Info": {
        "description": "Information about the MongoDB Atlas Administration API OpenAPI Specification.",
        "properties": {
          "description": {
            "description": "Description of the MongoDB Atlas Administration API.",
            "example": "The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas.",
            "type": "string"
          },
          "license": {
            "$ref": "#/components/schemas/License"
          },
          "termsOfService": {
            "description": "Terms of Service URL.",
            "example": "https://www.mongodb.com/mongodb-management-service-terms-and-conditions",
            "type": "string"
          },
          "title": {
            "description": "Title of the MongoDB Atlas Administration API.",
            "example": "MongoDB Atlas Administration API.",
            "type": "string"
          },
          "version": {
            "description": "Version of the MongoDB Atlas Administration API.",
            "example": "2.0",
            "type": "string"
          }
        },
        "type": "object"
      },
      "IngestionSink": {
        "description": "Ingestion destination of a Data Lake Pipeline.",
        "discriminator": {
          "mapping": {
            "DLS": "#/components/schemas/DLSIngestionSink"
          },
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "description": "Type of ingestion destination of this Data Lake Pipeline.",
            "enum": [
              "DLS"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "title": "Ingestion Destination",
        "type": "object"
      },
      "IngestionSource": {
        "description": "Ingestion Source of a Data Lake Pipeline.",
        "discriminator": {
          "mapping": {
            "ON_DEMAND_CPS": "#/components/schemas/OnDemandCpsSnapshotSource",
            "PERIODIC_CPS": "#/components/schemas/PeriodicCpsSnapshotSource"
          },
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "description": "Type of ingestion source of this Data Lake Pipeline.",
            "enum": [
              "PERIODIC_CPS",
              "ON_DEMAND_CPS"
            ],
            "type": "string"
          }
        },
        "title": "Ingestion Source",
        "type": "object"
      },
      "InvoiceLineItem": {
        "description": "One service included in this invoice.",
        "properties": {
          "clusterName": {
            "description": "Human-readable label that identifies the cluster that incurred the charge.",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "readOnly": true,
            "type": "string"
          },
          "created": {
            "description": "Date and time when MongoDB Cloud created this line item. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "discountCents": {
            "description": "Sum by which MongoDB discounted this line item. MongoDB Cloud expresses this value in cents (100ths of one US Dollar). The resource returns this parameter when a discount applies.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "endDate": {
            "description": "Date and time when when MongoDB Cloud finished charging for this line item. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "groupId": {
            "description": "Unique 24-hexadecimal digit string that identifies the project associated to this line item.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "groupName": {
            "description": "Human-readable label that identifies the project.",
            "type": "string"
          },
          "note": {
            "description": "Comment that applies to this line item.",
            "readOnly": true,
            "type": "string"
          },
          "percentDiscount": {
            "description": "Percentage by which MongoDB discounted this line item. The resource returns this parameter when a discount applies.",
            "format": "float",
            "readOnly": true,
            "type": "number"
          },
          "quantity": {
            "description": "Number of units included for the line item. These can be expressions of storage (GB), time (hours), or other units.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "sku": {
            "description": "Human-readable description of the service that this line item provided. This Stock Keeping Unit (SKU) could be the instance type, a support charge, advanced security, or another service.",
            "enum": [
              "CLASSIC_BACKUP_OPLOG",
              "CLASSIC_BACKUP_STORAGE",
              "CLASSIC_BACKUP_SNAPSHOT_CREATE",
              "CLASSIC_BACKUP_DAILY_MINIMUM",
              "CLASSIC_BACKUP_FREE_TIER",
              "CLASSIC_COUPON",
              "BACKUP_STORAGE_FREE_TIER",
              "BACKUP_STORAGE",
              "FLEX_CONSULTING",
              "CLOUD_MANAGER_CLASSIC",
              "CLOUD_MANAGER_BASIC_FREE_TIER",
              "CLOUD_MANAGER_BASIC",
              "CLOUD_MANAGER_PREMIUM",
              "CLOUD_MANAGER_FREE_TIER",
              "CLOUD_MANAGER_STANDARD_FREE_TIER",
              "CLOUD_MANAGER_STANDARD_ANNUAL",
              "CLOUD_MANAGER_STANDARD",
              "CLOUD_MANAGER_FREE_TRIAL",
              "ATLAS_INSTANCE_M0",
              "ATLAS_INSTANCE_M2",
              "ATLAS_INSTANCE_M5",
              "ATLAS_AWS_INSTANCE_M10",
              "ATLAS_AWS_INSTANCE_M20",
              "ATLAS_AWS_INSTANCE_M30",
              "ATLAS_AWS_INSTANCE_M40",
              "ATLAS_AWS_INSTANCE_M50",
              "ATLAS_AWS_INSTANCE_M60",
              "ATLAS_AWS_INSTANCE_M80",
              "ATLAS_AWS_INSTANCE_M100",
              "ATLAS_AWS_INSTANCE_M140",
              "ATLAS_AWS_INSTANCE_M200",
              "ATLAS_AWS_INSTANCE_M300",
              "ATLAS_AWS_INSTANCE_M40_LOW_CPU",
              "ATLAS_AWS_INSTANCE_M50_LOW_CPU",
              "ATLAS_AWS_INSTANCE_M60_LOW_CPU",
              "ATLAS_AWS_INSTANCE_M80_LOW_CPU",
              "ATLAS_AWS_INSTANCE_M200_LOW_CPU",
              "ATLAS_AWS_INSTANCE_M300_LOW_CPU",
              "ATLAS_AWS_INSTANCE_M400_LOW_CPU",
              "ATLAS_AWS_INSTANCE_M700_LOW_CPU",
              "ATLAS_AWS_INSTANCE_M40_NVME",
              "ATLAS_AWS_INSTANCE_M50_NVME",
              "ATLAS_AWS_INSTANCE_M60_NVME",
              "ATLAS_AWS_INSTANCE_M80_NVME",
              "ATLAS_AWS_INSTANCE_M200_NVME",
              "ATLAS_AWS_INSTANCE_M400_NVME",
              "ATLAS_AWS_INSTANCE_M10_PAUSED",
              "ATLAS_AWS_INSTANCE_M20_PAUSED",
              "ATLAS_AWS_INSTANCE_M30_PAUSED",
              "ATLAS_AWS_INSTANCE_M40_PAUSED",
              "ATLAS_AWS_INSTANCE_M50_PAUSED",
              "ATLAS_AWS_INSTANCE_M60_PAUSED",
              "ATLAS_AWS_INSTANCE_M80_PAUSED",
              "ATLAS_AWS_INSTANCE_M100_PAUSED",
              "ATLAS_AWS_INSTANCE_M140_PAUSED",
              "ATLAS_AWS_INSTANCE_M200_PAUSED",
              "ATLAS_AWS_INSTANCE_M300_PAUSED",
              "ATLAS_AWS_INSTANCE_M40_LOW_CPU_PAUSED",
              "ATLAS_AWS_INSTANCE_M50_LOW_CPU_PAUSED",
              "ATLAS_AWS_INSTANCE_M60_LOW_CPU_PAUSED",
              "ATLAS_AWS_INSTANCE_M80_LOW_CPU_PAUSED",
              "ATLAS_AWS_INSTANCE_M200_LOW_CPU_PAUSED",
              "ATLAS_AWS_INSTANCE_M300_LOW_CPU_PAUSED",
              "ATLAS_AWS_INSTANCE_M400_LOW_CPU_PAUSED",
              "ATLAS_AWS_INSTANCE_M700_LOW_CPU_PAUSED",
              "ATLAS_AWS_SEARCH_INSTANCE_S20_COMPUTE_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S30_COMPUTE_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S40_COMPUTE_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S50_COMPUTE_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S60_COMPUTE_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S70_COMPUTE_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S80_COMPUTE_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S30_MEMORY_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S40_MEMORY_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S50_MEMORY_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S60_MEMORY_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S80_MEMORY_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S90_MEMORY_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S100_MEMORY_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S110_MEMORY_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S40_STORAGE_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S50_STORAGE_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S60_STORAGE_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S80_STORAGE_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S90_STORAGE_NVME",
              "ATLAS_AWS_STORAGE_PROVISIONED",
              "ATLAS_AWS_STORAGE_STANDARD",
              "ATLAS_AWS_STORAGE_STANDARD_GP3",
              "ATLAS_AWS_STORAGE_IOPS",
              "ATLAS_AWS_DATA_TRANSFER_SAME_REGION",
              "ATLAS_AWS_DATA_TRANSFER_DIFFERENT_REGION",
              "ATLAS_AWS_DATA_TRANSFER_INTERNET",
              "ATLAS_AWS_TIME_BASED_SNAPSHOT_COPY_LEVEL_1",
              "ATLAS_AWS_TIME_BASED_SNAPSHOT_COPY_LEVEL_2",
              "ATLAS_AWS_TIME_BASED_SNAPSHOT_COPY_LEVEL_3",
              "ATLAS_AWS_TIME_BASED_SNAPSHOT_COPY_LEVEL_4",
              "ATLAS_AWS_TIME_BASED_SNAPSHOT_COPY_LEVEL_5",
              "ATLAS_AWS_TIME_BASED_SNAPSHOT_COPY_LEVEL_6",
              "ATLAS_AWS_TIME_BASED_SNAPSHOT_COPY_LEVEL_7",
              "ATLAS_AWS_BACKUP_SNAPSHOT_STORAGE",
              "ATLAS_AWS_BACKUP_DOWNLOAD_VM",
              "ATLAS_AWS_BACKUP_DOWNLOAD_VM_STORAGE",
              "ATLAS_AWS_BACKUP_DOWNLOAD_VM_STORAGE_IOPS",
              "ATLAS_AWS_PRIVATE_ENDPOINT",
              "ATLAS_AWS_PRIVATE_ENDPOINT_CAPACITY_UNITS",
              "ATLAS_GCP_SEARCH_INSTANCE_S20_COMPUTE_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S30_COMPUTE_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S40_COMPUTE_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S50_COMPUTE_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S60_COMPUTE_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S70_COMPUTE_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S80_COMPUTE_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S30_MEMORY_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S40_MEMORY_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S50_MEMORY_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S60_MEMORY_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S70_MEMORY_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S80_MEMORY_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S90_MEMORY_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S100_MEMORY_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S110_MEMORY_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S120_MEMORY_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S130_MEMORY_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S140_MEMORY_LOCALSSD",
              "ATLAS_GCP_INSTANCE_M10",
              "ATLAS_GCP_INSTANCE_M20",
              "ATLAS_GCP_INSTANCE_M30",
              "ATLAS_GCP_INSTANCE_M40",
              "ATLAS_GCP_INSTANCE_M50",
              "ATLAS_GCP_INSTANCE_M60",
              "ATLAS_GCP_INSTANCE_M80",
              "ATLAS_GCP_INSTANCE_M140",
              "ATLAS_GCP_INSTANCE_M200",
              "ATLAS_GCP_INSTANCE_M250",
              "ATLAS_GCP_INSTANCE_M300",
              "ATLAS_GCP_INSTANCE_M400",
              "ATLAS_GCP_INSTANCE_M40_LOW_CPU",
              "ATLAS_GCP_INSTANCE_M50_LOW_CPU",
              "ATLAS_GCP_INSTANCE_M60_LOW_CPU",
              "ATLAS_GCP_INSTANCE_M80_LOW_CPU",
              "ATLAS_GCP_INSTANCE_M200_LOW_CPU",
              "ATLAS_GCP_INSTANCE_M300_LOW_CPU",
              "ATLAS_GCP_INSTANCE_M400_LOW_CPU",
              "ATLAS_GCP_INSTANCE_M600_LOW_CPU",
              "ATLAS_GCP_INSTANCE_M10_PAUSED",
              "ATLAS_GCP_INSTANCE_M20_PAUSED",
              "ATLAS_GCP_INSTANCE_M30_PAUSED",
              "ATLAS_GCP_INSTANCE_M40_PAUSED",
              "ATLAS_GCP_INSTANCE_M50_PAUSED",
              "ATLAS_GCP_INSTANCE_M60_PAUSED",
              "ATLAS_GCP_INSTANCE_M80_PAUSED",
              "ATLAS_GCP_INSTANCE_M140_PAUSED",
              "ATLAS_GCP_INSTANCE_M200_PAUSED",
              "ATLAS_GCP_INSTANCE_M250_PAUSED",
              "ATLAS_GCP_INSTANCE_M300_PAUSED",
              "ATLAS_GCP_INSTANCE_M400_PAUSED",
              "ATLAS_GCP_INSTANCE_M40_LOW_CPU_PAUSED",
              "ATLAS_GCP_INSTANCE_M50_LOW_CPU_PAUSED",
              "ATLAS_GCP_INSTANCE_M60_LOW_CPU_PAUSED",
              "ATLAS_GCP_INSTANCE_M80_LOW_CPU_PAUSED",
              "ATLAS_GCP_INSTANCE_M200_LOW_CPU_PAUSED",
              "ATLAS_GCP_INSTANCE_M300_LOW_CPU_PAUSED",
              "ATLAS_GCP_INSTANCE_M400_LOW_CPU_PAUSED",
              "ATLAS_GCP_INSTANCE_M600_LOW_CPU_PAUSED",
              "ATLAS_GCP_DATA_TRANSFER_INTERNET",
              "ATLAS_GCP_STORAGE_SSD",
              "ATLAS_GCP_DATA_TRANSFER_INTER_CONNECT",
              "ATLAS_GCP_DATA_TRANSFER_INTER_ZONE",
              "ATLAS_GCP_DATA_TRANSFER_INTER_REGION",
              "ATLAS_GCP_DATA_TRANSFER_GOOGLE",
              "ATLAS_GCP_BACKUP_SNAPSHOT_STORAGE",
              "ATLAS_GCP_BACKUP_DOWNLOAD_VM",
              "ATLAS_GCP_BACKUP_DOWNLOAD_VM_STORAGE",
              "ATLAS_GCP_PRIVATE_ENDPOINT",
              "ATLAS_GCP_PRIVATE_ENDPOINT_CAPACITY_UNITS",
              "ATLAS_GCP_SNAPSHOT_COPY_DATA_TRANSFER",
              "ATLAS_AZURE_INSTANCE_M10",
              "ATLAS_AZURE_INSTANCE_M20",
              "ATLAS_AZURE_INSTANCE_M30",
              "ATLAS_AZURE_INSTANCE_M40",
              "ATLAS_AZURE_INSTANCE_M50",
              "ATLAS_AZURE_INSTANCE_M60",
              "ATLAS_AZURE_INSTANCE_M80",
              "ATLAS_AZURE_INSTANCE_M90",
              "ATLAS_AZURE_INSTANCE_M200",
              "ATLAS_AZURE_INSTANCE_R40",
              "ATLAS_AZURE_INSTANCE_R50",
              "ATLAS_AZURE_INSTANCE_R60",
              "ATLAS_AZURE_INSTANCE_R80",
              "ATLAS_AZURE_INSTANCE_R200",
              "ATLAS_AZURE_INSTANCE_R300",
              "ATLAS_AZURE_INSTANCE_R400",
              "ATLAS_AZURE_INSTANCE_M60_NVME",
              "ATLAS_AZURE_INSTANCE_M80_NVME",
              "ATLAS_AZURE_INSTANCE_M200_NVME",
              "ATLAS_AZURE_INSTANCE_M300_NVME",
              "ATLAS_AZURE_INSTANCE_M400_NVME",
              "ATLAS_AZURE_INSTANCE_M600_NVME",
              "ATLAS_AZURE_INSTANCE_M10_PAUSED",
              "ATLAS_AZURE_INSTANCE_M20_PAUSED",
              "ATLAS_AZURE_INSTANCE_M30_PAUSED",
              "ATLAS_AZURE_INSTANCE_M40_PAUSED",
              "ATLAS_AZURE_INSTANCE_M50_PAUSED",
              "ATLAS_AZURE_INSTANCE_M60_PAUSED",
              "ATLAS_AZURE_INSTANCE_M80_PAUSED",
              "ATLAS_AZURE_INSTANCE_M90_PAUSED",
              "ATLAS_AZURE_INSTANCE_M200_PAUSED",
              "ATLAS_AZURE_INSTANCE_R40_PAUSED",
              "ATLAS_AZURE_INSTANCE_R50_PAUSED",
              "ATLAS_AZURE_INSTANCE_R60_PAUSED",
              "ATLAS_AZURE_INSTANCE_R80_PAUSED",
              "ATLAS_AZURE_INSTANCE_R200_PAUSED",
              "ATLAS_AZURE_INSTANCE_R300_PAUSED",
              "ATLAS_AZURE_INSTANCE_R400_PAUSED",
              "ATLAS_AZURE_SEARCH_INSTANCE_S20_COMPUTE_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S30_COMPUTE_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S40_COMPUTE_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S50_COMPUTE_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S60_COMPUTE_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S70_COMPUTE_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S80_COMPUTE_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S40_MEMORY_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S50_MEMORY_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S60_MEMORY_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S80_MEMORY_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S90_MEMORY_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S100_MEMORY_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S110_MEMORY_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S130_MEMORY_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S135_MEMORY_LOCALSSD",
              "ATLAS_AZURE_STORAGE_P2",
              "ATLAS_AZURE_STORAGE_P3",
              "ATLAS_AZURE_STORAGE_P4",
              "ATLAS_AZURE_STORAGE_P6",
              "ATLAS_AZURE_STORAGE_P10",
              "ATLAS_AZURE_STORAGE_P15",
              "ATLAS_AZURE_STORAGE_P20",
              "ATLAS_AZURE_STORAGE_P30",
              "ATLAS_AZURE_STORAGE_P40",
              "ATLAS_AZURE_STORAGE_P50",
              "ATLAS_AZURE_DATA_TRANSFER",
              "ATLAS_AZURE_DATA_TRANSFER_REGIONAL_VNET_IN",
              "ATLAS_AZURE_DATA_TRANSFER_REGIONAL_VNET_OUT",
              "ATLAS_AZURE_DATA_TRANSFER_GLOBAL_VNET_IN",
              "ATLAS_AZURE_DATA_TRANSFER_GLOBAL_VNET_OUT",
              "ATLAS_AZURE_DATA_TRANSFER_AVAILABILITY_ZONE_IN",
              "ATLAS_AZURE_DATA_TRANSFER_AVAILABILITY_ZONE_OUT",
              "ATLAS_AZURE_DATA_TRANSFER_INTER_REGION_INTRA_CONTINENT",
              "ATLAS_AZURE_DATA_TRANSFER_INTER_REGION_INTER_CONTINENT",
              "ATLAS_AZURE_BACKUP_SNAPSHOT_STORAGE",
              "ATLAS_AZURE_BACKUP_DOWNLOAD_VM",
              "ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P2",
              "ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P3",
              "ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P4",
              "ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P6",
              "ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P10",
              "ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P15",
              "ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P20",
              "ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P30",
              "ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P40",
              "ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P50",
              "ATLAS_AZURE_STANDARD_STORAGE",
              "ATLAS_AZURE_EXTENDED_STANDARD_IOPS",
              "ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE",
              "ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_EXTENDED_IOPS",
              "ATLAS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE",
              "ATLAS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_EXTENDED_IOPS",
              "ATLAS_BI_CONNECTOR",
              "ATLAS_ADVANCED_SECURITY",
              "ATLAS_ENTERPRISE_AUDITING",
              "ATLAS_FREE_SUPPORT",
              "ATLAS_SUPPORT",
              "ATLAS_NDS_BACKFILL_SUPPORT",
              "STITCH_DATA_DOWNLOADED_FREE_TIER",
              "STITCH_DATA_DOWNLOADED",
              "STITCH_COMPUTE_FREE_TIER",
              "STITCH_COMPUTE",
              "CREDIT",
              "MINIMUM_CHARGE",
              "CHARTS_DATA_DOWNLOADED_FREE_TIER",
              "CHARTS_DATA_DOWNLOADED",
              "ATLAS_DATA_LAKE_AWS_DATA_RETURNED_SAME_REGION",
              "ATLAS_DATA_LAKE_AWS_DATA_RETURNED_DIFFERENT_REGION",
              "ATLAS_DATA_LAKE_AWS_DATA_RETURNED_INTERNET",
              "ATLAS_DATA_LAKE_AWS_DATA_SCANNED",
              "ATLAS_DATA_LAKE_AWS_DATA_TRANSFERRED_FROM_DIFFERENT_REGION",
              "ATLAS_NDS_AWS_DATA_LAKE_STORAGE_ACCESS",
              "ATLAS_NDS_AWS_DATA_LAKE_STORAGE",
              "ATLAS_DATA_FEDERATION_AZURE_DATA_RETURNED_SAME_REGION",
              "ATLAS_DATA_FEDERATION_AZURE_DATA_RETURNED_SAME_CONTINENT",
              "ATLAS_DATA_FEDERATION_AZURE_DATA_RETURNED_DIFFERENT_CONTINENT",
              "ATLAS_DATA_FEDERATION_AZURE_DATA_RETURNED_INTERNET",
              "ATLAS_DATA_FEDERATION_GCP_DATA_RETURNED_SAME_REGION",
              "ATLAS_DATA_FEDERATION_GCP_DATA_RETURNED_DIFFERENT_REGION",
              "ATLAS_DATA_FEDERATION_GCP_DATA_RETURNED_INTERNET",
              "ATLAS_DATA_FEDERATION_AZURE_DATA_SCANNED",
              "ATLAS_NDS_AZURE_DATA_LAKE_STORAGE_ACCESS",
              "ATLAS_NDS_AZURE_DATA_LAKE_STORAGE",
              "ATLAS_DATA_FEDERATION_GCP_DATA_SCANNED",
              "ATLAS_NDS_GCP_DATA_LAKE_STORAGE_ACCESS",
              "ATLAS_NDS_GCP_DATA_LAKE_STORAGE",
              "ATLAS_NDS_AWS_OBJECT_STORAGE_ACCESS",
              "ATLAS_NDS_AWS_COMPRESSED_OBJECT_STORAGE",
              "ATLAS_NDS_AZURE_OBJECT_STORAGE_ACCESS",
              "ATLAS_NDS_AZURE_OBJECT_STORAGE",
              "ATLAS_NDS_AZURE_COMPRESSED_OBJECT_STORAGE",
              "ATLAS_NDS_GCP_OBJECT_STORAGE_ACCESS",
              "ATLAS_NDS_GCP_OBJECT_STORAGE",
              "ATLAS_NDS_GCP_COMPRESSED_OBJECT_STORAGE",
              "ATLAS_ARCHIVE_ACCESS_PARTITION_LOCATE",
              "ATLAS_NDS_AWS_PIT_RESTORE_STORAGE_FREE_TIER",
              "ATLAS_NDS_AWS_PIT_RESTORE_STORAGE",
              "ATLAS_NDS_GCP_PIT_RESTORE_STORAGE_FREE_TIER",
              "ATLAS_NDS_GCP_PIT_RESTORE_STORAGE",
              "ATLAS_NDS_AZURE_PIT_RESTORE_STORAGE_FREE_TIER",
              "ATLAS_NDS_AZURE_PIT_RESTORE_STORAGE",
              "ATLAS_NDS_AZURE_PRIVATE_ENDPOINT_CAPACITY_UNITS",
              "ATLAS_NDS_AZURE_CMK_PRIVATE_NETWORKING",
              "ATLAS_NDS_AWS_CMK_PRIVATE_NETWORKING",
              "ATLAS_NDS_AWS_OBJECT_STORAGE",
              "ATLAS_NDS_AWS_SNAPSHOT_EXPORT_UPLOAD",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_UPLOAD",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_M40",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_M50",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_M60",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P2",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P3",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P4",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P6",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P10",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P15",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P20",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P30",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P40",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P50",
              "ATLAS_NDS_AWS_SNAPSHOT_EXPORT_VM",
              "ATLAS_NDS_AWS_SNAPSHOT_EXPORT_VM_M40",
              "ATLAS_NDS_AWS_SNAPSHOT_EXPORT_VM_M50",
              "ATLAS_NDS_AWS_SNAPSHOT_EXPORT_VM_M60",
              "ATLAS_NDS_AWS_SNAPSHOT_EXPORT_VM_STORAGE",
              "ATLAS_NDS_AWS_SNAPSHOT_EXPORT_VM_STORAGE_IOPS",
              "ATLAS_NDS_GCP_SNAPSHOT_EXPORT_UPLOAD",
              "ATLAS_NDS_GCP_SNAPSHOT_EXPORT_VM",
              "ATLAS_NDS_GCP_SNAPSHOT_EXPORT_VM_M40",
              "ATLAS_NDS_GCP_SNAPSHOT_EXPORT_VM_M50",
              "ATLAS_NDS_GCP_SNAPSHOT_EXPORT_VM_M60",
              "ATLAS_NDS_GCP_SNAPSHOT_EXPORT_VM_STORAGE",
              "ATLAS_NDS_AWS_SERVERLESS_RPU",
              "ATLAS_NDS_AWS_SERVERLESS_WPU",
              "ATLAS_NDS_AWS_SERVERLESS_STORAGE",
              "ATLAS_NDS_AWS_SERVERLESS_CONTINUOUS_BACKUP",
              "ATLAS_NDS_AWS_SERVERLESS_BACKUP_RESTORE_VM",
              "ATLAS_NDS_AWS_SERVERLESS_DATA_TRANSFER_PREVIEW",
              "ATLAS_NDS_AWS_SERVERLESS_DATA_TRANSFER",
              "ATLAS_NDS_AWS_SERVERLESS_DATA_TRANSFER_REGIONAL",
              "ATLAS_NDS_AWS_SERVERLESS_DATA_TRANSFER_CROSS_REGION",
              "ATLAS_NDS_AWS_SERVERLESS_DATA_TRANSFER_INTERNET",
              "ATLAS_NDS_GCP_SERVERLESS_RPU",
              "ATLAS_NDS_GCP_SERVERLESS_WPU",
              "ATLAS_NDS_GCP_SERVERLESS_STORAGE",
              "ATLAS_NDS_GCP_SERVERLESS_CONTINUOUS_BACKUP",
              "ATLAS_NDS_GCP_SERVERLESS_BACKUP_RESTORE_VM",
              "ATLAS_NDS_GCP_SERVERLESS_DATA_TRANSFER_PREVIEW",
              "ATLAS_NDS_GCP_SERVERLESS_DATA_TRANSFER",
              "ATLAS_NDS_GCP_SERVERLESS_DATA_TRANSFER_REGIONAL",
              "ATLAS_NDS_GCP_SERVERLESS_DATA_TRANSFER_CROSS_REGION",
              "ATLAS_NDS_GCP_SERVERLESS_DATA_TRANSFER_INTERNET",
              "ATLAS_NDS_AZURE_SERVERLESS_RPU",
              "ATLAS_NDS_AZURE_SERVERLESS_WPU",
              "ATLAS_NDS_AZURE_SERVERLESS_STORAGE",
              "ATLAS_NDS_AZURE_SERVERLESS_CONTINUOUS_BACKUP",
              "ATLAS_NDS_AZURE_SERVERLESS_BACKUP_RESTORE_VM",
              "ATLAS_NDS_AZURE_SERVERLESS_DATA_TRANSFER_PREVIEW",
              "ATLAS_NDS_AZURE_SERVERLESS_DATA_TRANSFER",
              "ATLAS_NDS_AZURE_SERVERLESS_DATA_TRANSFER_REGIONAL",
              "ATLAS_NDS_AZURE_SERVERLESS_DATA_TRANSFER_CROSS_REGION",
              "ATLAS_NDS_AZURE_SERVERLESS_DATA_TRANSFER_INTERNET",
              "REALM_APP_REQUESTS_FREE_TIER",
              "REALM_APP_REQUESTS",
              "REALM_APP_COMPUTE_FREE_TIER",
              "REALM_APP_COMPUTE",
              "REALM_APP_SYNC_FREE_TIER",
              "REALM_APP_SYNC",
              "REALM_APP_DATA_TRANSFER_FREE_TIER",
              "REALM_APP_DATA_TRANSFER",
              "GCP_SNAPSHOT_COPY_DISK",
              "ATLAS_AWS_STREAM_PROCESSING_INSTANCE_SP10",
              "ATLAS_AWS_STREAM_PROCESSING_INSTANCE_SP30",
              "ATLAS_AWS_STREAM_PROCESSING_INSTANCE_SP50",
              "ATLAS_AZURE_STREAM_PROCESSING_INSTANCE_SP10",
              "ATLAS_AZURE_STREAM_PROCESSING_INSTANCE_SP30",
              "ATLAS_AZURE_STREAM_PROCESSING_INSTANCE_SP50",
              "ATLAS_AWS_STREAM_PROCESSING_DATA_TRANSFER",
              "ATLAS_AZURE_STREAM_PROCESSING_DATA_TRANSFER",
              "ATLAS_AWS_STREAM_PROCESSING_VPC_PEERING",
              "ATLAS_AZURE_STREAM_PROCESSING_PRIVATELINK",
              "ATLAS_AWS_STREAM_PROCESSING_PRIVATELINK",
              "ATLAS_FLEX_AWS_100_USAGE_HOURS",
              "ATLAS_FLEX_AWS_200_USAGE_HOURS",
              "ATLAS_FLEX_AWS_300_USAGE_HOURS",
              "ATLAS_FLEX_AWS_400_USAGE_HOURS",
              "ATLAS_FLEX_AWS_500_USAGE_HOURS",
              "ATLAS_FLEX_AZURE_100_USAGE_HOURS",
              "ATLAS_FLEX_AZURE_200_USAGE_HOURS",
              "ATLAS_FLEX_AZURE_300_USAGE_HOURS",
              "ATLAS_FLEX_AZURE_400_USAGE_HOURS",
              "ATLAS_FLEX_AZURE_500_USAGE_HOURS",
              "ATLAS_FLEX_GCP_100_USAGE_HOURS",
              "ATLAS_FLEX_GCP_200_USAGE_HOURS",
              "ATLAS_FLEX_GCP_300_USAGE_HOURS",
              "ATLAS_FLEX_GCP_400_USAGE_HOURS",
              "ATLAS_FLEX_GCP_500_USAGE_HOURS",
              "ATLAS_FLEX_AWS_LEGACY_100_USAGE_HOURS",
              "ATLAS_FLEX_AWS_LEGACY_200_USAGE_HOURS",
              "ATLAS_FLEX_AWS_LEGACY_300_USAGE_HOURS",
              "ATLAS_FLEX_AWS_LEGACY_400_USAGE_HOURS",
              "ATLAS_FLEX_AWS_LEGACY_500_USAGE_HOURS",
              "ATLAS_FLEX_AZURE_LEGACY_100_USAGE_HOURS",
              "ATLAS_FLEX_AZURE_LEGACY_200_USAGE_HOURS",
              "ATLAS_FLEX_AZURE_LEGACY_300_USAGE_HOURS",
              "ATLAS_FLEX_AZURE_LEGACY_400_USAGE_HOURS",
              "ATLAS_FLEX_AZURE_LEGACY_500_USAGE_HOURS",
              "ATLAS_FLEX_GCP_LEGACY_100_USAGE_HOURS",
              "ATLAS_FLEX_GCP_LEGACY_200_USAGE_HOURS",
              "ATLAS_FLEX_GCP_LEGACY_300_USAGE_HOURS",
              "ATLAS_FLEX_GCP_LEGACY_400_USAGE_HOURS",
              "ATLAS_FLEX_GCP_LEGACY_500_USAGE_HOURS",
              "ATLAS_GCP_STREAM_PROCESSING_INSTANCE_SP10",
              "ATLAS_GCP_STREAM_PROCESSING_INSTANCE_SP30",
              "ATLAS_GCP_STREAM_PROCESSING_INSTANCE_SP50",
              "ATLAS_GCP_STREAM_PROCESSING_DATA_TRANSFER",
              "ATLAS_GCP_STREAM_PROCESSING_PRIVATELINK"
            ],
            "readOnly": true,
            "type": "string"
          },
          "startDate": {
            "description": "Date and time when MongoDB Cloud began charging for this line item. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "stitchAppName": {
            "description": "Human-readable label that identifies the Atlas App Services application associated with this line item.",
            "externalDocs": {
              "description": "Create a new Atlas App Service",
              "url": "https://www.mongodb.com/docs/atlas/app-services/manage-apps/create/create-with-ui/"
            },
            "readOnly": true,
            "type": "string"
          },
          "tags": {
            "additionalProperties": {
              "description": "A map of key-value pairs corresponding to the tags associated with the line item resource.",
              "items": {
                "description": "A map of key-value pairs corresponding to the tags associated with the line item resource.",
                "readOnly": true,
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "description": "A map of key-value pairs corresponding to the tags associated with the line item resource.",
            "readOnly": true,
            "type": "object"
          },
          "tierLowerBound": {
            "description": "Lower bound for usage amount range in current SKU tier. \n\n**NOTE**: **lineItems[n].tierLowerBound** appears only if your **lineItems[n].sku** is tiered.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "tierUpperBound": {
            "description": "Upper bound for usage amount range in current SKU tier. \n\n**NOTE**: **lineItems[n].tierUpperBound** appears only if your **lineItems[n].sku** is tiered.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "totalPriceCents": {
            "description": "Sum of the cost set for this line item. MongoDB Cloud expresses this value in cents (100ths of one US Dollar) and calculates this value as **unitPriceDollars** × **quantity** × 100.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "unit": {
            "description": "Element used to express what **quantity** this line item measures. This value can be elements of time, storage capacity, and the like.",
            "readOnly": true,
            "type": "string"
          },
          "unitPriceDollars": {
            "description": "Value per **unit** for this line item expressed in US Dollars.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          }
        },
        "title": "Line Item",
        "type": "object"
      },
      "LDAPVerifyConnectivityJobRequest": {
        "properties": {
          "groupId": {
            "description": "Unique 24-hexadecimal digit string that identifies the project associated with this Lightweight Directory Access Protocol (LDAP) over Transport Layer Security (TLS) configuration.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "request": {
            "$ref": "#/components/schemas/LDAPVerifyConnectivityJobRequestParams"
          },
          "requestId": {
            "description": "Unique 24-hexadecimal digit string that identifies this request to verify an Lightweight Directory Access Protocol (LDAP) configuration.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "description": "Human-readable string that indicates the status of the Lightweight Directory Access Protocol (LDAP) over Transport Layer Security (TLS) configuration.",
            "enum": [
              "FAIL",
              "PENDING",
              "SUCCESS"
            ],
            "readOnly": true,
            "type": "string"
          },
          "validations": {
            "description": "List that contains the validation messages related to the verification of the provided Lightweight Directory Access Protocol (LDAP) over Transport Layer Security (TLS) configuration details. The list contains a document for each test that MongoDB Cloud runs. MongoDB Cloud stops running tests after the first failure.",
            "items": {
              "$ref": "#/components/schemas/LDAPVerifyConnectivityJobRequestValidation"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "LDAPVerifyConnectivityJobRequestParams": {
        "description": "Request information needed to verify an Lightweight Directory Access Protocol (LDAP) over Transport Layer Security (TLS) configuration. The response does not return the **bindPassword**.",
        "properties": {
          "authzQueryTemplate": {
            "default": "{USER}?memberOf?base",
            "description": "Lightweight Directory Access Protocol (LDAP) query template that MongoDB Cloud applies to create an LDAP query to return the LDAP groups associated with the authenticated MongoDB user. MongoDB Cloud uses this parameter only for user authorization.\n\nUse the `{USER}` placeholder in the Uniform Resource Locator (URL) to substitute the authenticated username. The query relates to the host specified with the hostname. Format this query per [RFC 4515](https://datatracker.ietf.org/doc/html/rfc4515) and [RFC 4516](https://datatracker.ietf.org/doc/html/rfc4516).",
            "example": "{USER}?memberOf?base",
            "type": "string",
            "writeOnly": true
          },
          "bindPassword": {
            "description": "Password that MongoDB Cloud uses to authenticate the **bindUsername**.",
            "type": "string",
            "writeOnly": true
          },
          "bindUsername": {
            "description": "Full Distinguished Name (DN) of the Lightweight Directory Access Protocol (LDAP) user that MongoDB Cloud uses to connect to the LDAP host. LDAP distinguished names must be formatted according to RFC 2253.",
            "example": "CN=BindUser,CN=Users,DC=myldapserver,DC=mycompany,DC=com",
            "externalDocs": {
              "description": "RFC 2253",
              "url": "https://tools.ietf.org/html/2253"
            },
            "pattern": "^(?:(?<cn>CN=(?<name>[^,]*)),)?(?:(?<path>(?:(?:CN|OU)=[^,]+,?)+),)?(?<domain>(?:DC=[^,]+,?)+)$",
            "type": "string"
          },
          "caCertificate": {
            "description": "Certificate Authority (CA) certificate that MongoDB Cloud uses to verify the identity of the Lightweight Directory Access Protocol (LDAP) host. MongoDB Cloud allows self-signed certificates. To delete an assigned value, pass an empty string: `\"caCertificate\": \"\"`.",
            "type": "string"
          },
          "hostname": {
            "description": "Human-readable label that identifies the hostname or Internet Protocol (IP) address of the Lightweight Directory Access Protocol (LDAP) host. This host must have access to the internet or have a Virtual Private Cloud (VPC) peering connection to your cluster.",
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?$",
            "type": "string"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "port": {
            "default": 636,
            "description": "IANA port to which the Lightweight Directory Access Protocol (LDAP) host listens for client connections.",
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "bindPassword",
          "bindUsername",
          "hostname",
          "port"
        ],
        "type": "object"
      },
      "LDAPVerifyConnectivityJobRequestValidation": {
        "description": "One test that MongoDB Cloud runs to test verification of the provided Lightweight Directory Access Protocol (LDAP) over Transport Layer Security (TLS) configuration details.",
        "properties": {
          "status": {
            "description": "Human-readable string that indicates the result of this verification test.",
            "enum": [
              "FAIL",
              "OK"
            ],
            "readOnly": true,
            "type": "string"
          },
          "validationType": {
            "description": "Human-readable label that identifies this verification test that MongoDB Cloud runs.",
            "enum": [
              "AUTHENTICATE",
              "AUTHORIZATION_ENABLED",
              "CONNECT",
              "PARSE_AUTHZ_QUERY",
              "QUERY_SERVER",
              "SERVER_SPECIFIED",
              "TEMPLATE"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "readOnly": true,
        "type": "object"
      },
      "License": {
        "description": "License information of the MongoDB Atlas Administration API.",
        "properties": {
          "name": {
            "description": "Name of the license.",
            "example": "CC BY-NC-SA 3.0 US",
            "type": "string"
          },
          "url": {
            "description": "URL of the license.",
            "example": "https://creativecommons.org/licenses/by-nc-sa/3.0/us/",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Link": {
        "properties": {
          "href": {
            "description": "Uniform Resource Locator (URL) that points another API resource to which this response has some relationship. This URL often begins with `https://cloud.mongodb.com/api/atlas`.",
            "example": "https://cloud.mongodb.com/api/atlas",
            "type": "string"
          },
          "rel": {
            "description": "Uniform Resource Locator (URL) that defines the semantic relationship between this resource and another API resource. This URL often begins with `https://cloud.mongodb.com/api/atlas`.",
            "example": "self",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MatcherHostType": {
        "description": "Value to match or exceed using the specified **matchers.operator**.",
        "enum": [
          "STANDALONE",
          "PRIMARY",
          "SECONDARY",
          "ARBITER",
          "MONGOS",
          "CONFIG",
          "MONGOT"
        ],
        "example": "STANDALONE",
        "title": "Matcher Host Types",
        "type": "string"
      },
      "MonthlyScheduleView": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OnlineArchiveSchedule"
          },
          {
            "properties": {
              "dayOfMonth": {
                "description": "Day of the month when the scheduled archive starts.",
                "format": "int32",
                "maximum": 31,
                "minimum": 1,
                "type": "integer"
              },
              "endHour": {
                "description": "Hour of the day when the scheduled window to run one online archive ends.",
                "format": "int32",
                "maximum": 23,
                "minimum": 0,
                "type": "integer"
              },
              "endMinute": {
                "description": "Minute of the hour when the scheduled window to run one online archive ends.",
                "format": "int32",
                "maximum": 59,
                "minimum": 0,
                "type": "integer"
              },
              "startHour": {
                "description": "Hour of the day when the when the scheduled window to run one online archive starts.",
                "format": "int32",
                "maximum": 23,
                "minimum": 0,
                "type": "integer"
              },
              "startMinute": {
                "description": "Minute of the hour when the scheduled window to run one online archive starts.",
                "format": "int32",
                "maximum": 59,
                "minimum": 0,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ],
        "required": [
          "type"
        ],
        "type": "object"
      },
      "NumberMetricEventView": {
        "properties": {
          "apiKeyId": {
            "description": "Unique 24-hexadecimal digit string that identifies the API Key that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "example": "32b6e34b3d91647abb20e7b8",
            "externalDocs": {
              "description": "Create Programmatic API Key",
              "url": "https://dochub.mongodb.org/core/atlas-create-prog-api-key"
            },
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "created": {
            "description": "Date and time when this event occurred. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "externalDocs": {
              "description": "ISO 8601",
              "url": "https://en.wikipedia.org/wiki/ISO_8601"
            },
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "currentValue": {
            "$ref": "#/components/schemas/NumberMetricValueView"
          },
          "deskLocation": {
            "description": "Desk location of MongoDB employee associated with the event.",
            "readOnly": true,
            "type": "string"
          },
          "employeeIdentifier": {
            "description": "Identifier of MongoDB employee associated with the event.",
            "readOnly": true,
            "type": "string"
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/HostMetricEventTypeView"
          },
          "groupId": {
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "isGlobalAdmin": {
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "type": "boolean"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "metricName": {
            "description": "Human-readable label of the metric associated with the **alertId**. This field may change type of **currentValue** field.",
            "readOnly": true,
            "type": "string"
          },
          "orgId": {
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "port": {
            "description": "IANA port on which the MongoDB process listens for requests.",
            "example": 27017,
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "publicKey": {
            "description": "Public part of the API key that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "externalDocs": {
              "url": "https://dochub.mongodb.org/core/atlas-create-prog-api-key"
            },
            "readOnly": true,
            "type": "string"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "example": "216.172.40.186",
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "readOnly": true,
            "type": "string"
          },
          "replicaSetName": {
            "description": "Human-readable label of the replica set associated with the event.",
            "example": "event-replica-set",
            "readOnly": true,
            "type": "string"
          },
          "shardName": {
            "description": "Human-readable label of the shard associated with the event.",
            "example": "event-sh-01",
            "readOnly": true,
            "type": "string"
          },
          "userId": {
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "username": {
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "created",
          "eventTypeName",
          "id"
        ],
        "type": "object"
      },
      "NumberMetricUnits": {
        "description": "Element used to express the quantity. This can be an element of time, storage capacity, and the like.",
        "enum": [
          "COUNT",
          "THOUSAND",
          "MILLION",
          "BILLION"
        ],
        "example": "COUNT",
        "title": "Number Metric Units",
        "type": "string"
      },
      "NumberMetricValueView": {
        "description": "Measurement of the **metricName** recorded at the time of the event.",
        "properties": {
          "number": {
            "description": "Amount of the **metricName** recorded at the time of the event. This value triggered the alert.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "units": {
            "$ref": "#/components/schemas/NumberMetricUnits"
          }
        },
        "readOnly": true,
        "title": "Number Metric Value",
        "type": "object"
      },
      "OnDemandCpsSnapshotSource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IngestionSource"
          },
          {
            "properties": {
              "clusterName": {
                "description": "Human-readable name that identifies the cluster.",
                "type": "string"
              },
              "collectionName": {
                "description": "Human-readable name that identifies the collection.",
                "type": "string"
              },
              "databaseName": {
                "description": "Human-readable name that identifies the database.",
                "type": "string"
              },
              "groupId": {
                "description": "Unique 24-hexadecimal character string that identifies the project.",
                "example": "32b6e34b3d91647abb20e7b8",
                "pattern": "^([a-f0-9]{24})$",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "description": "On-Demand Cloud Provider Snapshots as Source for a Data Lake Pipeline.",
        "title": "On-Demand Cloud Provider Snapshot Source",
        "type": "object"
      },
      "OnlineArchiveSchedule": {
        "description": "Regular frequency and duration when archiving process occurs.",
        "discriminator": {
          "mapping": {
            "DAILY": "#/components/schemas/DailyScheduleView",
            "DEFAULT": "#/components/schemas/DefaultScheduleView",
            "MONTHLY": "#/components/schemas/MonthlyScheduleView",
            "WEEKLY": "#/components/schemas/WeeklyScheduleView"
          },
          "propertyName": "type"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/DefaultScheduleView"
          },
          {
            "$ref": "#/components/schemas/DailyScheduleView"
          },
          {
            "$ref": "#/components/schemas/WeeklyScheduleView"
          },
          {
            "$ref": "#/components/schemas/MonthlyScheduleView"
          }
        ],
        "properties": {
          "type": {
            "description": "Type of schedule.",
            "enum": [
              "DEFAULT",
              "DAILY",
              "WEEKLY",
              "MONTHLY"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "Online Archive Schedule",
        "type": "object"
      },
      "OpenApiInfo": {
        "properties": {
          "info": {
            "$ref": "#/components/schemas/Info"
          }
        },
        "type": "object"
      },
      "OrgActiveUserResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OrgUserResponse"
          },
          {
            "properties": {
              "country": {
                "description": "Two-character alphabetical string that identifies the MongoDB Cloud user's geographic location. This parameter uses the ISO 3166-1a2 code format.",
                "example": "US",
                "pattern": "^([A-Z]{2})$",
                "readOnly": true,
                "type": "string"
              },
              "createdAt": {
                "description": "Date and time when MongoDB Cloud created the current account. This value is in the ISO 8601 timestamp format in UTC.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "firstName": {
                "description": "First or given name that belongs to the MongoDB Cloud user.",
                "example": "John",
                "readOnly": true,
                "type": "string"
              },
              "lastAuth": {
                "description": "Date and time when the current account last authenticated. This value is in the ISO 8601 timestamp format in UTC.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "lastName": {
                "description": "Last name, family name, or surname that belongs to the MongoDB Cloud user.",
                "example": "Doe",
                "readOnly": true,
                "type": "string"
              },
              "mobileNumber": {
                "description": "Mobile phone number that belongs to the MongoDB Cloud user.",
                "pattern": "(?:(?:\\\\+?1\\\\s*(?:[.-]\\\\s*)?)?(?:(\\\\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\\\\s*)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\\\\s*(?:[.-]\\\\s*)?)([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2})\\\\s*(?:[.-]\\\\s*)?([0-9]{4})$",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "required": [
          "createdAt",
          "firstName",
          "id",
          "lastName",
          "orgMembershipStatus",
          "roles",
          "username"
        ],
        "type": "object"
      },
      "OrgPendingUserResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OrgUserResponse"
          },
          {
            "properties": {
              "invitationCreatedAt": {
                "description": "Date and time when MongoDB Cloud sent the invitation. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "invitationExpiresAt": {
                "description": "Date and time when the invitation from MongoDB Cloud expires. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "inviterUsername": {
                "description": "Username of the MongoDB Cloud user who sent the invitation to join the organization.",
                "format": "email",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "required": [
          "id",
          "invitationCreatedAt",
          "invitationExpiresAt",
          "inviterUsername",
          "orgMembershipStatus",
          "roles",
          "username"
        ],
        "type": "object"
      },
      "OrgUserResponse": {
        "discriminator": {
          "mapping": {
            "ACTIVE": "#/components/schemas/OrgActiveUserResponse",
            "PENDING": "#/components/schemas/OrgPendingUserResponse"
          },
          "propertyName": "orgMembershipStatus"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/OrgPendingUserResponse"
          },
          {
            "$ref": "#/components/schemas/OrgActiveUserResponse"
          }
        ],
        "properties": {
          "id": {
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud user.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "orgMembershipStatus": {
            "description": "String enum that indicates whether the MongoDB Cloud user has a pending invitation to join the organization or they are already active in the organization.",
            "enum": [
              "PENDING",
              "ACTIVE"
            ],
            "readOnly": true,
            "type": "string"
          },
          "roles": {
            "$ref": "#/components/schemas/OrgUserRolesResponse"
          },
          "teamIds": {
            "description": "List of unique 24-hexadecimal digit strings that identifies the teams to which this MongoDB Cloud user belongs.",
            "items": {
              "example": "32b6e34b3d91647abb20e7b8",
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            },
            "readOnly": true,
            "type": "array",
            "uniqueItems": true
          },
          "username": {
            "description": "Email address that represents the username of the MongoDB Cloud user.",
            "format": "email",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "id",
          "orgMembershipStatus",
          "roles",
          "username"
        ],
        "type": "object"
      },
      "OrgUserRolesResponse": {
        "description": "Organization- and project-level roles assigned to one MongoDB Cloud user within one organization.",
        "properties": {
          "groupRoleAssignments": {
            "description": "List of project-level role assignments assigned to the MongoDB Cloud user.",
            "items": {
              "$ref": "#/components/schemas/GroupRoleAssignment"
            },
            "type": "array"
          },
          "orgRoles": {
            "description": "One or more organization-level roles assigned to the MongoDB Cloud user.",
            "items": {
              "description": "Organization-level role.",
              "enum": [
                "ORG_OWNER",
                "ORG_GROUP_CREATOR",
                "ORG_BILLING_ADMIN",
                "ORG_BILLING_READ_ONLY",
                "ORG_STREAM_PROCESSING_ADMIN",
                "ORG_READ_ONLY",
                "ORG_MEMBER"
              ],
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          }
        },
        "readOnly": true,
        "type": "object"
      },
      "PerformanceAdvisorSlowQuery": {
        "description": "Details of one slow query that the Performance Advisor detected.",
        "properties": {
          "line": {
            "description": "Text of the MongoDB log related to this slow query.",
            "readOnly": true,
            "type": "string"
          },
          "metrics": {
            "$ref": "#/components/schemas/PerformanceAdvisorSlowQueryMetrics"
          },
          "namespace": {
            "description": "Human-readable label that identifies the namespace on the specified host. The resource expresses this parameter value as `<database>.<collection>`.",
            "readOnly": true,
            "type": "string"
          },
          "opType": {
            "description": "Operation type (read/write/command) associated with this slow query log.",
            "readOnly": true,
            "type": "string"
          },
          "replicaState": {
            "description": "Replica state associated with this slow query log.",
            "readOnly": true,
            "type": "string"
          }
        },
        "readOnly": true,
        "type": "object"
      },
      "PerformanceAdvisorSlowQueryMetrics": {
        "description": "Metrics from a slow query log.",
        "properties": {
          "docsExamined": {
            "description": "The number of documents in the collection that MongoDB scanned in order to carry out the operation.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "docsExaminedReturnedRatio": {
            "description": "Ratio of documents examined to documents returned.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "docsReturned": {
            "description": "The number of documents returned by the operation.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "fromUserConnection": {
            "description": "This boolean will be true when the server can identfiy the query source as non-server. This field is only available for MDB 8.0+.",
            "readOnly": true,
            "type": "boolean"
          },
          "hasIndexCoverage": {
            "description": "Indicates if the query has index coverage.",
            "readOnly": true,
            "type": "boolean"
          },
          "hasSort": {
            "description": "This boolean will be true when a query cannot use the ordering in the index to return the requested sorted results; i.e. MongoDB must sort the documents after it receives the documents from a cursor.",
            "readOnly": true,
            "type": "boolean"
          },
          "keysExamined": {
            "description": "The number of index keys that MongoDB scanned in order to carry out the operation.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "keysExaminedReturnedRatio": {
            "description": "Ratio of keys examined to documents returned.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "numYields": {
            "description": "The number of times the operation yielded to allow other operations to complete.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "operationExecutionTime": {
            "description": "Total execution time of a query in milliseconds.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "responseLength": {
            "description": "The length in bytes of the operation's result document.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          }
        },
        "readOnly": true,
        "type": "object"
      },
      "PeriodicCpsSnapshotSource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IngestionSource"
          },
          {
            "properties": {
              "clusterName": {
                "description": "Human-readable name that identifies the cluster.",
                "type": "string"
              },
              "collectionName": {
                "description": "Human-readable name that identifies the collection.",
                "type": "string"
              },
              "databaseName": {
                "description": "Human-readable name that identifies the database.",
                "type": "string"
              },
              "groupId": {
                "description": "Unique 24-hexadecimal character string that identifies the project.",
                "example": "32b6e34b3d91647abb20e7b8",
                "pattern": "^([a-f0-9]{24})$",
                "readOnly": true,
                "type": "string"
              },
              "policyItemId": {
                "description": "Unique 24-hexadecimal character string that identifies a policy item.",
                "example": "32b6e34b3d91647abb20e7b8",
                "pattern": "^([a-f0-9]{24})$",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "description": "Scheduled Cloud Provider Snapshot as Source for a Data Lake Pipeline.",
        "title": "Periodic Cloud Provider Snapshot Source",
        "type": "object"
      },
      "RawMetricEventView": {
        "properties": {
          "apiKeyId": {
            "description": "Unique 24-hexadecimal digit string that identifies the API Key that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "example": "32b6e34b3d91647abb20e7b8",
            "externalDocs": {
              "description": "Create Programmatic API Key",
              "url": "https://dochub.mongodb.org/core/atlas-create-prog-api-key"
            },
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "created": {
            "description": "Date and time when this event occurred. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "externalDocs": {
              "description": "ISO 8601",
              "url": "https://en.wikipedia.org/wiki/ISO_8601"
            },
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "currentValue": {
            "$ref": "#/components/schemas/RawMetricValueView"
          },
          "deskLocation": {
            "description": "Desk location of MongoDB employee associated with the event.",
            "readOnly": true,
            "type": "string"
          },
          "employeeIdentifier": {
            "description": "Identifier of MongoDB employee associated with the event.",
            "readOnly": true,
            "type": "string"
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/HostMetricEventTypeView"
          },
          "groupId": {
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "isGlobalAdmin": {
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "type": "boolean"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "metricName": {
            "description": "Human-readable label of the metric associated with the **alertId**. This field may change type of **currentValue** field.",
            "readOnly": true,
            "type": "string"
          },
          "orgId": {
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "port": {
            "description": "IANA port on which the MongoDB process listens for requests.",
            "example": 27017,
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "publicKey": {
            "description": "Public part of the API key that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "externalDocs": {
              "url": "https://dochub.mongodb.org/core/atlas-create-prog-api-key"
            },
            "readOnly": true,
            "type": "string"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "example": "216.172.40.186",
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "readOnly": true,
            "type": "string"
          },
          "replicaSetName": {
            "description": "Human-readable label of the replica set associated with the event.",
            "example": "event-replica-set",
            "readOnly": true,
            "type": "string"
          },
          "shardName": {
            "description": "Human-readable label of the shard associated with the event.",
            "example": "event-sh-01",
            "readOnly": true,
            "type": "string"
          },
          "userId": {
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "username": {
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "created",
          "eventTypeName",
          "id"
        ],
        "type": "object"
      },
      "RawMetricUnits": {
        "default": "RAW",
        "description": "Element used to express the quantity. This can be an element of time, storage capacity, and the like.",
        "enum": [
          "RAW"
        ],
        "title": "Raw Metric Units",
        "type": "string"
      },
      "RawMetricValueView": {
        "description": "Measurement of the **metricName** recorded at the time of the event.",
        "properties": {
          "number": {
            "description": "Amount of the **metricName** recorded at the time of the event. This value triggered the alert.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "units": {
            "$ref": "#/components/schemas/RawMetricUnits"
          }
        },
        "readOnly": true,
        "title": "Raw Metric Value",
        "type": "object"
      },
      "ReplicaSetMatcher": {
        "description": "Rules to apply when comparing an replica set against this alert configuration.",
        "properties": {
          "fieldName": {
            "$ref": "#/components/schemas/ReplicaSetMatcherField"
          },
          "operator": {
            "description": "Comparison operator to apply when checking the current metric value against **matcher[n].value**.",
            "enum": [
              "EQUALS",
              "CONTAINS",
              "STARTS_WITH",
              "ENDS_WITH",
              "NOT_EQUALS",
              "NOT_CONTAINS",
              "REGEX"
            ],
            "type": "string"
          },
          "value": {
            "description": "Value to match or exceed using the specified **matchers.operator**.",
            "example": "event-replica-set",
            "type": "string"
          }
        },
        "required": [
          "fieldName",
          "operator",
          "value"
        ],
        "title": "Matchers",
        "type": "object"
      },
      "ReplicaSetMatcherField": {
        "description": "Name of the parameter in the target object that MongoDB Cloud checks. The parameter must match all rules for MongoDB Cloud to check for alert configurations.",
        "enum": [
          "REPLICA_SET_NAME",
          "SHARD_NAME",
          "CLUSTER_NAME"
        ],
        "example": "REPLICA_SET_NAME",
        "title": "Replica Set Matcher Fields",
        "type": "string"
      },
      "ResourceTag": {
        "description": "Key-value pair that tags and categorizes a MongoDB Cloud organization, project, or cluster. For example, `environment : production`.",
        "properties": {
          "key": {
            "description": "Constant that defines the set of the tag. For example, `environment` in the `environment : production` tag.",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "value": {
            "description": "Variable that belongs to the set of the tag. For example, `production` in the `environment : production` tag.",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "key",
          "value"
        ],
        "title": "Resource Tag",
        "type": "object"
      },
      "RestoreJobFileHash": {
        "description": "Key and value pair that map one restore file to one hashed checksum. This parameter applies after you download the corresponding **delivery.url**.",
        "properties": {
          "fileName": {
            "description": "Human-readable label that identifies the hashed file.",
            "readOnly": true,
            "type": "string"
          },
          "hash": {
            "description": "Hashed checksum that maps to the restore file.",
            "readOnly": true,
            "type": "string"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "typeName": {
            "description": "Human-readable label that identifies the hashing algorithm used to compute the hash value.",
            "enum": [
              "SHA1"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "readOnly": true,
        "type": "object"
      },
      "SearchHostStatusDetail": {
        "properties": {
          "hostname": {
            "description": "Hostname that corresponds to the status detail.",
            "type": "string"
          },
          "mainIndex": {
            "$ref": "#/components/schemas/SearchMainIndexStatusDetail"
          },
          "queryable": {
            "description": "Flag that indicates whether the index is queryable on the host.",
            "type": "boolean"
          },
          "stagedIndex": {
            "$ref": "#/components/schemas/SearchStagedIndexStatusDetail"
          },
          "status": {
            "description": "Condition of the search index when you made this request.\n\n- `DELETING`: The index is being deleted.\n- `FAILED` The index build failed. Indexes can enter the FAILED state due to an invalid index definition.\n- `STALE`: The index is queryable but has stopped replicating data from the indexed collection. Searches on the index may return out-of-date data.\n- `PENDING`: Atlas has not yet started building the index.\n- `BUILDING`: Atlas is building or re-building the index after an edit.\n- `READY`: The index is ready and can support queries.",
            "enum": [
              "DELETING",
              "FAILED",
              "STALE",
              "PENDING",
              "BUILDING",
              "READY",
              "DOES_NOT_EXIST"
            ],
            "type": "string"
          }
        },
        "title": "Search Host Status Detail",
        "type": "object"
      },
      "SearchIndex": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ClusterSearchIndex"
          },
          {
            "properties": {
              "analyzer": {
                "default": "lucene.standard",
                "description": "Specific pre-defined method chosen to convert database field text into searchable words. This conversion reduces the text of fields into the smallest units of text. These units are called a **term** or **token**. This process, known as tokenization, involves a variety of changes made to the text in fields:\n\n- extracting words\n- removing punctuation\n- removing accents\n- changing to lowercase\n- removing common words\n- reducing words to their root form (stemming)\n- changing words to their base form (lemmatization)\n MongoDB Cloud uses the selected process to build the Atlas Search index.",
                "enum": [
                  "lucene.standard",
                  "lucene.simple",
                  "lucene.whitespace",
                  "lucene.keyword",
                  "lucene.arabic",
                  "lucene.armenian",
                  "lucene.basque",
                  "lucene.bengali",
                  "lucene.brazilian",
                  "lucene.bulgarian",
                  "lucene.catalan",
                  "lucene.chinese",
                  "lucene.cjk",
                  "lucene.czech",
                  "lucene.danish",
                  "lucene.dutch",
                  "lucene.english",
                  "lucene.finnish",
                  "lucene.french",
                  "lucene.galician",
                  "lucene.german",
                  "lucene.greek",
                  "lucene.hindi",
                  "lucene.hungarian",
                  "lucene.indonesian",
                  "lucene.irish",
                  "lucene.italian",
                  "lucene.japanese",
                  "lucene.korean",
                  "lucene.kuromoji",
                  "lucene.latvian",
                  "lucene.lithuanian",
                  "lucene.morfologik",
                  "lucene.nori",
                  "lucene.norwegian",
                  "lucene.persian",
                  "lucene.portuguese",
                  "lucene.romanian",
                  "lucene.russian",
                  "lucene.smartcn",
                  "lucene.sorani",
                  "lucene.spanish",
                  "lucene.swedish",
                  "lucene.thai",
                  "lucene.turkish",
                  "lucene.ukrainian"
                ],
                "externalDocs": {
                  "description": "Atlas Search Analyzers",
                  "url": "https://dochub.mongodb.org/core/analyzers--fts"
                },
                "type": "string"
              },
              "analyzers": {
                "description": "List of user-defined methods to convert database field text into searchable words.",
                "externalDocs": {
                  "description": "Custom Atlas Search Analyzers",
                  "url": "https://dochub.mongodb.org/core/custom-fts"
                },
                "items": {
                  "$ref": "#/components/schemas/ApiAtlasFTSAnalyzersViewManual"
                },
                "type": "array"
              },
              "mappings": {
                "$ref": "#/components/schemas/ApiAtlasFTSMappingsViewManual"
              },
              "searchAnalyzer": {
                "default": "lucene.standard",
                "description": "Method applied to identify words when searching this index.",
                "enum": [
                  "lucene.standard",
                  "lucene.simple",
                  "lucene.whitespace",
                  "lucene.keyword",
                  "lucene.arabic",
                  "lucene.armenian",
                  "lucene.basque",
                  "lucene.bengali",
                  "lucene.brazilian",
                  "lucene.bulgarian",
                  "lucene.catalan",
                  "lucene.chinese",
                  "lucene.cjk",
                  "lucene.czech",
                  "lucene.danish",
                  "lucene.dutch",
                  "lucene.english",
                  "lucene.finnish",
                  "lucene.french",
                  "lucene.galician",
                  "lucene.german",
                  "lucene.greek",
                  "lucene.hindi",
                  "lucene.hungarian",
                  "lucene.indonesian",
                  "lucene.irish",
                  "lucene.italian",
                  "lucene.japanese",
                  "lucene.korean",
                  "lucene.kuromoji",
                  "lucene.latvian",
                  "lucene.lithuanian",
                  "lucene.morfologik",
                  "lucene.nori",
                  "lucene.norwegian",
                  "lucene.persian",
                  "lucene.portuguese",
                  "lucene.romanian",
                  "lucene.russian",
                  "lucene.smartcn",
                  "lucene.sorani",
                  "lucene.spanish",
                  "lucene.swedish",
                  "lucene.thai",
                  "lucene.turkish",
                  "lucene.ukrainian"
                ],
                "type": "string"
              },
              "storedSource": {
                "description": "Flag that indicates whether to store all fields (true) on Atlas Search. By default, Atlas doesn't store (false) the fields on Atlas Search.  Alternatively, you can specify an object that only contains the list of fields to store (include) or not store (exclude) on Atlas Search. To learn more, see documentation.",
                "example": {
                  "include | exclude": [
                    "field1",
                    "field2"
                  ]
                },
                "externalDocs": {
                  "description": "Stored Source Fields",
                  "url": "https://dochub.mongodb.org/core/atlas-search-stored-source"
                },
                "type": "object"
              },
              "synonyms": {
                "description": "Rule sets that map words to their synonyms in this index.",
                "externalDocs": {
                  "description": "Synonym Mapping",
                  "url": "https://dochub.mongodb.org/core/fts-synonym-mappings"
                },
                "items": {
                  "$ref": "#/components/schemas/SearchSynonymMappingDefinition"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ],
        "required": [
          "collectionName",
          "database",
          "name"
        ],
        "type": "object"
      },
      "SearchIndexCreateRequest": {
        "discriminator": {
          "mapping": {
            "search": "#/components/schemas/TextSearchIndexCreateRequest",
            "vectorSearch": "#/components/schemas/VectorSearchIndexCreateRequest"
          },
          "propertyName": "type"
        },
        "properties": {
          "collectionName": {
            "description": "Label that identifies the collection to create an Atlas Search index in.",
            "type": "string"
          },
          "database": {
            "description": "Label that identifies the database that contains the collection to create an Atlas Search index in.",
            "type": "string"
          },
          "name": {
            "description": "Label that identifies this index. Within each namespace, names of all indexes in the namespace must be unique.",
            "type": "string"
          },
          "type": {
            "description": "Type of the index. The default type is search.",
            "enum": [
              "search",
              "vectorSearch"
            ],
            "type": "string"
          }
        },
        "required": [
          "collectionName",
          "database",
          "name"
        ],
        "type": "object"
      },
      "SearchIndexDefinition": {
        "description": "The search index definition set by the user.",
        "properties": {
          "numPartitions": {
            "default": 1,
            "description": "Number of index partitions. Allowed values are [1, 2, 4].",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "Search Index Definition",
        "type": "object"
      },
      "SearchIndexDefinitionVersion": {
        "description": "Object which includes the version number of the index definition and the time that the index definition was created.",
        "properties": {
          "createdAt": {
            "description": "The time at which this index definition was created. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "type": "string"
          },
          "version": {
            "description": "The version number associated with this index definition when it was created.",
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "Search Index Definition Version",
        "type": "object"
      },
      "SearchIndexResponse": {
        "discriminator": {
          "mapping": {
            "search": "#/components/schemas/TextSearchIndexResponse",
            "vectorSearch": "#/components/schemas/VectorSearchIndexResponse"
          },
          "propertyName": "type"
        },
        "properties": {
          "collectionName": {
            "description": "Label that identifies the collection that contains one or more Atlas Search indexes.",
            "type": "string"
          },
          "database": {
            "description": "Label that identifies the database that contains the collection with one or more Atlas Search indexes.",
            "type": "string"
          },
          "indexID": {
            "description": "Unique 24-hexadecimal digit string that identifies this Atlas Search index.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "type": "string"
          },
          "latestDefinition": {
            "$ref": "#/components/schemas/SearchIndexDefinition"
          },
          "latestDefinitionVersion": {
            "$ref": "#/components/schemas/SearchIndexDefinitionVersion"
          },
          "name": {
            "description": "Label that identifies this index. Within each namespace, the names of all indexes must be unique.",
            "type": "string"
          },
          "queryable": {
            "description": "Flag that indicates whether the index is queryable on all hosts.",
            "type": "boolean"
          },
          "status": {
            "description": "Condition of the search index when you made this request.\n\n- `DELETING`: The index is being deleted.\n- `FAILED` The index build failed. Indexes can enter the FAILED state due to an invalid index definition.\n- `STALE`: The index is queryable but has stopped replicating data from the indexed collection. Searches on the index may return out-of-date data.\n- `PENDING`: Atlas has not yet started building the index.\n- `BUILDING`: Atlas is building or re-building the index after an edit.\n- `READY`: The index is ready and can support queries.",
            "enum": [
              "DELETING",
              "FAILED",
              "STALE",
              "PENDING",
              "BUILDING",
              "READY",
              "DOES_NOT_EXIST"
            ],
            "type": "string"
          },
          "statusDetail": {
            "description": "List of documents detailing index status on each host.",
            "items": {
              "$ref": "#/components/schemas/SearchHostStatusDetail"
            },
            "type": "array"
          },
          "type": {
            "description": "Type of the index. The default type is search.",
            "enum": [
              "search",
              "vectorSearch"
            ],
            "type": "string"
          }
        },
        "title": "Search Index Response",
        "type": "object"
      },
      "SearchMainIndexStatusDetail": {
        "description": "Contains status information about the active index.",
        "properties": {
          "definition": {
            "$ref": "#/components/schemas/SearchIndexDefinition"
          },
          "definitionVersion": {
            "$ref": "#/components/schemas/SearchIndexDefinitionVersion"
          },
          "message": {
            "description": "Optional message describing an error.",
            "type": "string"
          },
          "queryable": {
            "description": "Flag that indicates whether the index generation is queryable on the host.",
            "type": "boolean"
          },
          "status": {
            "description": "Condition of the search index when you made this request.\n\n- `DELETING`: The index is being deleted.\n- `FAILED` The index build failed. Indexes can enter the FAILED state due to an invalid index definition.\n- `STALE`: The index is queryable but has stopped replicating data from the indexed collection. Searches on the index may return out-of-date data.\n- `PENDING`: Atlas has not yet started building the index.\n- `BUILDING`: Atlas is building or re-building the index after an edit.\n- `READY`: The index is ready and can support queries.",
            "enum": [
              "DELETING",
              "FAILED",
              "STALE",
              "PENDING",
              "BUILDING",
              "READY",
              "DOES_NOT_EXIST"
            ],
            "type": "string"
          }
        },
        "title": "Search Main Index Status Detail",
        "type": "object"
      },
      "SearchMappings": {
        "description": "Index specifications for the collection's fields.",
        "properties": {
          "dynamic": {
            "description": "Flag that indicates whether the index uses dynamic or static mappings. Required if **mappings.fields** is omitted.",
            "externalDocs": {
              "description": "Dynamic or Static Mappings",
              "url": "https://dochub.mongodb.org/core/field-mapping-definition-fts#static-and-dynamic-mappings"
            },
            "type": "boolean"
          },
          "fields": {
            "additionalProperties": {
              "$ref": "#/components/schemas/Fields"
            },
            "description": "One or more field specifications for the Atlas Search index. Required if **mappings.dynamic** is omitted or set to **false**.",
            "externalDocs": {
              "description": "Atlas Search Index",
              "url": "https://dochub.mongodb.org/core/index-definitions-fts"
            },
            "type": "object",
            "x-additionalPropertiesName": "Field Name"
          }
        },
        "title": "Mappings",
        "type": "object"
      },
      "SearchStagedIndexStatusDetail": {
        "description": "Contains status information about an index building in the background.",
        "properties": {
          "definition": {
            "$ref": "#/components/schemas/SearchIndexDefinition"
          },
          "definitionVersion": {
            "$ref": "#/components/schemas/SearchIndexDefinitionVersion"
          },
          "message": {
            "description": "Optional message describing an error.",
            "type": "string"
          },
          "queryable": {
            "description": "Flag that indicates whether the index generation is queryable on the host.",
            "type": "boolean"
          },
          "status": {
            "description": "Condition of the search index when you made this request.\n\n- `DELETING`: The index is being deleted.\n- `FAILED` The index build failed. Indexes can enter the FAILED state due to an invalid index definition.\n- `STALE`: The index is queryable but has stopped replicating data from the indexed collection. Searches on the index may return out-of-date data.\n- `PENDING`: Atlas has not yet started building the index.\n- `BUILDING`: Atlas is building or re-building the index after an edit.\n- `READY`: The index is ready and can support queries.",
            "enum": [
              "DELETING",
              "FAILED",
              "STALE",
              "PENDING",
              "BUILDING",
              "READY",
              "DOES_NOT_EXIST"
            ],
            "type": "string"
          }
        },
        "title": "Search Staged Index Status Detail",
        "type": "object"
      },
      "SearchSynonymMappingDefinition": {
        "description": "Synonyms used for this full text index.",
        "properties": {
          "analyzer": {
            "description": "Specific pre-defined method chosen to apply to the synonyms to be searched.",
            "enum": [
              "lucene.standard",
              "lucene.simple",
              "lucene.whitespace",
              "lucene.keyword",
              "lucene.arabic",
              "lucene.armenian",
              "lucene.basque",
              "lucene.bengali",
              "lucene.brazilian",
              "lucene.bulgarian",
              "lucene.catalan",
              "lucene.chinese",
              "lucene.cjk",
              "lucene.czech",
              "lucene.danish",
              "lucene.dutch",
              "lucene.english",
              "lucene.finnish",
              "lucene.french",
              "lucene.galician",
              "lucene.german",
              "lucene.greek",
              "lucene.hindi",
              "lucene.hungarian",
              "lucene.indonesian",
              "lucene.irish",
              "lucene.italian",
              "lucene.japanese",
              "lucene.korean",
              "lucene.kuromoji",
              "lucene.latvian",
              "lucene.lithuanian",
              "lucene.morfologik",
              "lucene.nori",
              "lucene.norwegian",
              "lucene.persian",
              "lucene.portuguese",
              "lucene.romanian",
              "lucene.russian",
              "lucene.smartcn",
              "lucene.sorani",
              "lucene.spanish",
              "lucene.swedish",
              "lucene.thai",
              "lucene.turkish",
              "lucene.ukrainian"
            ],
            "type": "string"
          },
          "name": {
            "description": "Label that identifies the synonym definition. Each **synonym.name** must be unique within the same index definition.",
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/SynonymSource"
          }
        },
        "required": [
          "analyzer",
          "name",
          "source"
        ],
        "title": "Synonym Mapping Definition",
        "type": "object"
      },
      "ServerlessAWSTenantEndpoint": {
        "description": "View for a serverless AWS tenant endpoint.",
        "properties": {
          "_id": {
            "description": "Unique 24-hexadecimal digit string that identifies the private endpoint.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "cloudProviderEndpointId": {
            "description": "Unique string that identifies the private endpoint's network interface.",
            "pattern": "^vpce-[0-9a-f]{17}$",
            "readOnly": true,
            "type": "string"
          },
          "comment": {
            "description": "Human-readable comment associated with the private endpoint.",
            "maxLength": 80,
            "readOnly": true,
            "type": "string"
          },
          "endpointServiceName": {
            "description": "Unique string that identifies the Amazon Web Services (AWS) PrivateLink endpoint service. MongoDB Cloud returns null while it creates the endpoint service.",
            "pattern": "^com\\.amazonaws\\.vpce\\.[a-z-0-9]+\\.vpce-svc-[0-9a-f]{17}",
            "readOnly": true,
            "type": "string"
          },
          "errorMessage": {
            "description": "Human-readable error message that indicates error condition associated with establishing the private endpoint connection.",
            "readOnly": true,
            "type": "string"
          },
          "providerName": {
            "description": "Human-readable label that identifies the cloud service provider.",
            "enum": [
              "AWS"
            ],
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "description": "Human-readable label that indicates the current operating status of the private endpoint.",
            "enum": [
              "RESERVATION_REQUESTED",
              "RESERVED",
              "INITIATING",
              "AVAILABLE",
              "FAILED",
              "DELETING"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "title": "AWS",
        "type": "object"
      },
      "ServerlessAWSTenantEndpointUpdate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ServerlessTenantEndpointUpdate"
          },
          {
            "properties": {
              "cloudProviderEndpointId": {
                "description": "Unique string that identifies the private endpoint's network interface.",
                "pattern": "^vpce-[0-9a-f]{17}$",
                "type": "string",
                "writeOnly": true
              }
            },
            "type": "object"
          }
        ],
        "description": "Updates to a serverless AWS tenant endpoint.",
        "required": [
          "providerName"
        ],
        "title": "AWS",
        "type": "object"
      },
      "ServerlessAzureTenantEndpoint": {
        "description": "View for a serverless Azure tenant endpoint.",
        "properties": {
          "_id": {
            "description": "Unique 24-hexadecimal digit string that identifies the private endpoint.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "cloudProviderEndpointId": {
            "description": "Unique string that identifies the Azure private endpoint's network interface that someone added to this private endpoint service.",
            "pattern": "^/subscriptions/[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}/resource[gG]roups/private[Ll]ink/providers/Microsoft\\.Network/privateEndpoints/[-\\w._()]+$",
            "readOnly": true,
            "type": "string"
          },
          "comment": {
            "description": "Human-readable comment associated with the private endpoint.",
            "maxLength": 80,
            "readOnly": true,
            "type": "string"
          },
          "endpointServiceName": {
            "description": "Unique string that identifies the Azure private endpoint service. MongoDB Cloud returns null while it creates the endpoint service.",
            "pattern": "^pls_[0-9a-f]{24}$",
            "readOnly": true,
            "type": "string"
          },
          "errorMessage": {
            "description": "Human-readable error message that indicates error condition associated with establishing the private endpoint connection.",
            "readOnly": true,
            "type": "string"
          },
          "privateEndpointIpAddress": {
            "description": "IPv4 address of the private endpoint in your Azure VNet that someone added to this private endpoint service.",
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "readOnly": true,
            "type": "string"
          },
          "privateLinkServiceResourceId": {
            "description": "Root-relative path that identifies the Azure Private Link Service that MongoDB Cloud manages. MongoDB Cloud returns null while it creates the endpoint service.",
            "readOnly": true,
            "type": "string"
          },
          "providerName": {
            "description": "Human-readable label that identifies the cloud service provider.",
            "enum": [
              "AZURE"
            ],
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "description": "Human-readable label that indicates the current operating status of the private endpoint.",
            "enum": [
              "RESERVATION_REQUESTED",
              "RESERVED",
              "INITIATING",
              "AVAILABLE",
              "FAILED",
              "DELETING"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "title": "Azure",
        "type": "object"
      },
      "ServerlessAzureTenantEndpointUpdate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ServerlessTenantEndpointUpdate"
          },
          {
            "properties": {
              "cloudProviderEndpointId": {
                "description": "Unique string that identifies the Azure private endpoint's network interface for this private endpoint service.",
                "pattern": "^/subscriptions/[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}/resource[gG]roups/private[Ll]ink/providers/Microsoft\\.Network/privateEndpoints/[-\\w._()]+$",
                "type": "string",
                "writeOnly": true
              },
              "privateEndpointIpAddress": {
                "description": "IPv4 address of the private endpoint in your Azure VNet that someone added to this private endpoint service.",
                "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
                "type": "string",
                "writeOnly": true
              }
            },
            "type": "object"
          }
        ],
        "description": "Updates to a serverless Azure tenant endpoint.",
        "required": [
          "providerName"
        ],
        "title": "AZURE",
        "type": "object"
      },
      "ServerlessConnectionStringsPrivateEndpointItem": {
        "description": "Details of a private endpoint deployed for this serverless instance.",
        "properties": {
          "endpointId": {
            "description": "Unique string that the cloud provider uses to identify the private endpoint.",
            "readOnly": true,
            "type": "string"
          },
          "providerName": {
            "description": "Cloud provider where the private endpoint is deployed.",
            "enum": [
              "AWS",
              "AZURE"
            ],
            "readOnly": true,
            "type": "string"
          },
          "region": {
            "description": "Region where the private endpoint is deployed.",
            "readOnly": true,
            "type": "string"
          }
        },
        "title": "Serverless Instance Private Endpoint Connection Strings Endpoint",
        "type": "object"
      },
      "ServerlessConnectionStringsPrivateEndpointList": {
        "description": "Private endpoint connection string that you can use to connect to this serverless instance through a private endpoint.",
        "externalDocs": {
          "description": "Private Endpoint for Serverless Instance",
          "url": "https://docs.atlas.mongodb.com/security-serverless-private-endpoint/"
        },
        "properties": {
          "endpoints": {
            "description": "List that contains the private endpoints through which you connect to MongoDB Cloud when you use **connectionStrings.privateEndpoint[n].srvConnectionString**.",
            "items": {
              "$ref": "#/components/schemas/ServerlessConnectionStringsPrivateEndpointItem"
            },
            "readOnly": true,
            "type": "array"
          },
          "srvConnectionString": {
            "description": "Private endpoint-aware connection string that uses the `mongodb+srv://` protocol to connect to MongoDB Cloud through a private endpoint. The `mongodb+srv` protocol tells the driver to look up the seed list of hosts in the Domain Name System (DNS).",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "MongoDB process type to which your application connects.",
            "enum": [
              "MONGOS"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "title": "Serverless Instance Private Endpoint Connection String",
        "type": "object"
      },
      "ServerlessInstanceDescription": {
        "description": "Group of settings that configure a MongoDB serverless instance.",
        "properties": {
          "connectionStrings": {
            "$ref": "#/components/schemas/ServerlessInstanceDescriptionConnectionStrings"
          },
          "createDate": {
            "description": "Date and time when MongoDB Cloud created this serverless instance. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "groupId": {
            "description": "Unique 24-hexadecimal character string that identifies the project.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Unique 24-hexadecimal digit string that identifies the serverless instance.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "mongoDBVersion": {
            "description": "Version of MongoDB that the serverless instance runs.",
            "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Human-readable label that identifies the serverless instance.",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string"
          },
          "providerSettings": {
            "$ref": "#/components/schemas/ServerlessProviderSettings"
          },
          "serverlessBackupOptions": {
            "$ref": "#/components/schemas/ClusterServerlessBackupOptions"
          },
          "stateName": {
            "description": "Human-readable label that indicates any current activity being taken on this cluster by the Atlas control plane. With the exception of CREATING and DELETING states, clusters should always be available and have a Primary node even when in states indicating ongoing activity.\n\n - `IDLE`: Atlas is making no changes to this cluster and all changes requested via the UI or API can be assumed to have been applied.\n - `CREATING`: A cluster being provisioned for the very first time returns state CREATING until it is ready for connections. Ensure IP Access List and DB Users are configured before attempting to connect.\n - `UPDATING`: A change requested via the UI, API, AutoScaling, or other scheduled activity is taking place.\n - `DELETING`: The cluster is in the process of deletion and will soon be deleted.\n - `REPAIRING`: One or more nodes in the cluster are being returned to service by the Atlas control plane. Other nodes should continue to provide service as normal.",
            "enum": [
              "IDLE",
              "CREATING",
              "UPDATING",
              "DELETING",
              "REPAIRING"
            ],
            "readOnly": true,
            "type": "string"
          },
          "tags": {
            "description": "List that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the serverless instance.",
            "items": {
              "$ref": "#/components/schemas/ResourceTag"
            },
            "type": "array"
          },
          "terminationProtectionEnabled": {
            "default": false,
            "description": "Flag that indicates whether termination protection is enabled on the serverless instance. If set to `true`, MongoDB Cloud won't delete the serverless instance. If set to `false`, MongoDB Cloud will delete the serverless instance.",
            "type": "boolean"
          }
        },
        "required": [
          "providerSettings"
        ],
        "title": "Serverless Instance Description",
        "type": "object"
      },
      "ServerlessInstanceDescriptionConnectionStrings": {
        "description": "Collection of Uniform Resource Locators that point to the MongoDB database.",
        "externalDocs": {
          "description": "Connection string URI format.",
          "url": "https://docs.mongodb.com/manual/reference/connection-string/"
        },
        "properties": {
          "privateEndpoint": {
            "description": "List of private endpoint-aware connection strings that you can use to connect to this serverless instance through a private endpoint. This parameter returns only if you created a private endpoint for this serverless instance and it is AVAILABLE.",
            "items": {
              "$ref": "#/components/schemas/ServerlessConnectionStringsPrivateEndpointList"
            },
            "readOnly": true,
            "type": "array"
          },
          "standardSrv": {
            "description": "Public connection string that you can use to connect to this serverless instance. This connection string uses the `mongodb+srv://` protocol.",
            "externalDocs": {
              "description": "Connection String URI Format",
              "url": "https://docs.mongodb.com/manual/reference/connection-string/"
            },
            "readOnly": true,
            "type": "string"
          }
        },
        "readOnly": true,
        "title": "Serverless Instance Connection Strings",
        "type": "object"
      },
      "ServerlessProviderSettings": {
        "description": "Group of cloud provider settings that configure the provisioned MongoDB serverless instance.",
        "properties": {
          "backingProviderName": {
            "description": "Cloud service provider on which MongoDB Cloud provisioned the serverless instance.",
            "enum": [
              "AWS",
              "AZURE",
              "GCP"
            ],
            "type": "string"
          },
          "effectiveDiskSizeGBLimit": {
            "description": "Storage capacity of instance data volumes expressed in gigabytes. This value is not configurable for Serverless or effectively Flex clusters.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "effectiveInstanceSizeName": {
            "$ref": "#/components/schemas/BaseCloudProviderInstanceSize"
          },
          "effectiveProviderName": {
            "description": "Cloud service provider on which MongoDB Cloud effectively provisioned the serverless instance.",
            "readOnly": true,
            "type": "string"
          },
          "providerName": {
            "default": "SERVERLESS",
            "description": "Human-readable label that identifies the cloud service provider.",
            "enum": [
              "SERVERLESS"
            ],
            "type": "string"
          },
          "regionName": {
            "description": "Human-readable label that identifies the geographic location of your MongoDB serverless instance. The region you choose can affect network latency for clients accessing your databases. For a complete list of region names, see [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/#std-label-amazon-aws), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), and [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).",
            "type": "string"
          }
        },
        "required": [
          "backingProviderName",
          "regionName"
        ],
        "title": "Cloud Service Provider Settings for a Serverless Instance",
        "type": "object"
      },
      "ServerlessTenantEndpoint": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ServerlessAWSTenantEndpoint"
          },
          {
            "$ref": "#/components/schemas/ServerlessAzureTenantEndpoint"
          }
        ],
        "properties": {
          "_id": {
            "description": "Unique 24-hexadecimal digit string that identifies the private endpoint.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "cloudProviderEndpointId": {
            "description": "Unique string that identifies the private endpoint's network interface.",
            "readOnly": true,
            "type": "string"
          },
          "comment": {
            "description": "Human-readable comment associated with the private endpoint.",
            "maxLength": 80,
            "readOnly": true,
            "type": "string"
          },
          "endpointServiceName": {
            "description": "Unique string that identifies the PrivateLink endpoint service. MongoDB Cloud returns null while it creates the endpoint service.",
            "pattern": "^com\\.amazonaws\\.vpce\\.[a-z-0-9]+\\.vpce-svc-[0-9a-f]{17}|pls_[0-9a-f]{24}$",
            "readOnly": true,
            "type": "string"
          },
          "errorMessage": {
            "description": "Human-readable error message that indicates error condition associated with establishing the private endpoint connection.",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "description": "Human-readable label that indicates the current operating status of the private endpoint.",
            "enum": [
              "RESERVATION_REQUESTED",
              "RESERVED",
              "INITIATING",
              "AVAILABLE",
              "FAILED",
              "DELETING"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerlessTenantEndpointUpdate": {
        "description": "Update view for a serverless tenant endpoint.",
        "discriminator": {
          "mapping": {
            "AWS": "#/components/schemas/ServerlessAWSTenantEndpointUpdate",
            "AZURE": "#/components/schemas/ServerlessAzureTenantEndpointUpdate"
          },
          "propertyName": "providerName"
        },
        "properties": {
          "comment": {
            "description": "Human-readable comment associated with the private endpoint.",
            "maxLength": 80,
            "type": "string",
            "writeOnly": true
          },
          "providerName": {
            "description": "Human-readable label that identifies the cloud provider of the tenant endpoint.",
            "enum": [
              "AWS",
              "AZURE"
            ],
            "type": "string",
            "writeOnly": true
          }
        },
        "required": [
          "providerName"
        ],
        "type": "object"
      },
      "StreamsAWSConnectionConfig": {
        "description": "AWS configurations for AWS-based connection types.",
        "properties": {
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "roleArn": {
            "description": "Amazon Resource Name (ARN) that identifies the Amazon Web Services (AWS) Identity and Access Management (IAM) role that MongoDB Cloud assumes when it accesses resources in your AWS account.",
            "type": "string"
          },
          "testBucket": {
            "description": "The name of an S3 bucket used to check authorization of the passed-in IAM role ARN.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "StreamsAWSKinesisDataStreamsConnection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StreamsConnection"
          },
          {
            "properties": {
              "aws": {
                "$ref": "#/components/schemas/StreamsAWSConnectionConfig"
              },
              "networking": {
                "$ref": "#/components/schemas/StreamsKafkaNetworking"
              }
            },
            "type": "object"
          }
        ],
        "description": "The configuration for AWS Kinesis Data Stream connections.",
        "type": "object"
      },
      "StreamsAWSLambdaConnection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StreamsConnection"
          },
          {
            "properties": {
              "aws": {
                "$ref": "#/components/schemas/StreamsAWSConnectionConfig"
              }
            },
            "type": "object"
          }
        ],
        "description": "The configuration for AWS Lambda connections.",
        "type": "object"
      },
      "StreamsClusterConnection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StreamsConnection"
          },
          {
            "properties": {
              "clusterGroupId": {
                "description": "The id of the group that the cluster belongs to.",
                "type": "string"
              },
              "clusterName": {
                "description": "Name of the cluster configured for this connection.",
                "type": "string"
              },
              "dbRoleToExecute": {
                "$ref": "#/components/schemas/DBRoleToExecute"
              }
            },
            "type": "object"
          }
        ],
        "type": "object"
      },
      "StreamsConnection": {
        "description": "Settings that define a connection to an external data store.",
        "discriminator": {
          "mapping": {
            "AWSKinesisDataStreams": "#/components/schemas/StreamsAWSKinesisDataStreamsConnection",
            "AWSLambda": "#/components/schemas/StreamsAWSLambdaConnection",
            "Cluster": "#/components/schemas/StreamsClusterConnection",
            "Https": "#/components/schemas/StreamsHttpsConnection",
            "Kafka": "#/components/schemas/StreamsKafkaConnection",
            "S3": "#/components/schemas/StreamsS3Connection",
            "Sample": "#/components/schemas/StreamsSampleConnection"
          },
          "propertyName": "type"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/StreamsSampleConnection"
          },
          {
            "$ref": "#/components/schemas/StreamsClusterConnection"
          },
          {
            "$ref": "#/components/schemas/StreamsKafkaConnection"
          },
          {
            "$ref": "#/components/schemas/StreamsHttpsConnection"
          },
          {
            "$ref": "#/components/schemas/StreamsAWSLambdaConnection"
          },
          {
            "$ref": "#/components/schemas/StreamsS3Connection"
          },
          {
            "$ref": "#/components/schemas/StreamsAWSKinesisDataStreamsConnection"
          }
        ],
        "properties": {
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "name": {
            "description": "Human-readable label that identifies the stream connection. In the case of the Sample type, this is the name of the sample source.",
            "type": "string"
          },
          "type": {
            "description": "Type of the connection.",
            "enum": [
              "Kafka",
              "Cluster",
              "Sample",
              "Https",
              "AWSLambda",
              "AWSKinesisDataStreams"
            ],
            "type": "string"
          }
        },
        "readOnly": true,
        "type": "object"
      },
      "StreamsDLQ": {
        "description": "Dead letter queue for the stream processor.",
        "externalDocs": {
          "url": "https://www.mongodb.com/docs/atlas/reference/glossary/#std-term-dead-letter-queue"
        },
        "properties": {
          "coll": {
            "description": "Name of the collection to use for the DLQ.",
            "type": "string"
          },
          "connectionName": {
            "description": "Name of the connection to write DLQ messages to. Must be an Atlas connection.",
            "type": "string"
          },
          "db": {
            "description": "Name of the database to use for the DLQ.",
            "type": "string"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "StreamsHttpsConnection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StreamsConnection"
          },
          {
            "properties": {
              "headers": {
                "additionalProperties": {
                  "description": "A map of key-value pairs that will be passed as headers for the request.",
                  "type": "string"
                },
                "description": "A map of key-value pairs that will be passed as headers for the request.",
                "type": "object"
              },
              "url": {
                "description": "The url to be used for the request.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "type": "object"
      },
      "StreamsKafkaAuthentication": {
        "description": "User credentials required to connect to a Kafka Cluster. Includes the authentication type, as well as the parameters for that authentication mode.",
        "properties": {
          "clientId": {
            "description": "OIDC client identifier for authentication to the Kafka cluster.",
            "type": "string"
          },
          "clientSecret": {
            "description": "OIDC client secret for authentication to the Kafka cluster.",
            "format": "password",
            "type": "string",
            "writeOnly": true
          },
          "httpsCaPem": {
            "description": "HTTPS CA certificate in PEM format for SSL/TLS verification.",
            "type": "string"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "mechanism": {
            "description": "Style of authentication. Can be one of PLAIN, SCRAM-256, SCRAM-512, or OAUTHBEARER.",
            "type": "string"
          },
          "password": {
            "description": "Password of the account to connect to the Kafka cluster.",
            "format": "password",
            "type": "string",
            "writeOnly": true
          },
          "saslOauthbearerExtensions": {
            "description": "SASL OAUTHBEARER extensions parameter for additional OAuth2 configuration.",
            "type": "string"
          },
          "scope": {
            "description": "OIDC scope parameter defining the access permissions requested.",
            "type": "string"
          },
          "sslCertificate": {
            "description": "SSL certificate for client authentication to Kafka.",
            "type": "string"
          },
          "sslKey": {
            "description": "SSL key for client authentication to Kafka.",
            "type": "string",
            "writeOnly": true
          },
          "sslKeyPassword": {
            "description": "Password for the SSL key, if it is password protected.",
            "type": "string",
            "writeOnly": true
          },
          "tokenEndpointUrl": {
            "description": "OIDC token endpoint URL for obtaining access tokens.",
            "type": "string"
          },
          "username": {
            "description": "Username of the account to connect to the Kafka cluster.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "StreamsKafkaConnection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StreamsConnection"
          },
          {
            "properties": {
              "authentication": {
                "$ref": "#/components/schemas/StreamsKafkaAuthentication"
              },
              "bootstrapServers": {
                "description": "Comma separated list of server addresses.",
                "type": "string"
              },
              "config": {
                "additionalProperties": {
                  "description": "A map of Kafka key-value pairs for optional configuration. This is a flat object, and keys can have '.' characters.",
                  "example": "{\"group.protocol.type\":\"consumer\",\"debug\":\"queue, msg, protocol\"}",
                  "type": "string"
                },
                "description": "A map of Kafka key-value pairs for optional configuration. This is a flat object, and keys can have '.' characters.",
                "example": {
                  "debug": "queue, msg, protocol",
                  "group.protocol.type": "consumer"
                },
                "type": "object"
              },
              "networking": {
                "$ref": "#/components/schemas/StreamsKafkaNetworking"
              },
              "security": {
                "$ref": "#/components/schemas/StreamsKafkaSecurity"
              }
            },
            "type": "object"
          }
        ],
        "type": "object"
      },
      "StreamsKafkaNetworking": {
        "description": "Networking configuration for Streams connections.",
        "properties": {
          "access": {
            "$ref": "#/components/schemas/StreamsKafkaNetworkingAccess"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "StreamsKafkaNetworkingAccess": {
        "description": "Information about networking access.",
        "properties": {
          "connectionId": {
            "description": "Reserved. Will be used by PRIVATE_LINK connection type.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "type": "string"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "name": {
            "description": "Reserved. Will be used by PRIVATE_LINK connection type.",
            "type": "string"
          },
          "tgwRouteId": {
            "description": "Reserved. Will be used by TRANSIT_GATEWAY connection type.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "type": "string"
          },
          "type": {
            "description": "Selected networking type. Either PUBLIC, VPC, PRIVATE_LINK, or TRANSIT_GATEWAY. Defaults to PUBLIC. For VPC, ensure that VPC peering exists and connectivity has been established between Atlas VPC and the VPC where Kafka cluster is hosted for the connection to function properly. TRANSIT_GATEWAY support is coming soon.",
            "enum": [
              "PUBLIC",
              "VPC",
              "PRIVATE_LINK",
              "TRANSIT_GATEWAY"
            ],
            "title": "Networking Access Type",
            "type": "string"
          }
        },
        "type": "object"
      },
      "StreamsKafkaSecurity": {
        "description": "Properties for the secure transport connection to Kafka. For SSL, this can include the trusted certificate to use.",
        "properties": {
          "brokerPublicCertificate": {
            "description": "A trusted, public x509 certificate for connecting to Kafka over SSL.",
            "type": "string"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "protocol": {
            "description": "Describes the transport type. Can be either SASL_PLAINTEXT, SASL_SSL, or SSL.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "StreamsMatcher": {
        "description": "Rules to apply when comparing a stream processing instance or stream processor against this alert configuration.",
        "properties": {
          "fieldName": {
            "$ref": "#/components/schemas/StreamsMatcherField"
          },
          "operator": {
            "description": "Comparison operator to apply when checking the current metric value against **matcher[n].value**.",
            "enum": [
              "EQUALS",
              "CONTAINS",
              "STARTS_WITH",
              "ENDS_WITH",
              "NOT_EQUALS",
              "NOT_CONTAINS",
              "REGEX"
            ],
            "type": "string"
          },
          "value": {
            "description": "Value to match or exceed using the specified **matchers.operator**.",
            "example": "event-replica-set",
            "type": "string"
          }
        },
        "required": [
          "fieldName",
          "operator",
          "value"
        ],
        "title": "Matchers",
        "type": "object"
      },
      "StreamsMatcherField": {
        "description": "Name of the parameter in the target object that MongoDB Cloud checks. The parameter must match all rules for MongoDB Cloud to check for alert configurations.",
        "enum": [
          "INSTANCE_NAME",
          "PROCESSOR_NAME"
        ],
        "example": "INSTANCE_NAME",
        "title": "Streams Matcher Fields",
        "type": "string"
      },
      "StreamsModifyStreamProcessor": {
        "description": "A request to modify an existing stream processor.",
        "properties": {
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "name": {
            "description": "New name for the stream processor.",
            "type": "string"
          },
          "options": {
            "$ref": "#/components/schemas/StreamsModifyStreamProcessorOptions"
          },
          "pipeline": {
            "description": "New pipeline for the stream processor.",
            "externalDocs": {
              "description": "Supported Aggregation Pipeline Stages",
              "url": "https://www.mongodb.com/docs/atlas/atlas-stream-processing/stream-aggregation/#std-label-stream-aggregation"
            },
            "items": {
              "$ref": "#/components/schemas/Document"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "StreamsModifyStreamProcessorOptions": {
        "description": "Additional options for modifying a stream processor.",
        "properties": {
          "dlq": {
            "$ref": "#/components/schemas/StreamsDLQ"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "resumeFromCheckpoint": {
            "description": "When true, the modified stream processor resumes from its last checkpoint.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "StreamsS3Connection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StreamsConnection"
          },
          {
            "properties": {
              "aws": {
                "$ref": "#/components/schemas/StreamsAWSConnectionConfig"
              },
              "networking": {
                "$ref": "#/components/schemas/StreamsKafkaNetworking"
              }
            },
            "type": "object"
          }
        ],
        "description": "The configuration for S3 connections.",
        "type": "object"
      },
      "StreamsSampleConnection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StreamsConnection"
          }
        ],
        "type": "object"
      },
      "SynonymMappingStatusDetail": {
        "description": "Contains the status of the index's synonym mappings on each search host. This field (and its subfields) only appear if the index has synonyms defined.",
        "properties": {
          "message": {
            "description": "Optional message describing an error.",
            "type": "string"
          },
          "queryable": {
            "description": "Flag that indicates whether the synonym mapping is queryable on a host.",
            "type": "boolean"
          },
          "status": {
            "description": "Status that describes this index's synonym mappings. This status appears only if the index has synonyms defined.",
            "enum": [
              "FAILED",
              "BUILDING",
              "READY"
            ],
            "type": "string"
          }
        },
        "title": "Synonym Mapping Status Detail",
        "type": "object"
      },
      "SynonymMappingStatusDetailMap": {
        "additionalProperties": {
          "$ref": "#/components/schemas/SynonymMappingStatusDetail"
        },
        "type": "object",
        "x-additionalPropertiesName": "Synonym Mapping Name"
      },
      "SynonymSource": {
        "description": "Data set that stores words and their applicable synonyms.",
        "properties": {
          "collection": {
            "description": "Label that identifies the MongoDB collection that stores words and their applicable synonyms.",
            "type": "string"
          }
        },
        "required": [
          "collection"
        ],
        "type": "object"
      },
      "Team": {
        "properties": {
          "id": {
            "description": "Unique 24-hexadecimal digit string that identifies this team.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "name": {
            "description": "Human-readable label that identifies the team.",
            "type": "string"
          },
          "usernames": {
            "description": "List that contains the MongoDB Cloud users in this team.",
            "items": {
              "format": "email",
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          }
        },
        "required": [
          "name",
          "usernames"
        ],
        "type": "object"
      },
      "TeamEvent": {
        "description": "Team event identifies different activities around organization teams.",
        "properties": {
          "apiKeyId": {
            "description": "Unique 24-hexadecimal digit string that identifies the API Key that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "example": "32b6e34b3d91647abb20e7b8",
            "externalDocs": {
              "description": "Create Programmatic API Key",
              "url": "https://dochub.mongodb.org/core/atlas-create-prog-api-key"
            },
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "created": {
            "description": "Date and time when this event occurred. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "externalDocs": {
              "description": "ISO 8601",
              "url": "https://en.wikipedia.org/wiki/ISO_8601"
            },
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/TeamEventTypeView"
          },
          "groupId": {
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "isGlobalAdmin": {
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "type": "boolean"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "orgId": {
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "publicKey": {
            "description": "Public part of the API key that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "externalDocs": {
              "url": "https://dochub.mongodb.org/core/atlas-create-prog-api-key"
            },
            "readOnly": true,
            "type": "string"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "example": "216.172.40.186",
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "readOnly": true,
            "type": "string"
          },
          "teamId": {
            "description": "Unique 24-hexadecimal digit string that identifies the organization team associated with this event.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "userId": {
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "username": {
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "created",
          "eventTypeName",
          "id"
        ],
        "title": "Team Events",
        "type": "object"
      },
      "TeamEventTypeView": {
        "description": "Unique identifier of event type.",
        "enum": [
          "TEAM_CREATED",
          "TEAM_DELETED",
          "TEAM_UPDATED",
          "TEAM_NAME_CHANGED",
          "TEAM_ADDED_TO_GROUP",
          "TEAM_REMOVED_FROM_GROUP",
          "TEAM_ROLES_MODIFIED"
        ],
        "example": "TEAM_ADDED_TO_GROUP",
        "title": "Team Event Types",
        "type": "string"
      },
      "TenantHardwareSpec": {
        "properties": {
          "effectiveInstanceSize": {
            "description": "The true tenant instance size. This is present to support backwards compatibility for deprecated provider types and/or instance sizes.",
            "enum": [
              "FLEX",
              "M2",
              "M5",
              "M0"
            ],
            "readOnly": true,
            "type": "string"
          },
          "instanceSize": {
            "description": "Hardware specification for the instances in this M0/M2/M5 tier cluster.",
            "enum": [
              "M0",
              "M2",
              "M5"
            ],
            "title": "Tenant Instance Sizes",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TenantHardwareSpec20240805": {
        "properties": {
          "diskSizeGB": {
            "description": "Storage capacity of instance data volumes expressed in gigabytes. Increase this number to add capacity.\n\n This value must be equal for all shards and node types.\n\n This value is not configurable on M0/M2/M5 clusters.\n\n MongoDB Cloud requires this parameter if you set **replicationSpecs**.\n\n If you specify a disk size below the minimum (10 GB), this parameter defaults to the minimum disk size value. \n\n Storage charge calculations depend on whether you choose the default value or a custom value.\n\n The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require more storage space, consider upgrading your cluster to a higher tier.",
            "externalDocs": {
              "description": "Customize Storage",
              "url": "https://dochub.mongodb.org/core/customize-storage"
            },
            "format": "double",
            "type": "number"
          },
          "effectiveInstanceSize": {
            "description": "The true tenant instance size. This is present to support backwards compatibility for deprecated provider types and/or instance sizes.",
            "enum": [
              "FLEX",
              "M2",
              "M5",
              "M0"
            ],
            "readOnly": true,
            "type": "string"
          },
          "instanceSize": {
            "description": "Hardware specification for the instances in this M0/M2/M5 tier cluster.",
            "enum": [
              "M0",
              "M2",
              "M5"
            ],
            "title": "Tenant Instance Sizes",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TenantRegionConfig": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudRegionConfig"
          },
          {
            "properties": {
              "backingProviderName": {
                "description": "Cloud service provider on which MongoDB Cloud provisioned the multi-tenant cluster. The resource returns this parameter when **providerName** is `TENANT` and **electableSpecs.instanceSize** is `M0`, `M2` or `M5`. \n\nPlease note that using an instanceSize of M2 or M5 will create a Flex cluster instead. Support for the instanceSize of M2 or M5 will be discontinued in January 2026. We recommend using the createFlexCluster API for such configurations moving forward.",
                "enum": [
                  "AWS",
                  "GCP",
                  "AZURE"
                ],
                "externalDocs": {
                  "description": "createFlexCluster API",
                  "url": "https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Flex-Clusters/operation/createFlexCluster"
                },
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "description": "Details that explain how MongoDB Cloud replicates data in one region on the specified MongoDB database.",
        "title": "Tenant Regional Replication Specifications",
        "type": "object"
      },
      "TenantRegionConfig20240805": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudRegionConfig20240805"
          },
          {
            "properties": {
              "backingProviderName": {
                "description": "Cloud service provider on which MongoDB Cloud provisioned the multi-tenant cluster. The resource returns this parameter when **providerName** is `TENANT` and **electableSpecs.instanceSize** is `M0`, `M2` or `M5`. \n\nPlease note that  using an instanceSize of M2 or M5 will create a Flex cluster instead. Support for the instanceSize of M2 or M5 will be discontinued in January 2026. We recommend using the createFlexCluster API for such configurations moving forward.",
                "enum": [
                  "AWS",
                  "GCP",
                  "AZURE"
                ],
                "externalDocs": {
                  "description": "createFlexCluster API",
                  "url": "https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Flex-Clusters/operation/createFlexCluster"
                },
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "description": "Details that explain how MongoDB Cloud replicates data in one region on the specified MongoDB database.",
        "title": "Tenant Regional Replication Specifications",
        "type": "object"
      },
      "TextSearchHostStatusDetail": {
        "properties": {
          "hostname": {
            "description": "Hostname that corresponds to the status detail.",
            "type": "string"
          },
          "mainIndex": {
            "$ref": "#/components/schemas/TextSearchIndexStatusDetail"
          },
          "queryable": {
            "description": "Flag that indicates whether the index is queryable on the host.",
            "type": "boolean"
          },
          "stagedIndex": {
            "$ref": "#/components/schemas/TextSearchIndexStatusDetail"
          },
          "status": {
            "description": "Condition of the search index when you made this request.\n\n- `DELETING`: The index is being deleted.\n- `FAILED` The index build failed. Indexes can enter the FAILED state due to an invalid index definition.\n- `STALE`: The index is queryable but has stopped replicating data from the indexed collection. Searches on the index may return out-of-date data.\n- `PENDING`: Atlas has not yet started building the index.\n- `BUILDING`: Atlas is building or re-building the index after an edit.\n- `READY`: The index is ready and can support queries.",
            "enum": [
              "DELETING",
              "FAILED",
              "STALE",
              "PENDING",
              "BUILDING",
              "READY",
              "DOES_NOT_EXIST"
            ],
            "type": "string"
          }
        },
        "title": "Text Search Host Status Detail",
        "type": "object"
      },
      "TextSearchIndexCreateRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SearchIndexCreateRequest"
          },
          {
            "properties": {
              "definition": {
                "$ref": "#/components/schemas/TextSearchIndexDefinition"
              }
            },
            "type": "object"
          }
        ],
        "description": "Text Search Index Create Request.",
        "required": [
          "collectionName",
          "database",
          "definition",
          "name"
        ],
        "type": "object"
      },
      "TextSearchIndexDefinition": {
        "description": "The text search index definition set by the user.",
        "properties": {
          "analyzer": {
            "default": "lucene.standard",
            "description": "Specific pre-defined method chosen to convert database field text into searchable words. This conversion reduces the text of fields into the smallest units of text. These units are called a **term** or **token**. This process, known as tokenization, involves making the following changes to the text in fields:\n\n- extracting words\n- removing punctuation\n- removing accents\n- changing to lowercase\n- removing common words\n- reducing words to their root form (stemming)\n- changing words to their base form (lemmatization)\n MongoDB Cloud uses the process you select to build the Atlas Search index.",
            "enum": [
              "lucene.standard",
              "lucene.simple",
              "lucene.whitespace",
              "lucene.keyword",
              "lucene.arabic",
              "lucene.armenian",
              "lucene.basque",
              "lucene.bengali",
              "lucene.brazilian",
              "lucene.bulgarian",
              "lucene.catalan",
              "lucene.chinese",
              "lucene.cjk",
              "lucene.czech",
              "lucene.danish",
              "lucene.dutch",
              "lucene.english",
              "lucene.finnish",
              "lucene.french",
              "lucene.galician",
              "lucene.german",
              "lucene.greek",
              "lucene.hindi",
              "lucene.hungarian",
              "lucene.indonesian",
              "lucene.irish",
              "lucene.italian",
              "lucene.japanese",
              "lucene.korean",
              "lucene.kuromoji",
              "lucene.latvian",
              "lucene.lithuanian",
              "lucene.morfologik",
              "lucene.nori",
              "lucene.norwegian",
              "lucene.persian",
              "lucene.portuguese",
              "lucene.romanian",
              "lucene.russian",
              "lucene.smartcn",
              "lucene.sorani",
              "lucene.spanish",
              "lucene.swedish",
              "lucene.thai",
              "lucene.turkish",
              "lucene.ukrainian"
            ],
            "externalDocs": {
              "description": "Atlas Search Analyzers",
              "url": "https://dochub.mongodb.org/core/analyzers--fts"
            },
            "type": "string"
          },
          "analyzers": {
            "description": "List of user-defined methods to convert database field text into searchable words.",
            "externalDocs": {
              "description": "Custom Atlas Search Analyzers",
              "url": "https://dochub.mongodb.org/core/custom-fts"
            },
            "items": {
              "$ref": "#/components/schemas/AtlasSearchAnalyzer"
            },
            "type": "array"
          },
          "mappings": {
            "$ref": "#/components/schemas/SearchMappings"
          },
          "numPartitions": {
            "default": 1,
            "description": "Number of index partitions. Allowed values are [1, 2, 4].",
            "format": "int32",
            "type": "integer"
          },
          "searchAnalyzer": {
            "default": "lucene.standard",
            "description": "Method applied to identify words when searching this index.",
            "enum": [
              "lucene.standard",
              "lucene.simple",
              "lucene.whitespace",
              "lucene.keyword",
              "lucene.arabic",
              "lucene.armenian",
              "lucene.basque",
              "lucene.bengali",
              "lucene.brazilian",
              "lucene.bulgarian",
              "lucene.catalan",
              "lucene.chinese",
              "lucene.cjk",
              "lucene.czech",
              "lucene.danish",
              "lucene.dutch",
              "lucene.english",
              "lucene.finnish",
              "lucene.french",
              "lucene.galician",
              "lucene.german",
              "lucene.greek",
              "lucene.hindi",
              "lucene.hungarian",
              "lucene.indonesian",
              "lucene.irish",
              "lucene.italian",
              "lucene.japanese",
              "lucene.korean",
              "lucene.kuromoji",
              "lucene.latvian",
              "lucene.lithuanian",
              "lucene.morfologik",
              "lucene.nori",
              "lucene.norwegian",
              "lucene.persian",
              "lucene.portuguese",
              "lucene.romanian",
              "lucene.russian",
              "lucene.smartcn",
              "lucene.sorani",
              "lucene.spanish",
              "lucene.swedish",
              "lucene.thai",
              "lucene.turkish",
              "lucene.ukrainian"
            ],
            "type": "string"
          },
          "storedSource": {
            "description": "Flag that indicates whether to store all fields (true) on Atlas Search. By default, Atlas doesn't store (false) the fields on Atlas Search.  Alternatively, you can specify an object that only contains the list of fields to store (include) or not store (exclude) on Atlas Search. To learn more, see Stored Source Fields.",
            "example": {
              "include | exclude": [
                "field1",
                "field2"
              ]
            },
            "externalDocs": {
              "description": "Stored Source Fields",
              "url": "https://dochub.mongodb.org/core/atlas-search-stored-source"
            },
            "type": "object"
          },
          "synonyms": {
            "description": "Rule sets that map words to their synonyms in this index.",
            "externalDocs": {
              "description": "Synonym Mapping",
              "url": "https://dochub.mongodb.org/core/fts-synonym-mappings"
            },
            "items": {
              "$ref": "#/components/schemas/SearchSynonymMappingDefinition"
            },
            "type": "array"
          }
        },
        "required": [
          "mappings"
        ],
        "title": "Text Search Index Definition",
        "type": "object"
      },
      "TextSearchIndexResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SearchIndexResponse"
          },
          {
            "properties": {
              "latestDefinition": {
                "$ref": "#/components/schemas/TextSearchIndexDefinition"
              },
              "statusDetail": {
                "description": "List of documents detailing index status on each host.",
                "items": {
                  "$ref": "#/components/schemas/TextSearchHostStatusDetail"
                },
                "type": "array"
              },
              "synonymMappingStatus": {
                "description": "Status that describes this index's synonym mappings. This status appears only if the index has synonyms defined.",
                "enum": [
                  "FAILED",
                  "BUILDING",
                  "READY"
                ],
                "type": "string"
              },
              "synonymMappingStatusDetail": {
                "description": "A list of documents describing the status of the index's synonym mappings on each search host. Only appears if the index has synonyms defined.",
                "items": {
                  "additionalProperties": {
                    "$ref": "#/components/schemas/SynonymMappingStatusDetail"
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ],
        "title": "Text Search Index Response",
        "type": "object"
      },
      "TextSearchIndexStatusDetail": {
        "description": "Contains status information about a text search index.",
        "properties": {
          "definition": {
            "$ref": "#/components/schemas/TextSearchIndexDefinition"
          },
          "definitionVersion": {
            "$ref": "#/components/schemas/SearchIndexDefinitionVersion"
          },
          "message": {
            "description": "Optional message describing an error.",
            "type": "string"
          },
          "queryable": {
            "description": "Flag that indicates whether the index generation is queryable on the host.",
            "type": "boolean"
          },
          "status": {
            "description": "Condition of the search index when you made this request.\n\n- `DELETING`: The index is being deleted.\n- `FAILED` The index build failed. Indexes can enter the FAILED state due to an invalid index definition.\n- `STALE`: The index is queryable but has stopped replicating data from the indexed collection. Searches on the index may return out-of-date data.\n- `PENDING`: Atlas has not yet started building the index.\n- `BUILDING`: Atlas is building or re-building the index after an edit.\n- `READY`: The index is ready and can support queries.",
            "enum": [
              "DELETING",
              "FAILED",
              "STALE",
              "PENDING",
              "BUILDING",
              "READY",
              "DOES_NOT_EXIST"
            ],
            "type": "string"
          },
          "synonymMappingStatus": {
            "description": "Status that describes this index's synonym mappings. This status appears only if the index has synonyms defined.",
            "enum": [
              "FAILED",
              "BUILDING",
              "READY"
            ],
            "type": "string"
          },
          "synonymMappingStatusDetail": {
            "description": "List of synonym statuses by mapping.",
            "items": {
              "$ref": "#/components/schemas/SynonymMappingStatusDetailMap"
            },
            "type": "array"
          }
        },
        "title": "Text Search Index Status Detail",
        "type": "object"
      },
      "TimeMetricEventView": {
        "properties": {
          "apiKeyId": {
            "description": "Unique 24-hexadecimal digit string that identifies the API Key that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "example": "32b6e34b3d91647abb20e7b8",
            "externalDocs": {
              "description": "Create Programmatic API Key",
              "url": "https://dochub.mongodb.org/core/atlas-create-prog-api-key"
            },
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "created": {
            "description": "Date and time when this event occurred. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "externalDocs": {
              "description": "ISO 8601",
              "url": "https://en.wikipedia.org/wiki/ISO_8601"
            },
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "currentValue": {
            "$ref": "#/components/schemas/TimeMetricValueView"
          },
          "deskLocation": {
            "description": "Desk location of MongoDB employee associated with the event.",
            "readOnly": true,
            "type": "string"
          },
          "employeeIdentifier": {
            "description": "Identifier of MongoDB employee associated with the event.",
            "readOnly": true,
            "type": "string"
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/HostMetricEventTypeView"
          },
          "groupId": {
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "isGlobalAdmin": {
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "type": "boolean"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "metricName": {
            "description": "Human-readable label of the metric associated with the **alertId**. This field may change type of **currentValue** field.",
            "readOnly": true,
            "type": "string"
          },
          "orgId": {
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "port": {
            "description": "IANA port on which the MongoDB process listens for requests.",
            "example": 27017,
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "publicKey": {
            "description": "Public part of the API key that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "externalDocs": {
              "url": "https://dochub.mongodb.org/core/atlas-create-prog-api-key"
            },
            "readOnly": true,
            "type": "string"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "example": "216.172.40.186",
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "readOnly": true,
            "type": "string"
          },
          "replicaSetName": {
            "description": "Human-readable label of the replica set associated with the event.",
            "example": "event-replica-set",
            "readOnly": true,
            "type": "string"
          },
          "shardName": {
            "description": "Human-readable label of the shard associated with the event.",
            "example": "event-sh-01",
            "readOnly": true,
            "type": "string"
          },
          "userId": {
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "username": {
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "created",
          "eventTypeName",
          "id"
        ],
        "type": "object"
      },
      "TimeMetricUnits": {
        "default": "HOURS",
        "description": "Element used to express the quantity. This can be an element of time, storage capacity, and the like.",
        "enum": [
          "NANOSECONDS",
          "MILLISECONDS",
          "MILLION_MINUTES",
          "SECONDS",
          "MINUTES",
          "HOURS",
          "DAYS"
        ],
        "title": "Time Metric Units",
        "type": "string"
      },
      "TimeMetricValueView": {
        "description": "Measurement of the **metricName** recorded at the time of the event.",
        "properties": {
          "number": {
            "description": "Amount of the **metricName** recorded at the time of the event. This value triggered the alert.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "units": {
            "$ref": "#/components/schemas/TimeMetricUnits"
          }
        },
        "readOnly": true,
        "title": "Time Metric Value",
        "type": "object"
      },
      "TokenFilterEnglishPossessive": {
        "description": "Filter that removes possessives (trailing 's) from words.",
        "properties": {
          "type": {
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "englishPossessive"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "englishPossessive",
        "type": "object"
      },
      "TokenFilterFlattenGraph": {
        "description": "Filter that transforms a token filter graph, such as the token filter graph that the wordDelimiterGraph token filter produces, into a flat form suitable for indexing.",
        "properties": {
          "type": {
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "flattenGraph"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "flattenGraph",
        "type": "object"
      },
      "TokenFilterPorterStemming": {
        "description": "Filter that uses the porter stemming algorithm to remove the common morphological and inflectional suffixes from words in English. It expects lowercase text and doesn't work as expected for uppercase text.",
        "properties": {
          "type": {
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "porterStemming"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "porterStemming",
        "type": "object"
      },
      "TokenFilterSpanishPluralStemming": {
        "description": "Filter that stems Spanish plural words. It expects lowercase text.",
        "properties": {
          "type": {
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "spanishPluralStemming"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "spanishPluralStemming",
        "type": "object"
      },
      "TokenFilterStempel": {
        "description": "Filter that uses Lucene's default Polish stemmer table to stem words in the Polish language. It expects lowercase text.",
        "externalDocs": {
          "description": "Default Polish stemmer table",
          "url": "https://lucene.apache.org/core/9_2_0/analysis/stempel/org/apache/lucene/analysis/pl/PolishAnalyzer.html#DEFAULT_STEMMER_FILE"
        },
        "properties": {
          "type": {
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "stempel"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "stempel",
        "type": "object"
      },
      "TokenFilterWordDelimiterGraph": {
        "description": "Filter that splits tokens into sub-tokens based on configured rules.",
        "properties": {
          "delimiterOptions": {
            "description": "Object that contains the rules that determine how to split words into sub-words.",
            "properties": {
              "concatenateAll": {
                "default": false,
                "description": "Flag that indicates whether to concatenate runs.",
                "type": "boolean"
              },
              "concatenateNumbers": {
                "default": false,
                "description": "Flag that indicates whether to concatenate runs of sub-numbers.",
                "type": "boolean"
              },
              "concatenateWords": {
                "default": false,
                "description": "Flag that indicates whether to concatenate runs of sub-words.",
                "type": "boolean"
              },
              "generateNumberParts": {
                "default": true,
                "description": "Flag that indicates whether to split tokens based on sub-numbers. For example, if `true`, this option splits `100-2` into `100` and `2`.",
                "type": "boolean"
              },
              "generateWordParts": {
                "default": true,
                "description": "Flag that indicates whether to split tokens based on sub-words.",
                "type": "boolean"
              },
              "ignoreKeywords": {
                "default": false,
                "description": "Flag that indicates whether to skip tokens with the `keyword` attribute set to `true`.",
                "type": "boolean"
              },
              "preserveOriginal": {
                "default": true,
                "description": "Flag that indicates whether to generate tokens of the original words.",
                "type": "boolean"
              },
              "splitOnCaseChange": {
                "default": true,
                "description": "Flag that indicates whether to split tokens based on letter-case transitions.",
                "type": "boolean"
              },
              "splitOnNumerics": {
                "default": true,
                "description": "Flag that indicates whether to split tokens based on letter-number transitions.",
                "type": "boolean"
              },
              "stemEnglishPossessive": {
                "default": true,
                "description": "Flag that indicates whether to remove trailing possessives from each sub-word.",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "protectedWords": {
            "description": "Object that contains options for protected words.",
            "properties": {
              "ignoreCase": {
                "default": true,
                "description": "Flag that indicates whether to ignore letter case sensitivity for protected words.",
                "type": "boolean"
              },
              "words": {
                "description": "List that contains the tokens to protect from delimination.",
                "items": {
                  "type": "string"
                },
                "type": "array",
                "x-xgen-IPA-exception": {
                  "xgen-IPA-124-array-max-items": "Schema predates IPA validation"
                }
              }
            },
            "required": [
              "words"
            ],
            "type": "object"
          },
          "type": {
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "wordDelimiterGraph"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "wordDelimiterGraph",
        "type": "object"
      },
      "TokenFilterkStemming": {
        "description": "Filter that combines algorithmic stemming with a built-in dictionary for the English language to stem words.",
        "properties": {
          "type": {
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "kStemming"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "kStemming",
        "type": "object"
      },
      "VectorSearchHostStatusDetail": {
        "properties": {
          "hostname": {
            "description": "Hostname that corresponds to the status detail.",
            "type": "string"
          },
          "mainIndex": {
            "$ref": "#/components/schemas/VectorSearchIndexStatusDetail"
          },
          "queryable": {
            "description": "Flag that indicates whether the index is queryable on the host.",
            "type": "boolean"
          },
          "stagedIndex": {
            "$ref": "#/components/schemas/VectorSearchIndexStatusDetail"
          },
          "status": {
            "description": "Condition of the search index when you made this request.\n\n- `DELETING`: The index is being deleted.\n- `FAILED` The index build failed. Indexes can enter the FAILED state due to an invalid index definition.\n- `STALE`: The index is queryable but has stopped replicating data from the indexed collection. Searches on the index may return out-of-date data.\n- `PENDING`: Atlas has not yet started building the index.\n- `BUILDING`: Atlas is building or re-building the index after an edit.\n- `READY`: The index is ready and can support queries.",
            "enum": [
              "DELETING",
              "FAILED",
              "STALE",
              "PENDING",
              "BUILDING",
              "READY",
              "DOES_NOT_EXIST"
            ],
            "type": "string"
          }
        },
        "title": "Vector Search Host Status Detail",
        "type": "object"
      },
      "VectorSearchIndex": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ClusterSearchIndex"
          },
          {
            "properties": {
              "fields": {
                "description": "Settings that configure the fields, one per object, to index. You must define at least one \"vector\" type field. You can optionally define \"filter\" type fields also.",
                "externalDocs": {
                  "description": "Vector Search Fields",
                  "url": "https://dochub.mongodb.org/core/avs-vector-type"
                },
                "items": {
                  "$ref": "#/components/schemas/BasicDBObject"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ],
        "required": [
          "collectionName",
          "database",
          "name"
        ],
        "type": "object"
      },
      "VectorSearchIndexCreateRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SearchIndexCreateRequest"
          },
          {
            "properties": {
              "definition": {
                "$ref": "#/components/schemas/VectorSearchIndexDefinition"
              }
            },
            "type": "object"
          }
        ],
        "description": "Vector Search Index Create Request.",
        "required": [
          "collectionName",
          "database",
          "definition",
          "name"
        ],
        "type": "object"
      },
      "VectorSearchIndexDefinition": {
        "description": "The vector search index definition set by the user.",
        "properties": {
          "fields": {
            "description": "Settings that configure the fields, one per object, to index. You must define at least one \"vector\" type field. You can optionally define \"filter\" type fields also.",
            "externalDocs": {
              "description": "Vector Search Fields",
              "url": "https://dochub.mongodb.org/core/avs-vector-type"
            },
            "items": {
              "$ref": "#/components/schemas/BasicDBObject"
            },
            "type": "array"
          },
          "numPartitions": {
            "default": 1,
            "description": "Number of index partitions. Allowed values are [1, 2, 4].",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "Vector Search Index Definition",
        "type": "object"
      },
      "VectorSearchIndexResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SearchIndexResponse"
          },
          {
            "properties": {
              "latestDefinition": {
                "$ref": "#/components/schemas/VectorSearchIndexDefinition"
              },
              "statusDetail": {
                "description": "List of documents detailing index status on each host.",
                "items": {
                  "$ref": "#/components/schemas/VectorSearchHostStatusDetail"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ],
        "title": "Vector Search Index Response",
        "type": "object"
      },
      "VectorSearchIndexStatusDetail": {
        "description": "Contains status information about a vector search index.",
        "properties": {
          "definition": {
            "$ref": "#/components/schemas/VectorSearchIndexDefinition"
          },
          "definitionVersion": {
            "$ref": "#/components/schemas/SearchIndexDefinitionVersion"
          },
          "message": {
            "description": "Optional message describing an error.",
            "type": "string"
          },
          "queryable": {
            "description": "Flag that indicates whether the index generation is queryable on the host.",
            "type": "boolean"
          },
          "status": {
            "description": "Condition of the search index when you made this request.\n\n- `DELETING`: The index is being deleted.\n- `FAILED` The index build failed. Indexes can enter the FAILED state due to an invalid index definition.\n- `STALE`: The index is queryable but has stopped replicating data from the indexed collection. Searches on the index may return out-of-date data.\n- `PENDING`: Atlas has not yet started building the index.\n- `BUILDING`: Atlas is building or re-building the index after an edit.\n- `READY`: The index is ready and can support queries.",
            "enum": [
              "DELETING",
              "FAILED",
              "STALE",
              "PENDING",
              "BUILDING",
              "READY",
              "DOES_NOT_EXIST"
            ],
            "type": "string"
          }
        },
        "title": "Vector Search Index Status Detail",
        "type": "object"
      },
      "WeeklyScheduleView": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OnlineArchiveSchedule"
          },
          {
            "properties": {
              "dayOfWeek": {
                "description": "Day of the week when the scheduled archive starts. The week starts with Monday (`1`) and ends with Sunday (`7`).",
                "format": "int32",
                "maximum": 7,
                "minimum": 1,
                "type": "integer"
              },
              "endHour": {
                "description": "Hour of the day when the scheduled window to run one online archive ends.",
                "format": "int32",
                "maximum": 23,
                "minimum": 0,
                "type": "integer"
              },
              "endMinute": {
                "description": "Minute of the hour when the scheduled window to run one online archive ends.",
                "format": "int32",
                "maximum": 59,
                "minimum": 0,
                "type": "integer"
              },
              "startHour": {
                "description": "Hour of the day when the when the scheduled window to run one online archive starts.",
                "format": "int32",
                "maximum": 23,
                "minimum": 0,
                "type": "integer"
              },
              "startMinute": {
                "description": "Minute of the hour when the scheduled window to run one online archive starts.",
                "format": "int32",
                "maximum": 59,
                "minimum": 0,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ],
        "required": [
          "type"
        ],
        "type": "object"
      },
      "charFilterhtmlStrip": {
        "description": "Filter that strips out HTML constructs.",
        "properties": {
          "ignoredTags": {
            "description": "The HTML tags that you want to exclude from filtering.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "type": {
            "description": "Human-readable label that identifies this character filter type.",
            "enum": [
              "htmlStrip"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "htmlStrip",
        "type": "object"
      },
      "charFiltericuNormalize": {
        "description": "Filter that processes normalized text with the ICU Normalizer. It is based on Lucene's ICUNormalizer2CharFilter.",
        "externalDocs": {
          "description": "ICUNormalizer2CharFilter",
          "url": "https://lucene.apache.org/core/8_3_0/analyzers-icu/org/apache/lucene/analysis/icu/ICUNormalizer2CharFilter.html"
        },
        "properties": {
          "type": {
            "description": "Human-readable label that identifies this character filter type.",
            "enum": [
              "icuNormalize"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "icuNormalize",
        "type": "object"
      },
      "charFiltermapping": {
        "description": "Filter that applies normalization mappings that you specify to characters.",
        "properties": {
          "mappings": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Comma-separated list of mappings. A mapping indicates that one character or group of characters should be substituted for another, using the following format:\n\n`<original> : <replacement>`.",
            "type": "object"
          },
          "type": {
            "description": "Human-readable label that identifies this character filter type.",
            "enum": [
              "mapping"
            ],
            "type": "string"
          }
        },
        "required": [
          "mappings",
          "type"
        ],
        "title": "mapping",
        "type": "object"
      },
      "charFilterpersian": {
        "description": "Filter that replaces instances of a zero-width non-joiner with an ordinary space. It is based on Lucene's PersianCharFilter.",
        "externalDocs": {
          "description": "PersianCharFilter",
          "url": "https://lucene.apache.org/core/8_0_0/analyzers-common/org/apache/lucene/analysis/fa/PersianCharFilter.html"
        },
        "properties": {
          "type": {
            "description": "Human-readable label that identifies this character filter type.",
            "enum": [
              "persian"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "persian",
        "type": "object"
      },
      "raw": {
        "description": "Additional meta information captured about this event. The response returns this parameter as a JSON object when the query parameter `includeRaw=true`. The list of fields in the raw document may change. Don't rely on raw values for formal monitoring.",
        "properties": {
          "_t": {
            "description": "Unique identifier of event type.",
            "example": "ALERT_AUDIT",
            "type": "string"
          },
          "alertConfigId": {
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration related to the event.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "cid": {
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "cre": {
            "description": "Date and time when this event occurred. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "externalDocs": {
              "description": "ISO 8601",
              "url": "https://en.wikipedia.org/wiki/ISO_8601"
            },
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Description of the event.",
            "example": "Alert Acknowledged",
            "type": "string"
          },
          "gn": {
            "description": "Human-readable label that identifies the project.",
            "example": "Test Project",
            "maxLength": 64,
            "minLength": 1,
            "type": "string"
          },
          "id": {
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "orgId": {
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "example": "32b6e34b3d91647abb20e7b8",
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "orgName": {
            "description": "Human-readable label that identifies the organization that contains the project.",
            "example": "Test Organization",
            "maxLength": 64,
            "minLength": 1,
            "type": "string"
          },
          "severity": {
            "description": "Severity of the event.",
            "enum": [
              "INFO",
              "WARNING",
              "ERROR",
              "CRITICAL"
            ],
            "type": "string"
          }
        },
        "readOnly": true,
        "type": "object"
      },
      "tokenFilterasciiFolding": {
        "description": "Filter that converts alphabetic, numeric, and symbolic Unicode characters that are not in the Basic Latin Unicode block to their ASCII equivalents, if available.",
        "externalDocs": {
          "description": "Basic Latin Unicode block",
          "url": "https://en.wikipedia.org/wiki/Basic_Latin_(Unicode_block)"
        },
        "properties": {
          "originalTokens": {
            "default": "omit",
            "description": "Value that indicates whether to include or omit the original tokens in the output of the token filter.\n\nChoose `include` if you want to support queries on both the original tokens as well as the converted forms.\n\n Choose `omit` if you want to query only on the converted forms of the original tokens.",
            "enum": [
              "omit",
              "include"
            ],
            "type": "string"
          },
          "type": {
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "asciiFolding"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "asciiFolding",
        "type": "object"
      },
      "tokenFilterdaitchMokotoffSoundex": {
        "description": "Filter that creates tokens for words that sound the same based on the Daitch-Mokotoff Soundex phonetic algorithm. This filter can generate multiple encodings for each input, where each encoded token is a 6 digit number.\n\n**NOTE**: Don't use the **daitchMokotoffSoundex** token filter in:\n\n-Synonym or autocomplete mapping definitions\n- Operators where **fuzzy** is enabled. Atlas Search supports the **fuzzy** option only for the **autocomplete**, **term**, and **text** operators.",
        "externalDocs": {
          "description": "Daitch-Mokotoff Soundex phonetic algorithm",
          "url": "https://en.wikipedia.org/wiki/Daitch%E2%80%93Mokotoff_Soundex"
        },
        "properties": {
          "originalTokens": {
            "default": "include",
            "description": "Value that indicates whether to include or omit the original tokens in the output of the token filter.\n\nChoose `include` if you want to support queries on both the original tokens as well as the converted forms.\n\n Choose `omit` if you want to query only on the converted forms of the original tokens.",
            "enum": [
              "omit",
              "include"
            ],
            "type": "string"
          },
          "type": {
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "daitchMokotoffSoundex"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "daitchMokotoffSoundex",
        "type": "object"
      },
      "tokenFilteredgeGram": {
        "description": "Filter that tokenizes input from the left side, or \"edge\", of a text input into n-grams of configured sizes. You can't use this token filter in synonym or autocomplete mapping definitions.",
        "properties": {
          "maxGram": {
            "description": "Value that specifies the maximum length of generated n-grams. This value must be greater than or equal to **minGram**.",
            "type": "integer"
          },
          "minGram": {
            "description": "Value that specifies the minimum length of generated n-grams. This value must be less than or equal to **maxGram**.",
            "type": "integer"
          },
          "termNotInBounds": {
            "default": "omit",
            "description": "Value that indicates whether to index tokens shorter than **minGram** or longer than **maxGram**.",
            "enum": [
              "omit",
              "include"
            ],
            "type": "string"
          },
          "type": {
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "edgeGram"
            ],
            "type": "string"
          }
        },
        "required": [
          "maxGram",
          "minGram",
          "type"
        ],
        "title": "edgeGram",
        "type": "object"
      },
      "tokenFiltericuFolding": {
        "description": "Filter that applies character folding from Unicode Technical Report #30.",
        "externalDocs": {
          "description": "Unicode Technical Report #30",
          "url": "http://www.unicode.org/reports/tr30/tr30-4.html"
        },
        "properties": {
          "type": {
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "icuFolding"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "icuFolding",
        "type": "object"
      },
      "tokenFiltericuNormalizer": {
        "description": "Filter that normalizes tokens using a standard Unicode Normalization Mode.",
        "externalDocs": {
          "description": "Unicode Normalization Mode",
          "url": "https://unicode.org/reports/tr15/"
        },
        "properties": {
          "normalizationForm": {
            "default": "nfc",
            "description": "Normalization form to apply.",
            "enum": [
              "nfd",
              "nfc",
              "nfkd",
              "nfkc"
            ],
            "type": "string"
          },
          "type": {
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "icuNormalizer"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "icuNormalizer",
        "type": "object"
      },
      "tokenFilterlength": {
        "description": "Filter that removes tokens that are too short or too long.",
        "properties": {
          "max": {
            "default": 255,
            "description": "Number that specifies the maximum length of a token. Value must be greater than or equal to **min**.",
            "type": "integer"
          },
          "min": {
            "default": 0,
            "description": "Number that specifies the minimum length of a token. This value must be less than or equal to **max**.",
            "type": "integer"
          },
          "type": {
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "length"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "length",
        "type": "object"
      },
      "tokenFilterlowercase": {
        "description": "Filter that normalizes token text to lowercase.",
        "properties": {
          "type": {
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "lowercase"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "lowercase",
        "type": "object"
      },
      "tokenFilternGram": {
        "description": "Filter that tokenizes input into n-grams of configured sizes. You can't use this token filter in synonym or autocomplete mapping definitions.",
        "properties": {
          "maxGram": {
            "description": "Value that specifies the maximum length of generated n-grams. This value must be greater than or equal to **minGram**.",
            "type": "integer"
          },
          "minGram": {
            "description": "Value that specifies the minimum length of generated n-grams. This value must be less than or equal to **maxGram**.",
            "type": "integer"
          },
          "termNotInBounds": {
            "default": "omit",
            "description": "Value that indicates whether to index tokens shorter than **minGram** or longer than **maxGram**.",
            "enum": [
              "omit",
              "include"
            ],
            "type": "string"
          },
          "type": {
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "nGram"
            ],
            "type": "string"
          }
        },
        "required": [
          "maxGram",
          "minGram",
          "type"
        ],
        "title": "nGram",
        "type": "object"
      },
      "tokenFilterregex": {
        "description": "Filter that applies a regular expression to each token, replacing matches with a specified string.",
        "properties": {
          "matches": {
            "description": "Value that indicates whether to replace only the first matching pattern or all matching patterns.",
            "enum": [
              "all",
              "first"
            ],
            "type": "string"
          },
          "pattern": {
            "description": "Regular expression pattern to apply to each token.",
            "type": "string"
          },
          "replacement": {
            "description": "Replacement string to substitute wherever a matching pattern occurs.",
            "type": "string"
          },
          "type": {
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "regex"
            ],
            "type": "string"
          }
        },
        "required": [
          "matches",
          "pattern",
          "replacement",
          "type"
        ],
        "title": "regex",
        "type": "object"
      },
      "tokenFilterreverse": {
        "description": "Filter that reverses each string token.",
        "properties": {
          "type": {
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "reverse"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "reverse",
        "type": "object"
      },
      "tokenFiltershingle": {
        "description": "Filter that constructs shingles (token n-grams) from a series of tokens. You can't use this token filter in synonym or autocomplete mapping definitions.",
        "properties": {
          "maxShingleSize": {
            "description": "Value that specifies the maximum number of tokens per shingle. This value must be greater than or equal to **minShingleSize**.",
            "type": "integer"
          },
          "minShingleSize": {
            "description": "Value that specifies the minimum number of tokens per shingle. This value must be less than or equal to **maxShingleSize**.",
            "type": "integer"
          },
          "type": {
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "shingle"
            ],
            "type": "string"
          }
        },
        "required": [
          "maxShingleSize",
          "minShingleSize",
          "type"
        ],
        "title": "shingle",
        "type": "object"
      },
      "tokenFiltersnowballStemming": {
        "description": "Filter that stems tokens using a Snowball-generated stemmer.",
        "externalDocs": {
          "description": "Snowball-generated stemmer",
          "url": "https://snowballstem.org/"
        },
        "properties": {
          "stemmerName": {
            "description": "Snowball-generated stemmer to use.",
            "enum": [
              "arabic",
              "armenian",
              "basque",
              "catalan",
              "danish",
              "dutch",
              "english",
              "finnish",
              "french",
              "german",
              "german2",
              "hungarian",
              "irish",
              "italian",
              "kp",
              "lithuanian",
              "lovins",
              "norwegian",
              "porter",
              "portuguese",
              "romanian",
              "russian",
              "spanish",
              "swedish",
              "turkish"
            ],
            "type": "string"
          },
          "type": {
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "snowballStemming"
            ],
            "type": "string"
          }
        },
        "required": [
          "stemmerName",
          "type"
        ],
        "title": "snowballStemming",
        "type": "object"
      },
      "tokenFilterstopword": {
        "description": "Filter that removes tokens that correspond to the specified stop words. This token filter doesn't analyze the stop words that you specify.",
        "properties": {
          "ignoreCase": {
            "default": true,
            "description": "Flag that indicates whether to ignore the case of stop words when filtering the tokens to remove.",
            "type": "boolean"
          },
          "tokens": {
            "description": "The stop words that correspond to the tokens to remove. Value must be one or more stop words.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "type": {
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "stopword"
            ],
            "type": "string"
          }
        },
        "required": [
          "tokens",
          "type"
        ],
        "title": "stopword",
        "type": "object"
      },
      "tokenFiltertrim": {
        "description": "Filter that trims leading and trailing whitespace from tokens.",
        "properties": {
          "type": {
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "trim"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "trim",
        "type": "object"
      },
      "tokenizeredgeGram": {
        "description": "Tokenizer that splits input from the left side, or \"edge\", of a text input into n-grams of given sizes. You can't use the edgeGram tokenizer in synonym or autocomplete mapping definitions.",
        "properties": {
          "maxGram": {
            "description": "Characters to include in the longest token that Atlas Search creates.",
            "type": "integer"
          },
          "minGram": {
            "description": "Characters to include in the shortest token that Atlas Search creates.",
            "type": "integer"
          },
          "type": {
            "description": "Human-readable label that identifies this tokenizer type.",
            "enum": [
              "edgeGram"
            ],
            "type": "string"
          }
        },
        "required": [
          "maxGram",
          "minGram",
          "type"
        ],
        "title": "edgeGram",
        "type": "object"
      },
      "tokenizerkeyword": {
        "description": "Tokenizer that combines the entire input as a single token.",
        "properties": {
          "type": {
            "description": "Human-readable label that identifies this tokenizer type.",
            "enum": [
              "keyword"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "keyword",
        "type": "object"
      },
      "tokenizernGram": {
        "description": "Tokenizer that splits input into text chunks, or \"n-grams\", of into given sizes. You can't use the nGram tokenizer in synonym or autocomplete mapping definitions.",
        "properties": {
          "maxGram": {
            "description": "Characters to include in the longest token that Atlas Search creates.",
            "type": "integer"
          },
          "minGram": {
            "description": "Characters to include in the shortest token that Atlas Search creates.",
            "type": "integer"
          },
          "type": {
            "description": "Human-readable label that identifies this tokenizer type.",
            "enum": [
              "edgeGram"
            ],
            "type": "string"
          }
        },
        "required": [
          "maxGram",
          "minGram",
          "type"
        ],
        "title": "nGram",
        "type": "object"
      },
      "tokenizerregexCaptureGroup": {
        "description": "Tokenizer that uses a regular expression pattern to extract tokens.",
        "properties": {
          "group": {
            "description": "Index of the character group within the matching expression to extract into tokens. Use `0` to extract all character groups.",
            "type": "integer"
          },
          "pattern": {
            "description": "Regular expression to match against.",
            "type": "string"
          },
          "type": {
            "description": "Human-readable label that identifies this tokenizer type.",
            "enum": [
              "regexCaptureGroup"
            ],
            "type": "string"
          }
        },
        "required": [
          "group",
          "pattern",
          "type"
        ],
        "title": "regexCaptureGroup",
        "type": "object"
      },
      "tokenizerregexSplit": {
        "description": "Tokenizer that splits tokens using a regular-expression based delimiter.",
        "properties": {
          "pattern": {
            "description": "Regular expression to match against.",
            "type": "string"
          },
          "type": {
            "description": "Human-readable label that identifies this tokenizer type.",
            "enum": [
              "regexSplit"
            ],
            "type": "string"
          }
        },
        "required": [
          "pattern",
          "type"
        ],
        "title": "regexSplit",
        "type": "object"
      },
      "tokenizerstandard": {
        "description": "Tokenizer that splits tokens based on word break rules from the Unicode Text Segmentation algorithm.",
        "externalDocs": {
          "description": "Unicode Text Segmentation Algorithm",
          "url": "https://www.unicode.org/L2/L2019/19034-uax29-34-draft.pdf"
        },
        "properties": {
          "maxTokenLength": {
            "default": 255,
            "description": "Maximum number of characters in a single token. Tokens greater than this length are split at this length into multiple tokens.",
            "type": "integer"
          },
          "type": {
            "description": "Human-readable label that identifies this tokenizer type.",
            "enum": [
              "standard"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "standard",
        "type": "object"
      },
      "tokenizeruaxUrlEmail": {
        "description": "Tokenizer that creates tokens from URLs and email addresses. Although this tokenizer uses word break rules from the Unicode Text Segmentation algorithm, we recommend using it only when the indexed field value includes URLs and email addresses. For fields that don't include URLs or email addresses, use the **standard** tokenizer to create tokens based on word break rules.",
        "externalDocs": {
          "description": "Unicode Text Segmentation Algorithm",
          "url": "https://www.unicode.org/L2/L2019/19034-uax29-34-draft.pdf"
        },
        "properties": {
          "maxTokenLength": {
            "default": 255,
            "description": "Maximum number of characters in a single token. Tokens greater than this length are split at this length into multiple tokens.",
            "type": "integer"
          },
          "type": {
            "description": "Human-readable label that identifies this tokenizer type.",
            "enum": [
              "uaxUrlEmail"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "uaxUrlEmail",
        "type": "object"
      },
      "tokenizerwhitespace": {
        "description": "Tokenizer that creates tokens based on occurrences of whitespace between words.",
        "properties": {
          "maxTokenLength": {
            "default": 255,
            "description": "Maximum number of characters in a single token. Tokens greater than this length are split at this length into multiple tokens.",
            "type": "integer"
          },
          "type": {
            "description": "Human-readable label that identifies this tokenizer type.",
            "enum": [
              "whitespace"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "whitespace",
        "type": "object"
      }
    },
    "securitySchemes": {
      "DigestAuth": {
        "scheme": "digest",
        "type": "http"
      },
      "ServiceAccounts": {
        "description": "Learn more about [Service Accounts](https://www.mongodb.com/docs/atlas/api/service-accounts-overview).",
        "flows": {
          "clientCredentials": {
            "scopes": {},
            "tokenUrl": "https://cloud.mongodb.com/api/oauth/token"
          }
        },
        "type": "oauth2"
      }
    }
  },
  "info": {
    "description": "The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas.\n\nThe Atlas Administration API uses OAuth2 Service Accounts or HTTP Digest Authentication to authenticate requests. Provide a programmatic API public key and corresponding private key as the username and password when constructing the HTTP request. For example, to [return database access history](#tag/Access-Tracking/operation/listAccessLogsByClusterName) with [cURL](https://en.wikipedia.org/wiki/CURL), run the following command in the terminal:\n\n```\ncurl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" \\\n  --digest \\\n  --header \"Accept: application/vnd.atlas.2025-09-22.upcoming+json\" \\\n  -X GET \"https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/dbAccessHistory/clusters/{clusterName}?pretty=true\"\n```\n\nTo learn more, see [Get Started with the Atlas Administration API](https://www.mongodb.com/docs/atlas/configure-api-access/). For support, see [MongoDB Support](https://www.mongodb.com/support/get-started).\n\nYou can also explore the various endpoints available through the Atlas Administration API in MongoDB's [Postman workspace](https://www.postman.com/mongodb-devrel/workspace/mongodb-atlas-administration-apis/).",
    "license": {
      "name": "CC BY-NC-SA 3.0 US",
      "url": "https://creativecommons.org/licenses/by-nc-sa/3.0/us/"
    },
    "termsOfService": "https://www.mongodb.com/mongodb-management-service-terms-and-conditions",
    "title": "MongoDB Atlas Administration API",
    "version": "2.0",
    "x-xgen-sha": "4822b3fae8fba9bd71c9438ae7eab894fcb0cccc"
  },
  "openapi": "3.0.1",
  "paths": {
    "/api/atlas/v2/openapi/info": {
      "get": {
        "description": "This resource returns general information about the MongoDB Atlas Administration API OpenAPI Specification. Deprecated versions: v2-{2024-08-05}, v2-{2024-05-30}",
        "operationId": "getOpenapiInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.atlas.2025-09-22.upcoming+json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenApiInfo"
                },
                "x-xgen-version": "2025-09-22.upcoming"
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return General Information on MongoDB Atlas Administration API OpenAPI Specification",
        "tags": [
          "OpenAPI"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "Atlas CLI",
            "source": "atlas api openApi getOpenapiInfo --help"
          },
          {
            "lang": "cURL",
            "label": "curl (Service Accounts)",
            "source": "curl --include --header \"Authorization: Bearer ${ACCESS_TOKEN}\" \\\n  --header \"Accept: application/vnd.atlas.2025-09-22.upcoming+json\" \\\n  -X GET \"https://cloud.mongodb.com/api/atlas/v2/openapi/info?pretty=true\""
          },
          {
            "lang": "cURL",
            "label": "curl (Digest)",
            "source": "curl --user \"${PUBLIC_KEY}:${PRIVATE_KEY}\" \\\n  --digest --include \\\n  --header \"Accept: application/vnd.atlas.2025-09-22.upcoming+json\" \\\n  -X GET \"https://cloud.mongodb.com/api/atlas/v2/openapi/info?pretty=true\""
          }
        ],
        "x-state": "UPCOMING",
        "x-xgen-method-verb-override": {
          "customMethod": "False",
          "verb": "get"
        }
      }
    }
  },
  "security": [
    {
      "ServiceAccounts": []
    },
    {
      "DigestAuth": []
    }
  ],
  "servers": [
    {
      "url": "https://cloud.mongodb.com"
    }
  ],
  "tags": [
    {
      "description": "Returns information about the MongoDB Atlas Specification.",
      "name": "OpenAPI"
    }
  ],
  "x-externalLinks": [
    {
      "label": "Back to Atlas Docs",
      "url": "https://www.mongodb.com/docs/atlas/"
    },
    {
      "label": "API Changelog",
      "url": "https://www.mongodb.com/docs/atlas/reference/api-resources-spec/changelog/"
    }
  ]
}
