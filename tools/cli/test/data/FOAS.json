{
  "components": {
    "parameters": {
      "envelope": {
        "description": "Flag that indicates whether Application wraps the response in an `envelope` JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.",
        "in": "query",
        "name": "envelope",
        "schema": {
          "default": false,
          "example": false,
          "type": "boolean"
        }
      },
      "pretty": {
        "description": "Flag that indicates whether the response body should be in the <a href=\"https://en.wikipedia.org/wiki/Prettyprint\" target=\"_blank\" rel=\"noopener noreferrer\">prettyprint</a> format.",
        "in": "query",
        "name": "pretty",
        "schema": {
          "default": false,
          "example": false,
          "type": "boolean"
        }
      }
    },
    "responses": {
      "accepted": {
        "description": "Accepted."
      },
      "badRequest": {
        "content": {
          "application/json": {
            "example": {
              "detail": "(This is just an example, the exception may not be related to this endpoint) No provider AWS exists.",
              "error": 400,
              "errorCode": "INVALID_PROVIDER",
              "parameters": [
                "AWS"
              ],
              "reason": "Bad Request"
            },
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "description": "Bad Request."
      },
      "conflict": {
        "content": {
          "application/json": {
            "example": {
              "detail": "(This is just an example, the exception may not be related to this endpoint) Cannot delete organization link while there is active migration in following project ids: 60c4fd418ebe251047c50554",
              "error": 409,
              "errorCode": "CANNOT_DELETE_ORG_LINK_WITH_RUNNING_LIVE_EXPORT",
              "parameters": [
                "60c4fd418ebe251047c50554"
              ],
              "reason": "Conflict"
            },
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "description": "Conflict."
      },
      "forbidden": {
        "content": {
          "application/json": {
            "example": {
              "detail": "(This is just an example, the exception may not be related to this endpoint)",
              "error": 403,
              "errorCode": "CANNOT_CHANGE_GROUP_NAME",
              "parameters": [
                "EXAMPLE"
              ],
              "reason": "Forbidden"
            },
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "description": "Forbidden."
      },
      "gone": {
        "content": {
          "application/json": {
            "example": {
              "detail": "This happens when a resource is marked for sunset and the sunset date is in the past.",
              "error": 410,
              "errorCode": "VERSION_GONE",
              "parameters": [
                "EXAMPLE"
              ],
              "reason": "Gone"
            },
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "description": "Gone."
      },
      "internalServerError": {
        "content": {
          "application/json": {
            "example": {
              "detail": "(This is just an example, the exception may not be related to this endpoint)",
              "error": 500,
              "errorCode": "UNEXPECTED_ERROR",
              "parameters": [
                "EXAMPLE"
              ],
              "reason": "Internal Server Error"
            },
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "description": "Internal Server Error."
      },
      "methodNotAllowed": {
        "content": {
          "application/json": {
            "example": {
              "detail": "(This is just an example, the exception may not be related to this endpoint)",
              "error": 405,
              "errorCode": "ATLAS_BACKUP_CANCEL_SHARD_RESTORE_JOB_NOT_ALLOWED",
              "parameters": [
                "EXAMPLE"
              ],
              "reason": "Method Not Allowed"
            },
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "description": "Method Not Allowed."
      },
      "noBody": {
        "description": "This endpoint does not return a response body."
      },
      "notFound": {
        "content": {
          "application/json": {
            "example": {
              "detail": "(This is just an example, the exception may not be related to this endpoint) Cannot find resource AWS",
              "error": 404,
              "errorCode": "RESOURCE_NOT_FOUND",
              "parameters": [
                "AWS"
              ],
              "reason": "Not Found"
            },
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "description": "Not Found."
      },
      "paymentRequired": {
        "content": {
          "application/json": {
            "example": {
              "detail": "(This is just an example, the exception may not be related to this endpoint)",
              "error": 402,
              "errorCode": "NO_PAYMENT_INFORMATION_FOUND",
              "parameters": [
                "EXAMPLE"
              ],
              "reason": "Payment Required"
            },
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "description": "Payment Required."
      },
      "unauthorized": {
        "content": {
          "application/json": {
            "example": {
              "detail": "(This is just an example, the exception may not be related to this endpoint)",
              "error": 401,
              "errorCode": "NOT_ORG_GROUP_CREATOR",
              "parameters": [
                "EXAMPLE"
              ],
              "reason": "Unauthorized"
            },
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "description": "Unauthorized."
      }
    },
    "schemas": {
      "ApiError": {
        "properties": {
          "detail": {
            "description": "Describes the specific conditions or reasons that cause each type of error.",
            "type": "string"
          },
          "error": {
            "description": "HTTP status code returned with this error.",
            "format": "int32",
            "maximum": 599,
            "minimum": 200,
            "type": "integer"
          },
          "errorCode": {
            "description": "Application error code returned with this error.",
            "example": "TOO_MANY_GROUP_NOTIFICATIONS",
            "type": "string"
          },
          "parameters": {
            "description": "Parameter uses to give more information about the error.",
            "type": "array"
          },
          "reason": {
            "description": "Application error message returned with this error.",
            "example": "At most one group notification can be specified for an alert configuration.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ApiKey": {
        "description": "Details contained in one API key.",
        "nullable": true,
        "properties": {
          "id": {
            "description": "Unique 24-hexadecimal digit string that identifies this organization API key.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true,
            "type": "string"
          },
          "publicKey": {
            "description": "Public API key value set for the specified organization API key.",
            "maxLength": 8,
            "minLength": 8,
            "readOnly": true,
            "type": "string"
          }
        },
        "readOnly": true,
        "required": [
          "id",
          "publicKey"
        ],
        "type": "object"
      },
      "Link": {
        "properties": {
          "href": {
            "description": "Uniform Resource Locator (URL) that points another API resource to which this response has some relationship. This URL often begins with `https://cloud.mongodb.com/api/atlas`.",
            "example": "https://cloud.mongodb.com/api/atlas",
            "type": "string"
          },
          "rel": {
            "description": "Uniform Resource Locator (URL) that defines the semantic relationship between this resource and another API resource. This URL often begins with `https://cloud.mongodb.com/api/atlas`.",
            "example": "self",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SystemStatus": {
        "properties": {
          "apiKey": {
            "$ref": "#/components/schemas/ApiKey"
          },
          "appName": {
            "description": "Human-readable label that identifies the service from which you requested this response.",
            "enum": [
              "MongoDB Atlas"
            ],
            "readOnly": true,
            "type": "string"
          },
          "build": {
            "description": "Unique 40-hexadecimal digit hash that identifies the latest git commit merged for this application.",
            "example": "83be55e140f493c88e7f578aae96548dd881587b",
            "readOnly": true,
            "type": "string"
          },
          "links": {
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true,
            "type": "array"
          },
          "throttling": {
            "description": "Flag that indicates whether someone enabled throttling on this service.",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "required": [
          "apiKey",
          "appName",
          "build",
          "throttling"
        ],
        "type": "object"
      }
    }
  },
  "info": {
    "description": "The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas.\n\nThe Atlas Administration API uses HTTP Digest Authentication to authenticate requests. Provide a programmatic API public key and corresponding private key as the username and password when constructing the HTTP request. For example, to [return database access history](#tag/Access-Tracking/operation/listAccessLogsByClusterName) with [cURL](https://en.wikipedia.org/wiki/CURL), run the following command in the terminal:\n\n```\ncurl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" \\\n  --digest \\\n  --header \"Accept: application/vnd.atlas.2023-02-01+json\" \\\n  GET \"https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/dbAccessHistory/clusters/{clusterName}?pretty=true\"\n```\n\nTo learn more, see [Get Started with the Atlas Administration API](https://www.mongodb.com/docs/atlas/configure-api-access/). For support, see [MongoDB Support](https://www.mongodb.com/support/get-started).",
    "license": {
      "name": "CC BY-NC-SA 3.0 US",
      "url": "https://creativecommons.org/licenses/by-nc-sa/3.0/us/"
    },
    "termsOfService": "https://www.mongodb.com/mongodb-management-service-terms-and-conditions",
    "title": "MongoDB Atlas Administration API",
    "version": "2.0",
    "x-xgen-sha": "7bcbc2297ef0216fabc79c752cf21b132fc76577"
  },
  "openapi": "3.0.1",
  "paths": {
    "/api/atlas/v2": {
      "get": {
        "description": "This resource returns information about the MongoDB application along with API key meta data.",
        "operationId": "getSystemStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemStatus"
                },
                "x-xgen-version": "2023-01-01"
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return the status of this MongoDB application",
        "tags": [
          "Root"
        ]
      }
    },
    "/api/atlas/v2/alertConfigs/matchers/fieldNames": {
      "get": {
        "description": "Get all field names that the `matchers.fieldName` parameter accepts when you create or update an Alert Configuration. You can successfully call this endpoint with any assigned role.",
        "operationId": "listAlertConfigurationMatchersFieldNames",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "items": {
                    "$ref": "external.json#/components/schemas/ApiAtlasFTSAnalyzersViewManual"
                  },
                  "type": "array"
                },
                "x-xgen-version": "2023-01-01"
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "summary": "Get All Alert Configuration Matchers Field Names",
        "tags": [
          "Alert Configurations"
        ]
      }
    },
    "/api/atlas/v2/search/test": {
      "get": {
        "description": "This resource returns information about the MongoDB application along with API key meta data.",
        "operationId": "getSystemStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "base.json#/components/schemas/SystemStatus"
                },
                "x-xgen-version": "2023-01-01"
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "base.json#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "base.json#/components/responses/notFound"
          },
          "500": {
            "$ref": "base.json#/components/responses/internalServerError"
          }
        },
        "summary": "Return the status of this MongoDB application",
        "tags": [
          "Search Test"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://cloud.mongodb.com"
    }
  ],
  "tags": [
    {
      "description": "Returns access logs for authentication attempts made to Atlas database deployments. To view database access history, you must have either the Project Owner or Organization Owner role.",
      "name": "Access Tracking"
    },
    {
      "description": "Returns and edits the conditions that trigger alerts and how MongoDB Cloud notifies users. This collection remains under revision and may change.",
      "name": "Alert Configurations"
    }
  ]
}
