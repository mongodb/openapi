{
  "openapi": "3.0.1",
  "info": {
    "title": "MongoDB Atlas Administration API",
    "description": "The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas.\n\nThe Atlas Administration API uses HTTP Digest Authentication to authenticate requests. Provide a programmatic API public key and corresponding private key as the username and password when constructing the HTTP request. For example, to [return database access history](#tag/Access-Tracking/operation/listAccessLogsByClusterName) with [cURL](https://en.wikipedia.org/wiki/CURL), run the following command in the terminal:\n\n```\ncurl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" \\\n  --digest \\\n  --header \"Accept: application/vnd.atlas.2025-01-01+json\" \\\n  -X GET \"https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/dbAccessHistory/clusters/{clusterName}?pretty=true\"\n```\n\nTo learn more, see [Get Started with the Atlas Administration API](https://www.mongodb.com/docs/atlas/configure-api-access/). For support, see [MongoDB Support](https://www.mongodb.com/support/get-started).",
    "termsOfService": "https://www.mongodb.com/mongodb-management-service-terms-and-conditions",
    "license": {
      "name": "CC BY-NC-SA 3.0 US",
      "url": "https://creativecommons.org/licenses/by-nc-sa/3.0/us/"
    },
    "version": "2.0"
  },
  "servers": [
    {
      "url": "https://cloud.mongodb.com"
    }
  ],
  "tags": [
    {
      "name": "Access Tracking",
      "description": "Returns access logs for authentication attempts made to Atlas database deployments. To view database access history, you must have either the Project Owner or Organization Owner role."
    },
    {
      "name": "Alert Configurations",
      "description": "Returns and edits the conditions that trigger alerts and how MongoDB Cloud notifies users. This collection remains under revision and may change."
    },
    {
      "name": "Alerts",
      "description": "Returns and acknowledges alerts that MongoDB Cloud triggers based on the alert conditions that you define. This collection remains under revision and may change."
    },
    {
      "name": "Atlas Search",
      "description": "Returns, adds, edits, and removes Atlas Search indexes for the specified cluster. Also returns and updates user-defined analyzers for the specified cluster."
    },
    {
      "name": "Auditing",
      "description": "Returns and edits database auditing settings for MongoDB Cloud projects."
    },
    {
      "name": "AWS Clusters DNS",
      "description": "Returns and edits custom DNS configurations for MongoDB Cloud database deployments on AWS. The resource requires your Project ID. If you use the VPC peering on AWS and you use your own DNS servers instead of Amazon Route 53, enable custom DNS. Before 31 March 2020, applications deployed within AWS using custom DNS services and VPC-peered with MongoDB Cloud couldn't connect over private IP addresses. Custom DNS resolved to public IP addresses. AWS internal DNS resolved to private IP addresses. Applications deployed with custom DNS services in AWS should use Private IP for Peering connection strings."
    },
    {
      "name": "Cloud Backups",
      "description": "Manages Cloud Backup snapshots, snapshot export buckets, restore jobs, and schedules. This resource applies only to clusters that use Cloud Backups."
    },
    {
      "name": "Cloud Migration Service",
      "description": "Manages the Cloud Migration Service. Source organizations, projects, and MongoDB clusters reside on Cloud Manager or Ops Manager. Destination organizations, projects, and MongoDB clusters reside on MongoDB Cloud. Source databases can't use any authentication except SCRAM-SHA."
    },
    {
      "name": "Cloud Provider Access",
      "description": "Returns, adds, authorizes, and removes AWS IAM roles in Atlas."
    },
    {
      "name": "Cluster Outage Simulation",
      "description": "Returns, starts, or ends a cluster outage simulation."
    },
    {
      "name": "Clusters",
      "description": "Returns, adds, edits, and removes database deployments. Changes to cluster configurations can affect costs. This resource requires your Project ID."
    },
    {
      "name": "Collection Level Metrics",
      "description": "Returns, adds, and edits pinned namespaces for the specified cluster or process. Also returns collection level latency metric data."
    },
    {
      "name": "Custom Database Roles",
      "description": "Returns, adds, edits, and removes custom database user privilege roles. Use custom roles to specify custom sets of actions that the MongoDB Cloud built-in roles can't describe. You define custom roles at the project level, for all clusters in the project. This resource supports a subset of MongoDB privilege actions. You can create a subset of custom role actions. To create a wider list of custom role actions, use the MongoDB Cloud user interface. Custom roles must include actions that all project's clusters support, and that are compatible with each MongoDB version that your project's clusters use. For example, if your project has MongoDB 4.2 clusters, you can't create custom roles that use actions introduced in MongoDB 4.4."
    },
    {
      "name": "Data Federation",
      "description": "Returns, adds, edits, and removes Federated Database Instances. This resource requires your project ID. Changes to federated database instance configurations can affect costs."
    },
    {
      "name": "Data Lake Pipelines",
      "description": "Returns, adds, edits, and removes Atlas Data Lake Pipelines and associated runs."
    },
    {
      "name": "Database Users",
      "description": "Returns, adds, edits, and removes database users."
    },
    {
      "name": "Encryption at Rest using Customer Key Management",
      "description": "Returns and edits the Encryption at Rest using Customer Key Management configuration. MongoDB Cloud encrypts all storage whether or not you use your own key management."
    },
    {
      "name": "Events",
      "description": "Returns events. This collection remains under revision and may change."
    },
    {
      "name": "Federated Authentication",
      "description": "Returns, adds, edits, and removes federation-related features such as role mappings and connected organization configurations."
    },
    {
      "name": "Global Clusters",
      "description": "Returns, adds, and removes Global Cluster managed namespaces and custom zone mappings. Each collection in a Global Cluster is associated with a managed namespace. When you create a managed namespace for a Global Cluster, MongoDB Cloud creates an empty collection for that namespace. Creating a managed namespace doesn't populate a collection with data. Similarly, deleting a managed namespace doesn't delete the associated collection.\nMongoDB Cloud shards the empty collection using the required location field and a custom shard key. For example, if your custom shard key is `city`, the compound shard key is `location, city`. Each Global Cluster is also associated with one or more Global Writes Zones. When a user creates a Global Cluster, MongoDB Cloud automatically maps each location code to the closest geographical zone. Custom zone mappings allow administrators to override these automatic mappings. For example, a use case might require mapping a location code to a geographically distant zone. Administrators can manage custom zone mappings with the APIs below and the **Global Cluster Configuration** pane when you create or modify your Global Cluster."
    },
    {
      "name": "Invoices",
      "description": "Returns invoices."
    },
    {
      "name": "LDAP Configuration",
      "description": "Returns, edits, verifies, and removes LDAP configurations. An LDAP configuration defines settings for MongoDB Cloud to connect to your LDAP server over TLS for user authentication and authorization. Your LDAP server must be visible to the internet or connected to your MongoDB Cloud cluster with VPC Peering. Also, your LDAP server must use TLS. You must have the MongoDB Cloud admin user privilege to use these endpoints. Also, to configure user authentication and authorization with LDAPS, your cluster must run MongoDB 3.6 or higher. Groups for which you have configured LDAPS can't create a cluster using a version of MongoDB 3.6 or lower."
    },
    {
      "name": "Legacy Backup",
      "description": "Manages Legacy Backup snapshots, restore jobs, schedules and checkpoints."
    },
    {
      "name": "Maintenance Windows",
      "description": "Returns, edits, and removes maintenance windows. The maintenance procedure that MongoDB Cloud performs requires at least one replica set election during the maintenance window per replica set. You can defer a scheduled maintenance event for a project up to two times. Deferred maintenance events occur during your preferred maintenance window exactly one week after the previously scheduled date and time."
    },
    {
      "name": "MongoDB Cloud Users",
      "description": "Returns, adds, and edits MongoDB Cloud users."
    },
    {
      "name": "Monitoring and Logs",
      "description": "Returns database deployment monitoring and logging data."
    },
    {
      "name": "Network Peering",
      "description": "Returns, adds, edits, and removes network peering containers and peering connections.\nWhen you deploy an M10+ dedicated cluster, Atlas creates a VPC for the selected provider and region or regions if no existing VPC or VPC peering connection exists for that provider and region. Atlas assigns the VPC a Classless Inter-Domain Routing (CIDR) block."
    },
    {
      "name": "Online Archive",
      "description": "Returns, adds, edits, or removes an online archive."
    },
    {
      "name": "Organizations",
      "description": "Returns, adds, and edits organizational units in MongoDB Cloud."
    },
    {
      "name": "Performance Advisor",
      "description": "Returns suggested indexes and slow query data for a database deployment. Also enables or disables MongoDB Cloud-managed slow operation thresholds. To view field values in a sample query, you must have the Project Data Access Read Only role or higher. Otherwise, MongoDB Cloud returns redacted data rather than the field values."
    },
    {
      "name": "Private Endpoint Services",
      "description": "Returns, adds, edits, and removes private endpoint services."
    },
    {
      "name": "Programmatic API Keys",
      "description": "Returns, adds, edits, and removes access tokens to use the MongoDB Cloud API. MongoDB Cloud applies these keys to organizations. These resources can return, assign, or revoke use of these keys within a specified project."
    },
    {
      "name": "Project IP Access List",
      "description": "Returns, adds, edits, and removes network access limits to database deployments in Atlas. This resource replaces the whitelist resource. Atlas removed whitelists in July 2021. Update your applications to use this new resource. This resource manages a project's IP Access List and supports creating temporary Access List entries that automatically expire within a user-configurable 7-day period."
    },
    {
      "name": "Projects",
      "description": "Returns, adds, and edits collections of clusters and users in MongoDB Cloud."
    },
    {
      "name": "Push-Based Log Export",
      "description": "You can continually push logs from mongod, mongos, and audit logs to an AWS S3 bucket. Atlas exports logs every 5 minutes."
    },
    {
      "name": "Rolling Index",
      "description": "Creates one index to a database deployment in a rolling manner. You can't create a rolling index on an `M0` free cluster or `M2/M5` shared cluster."
    },
    {
      "name": "Root",
      "description": "Returns details that describe the MongoDB Cloud build and the access token that requests this resource. This starts the MongoDB Cloud API."
    },
    {
      "name": "Serverless Instances",
      "description": "Returns, adds, edits, and removes serverless instances."
    },
    {
      "name": "Serverless Private Endpoints",
      "description": "Returns, adds, edits, and removes private endpoints for serverless instances. To learn more, see the Atlas Administration API tab on the following tutorial.",
      "externalDocs": {
        "description": "Set Up a Private Endpoint for a Serverless Instance Tutorial",
        "url": "https://dochub.mongodb.org/core/serverless-private-endpoint"
      }
    },
    {
      "name": "Shared-Tier Restore Jobs",
      "description": "Returns and adds restore jobs for shared-tier database deployments."
    },
    {
      "name": "Shared-Tier Snapshots",
      "description": "Returns and requests to download shared-tier database deployment snapshots."
    },
    {
      "name": "Streams",
      "description": "Returns, adds, edits, and removes Streams Instances. This resource requires your project ID."
    },
    {
      "name": "Teams",
      "description": "Returns, adds, edits, or removes teams."
    },
    {
      "name": "Test",
      "description": "Atlas test endpoints."
    },
    {
      "name": "Third-Party Integrations",
      "description": "Returns, adds, edits, and removes third-party service integration configurations. MongoDB Cloud sends alerts to each third-party service that you configure.\n\n**IMPORTANT**: Each project can only have one configuration per integrationType."
    },
    {
      "name": "X.509 Authentication",
      "description": "Returns, edits, and removes user-managed X.509 configurations. Also returns and generates MongoDB Cloud-managed X.509 certificates for database users. The following resources help manage database users who authenticate using X.509 certificates. You can manage these X.509 certificates or let MongoDB Cloud do it for you. If MongoDB Cloud manages your certificates, it also manages your Certificate Authority and can generate certificates for your database users. No additional X.509 configuration is required. If you manage your certificates, you must provide a Certificate Authority and generate certificates for your database users.",
      "externalDocs": {
        "description": "Self-Managed X.509 Certificates",
        "url": "https://www.mongodb.com/docs/atlas/security-self-managed-x509/"
      }
    }
  ],
  "paths": {
    "/api/atlas/v2/eventTypes": {
      "get": {
        "tags": ["Events"],
        "summary": "List All Possible Event Types",
        "description": "Returns a list of all event types, along with a description and additional metadata about each event.",
        "operationId": "listEventTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedEventTypeDetailsResponse"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "CAP"
      }
    },
    "/api/atlas/v2/groups/{groupId}/events": {
      "get": {
        "tags": ["Events"],
        "summary": "Return All Events from One Project",
        "description": "Returns one event for the specified project. Events identify significant database, billing, or security activities or status changes. To use this resource, the requesting API Key must have the Project Read Only role.\n\nThis resource remains under revision and may change.",
        "operationId": "listProjectEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterNames",
            "in": "query",
            "description": "Human-readable label that identifies the cluster.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "maxLength": 64,
                "minLength": 1,
                "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
                "type": "string"
              }
            }
          },
          {
            "name": "eventType",
            "in": "query",
            "description": "Category of incident recorded at this moment in time.\n\n**IMPORTANT**: The complete list of event type values changes frequently.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EventTypeForNdsGroup"
              }
            }
          },
          {
            "name": "excludedEventType",
            "in": "query",
            "description": "Category of event that you would like to exclude from query results, such as CLUSTER_CREATED\n\n**IMPORTANT**: Event type names change frequently. Verify that you specify the event type correctly by checking the complete list of event types.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EventTypeForNdsGroup"
              }
            }
          },
          {
            "name": "includeRaw",
            "in": "query",
            "description": "Flag that indicates whether to include the raw document in the output. The raw document contains additional meta information about the event.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "maxDate",
            "in": "query",
            "description": "Date and time from when MongoDB Cloud stops returning events. This parameter uses the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "minDate",
            "in": "query",
            "description": "Date and time from when MongoDB Cloud starts returning events. This parameter uses the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupPaginatedEventView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "CAP"
      }
    },
    "/api/atlas/v2/groups/{groupId}/events/{eventId}": {
      "get": {
        "tags": ["Events"],
        "summary": "Return One Event from One Project",
        "description": "Returns one event for the specified project. Events identify significant database, billing, or security activities or status changes. To use this resource, the requesting API Key must have the Project Read Only role.\n\nThis resource remains under revision and may change.",
        "operationId": "getProjectEvent",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the event that you want to return. Use the [/events](#tag/Events/operation/listProjectEvents) endpoint to retrieve all events to which the authenticated user has access.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          },
          {
            "name": "includeRaw",
            "in": "query",
            "description": "Flag that indicates whether to include the raw document in the output. The raw document contains additional meta information about the event.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/EventViewForNdsGroup"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "CAP"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/events": {
      "get": {
        "tags": ["Events"],
        "summary": "Return All Events from One Organization",
        "description": "Returns all events for the specified organization. Events identify significant database, billing, or security activities or status changes. To use this resource, the requesting API Key must have the Organization Member role.\n\nThis resource remains under revision and may change.",
        "operationId": "listOrganizationEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "eventType",
            "in": "query",
            "description": "Category of incident recorded at this moment in time.\n\n**IMPORTANT**: The complete list of event type values changes frequently.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EventTypeForOrg"
              }
            }
          },
          {
            "name": "includeRaw",
            "in": "query",
            "description": "Flag that indicates whether to include the raw document in the output. The raw document contains additional meta information about the event.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "maxDate",
            "in": "query",
            "description": "Date and time from when MongoDB Cloud stops returning events. This parameter uses the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "minDate",
            "in": "query",
            "description": "Date and time from when MongoDB Cloud starts returning events. This parameter uses the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-11-17T23:15:00.060Z"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgPaginatedEventView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "CAP"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/events/{eventId}": {
      "get": {
        "tags": ["Events"],
        "summary": "Return One Event from One Organization",
        "description": "Returns one event for the specified organization. Events identify significant database, billing, or security activities or status changes. To use this resource, the requesting API Key must have the Organization Member role.\n\nThis resource remains under revision and may change.",
        "operationId": "getOrganizationEvent",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the event that you want to return. Use the [/events](#tag/Events/operation/listOrganizationEvents) endpoint to retrieve all events to which the authenticated user has access.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          },
          {
            "name": "includeRaw",
            "in": "query",
            "description": "Flag that indicates whether to include the raw document in the output. The raw document contains additional meta information about the event.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/EventViewForOrg"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "CAP"
      }
    },
    "/api/atlas/v2/groups/{groupId}/alertConfigs/{alertConfigId}/alerts": {
      "get": {
        "tags": ["Alerts"],
        "summary": "Return All Open Alerts for Alert Configuration",
        "description": "Returns all open alerts that the specified alert configuration triggers. These alert configurations apply to the specified project only. Alert configurations define the triggers and notification methods for alerts. Open alerts have been triggered but remain unacknowledged. To use this resource, the requesting API Key must have the Project Read Only role.\n\nThis resource remains under revision and may change.",
        "operationId": "listAlertsByAlertConfigurationId",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "alertConfigId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration. Use the [/alertConfigs](#tag/Alert-Configurations/operation/listAlertConfigurations) endpoint to retrieve all alert configurations to which the authenticated user has access.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAlertView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "CAP"
      }
    },
    "/api/atlas/v2/groups/{groupId}/alerts/{alertId}": {
      "get": {
        "tags": ["Alerts"],
        "summary": "Return One Alert from One Project",
        "description": "Returns one alert. This alert applies to any component in one project. You receive an alert when a monitored component meets or exceeds a value you set. To use this resource, the requesting API Key must have the Project Read Only role.\n\nThis resource remains under revision and may change.",
        "operationId": "getAlert",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "alertId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the alert. Use the [/alerts](#tag/Alerts/operation/listAlerts) endpoint to retrieve all alerts to which the authenticated user has access.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertViewForNdsGroup"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "CAP"
      },
      "patch": {
        "tags": ["Alerts"],
        "summary": "Acknowledge One Alert from One Project",
        "description": "Confirms receipt of one existing alert. This alert applies to any component in one project. Acknowledging an alert prevents successive notifications. You receive an alert when a monitored component meets or exceeds a value you set until you acknowledge the alert. To use this resource, the requesting API Key must have the Organization Owner or Project Owner role.\n\nThis resource remains under revision and may change.",
        "operationId": "acknowledgeAlert",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "alertId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the alert. Use the [/alerts](#tag/Alerts/operation/listAlerts) endpoint to retrieve all alerts to which the authenticated user has access.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Acknowledges or unacknowledges one alert.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/AlertView"
              }
            },
            "application/vnd.atlas.2024-05-30+json": {
              "schema": {
                "$ref": "#/components/schemas/AcknowledgeAlert"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertViewForNdsGroup"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2025-05-30"
              },
              "application/vnd.atlas.2024-05-30+json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertViewForNdsGroup"
                },
                "x-xgen-version": "2024-05-30"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "CAP"
      }
    },
    "/api/atlas/v2/groups/{groupId}/alerts": {
      "get": {
        "tags": ["Alerts"],
        "summary": "Return All Alerts from One Project",
        "description": "Returns all alerts. These alerts apply to all components in one project. You receive an alert when a monitored component meets or exceeds a value you set. To use this resource, the requesting API Key must have the Project Read Only role.\n\nThis resource remains under revision and may change.",
        "operationId": "listAlerts",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status of the alerts to return. Omit to return all alerts in all statuses.",
            "schema": {
              "type": "string",
              "enum": ["OPEN", "TRACKING", "CLOSED"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAlertView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "CAP"
      }
    },
    "/api/atlas/v2/groups/{groupId}/alerts/{alertId}/alertConfigs": {
      "get": {
        "tags": ["Alert Configurations"],
        "summary": "Return All Alert Configurations Set for One Alert",
        "description": "Returns all alert configurations set for the specified alert. To use this resource, the requesting API Key must have the Project Read Only role.\n\nThis resource remains under revision and may change.",
        "operationId": "listAlertConfigurationsByAlertId",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "name": "alertId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the alert. Use the [/alerts](#tag/Alerts/operation/listAlerts) endpoint to retrieve all alerts to which the authenticated user has access.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAlertConfigView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "CAP"
      }
    },
    "/api/atlas/v2/alertConfigs/matchers/fieldNames": {
      "get": {
        "tags": ["Alert Configurations"],
        "summary": "Get All Alert Configuration Matchers Field Names",
        "description": "Get all field names that the `matchers.fieldName` parameter accepts when you create or update an Alert Configuration. You can successfully call this endpoint with any assigned role.",
        "operationId": "listAlertConfigurationMatchersFieldNames",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MatcherFieldView"
                  }
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "CAP"
      }
    },
    "/api/atlas/v2/groups/{groupId}/alertConfigs": {
      "get": {
        "tags": ["Alert Configurations"],
        "summary": "Return All Alert Configurations for One Project",
        "description": "Returns all alert configurations for one project. These alert configurations apply to any component in the project. Alert configurations define the triggers and notification methods for alerts. To use this resource, the requesting API Key must have the Project Read Only role.\n\nThis resource remains under revision and may change.",
        "operationId": "listAlertConfigurations",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAlertConfigView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "CAP"
      },
      "post": {
        "tags": ["Alert Configurations"],
        "summary": "Create One Alert Configuration in One Project",
        "description": "Creates one alert configuration for the specified project. Alert configurations define the triggers and notification methods for alerts. To use this resource, the requesting API Key must have the Organization Owner or Project Owner role.\n\nThis resource remains under revision and may change.",
        "operationId": "createAlertConfiguration",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Creates one alert configuration for the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupAlertsConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupAlertsConfig"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "CAP"
      }
    },
    "/api/atlas/v2/groups/{groupId}/alertConfigs/{alertConfigId}": {
      "get": {
        "tags": ["Alert Configurations"],
        "summary": "Return One Alert Configuration from One Project",
        "description": "Returns the specified alert configuration from the specified project. To use this resource, the requesting API Key must have the Project Read Only role.\n\nThis resource remains under revision and may change.",
        "operationId": "getAlertConfiguration",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "alertConfigId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration. Use the [/alertConfigs](#tag/Alert-Configurations/operation/listAlertConfigurations) endpoint to retrieve all alert configurations to which the authenticated user has access.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupAlertsConfig"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "CAP"
      },
      "put": {
        "tags": ["Alert Configurations"],
        "summary": "Update One Alert Configuration for One Project",
        "description": "Updates one alert configuration in the specified project. Alert configurations define the triggers and notification methods for alerts. To use this resource, the requesting API Key must have the Organization Owner or Project Owner role.\n\n**NOTE**: To enable or disable the alert configuration, see [Toggle One State of One Alert Configuration in One Project](#tag/Alert-Configurations/operation/toggleAlertConfiguration).\n\nThis resource remains under revision and may change.",
        "operationId": "updateAlertConfiguration",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "alertConfigId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration. Use the [/alertConfigs](#tag/Alert-Configurations/operation/listAlertConfigurations) endpoint to retrieve all alert configurations to which the authenticated user has access.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          }
        ],
        "requestBody": {
          "description": "Updates one alert configuration in the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupAlertsConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupAlertsConfig"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "CAP"
      },
      "delete": {
        "tags": ["Alert Configurations"],
        "summary": "Remove One Alert Configuration from One Project",
        "description": "Removes one alert configuration from the specified project. To use this resource, the requesting API Key must have the Organization Owner or Project Owner role.\n\nThis resource remains under revision and may change.",
        "operationId": "deleteAlertConfiguration",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "alertConfigId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration. Use the [/alertConfigs](#tag/Alert-Configurations/operation/listAlertConfigurations) endpoint to retrieve all alert configurations to which the authenticated user has access.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "CAP"
      },
      "patch": {
        "tags": ["Alert Configurations"],
        "summary": "Toggle One State of One Alert Configuration in One Project",
        "description": "Enables or disables the specified alert configuration in the specified project. The resource enables the specified alert configuration if currently enabled. The resource disables the specified alert configuration if currently disabled. To use this resource, the requesting API Key must have the Organization Owner or Project Owner role.\n\n**NOTE**: This endpoint updates only the enabled/disabled state for the alert configuration. To update more than just this configuration, see [Update One Alert Configuration](#tag/Alert-Configurations/operation/updateAlertConfiguration).\n\nThis resource remains under revision and may change.",
        "operationId": "toggleAlertConfiguration",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "alertConfigId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration that triggered this alert. Use the [/alertConfigs](#tag/Alert-Configurations/operation/listAlertConfigurations) endpoint to retrieve all alert configurations to which the authenticated user has access.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          }
        ],
        "requestBody": {
          "description": "Enables or disables the specified alert configuration in the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/AlertsToggle"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupAlertsConfig"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "CAP"
      }
    },
    "/api/atlas/v2/groups/{groupId}/serviceAccounts/{serviceAccountId}": {
      "get": {
        "tags": ["Groups"],
        "summary": "Service Account Fetching",
        "description": "Get project Service Account Details.",
        "operationId": "getProjectServiceAccount",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "serviceAccountId",
            "in": "path",
            "description": "Id of the service account.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-10-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupServiceAccount"
                },
                "x-xgen-version": "2023-10-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-hidden-env": {
          "envs": "qa,stage,prod"
        },
        "x-xgen-owner-team": "apix"
      },
      "post": {
        "tags": ["Groups"],
        "summary": "Assign One Service Account to One Project",
        "description": "Assigns the specified organization Service Account to the specified project.",
        "operationId": "addProjectServiceAccount",
        "parameters": [
          {
            "name": "serviceAccountId",
            "in": "path",
            "description": "Id of the service account.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Service Account Roles to be assigned to the specified project.",
          "content": {
            "application/vnd.atlas.2023-10-01+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GroupServiceAccountRoleAssignment"
                }
              },
              "x-xgen-version": "2023-10-01"
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-10-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-10-01"
              }
            },
            "x-xgen-version": "2023-10-01"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-hidden-env": {
          "envs": "qa,stage,prod"
        },
        "x-xgen-owner-team": "apix"
      },
      "delete": {
        "tags": ["Groups"],
        "summary": "Unassign One Service Account from One Project.",
        "description": "Removes one Service Account from the specified project.",
        "operationId": "deleteProjectServiceAccount",
        "parameters": [
          {
            "name": "serviceAccountId",
            "in": "path",
            "description": "Id of the service account.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-10-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-10-01"
              }
            },
            "x-xgen-version": "2023-10-01"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-hidden-env": {
          "envs": "qa,stage,prod"
        },
        "x-xgen-owner-team": "apix"
      },
      "patch": {
        "tags": ["Groups"],
        "summary": "Service Account Update in Project",
        "description": "Update Service Account in Project.",
        "operationId": "updateProjectServiceAccount",
        "parameters": [
          {
            "name": "serviceAccountId",
            "in": "path",
            "description": "Id of the service account.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Details to update service account in the specified Project.",
          "content": {
            "application/vnd.atlas.2023-10-01+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupServiceAccountUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-10-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupServiceAccount"
                },
                "x-xgen-version": "2023-10-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-hidden-env": {
          "envs": "qa,stage,prod"
        },
        "x-xgen-owner-team": "apix"
      }
    },
    "/api/atlas/v2/groups/{groupId}/serviceAccounts": {
      "get": {
        "tags": ["Groups"],
        "summary": "Return All project Service Accounts",
        "description": "Returns list of Service Accounts for a project with service account details.",
        "operationId": "listProjectServiceAccounts",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-10-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedGroupServiceAccounts"
                },
                "x-xgen-version": "2023-10-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-hidden-env": {
          "envs": "qa,stage,prod"
        },
        "x-xgen-owner-team": "apix"
      },
      "post": {
        "tags": ["Groups"],
        "summary": "Create and Assign one Service Account to one project",
        "description": "Creates and assigns the specified Service Account to the specified Project.",
        "operationId": "createProjectServiceAccount",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Details to create service account and add to the specified project.",
          "content": {
            "application/vnd.atlas.2023-10-01+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupServiceAccountRequest"
              },
              "x-xgen-version": "2023-10-01"
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/vnd.atlas.2023-10-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupServiceAccount"
                },
                "x-xgen-version": "2023-10-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-hidden-env": {
          "envs": "qa,stage,prod"
        },
        "x-xgen-owner-team": "apix"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/serviceAccounts/{serviceAccountId}/secrets": {
      "post": {
        "tags": ["Organizations"],
        "summary": "Service Account Secret Creation",
        "description": "Create Service Account secret.",
        "operationId": "createServiceAccountSecret",
        "parameters": [
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "name": "serviceAccountId",
            "in": "path",
            "description": "Id of the service account.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Details to create secret in the specified service account.",
          "content": {
            "application/vnd.atlas.2023-10-01+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAccountSecretRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/vnd.atlas.2023-10-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceAccountSecret"
                },
                "x-xgen-version": "2023-10-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-hidden-env": {
          "envs": "qa,stage,prod"
        },
        "x-xgen-owner-team": "apix"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/serviceAccounts/{serviceAccountId}/secrets/{secretId}": {
      "delete": {
        "tags": ["Organizations"],
        "summary": "Service Account Secret Deletion.",
        "description": "Delete Service Account Secret.",
        "operationId": "deleteServiceAccountSecret",
        "parameters": [
          {
            "name": "serviceAccountId",
            "in": "path",
            "description": "Id of the service account.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "secretId",
            "in": "path",
            "description": "Id of the secret.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-10-01+json": {
                "x-xgen-version": "2023-10-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-hidden-env": {
          "envs": "qa,stage,prod"
        },
        "x-xgen-owner-team": "apix"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/serviceAccounts": {
      "get": {
        "tags": ["Organizations"],
        "summary": "Return All Service Accounts",
        "description": "Returns list of Service Accounts with service account details.",
        "operationId": "listServiceAccounts",
        "parameters": [
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-10-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedOrgServiceAccounts"
                },
                "x-xgen-version": "2023-10-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-hidden-env": {
          "envs": "qa,stage,prod"
        },
        "x-xgen-owner-team": "apix"
      },
      "post": {
        "tags": ["Organizations"],
        "summary": "Service Account Creation",
        "description": "Create Service Account containing client id and client secrets.",
        "operationId": "createServiceAccount",
        "parameters": [
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Details to create service account in the specified organization.",
          "content": {
            "application/vnd.atlas.2023-10-01+json": {
              "schema": {
                "$ref": "#/components/schemas/OrgServiceAccountRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/vnd.atlas.2023-10-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgServiceAccount"
                },
                "x-xgen-version": "2023-10-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-hidden-env": {
          "envs": "qa,stage,prod"
        },
        "x-xgen-owner-team": "apix"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/serviceAccounts/{serviceAccountId}": {
      "get": {
        "tags": ["Organizations"],
        "summary": "Service Account Fetching",
        "description": "Get Service Account Details.",
        "operationId": "getServiceAccount",
        "parameters": [
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "name": "serviceAccountId",
            "in": "path",
            "description": "Id of the service account.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-10-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgServiceAccount"
                },
                "x-xgen-version": "2023-10-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-hidden-env": {
          "envs": "qa,stage,prod"
        },
        "x-xgen-owner-team": "apix"
      },
      "delete": {
        "tags": ["Organizations"],
        "summary": "Service Account Deletion.",
        "description": "Delete Service Account.",
        "operationId": "deleteServiceAccount",
        "parameters": [
          {
            "name": "serviceAccountId",
            "in": "path",
            "description": "Id of the service account.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-10-01+json": {
                "x-xgen-version": "2023-10-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-hidden-env": {
          "envs": "qa,stage,prod"
        },
        "x-xgen-owner-team": "apix"
      },
      "patch": {
        "tags": ["Organizations"],
        "summary": "Service Account Update",
        "description": "Update Service Account.",
        "operationId": "updateServiceAccount",
        "parameters": [
          {
            "name": "serviceAccountId",
            "in": "path",
            "description": "Id of the service account.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Details to update service account in the specified organization.",
          "content": {
            "application/vnd.atlas.2023-10-01+json": {
              "schema": {
                "$ref": "#/components/schemas/OrgServiceAccountUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-10-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgServiceAccount"
                },
                "x-xgen-version": "2023-10-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-hidden-env": {
          "envs": "qa,stage,prod"
        },
        "x-xgen-owner-team": "apix"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/serviceAccounts/{serviceAccountId}/groups": {
      "get": {
        "tags": ["Organizations"],
        "summary": "Return All Service Account projects",
        "description": "Returns list of Service Account projects.",
        "operationId": "listServiceAccountProjects",
        "parameters": [
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "name": "serviceAccountId",
            "in": "path",
            "description": "Id of the service account.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-10-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedServiceAccountGroup"
                },
                "x-xgen-version": "2023-10-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-hidden-env": {
          "envs": "qa,stage,prod"
        },
        "x-xgen-owner-team": "apix"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/billing/costExplorer/usage": {
      "post": {
        "tags": ["Invoices"],
        "summary": "Create Cost Explorer query process",
        "description": "Creates a query process within the Cost Explorer for the given parameters. A token is returned that can be used to poll the status of the query and eventually retrieve the results.",
        "operationId": "createCostExplorerQueryProcess",
        "parameters": [
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ],
        "requestBody": {
          "description": "Filter parameters for the Cost Explorer query.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/CostExplorerFilterRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/CostExplorerFilterResponseView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Billing Platform"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/billing/costExplorer/usage/{token}": {
      "get": {
        "tags": ["Invoices"],
        "summary": "Return results from a given Cost Explorer query, or notify that the results are not ready yet.",
        "description": "Returns the usage details for a Cost Explorer query, if the query is finished and the data is ready to be viewed. If the data is not ready, a 'processing' response willindicate that another request should be sent later to view the data.",
        "operationId": "createCostExplorerQueryProcess_1",
        "parameters": [
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "name": "token",
            "in": "path",
            "description": "Unique 64 digit string that identifies the Cost Explorer query.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 64,
              "type": "string",
              "example": "4ABBE973862346D40F3AE859D4BE96E0F895764EB14EAB039E7B82F9D638C05C"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/CostExplorerQueryResult"
                },
                "x-xgen-version": "2023-01-01"
              },
              "application/vnd.atlas.2023-01-01+csv": {
                "schema": {
                  "type": "string"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "102": {
            "description": "Processing"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Billing Platform"
      }
    },
    "/api/atlas/v2/clusters": {
      "get": {
        "tags": ["Clusters"],
        "summary": "Return All Authorized Clusters in All Projects",
        "description": "Returns the details for all clusters in all projects to which you have access. Clusters contain a group of hosts that maintain the same data set. The response does not include multi-cloud clusters. To use this resource, the requesting API Key can have any cluster-level role.",
        "operationId": "listClustersForAllProjects",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedOrgGroupView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel I"
      }
    },
    "/api/atlas/v2/example/info": {
      "get": {
        "tags": ["Test"],
        "summary": "Example resource info for versioning of the Atlas API",
        "description": "Returns some text dummy data for test purposes.",
        "operationId": "versionedExample",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "name": "additionalInfo",
            "in": "query",
            "description": "Show more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-02-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ExampleResourceResponse20230201"
                },
                "x-xgen-version": "2023-02-01"
              },
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ExampleResourceResponse20230101"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2025-06-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-hidden-env": {
          "envs": "dev,qa,stage,prod"
        },
        "x-xgen-owner-team": "apix"
      }
    },
    "/api/atlas/v2/federationSettings/{federationSettingsId}/connectedOrgConfigs/{orgId}/roleMappings": {
      "get": {
        "tags": ["Federated Authentication"],
        "summary": "Return All Role Mappings from One Organization",
        "description": "Returns all role mappings from the specified organization in the specified federation. To use this resource, the requesting API Key must have the Organization Owner role.",
        "operationId": "listRoleMappings",
        "parameters": [
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedRoleMappingView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "post": {
        "tags": ["Federated Authentication"],
        "summary": "Add One Role Mapping to One Organization",
        "description": "Adds one role mapping to the specified organization in the specified federation. To use this resource, the requesting API Key must have the Organization Owner role.",
        "operationId": "createRoleMapping",
        "parameters": [
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          }
        ],
        "requestBody": {
          "description": "The role mapping that you want to create.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthFederationRoleMapping"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthFederationRoleMapping"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/federationSettings/{federationSettingsId}/connectedOrgConfigs/{orgId}/roleMappings/{id}": {
      "get": {
        "tags": ["Federated Authentication"],
        "summary": "Return One Role Mapping from One Organization",
        "description": "Returns one role mapping from the specified organization in the specified federation. To use this resource, the requesting API Key must have the Organization Owner role.",
        "operationId": "getRoleMapping",
        "parameters": [
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the role mapping that you want to return.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthFederationRoleMapping"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "put": {
        "tags": ["Federated Authentication"],
        "summary": "Update One Role Mapping in One Organization",
        "description": "Updates one role mapping in the specified organization in the specified federation. To use this resource, the requesting API Key must have the Organization Owner role.",
        "operationId": "updateRoleMapping",
        "parameters": [
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the role mapping that you want to update.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          }
        ],
        "requestBody": {
          "description": "The role mapping that you want to update.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthFederationRoleMapping"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthFederationRoleMapping"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "delete": {
        "tags": ["Federated Authentication"],
        "summary": "Remove One Role Mapping from One Organization",
        "description": "Removes one role mapping in the specified organization from the specified federation. To use this resource, the requesting API Key must have the Organization Owner role.",
        "operationId": "deleteRoleMapping",
        "parameters": [
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the role mapping that you want to remove.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/federationSettings/{federationSettingsId}/connectedOrgConfigs": {
      "get": {
        "tags": ["Federated Authentication"],
        "summary": "Return All Connected Org Configs from One Federation",
        "description": "Returns all connected org configs in the specified federation. To use this resource, the requesting API Key must have the Organization Owner role in one of the connected orgs.",
        "operationId": "listConnectedOrgConfigs",
        "parameters": [
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedConnectedOrgConfigsView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/federationSettings/{federationSettingsId}/connectedOrgConfigs/{orgId}": {
      "get": {
        "tags": ["Federated Authentication"],
        "summary": "Return One Org Config Connected to One Federation",
        "description": "Returns the specified connected org config from the specified federation. To use this resource, the requesting API Key must have the Organization Owner role in the connected org.",
        "operationId": "getConnectedOrgConfig",
        "parameters": [
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "name": "orgId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the connected organization configuration to return.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectedOrgConfig"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "delete": {
        "tags": ["Federated Authentication"],
        "summary": "Remove One Org Config Connected to One Federation",
        "description": "Removes one connected organization configuration from the specified federation. To use this resource, the requesting API Key must have the Organization Owner role. Note: This request fails if only one connected organization exists in the federation.",
        "operationId": "removeConnectedOrgConfig",
        "parameters": [
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "name": "orgId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the connected organization configuration to remove.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "patch": {
        "tags": ["Federated Authentication"],
        "summary": "Update One Org Config Connected to One Federation",
        "description": "Updates one connected organization configuration from the specified federation. To use this resource, the requesting API Key must have the Organization Owner role. \n\n**Note** If the organization configuration has no associated identity provider, you can't use this resource to update role mappings or post authorization role grants.  \n\n**Note**: The domainRestrictionEnabled field defaults to false if not provided in the request. \n\n**Note**: If the identityProviderId field is not provided, you will disconnect the organization and the identity provider. \n\n**Note**: Currently connected data access identity providers missing from the dataAccessIdentityProviderIds field will be disconnected.",
        "operationId": "updateConnectedOrgConfig",
        "parameters": [
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "name": "orgId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the connected organization configuration to update.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          }
        ],
        "requestBody": {
          "description": "The connected organization configuration that you want to update.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectedOrgConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectedOrgConfig"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/federationSettings/{federationSettingsId}": {
      "delete": {
        "tags": ["Federated Authentication"],
        "summary": "Delete One Federation Settings Instance",
        "description": "Deletes the federation settings instance and all associated data, including identity providers and domains. To use this resource, the requesting API Key must have the Organization Owner role in the last remaining connected organization. **Note**: requests to this resource will fail if there is more than one connected organization in the federation.",
        "operationId": "deleteFederationApp",
        "parameters": [
          {
            "$ref": "#/components/parameters/federationSettingsId"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/federationSettings/{federationSettingsId}/identityProviders": {
      "get": {
        "tags": ["Federated Authentication"],
        "summary": "Return All Identity Providers in One Federation",
        "description": "Returns all identity providers with the provided protocol and type in the specified federation. If no protocol is specified, only SAML identity providers will be returned. If no idpType is specified, only WORKFORCE identity providers will be returned. To use this resource, the requesting API Key must have the Organization Owner role in one of the connected organizations.",
        "operationId": "listIdentityProviders",
        "parameters": [
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "name": "protocol",
            "in": "query",
            "description": "The protocols of the target identity providers.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "default": "SAML",
                "enum": ["SAML", "OIDC"]
              }
            }
          },
          {
            "name": "idpType",
            "in": "query",
            "description": "The types of the target identity providers.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "default": "WORKFORCE",
                "enum": ["WORKFORCE", "WORKLOAD"]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedFederationIdentityProvider"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "post": {
        "tags": ["Federated Authentication"],
        "summary": "Create One Identity Provider",
        "description": "Creates one identity provider within the specified federation. To use this resource, the requesting API Key must have the Organization Owner role in one of the connected organizations.\n\n**Note**: This resource only supports the creation of OIDC identity providers.",
        "operationId": "createIdentityProvider",
        "parameters": [
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ],
        "requestBody": {
          "description": "The identity provider that you want to create.",
          "content": {
            "application/vnd.atlas.2023-11-15+json": {
              "schema": {
                "$ref": "#/components/schemas/FederationOidcIdentityProviderUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-11-15+json": {
                "schema": {
                  "$ref": "#/components/schemas/FederationOidcIdentityProvider"
                },
                "x-xgen-version": "2023-11-15"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/federationSettings/{federationSettingsId}/identityProviders/{identityProviderId}/metadata.xml": {
      "get": {
        "tags": ["Federated Authentication"],
        "summary": "Return the Metadata of One Identity Provider",
        "description": "Returns the metadata of one identity provider in the specified federation. To use this resource, the requesting API Key must have the Organization Owner role in one of the connected organizations.",
        "operationId": "getIdentityProviderMetadata",
        "parameters": [
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "$ref": "#/components/parameters/identityProviderId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "type": "string"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/federationSettings/{federationSettingsId}/identityProviders/{identityProviderId}": {
      "get": {
        "tags": ["Federated Authentication"],
        "summary": "Return One Identity Provider by ID",
        "description": "Returns one identity provider in the specified federation by the identity provider's id. To use this resource, the requesting API Key must have the Organization Owner role in one of the connected organizations.",
        "operationId": "getIdentityProvider",
        "parameters": [
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "name": "identityProviderId",
            "in": "path",
            "description": "Unique string that identifies the identity provider to connect. If using an API version before 11-15-2023, use the legacy 20-hexadecimal digit id. This id can be found within the Federation Management Console > Identity Providers tab by clicking the info icon in the IdP ID row of a configured identity provider. For all other versions, use the 24-hexadecimal digit id.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/FederationSamlIdentityProvider"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2025-01-01"
              },
              "application/vnd.atlas.2023-11-15+json": {
                "schema": {
                  "$ref": "#/components/schemas/FederationIdentityProvider"
                },
                "x-xgen-version": "2023-11-15"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "delete": {
        "tags": ["Federated Authentication"],
        "summary": "Delete One Identity Provider",
        "description": "Deletes one identity provider in the specified federation. To use this resource, the requesting API Key must have the Organization Owner role in one of the connected organizations. \n\n**Note**: Requests to this resource will fail if the identity provider has any connected organizations. Before deleting an identity provider, disconnect all organizations and confirm that no organization in your account uses this identity provider. To learn more, see [Manage Organization Mapping for Federated Authentication](https://www.mongodb.com/docs/atlas/security/manage-org-mapping/).",
        "operationId": "deleteIdentityProvider",
        "parameters": [
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "name": "identityProviderId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the identity provider to connect.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ],
        "responses": {
          "204": {
            "description": "No Response",
            "content": {
              "application/vnd.atlas.2023-11-15+json": {
                "x-xgen-version": "2023-11-15"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "patch": {
        "tags": ["Federated Authentication"],
        "summary": "Update One Identity Provider",
        "description": "Updates one identity provider in the specified federation. To use this resource, the requesting API Key must have the Organization Owner role in one of the connected organizations.\n\n**Note**: Changing authorization types and/or updating authorization claims can prevent current users and/or groups from accessing the database.",
        "operationId": "updateIdentityProvider",
        "parameters": [
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "name": "identityProviderId",
            "in": "path",
            "description": "Unique string that identifies the identity provider to connect. If using an API version before 11-15-2023, use the legacy 20-hexadecimal digit id. This id can be found within the Federation Management Console > Identity Providers tab by clicking the info icon in the IdP ID row of a configured identity provider. For all other versions, use the 24-hexadecimal digit id.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ],
        "requestBody": {
          "description": "The identity provider that you want to update.",
          "content": {
            "application/vnd.atlas.2023-11-15+json": {
              "schema": {
                "$ref": "#/components/schemas/FederationIdentityProviderUpdate"
              }
            },
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/FederationSamlIdentityProviderUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/FederationSamlIdentityProvider"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2025-01-01"
              },
              "application/vnd.atlas.2023-11-15+json": {
                "schema": {
                  "$ref": "#/components/schemas/FederationIdentityProvider"
                },
                "x-xgen-version": "2023-11-15"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/federationSettings/{federationSettingsId}/identityProviders/{identityProviderId}/jwks": {
      "delete": {
        "tags": ["Federated Authentication"],
        "summary": "Revoke the JWKS from One OIDC Identity Provider",
        "description": "Revokes the JWKS tokens from the requested OIDC identity provider. To use this resource, the requesting API Key must have the Organization Owner role in one of the connected organizations. \n\n**Note**: Revoking your JWKS tokens immediately refreshes your IdP public keys from all your Atlas clusters, invalidating previously signed access tokens and logging out all users. You may need to restart your MongoDB clients. All organizations connected to the identity provider will be affected. To learn more, see [Configure OIDC Authorization](https://www.mongodb.com/docs/atlas/security-oidc/#revoke-jwks).",
        "operationId": "revokeJwksFromIdentityProvider",
        "parameters": [
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "name": "identityProviderId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the identity provider to connect.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ],
        "responses": {
          "204": {
            "description": "No Response",
            "content": {
              "application/vnd.atlas.2023-11-15+json": {
                "x-xgen-version": "2023-11-15"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/groups/{groupId}/auditLog": {
      "get": {
        "tags": ["Auditing"],
        "summary": "Return the Auditing Configuration for One Project",
        "description": "Returns the auditing configuration for the specified project. The auditing configuration defines the events that MongoDB Cloud records in the audit log. To use this resource, the requesting API Key must have the Project Owner role. This feature isn't available for `M0`, `M2`, `M5`, or serverless clusters.",
        "operationId": "getAuditingConfiguration",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLog"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "patch": {
        "tags": ["Auditing"],
        "summary": "Update Auditing Configuration for One Project",
        "description": "Updates the auditing configuration for the specified project. The auditing configuration defines the events that MongoDB Cloud records in the audit log. To use this resource, the requesting API Key must have the Project Owner role. This feature isn't available for `M0`, `M2`, `M5`, or serverless clusters.",
        "operationId": "updateAuditingConfiguration",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Updated auditing configuration for the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/AuditLog"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLog"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/groups": {
      "get": {
        "tags": ["Projects"],
        "summary": "Return All Projects",
        "description": "Returns details about all projects. Projects group clusters into logical collections that support an application environment, workload, or both. Each project can have its own users, teams, security, tags, and alert settings. To use this resource, the requesting API Key must have the Organization Read Only role or higher.",
        "operationId": "listProjects",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAtlasGroupView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "post": {
        "tags": ["Projects"],
        "summary": "Create One Project",
        "description": "Creates one project. Projects group clusters into logical collections that support an application environment, workload, or both. Each project can have its own users, teams, security, tags, and alert settings. To use this resource, the requesting API Key must have the Read Write role.",
        "operationId": "createProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "projectOwnerId",
            "in": "query",
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud user to whom to grant the Project Owner role on the specified project. If you set this parameter, it overrides the default value of the oldest Organization Owner.",
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Creates one project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/groups/{groupId}": {
      "get": {
        "tags": ["Projects"],
        "summary": "Return One Project",
        "description": "Returns details about the specified project. Projects group clusters into logical collections that support an application environment, workload, or both. Each project can have its own users, teams, security, tags, and alert settings. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "delete": {
        "tags": ["Projects"],
        "summary": "Remove One Project",
        "description": "Removes the specified project. Projects group clusters into logical collections that support an application environment, workload, or both. Each project can have its own users, teams, security, tags, and alert settings. You can delete a project only if there are no Online Archives for the clusters in the project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "deleteProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "patch": {
        "tags": ["Projects"],
        "summary": "Update One Project",
        "description": "Updates the human-readable label that identifies the specified project, or the tags associated with the project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "updateProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Project to update.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/groups/{groupId}/limits/{limitName}": {
      "get": {
        "tags": ["Projects"],
        "summary": "Return One Limit for One Project",
        "description": "Returns the specified limit for the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getProjectLimit",
        "parameters": [
          {
            "name": "limitName",
            "in": "path",
            "description": "Human-readable label that identifies this project limit.\n\n| Limit Name | Description | Default | API Override Limit |\n| --- | --- | --- | --- |\n| atlas.project.deployment.clusters | Limit on the number of clusters in this project | 25 | 90 |\n| atlas.project.deployment.nodesPerPrivateLinkRegion | Limit on the number of nodes per Private Link region in this project | 50 | 90 |\n| atlas.project.security.databaseAccess.customRoles | Limit on the number of custom roles in this project | 100 | 1400 |\n| atlas.project.security.databaseAccess.users | Limit on the number of database users in this project | 100 | 900 |\n| atlas.project.security.networkAccess.crossRegionEntries | Limit on the number of cross-region network access entries in this project | 40 | 220 |\n| atlas.project.security.networkAccess.entries | Limit on the number of network access entries in this project | 200 | 20 |\n| dataFederation.bytesProcessed.query | Limit on the number of bytes processed during a single Data Federation query | N/A | N/A |\n| dataFederation.bytesProcessed.daily | Limit on the number of bytes processed across all Data Federation tenants for the current day | N/A | N/A |\n| dataFederation.bytesProcessed.weekly | Limit on the number of bytes processed across all Data Federation tenants for the current week | N/A | N/A |\n| dataFederation.bytesProcessed.monthly | Limit on the number of bytes processed across all Data Federation tenants for the current month | N/A | N/A |\n| atlas.project.deployment.privateServiceConnectionsPerRegionGroup | Number of Private Serivce Connections per Region Group | 50 | 100|\n| atlas.project.deployment.privateServiceConnectionsSubnetMask | Subnet mask for GCP PSC Networks. Has lower limit of 20. | 27 | 27|\n",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "atlas.project.security.databaseAccess.users",
                "atlas.project.deployment.clusters",
                "atlas.project.deployment.serverlessMTMs",
                "atlas.project.security.databaseAccess.customRoles",
                "atlas.project.security.networkAccess.entries",
                "atlas.project.security.networkAccess.crossRegionEntries",
                "atlas.project.deployment.nodesPerPrivateLinkRegion",
                "dataFederation.bytesProcessed.query",
                "dataFederation.bytesProcessed.daily",
                "dataFederation.bytesProcessed.weekly",
                "dataFederation.bytesProcessed.monthly",
                "atlas.project.deployment.privateServiceConnectionsPerRegionGroup",
                "atlas.project.deployment.privateServiceConnectionsSubnetMask"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataFederationLimit"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "delete": {
        "tags": ["Projects"],
        "summary": "Remove One Project Limit",
        "description": "Removes the specified project limit. Depending on the limit, Atlas either resets the limit to its default value or removes the limit entirely. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "deleteProjectLimit",
        "parameters": [
          {
            "name": "limitName",
            "in": "path",
            "description": "Human-readable label that identifies this project limit.\n\n| Limit Name | Description | Default | API Override Limit |\n| --- | --- | --- | --- |\n| atlas.project.deployment.clusters | Limit on the number of clusters in this project | 25 | 90 |\n| atlas.project.deployment.nodesPerPrivateLinkRegion | Limit on the number of nodes per Private Link region in this project | 50 | 90 |\n| atlas.project.security.databaseAccess.customRoles | Limit on the number of custom roles in this project | 100 | 1400 |\n| atlas.project.security.databaseAccess.users | Limit on the number of database users in this project | 100 | 900 |\n| atlas.project.security.networkAccess.crossRegionEntries | Limit on the number of cross-region network access entries in this project | 40 | 220 |\n| atlas.project.security.networkAccess.entries | Limit on the number of network access entries in this project | 200 | 20 |\n| dataFederation.bytesProcessed.query | Limit on the number of bytes processed during a single Data Federation query | N/A | N/A |\n| dataFederation.bytesProcessed.daily | Limit on the number of bytes processed across all Data Federation tenants for the current day | N/A | N/A |\n| dataFederation.bytesProcessed.weekly | Limit on the number of bytes processed across all Data Federation tenants for the current week | N/A | N/A |\n| dataFederation.bytesProcessed.monthly | Limit on the number of bytes processed across all Data Federation tenants for the current month | N/A | N/A |\n| atlas.project.deployment.privateServiceConnectionsPerRegionGroup | Number of Private Serivce Connections per Region Group | 50 | 100|\n| atlas.project.deployment.privateServiceConnectionsSubnetMask | Subnet mask for GCP PSC Networks. Has lower limit of 20. | 27 | 27|\n",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "atlas.project.security.databaseAccess.users",
                "atlas.project.deployment.clusters",
                "atlas.project.deployment.serverlessMTMs",
                "atlas.project.security.databaseAccess.customRoles",
                "atlas.project.security.networkAccess.entries",
                "atlas.project.security.networkAccess.crossRegionEntries",
                "atlas.project.deployment.nodesPerPrivateLinkRegion",
                "dataFederation.bytesProcessed.query",
                "dataFederation.bytesProcessed.daily",
                "dataFederation.bytesProcessed.weekly",
                "dataFederation.bytesProcessed.monthly",
                "atlas.project.deployment.privateServiceConnectionsPerRegionGroup",
                "atlas.project.deployment.privateServiceConnectionsSubnetMask"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "patch": {
        "tags": ["Projects"],
        "summary": "Set One Project Limit",
        "description": "Sets the specified project limit. To use this resource, the requesting API Key must have the Project Owner role.\n\n**NOTE**: Increasing the following configuration limits might lead to slower response times in the MongoDB Cloud UI or increased user management overhead leading to authentication or authorization re-architecture. If possible, we recommend that you create additional projects to gain access to more of these resources for a more sustainable growth pattern.",
        "operationId": "setProjectLimit",
        "parameters": [
          {
            "name": "limitName",
            "in": "path",
            "description": "Human-readable label that identifies this project limit.\n\n| Limit Name | Description | Default | API Override Limit |\n| --- | --- | --- | --- |\n| atlas.project.deployment.clusters | Limit on the number of clusters in this project | 25 | 90 |\n| atlas.project.deployment.nodesPerPrivateLinkRegion | Limit on the number of nodes per Private Link region in this project | 50 | 90 |\n| atlas.project.security.databaseAccess.customRoles | Limit on the number of custom roles in this project | 100 | 1400 |\n| atlas.project.security.databaseAccess.users | Limit on the number of database users in this project | 100 | 900 |\n| atlas.project.security.networkAccess.crossRegionEntries | Limit on the number of cross-region network access entries in this project | 40 | 220 |\n| atlas.project.security.networkAccess.entries | Limit on the number of network access entries in this project | 200 | 20 |\n| dataFederation.bytesProcessed.query | Limit on the number of bytes processed during a single Data Federation query | N/A | N/A |\n| dataFederation.bytesProcessed.daily | Limit on the number of bytes processed across all Data Federation tenants for the current day | N/A | N/A |\n| dataFederation.bytesProcessed.weekly | Limit on the number of bytes processed across all Data Federation tenants for the current week | N/A | N/A |\n| dataFederation.bytesProcessed.monthly | Limit on the number of bytes processed across all Data Federation tenants for the current month | N/A | N/A |\n| atlas.project.deployment.privateServiceConnectionsPerRegionGroup | Number of Private Serivce Connections per Region Group | 50 | 100|\n| atlas.project.deployment.privateServiceConnectionsSubnetMask | Subnet mask for GCP PSC Networks. Has lower limit of 20. | 27 | 27|\n",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "atlas.project.security.databaseAccess.users",
                "atlas.project.deployment.clusters",
                "atlas.project.deployment.serverlessMTMs",
                "atlas.project.security.databaseAccess.customRoles",
                "atlas.project.security.networkAccess.entries",
                "atlas.project.security.networkAccess.crossRegionEntries",
                "atlas.project.deployment.nodesPerPrivateLinkRegion",
                "dataFederation.bytesProcessed.query",
                "dataFederation.bytesProcessed.daily",
                "dataFederation.bytesProcessed.weekly",
                "dataFederation.bytesProcessed.monthly",
                "atlas.project.deployment.privateServiceConnectionsPerRegionGroup",
                "atlas.project.deployment.privateServiceConnectionsSubnetMask"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Limit to update.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/DataFederationLimit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataFederationLimit"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/groups/{groupId}/limits": {
      "get": {
        "tags": ["Projects"],
        "summary": "Return All Limits for One Project",
        "description": "Returns all the limits for the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listProjectLimits",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataFederationLimit"
                  }
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/groups/byName/{groupName}": {
      "get": {
        "tags": ["Projects"],
        "summary": "Return One Project using Its Name",
        "description": "Returns details about the specified project. Projects group clusters into logical collections that support an application environment, workload, or both. Each project can have its own users, teams, security, tags, and alert settings. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getProjectByName",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "groupName",
            "in": "path",
            "description": "Human-readable label that identifies this project.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/groups/{groupId}/settings": {
      "get": {
        "tags": ["Projects"],
        "summary": "Return One Project Settings",
        "description": "Returns details about the specified project's settings. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getProjectSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupSettings"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "patch": {
        "tags": ["Projects"],
        "summary": "Update One Project Settings",
        "description": "Updates the settings of the specified project. You can update any of the options available. MongoDB cloud only updates the options provided in the request. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "updateProjectSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Settings to update.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupSettings"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/groups/{groupId}/users": {
      "get": {
        "tags": ["Projects"],
        "summary": "Return All Users in One Project",
        "description": "Returns details about all users in the specified project. Users belong to an organization. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listProjectUsers",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "flattenTeams",
            "in": "query",
            "description": "Flag that indicates whether the returned list should include users who belong to a team with a role in this project. You might not have assigned the individual users a role in this project. If `\"flattenTeams\" : false`, this resource returns only users with a role in the project.  If `\"flattenTeams\" : true`, this resource returns both users with roles in the project and users who belong to teams with roles in the project.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeOrgUsers",
            "in": "query",
            "description": "Flag that indicates whether the returned list should include users with implicit access to the project, the Organization Owner or Organization Read Only role. You might not have assigned the individual users a role in this project. If `\"includeOrgUsers\": false`, this resource returns only users with a role in the project. If `\"includeOrgUsers\": true`, this resource returns both users with roles in the project and users who have implicit access to the project through their organization role.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAppUserView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/groups/{groupId}/ipAddresses": {
      "get": {
        "tags": ["Projects"],
        "summary": "Return All IP Addresses for One Project",
        "description": "Returns all IP addresses for this project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "returnAllIPAddresses",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupIPAddresses"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated IV"
      }
    },
    "/api/atlas/v2/groups/{groupId}/users/{userId}": {
      "delete": {
        "tags": ["Projects"],
        "summary": "Remove One User from One Project",
        "description": "Removes the specified user from the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "removeProjectUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Unique 24-hexadecimal string that identifies MongoDB Cloud user you want to remove from the specified project. To return a application user's ID using their application username, use the Get All application users in One Project endpoint.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/groups/{groupId}/users/{userId}/roles": {
      "put": {
        "tags": ["Projects"],
        "summary": "Update Project Roles for One MongoDB Cloud User",
        "description": "Updates the roles of the specified user in the specified project. To specify the user to update, provide the unique 24-hexadecimal digit string that identifies the user in the specified project. To use this resource, the requesting API Key must have the Group User Admin role.",
        "operationId": "updateProjectRoles",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the user to modify.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ],
        "requestBody": {
          "description": "Roles to update for the specified user.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGroupRolesForUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateGroupRolesForUser"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/groups/{groupId}/integrations/{integrationType}": {
      "get": {
        "tags": ["Third-Party Integrations"],
        "summary": "Return One Third-Party Service Integration",
        "description": "Returns the settings for configuring integration with one third-party service. These settings apply to all databases managed in one MongoDB Cloud project. To use this resource, the requesting API Key must have the Organization Owner or Project Owner role.",
        "operationId": "getThirdPartyIntegration",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "integrationType",
            "in": "path",
            "description": "Human-readable label that identifies the service which you want to integrate with MongoDB Cloud.",
            "required": true,
            "schema": {
              "title": "Integration Type",
              "type": "string",
              "enum": [
                "PAGER_DUTY",
                "SLACK",
                "DATADOG",
                "NEW_RELIC",
                "OPS_GENIE",
                "VICTOR_OPS",
                "WEBHOOK",
                "HIP_CHAT",
                "PROMETHEUS",
                "MICROSOFT_TEAMS"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThirdPartyIntegration"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "CAP"
      },
      "put": {
        "tags": ["Third-Party Integrations"],
        "summary": "Update One Third-Party Service Integration",
        "description": "Updates the settings for configuring integration with one third-party service. These settings apply to all databases managed in one MongoDB Cloud project. To use this resource, the requesting API Key must have the Organization Owner or Project Owner role.",
        "operationId": "updateThirdPartyIntegration",
        "parameters": [
          {
            "name": "integrationType",
            "in": "path",
            "description": "Human-readable label that identifies the service which you want to integrate with MongoDB Cloud.",
            "required": true,
            "schema": {
              "title": "Integration Type",
              "type": "string",
              "enum": [
                "PAGER_DUTY",
                "SLACK",
                "DATADOG",
                "NEW_RELIC",
                "OPS_GENIE",
                "VICTOR_OPS",
                "WEBHOOK",
                "HIP_CHAT",
                "PROMETHEUS",
                "MICROSOFT_TEAMS"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Third-party integration that you want to configure for your project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/ThirdPartyIntegration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedIntegrationView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "CAP"
      },
      "post": {
        "tags": ["Third-Party Integrations"],
        "summary": "Configure One Third-Party Service Integration",
        "description": "Adds the settings for configuring one third-party service integration. These settings apply to all databases managed in the specified MongoDB Cloud project. Each project can have only one configuration per `{INTEGRATION-TYPE}`. To use this resource, the requesting API Key must have the Organization Owner or Project Owner role.",
        "operationId": "createThirdPartyIntegration",
        "parameters": [
          {
            "name": "integrationType",
            "in": "path",
            "description": "Human-readable label that identifies the service which you want to integrate with MongoDB Cloud.",
            "required": true,
            "schema": {
              "title": "Integration Type",
              "type": "string",
              "enum": [
                "PAGER_DUTY",
                "SLACK",
                "DATADOG",
                "NEW_RELIC",
                "OPS_GENIE",
                "VICTOR_OPS",
                "WEBHOOK",
                "HIP_CHAT",
                "PROMETHEUS",
                "MICROSOFT_TEAMS"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Third-party integration that you want to configure for your project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/ThirdPartyIntegration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedIntegrationView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "CAP"
      },
      "delete": {
        "tags": ["Third-Party Integrations"],
        "summary": "Remove One Third-Party Service Integration",
        "description": "Removes the settings that permit configuring one third-party service integration. These settings apply to all databases managed in one MongoDB Cloud project. If you delete an integration from a project, you remove that integration configuration only for that project. This action doesn't affect any other project or organization's configured `{INTEGRATION-TYPE}` integrations. To use this resource, the requesting API Key must have the Organization Owner or Project Owner role.",
        "operationId": "deleteThirdPartyIntegration",
        "parameters": [
          {
            "name": "integrationType",
            "in": "path",
            "description": "Human-readable label that identifies the service which you want to integrate with MongoDB Cloud.",
            "required": true,
            "schema": {
              "title": "Integration Type",
              "type": "string",
              "enum": [
                "PAGER_DUTY",
                "SLACK",
                "DATADOG",
                "NEW_RELIC",
                "OPS_GENIE",
                "VICTOR_OPS",
                "WEBHOOK",
                "HIP_CHAT",
                "PROMETHEUS",
                "MICROSOFT_TEAMS"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "CAP"
      }
    },
    "/api/atlas/v2/groups/{groupId}/integrations": {
      "get": {
        "tags": ["Third-Party Integrations"],
        "summary": "Return All Active Third-Party Service Integrations",
        "description": "Returns the settings that permit integrations with all configured third-party services. These settings apply to all databases managed in one MongoDB Cloud project. To use this resource, the requesting API Key must have the Organization Owner or Project Owner role.",
        "operationId": "listThirdPartyIntegrations",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedIntegrationView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "CAP"
      }
    },
    "/api/atlas/v2/groups/{groupId}/invites": {
      "get": {
        "tags": ["Projects"],
        "summary": "Return All Project Invitations",
        "description": "Returns all pending invitations to the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "listProjectInvitations",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "username",
            "in": "query",
            "description": "Email address of the user account invited to this project.",
            "schema": {
              "type": "string",
              "format": "email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupInvitation"
                  }
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2024-10-04"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "deprecated": true,
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "post": {
        "tags": ["Projects"],
        "summary": "Invite One MongoDB Cloud User to Join One Project",
        "description": "Invites one MongoDB Cloud user to join the specified project. The MongoDB Cloud user must accept the invitation to access information within the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "createProjectInvitation",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ],
        "requestBody": {
          "description": "Invites one MongoDB Cloud user to join the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupInvitationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupInvitation"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2024-10-04"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "deprecated": true,
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "patch": {
        "tags": ["Projects"],
        "summary": "Update One Project Invitation",
        "description": "Updates the details of one pending invitation to the specified project. To specify which invitation to update, provide the username of the invited user. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "updateProjectInvitation",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Updates the details of one pending invitation to the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupInvitationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupInvitation"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2024-10-04"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "deprecated": true,
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/groups/{groupId}/invites/{invitationId}": {
      "get": {
        "tags": ["Projects"],
        "summary": "Return One Project Invitation",
        "description": "Returns the details of one pending invitation to the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "getProjectInvitation",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "invitationId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the invitation.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupInvitation"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2024-10-04"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "deprecated": true,
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "delete": {
        "tags": ["Projects"],
        "summary": "Cancel One Project Invitation",
        "description": "Cancels one pending invitation sent to the specified MongoDB Cloud user to join a project. You can't cancel an invitation that the user accepted. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "deleteProjectInvitation",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "name": "invitationId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the invitation.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2024-10-04"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "deprecated": true,
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "patch": {
        "tags": ["Projects"],
        "summary": "Update One Project Invitation by Invitation ID",
        "description": "Updates the details of one pending invitation to the specified project. To specify which invitation to update, provide the unique identification string for that invitation. Use the Return All Project Invitations endpoint to retrieve IDs for all pending project invitations. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "updateProjectInvitationById",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "name": "invitationId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the invitation.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updates the details of one pending invitation to the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupInvitationUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupInvitation"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2024-10-04"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "deprecated": true,
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/groups/{groupId}/teams": {
      "get": {
        "tags": ["Teams"],
        "summary": "Return All Teams in One Project",
        "description": "Returns all teams to which the authenticated user has access in the project specified using its unique 24-hexadecimal digit identifier. All members of the team share the same project access. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listProjectTeams",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTeamRoleView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "post": {
        "tags": ["Teams"],
        "summary": "Add One or More Teams to One Project",
        "description": "Adds one team to the specified project. All members of the team share the same project access. MongoDB Cloud limits the number of users to a maximum of 100 teams per project and a maximum of 250 teams per organization. To use this resource, the requesting API Key must have the Project Owner role.",
        "externalDocs": {
          "description": "Manage Organization Teams",
          "url": "https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams"
        },
        "operationId": "addAllTeamsToProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ],
        "requestBody": {
          "description": "Team to add to the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TeamRole"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTeamRoleView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/groups/{groupId}/teams/{teamId}": {
      "delete": {
        "tags": ["Teams"],
        "summary": "Remove One Team from One Project",
        "description": "Removes one team specified using its unique 24-hexadecimal digit identifier from the project specified using its unique 24-hexadecimal digit identifier. To use this resource, the requesting API Key must have the Project Owner role.",
        "externalDocs": {
          "description": "Manage Organization Teams",
          "url": "https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams"
        },
        "operationId": "removeProjectTeam",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the team that you want to remove from the specified project.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "patch": {
        "tags": ["Teams"],
        "summary": "Update Team Roles in One Project",
        "description": "Updates the project roles assigned to the specified team. You can grant team roles for specific projects and grant project access roles to users in the team. All members of the team share the same project access. To use this resource, the requesting API Key must have the Project Owner role.",
        "externalDocs": {
          "description": "Manage Organization Teams",
          "url": "https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams"
        },
        "operationId": "updateTeamRoles",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the team for which you want to update roles.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The project roles assigned to the specified team.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/TeamRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTeamRoleView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/groups/{groupId}/apiKeys/{apiUserId}": {
      "post": {
        "tags": ["Programmatic API Keys"],
        "summary": "Assign One Organization API Key to One Project",
        "description": "Assigns the specified organization API key to the specified project. Users with the Project Owner role in the project associated with the API key can then use the organization API key to access the resources. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "addProjectApiKey",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "apiUserId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies this organization API key that you want to assign to one project.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Organization API key to be assigned to the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserAccessRoleAssignment"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "delete": {
        "tags": ["Programmatic API Keys"],
        "summary": "Unassign One Organization API Key from One Project",
        "description": "Removes one organization API key from the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "externalDocs": {
          "description": "Programmatic API Keys",
          "url": "https://docs.atlas.mongodb.com/configure-api-access/#std-label-atlas-prog-api-key"
        },
        "operationId": "removeProjectApiKey",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "apiUserId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies this organization API key that you want to unassign from one project.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "patch": {
        "tags": ["Programmatic API Keys"],
        "summary": "Update Roles of One Organization API Key to One Project",
        "description": "Updates the roles of the organization API key that you specify for the project that you specify. You must specify at least one valid role for the project. The application removes any roles that you do not include in this request if they were previously set in the organization API key that you specify for the project.",
        "operationId": "updateApiKeyRoles",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "name": "apiUserId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies this organization API key that you want to unassign from one project.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Organization API Key to be updated. This request requires a minimum of one of the two body parameters.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAtlasProjectApiKey"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyUserDetails"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/groups/{groupId}/apiKeys": {
      "get": {
        "tags": ["Programmatic API Keys"],
        "summary": "Return All Organization API Keys Assigned to One Project",
        "description": "Returns all organization API keys that you assigned to the specified project. Users with the Project Owner role in the project associated with the API key can use the organization API key to access the resources. To use this resource, the requesting API Key must have the Project Owner role.",
        "externalDocs": {
          "description": "Programmatic API Keys",
          "url": "https://docs.atlas.mongodb.com/configure-api-access/#std-label-atlas-prog-api-key"
        },
        "operationId": "listProjectApiKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedApiApiUserView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "post": {
        "tags": ["Programmatic API Keys"],
        "summary": "Create and Assign One Organization API Key to One Project",
        "description": "Creates and assigns the specified organization API key to the specified project. Users with the Project Owner role in the project associated with the API key can use the organization API key to access the resources. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "createProjectApiKey",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Organization API key to be created and assigned to the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAtlasProjectApiKey"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyUserDetails"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/groups/{groupId}/access": {
      "post": {
        "tags": ["Projects"],
        "summary": "Add One MongoDB Cloud User to One Project",
        "description": "Adds one MongoDB Cloud user to the specified project. If the MongoDB Cloud user is not a member of the project's organization, then the user must accept their invitation to the organization to access information within the specified project. If the MongoDB Cloud User is already a member of the project's organization, then they will be added to the project immediately and an invitation will not be returned by this resource. To use this resource, the requesting API Key must have the Group User Admin role.",
        "operationId": "addUserToProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ],
        "requestBody": {
          "description": "Adds one MongoDB Cloud user to the specified project.",
          "content": {
            "application/vnd.atlas.2023-02-01+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupInvitationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-02-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationInvitation"
                },
                "x-xgen-version": "2023-02-01"
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "application/vnd.atlas.2023-02-01+json": {
                "x-xgen-version": "2023-02-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/groups/{groupId}:migrate": {
      "post": {
        "tags": ["Projects"],
        "summary": "Migrate One Project to Another Organization",
        "description": "Migrates a project from its current organization to another organization. All project users and their roles will be copied to the same project in the destination organization. You must include an organization API key with the Organization Owner role for the destination organization to verify access to the destination organization when you authenticate with Programmatic API Keys. Otherwise, the requesting user must have the Organization Owner role in both organizations. To use this resource, the requesting API Key must have the Organization Owner role.",
        "operationId": "migrateProjectToAnotherOrg",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ],
        "requestBody": {
          "description": "Migrates a project from its current organization to another organization.",
          "content": {
            "application/vnd.atlas.2024-05-30+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupMigrationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2024-05-30+json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                },
                "x-xgen-version": "2024-05-30"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/invites": {
      "get": {
        "tags": ["Organizations"],
        "summary": "Return All Organization Invitations",
        "description": "Returns all pending invitations to the specified organization. To use this resource, the requesting API Key must have the Organization Owner role.",
        "operationId": "listOrganizationInvitations",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "username",
            "in": "query",
            "description": "Email address of the user account invited to this organization. If you exclude this parameter, this resource returns all pending invitations.",
            "schema": {
              "type": "string",
              "format": "email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationInvitation"
                  }
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "post": {
        "tags": ["Organizations"],
        "summary": "Invite One MongoDB Cloud User to Join One Atlas Organization",
        "description": "Invites one MongoDB Cloud user to join the specified organization. The user must accept the invitation to access information within the specified organization. To use this resource, the requesting API Key must have the Organization Owner role.",
        "operationId": "createOrganizationInvitation",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Invites one MongoDB Cloud user to join the specified organization.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationInvitationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationInvitation"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "patch": {
        "tags": ["Organizations"],
        "summary": "Update One Organization Invitation",
        "description": "Updates the details of one pending invitation to the specified organization. To specify which invitation, provide the username of the invited user. To use this resource, the requesting API Key must have the Organization Owner role.",
        "operationId": "updateOrganizationInvitation",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Updates the details of one pending invitation to the specified organization.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationInvitationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationInvitation"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/invites/{invitationId}": {
      "get": {
        "tags": ["Organizations"],
        "summary": "Return One Organization Invitation",
        "description": "Returns the details of one pending invitation to the specified organization. To use this resource, the requesting API Key must have the Organization Owner role.",
        "operationId": "getOrganizationInvitation",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "name": "invitationId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the invitation.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationInvitation"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "delete": {
        "tags": ["Organizations"],
        "summary": "Cancel One Organization Invitation",
        "description": "Cancels one pending invitation sent to the specified MongoDB Cloud user to join an organization. You can't cancel an invitation that the user accepted. To use this resource, the requesting API Key must have the Organization Owner role.",
        "operationId": "deleteOrganizationInvitation",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "invitationId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the invitation.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "patch": {
        "tags": ["Organizations"],
        "summary": "Update One Organization Invitation by Invitation ID",
        "description": "Updates the details of one pending invitation to the specified organization. To specify which invitation, provide the unique identification string for that invitation. Use the Return All Organization Invitations endpoint to retrieve IDs for all pending organization invitations. To use this resource, the requesting API Key must have the Organization Owner role.",
        "operationId": "updateOrganizationInvitationById",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "invitationId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the invitation.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updates the details of one pending invitation to the specified organization.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationInvitationUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationInvitation"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backupCheckpoints": {
      "get": {
        "tags": ["Legacy Backup"],
        "summary": "Return All Legacy Backup Checkpoints",
        "description": "Returns all legacy backup checkpoints for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listLegacyBackupCheckpoints",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster that contains the checkpoints that you want to return.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedApiAtlasCheckpointView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "deprecated": true,
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backupCheckpoints/{checkpointId}": {
      "get": {
        "tags": ["Legacy Backup"],
        "summary": "Return One Legacy Backup Checkpoint",
        "description": "Returns one legacy backup checkpoint for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getLegacyBackupCheckpoint",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "checkpointId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the checkpoint.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster that contains the checkpoints that you want to return.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasCheckpointView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "deprecated": true,
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      }
    },
    "/api/atlas/v2/groups/{groupId}/backup/exportBuckets/{exportBucketId}": {
      "get": {
        "tags": ["Cloud Backups"],
        "summary": "Return One AWS S3 Bucket or Azure Blob Storage Container Used for Cloud Backup Snapshot Exports",
        "description": "Returns one AWS S3 Bucket or Azure Blob Storage Container associated with the specified Project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getExportBucket",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "exportBucketId",
            "in": "path",
            "description": "Unique 24-hexadecimal character string that identifies the Export Bucket.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2024-05-30+json": {
                "schema": {
                  "$ref": "#/components/schemas/DiskBackupSnapshotExportBucket"
                },
                "examples": {
                  "AWS": {
                    "description": "AWS",
                    "value": {
                      "_id": "32b6e34b3d91647abb20e7b8",
                      "bucketName": "export-bucket",
                      "cloudProvider": "AWS",
                      "iamRoleId": "668c5f0ed436263134491592",
                      "links": [
                        {
                          "href": "https://cloud.mongodb.com/api/atlas",
                          "rel": "self"
                        }
                      ]
                    }
                  },
                  "Azure": {
                    "description": "Azure",
                    "value": {
                      "_id": "32b6e34b3d91647abb20e7b8",
                      "bucketName": "export-container",
                      "cloudProvider": "AZURE",
                      "roleId": "668c5f0ed436263134491592",
                      "serviceUrl": "https://examplestorageaccount.blob.core.windows.net",
                      "tenantId": "4297fc77-1592-4de8-a6d5-a8c32401df87",
                      "links": [
                        {
                          "href": "https://cloud.mongodb.com/api/atlas",
                          "rel": "self"
                        }
                      ]
                    }
                  }
                },
                "x-xgen-version": "2024-05-30"
              },
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DiskBackupSnapshotAWSExportBucket"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2025-05-30"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      },
      "delete": {
        "tags": ["Cloud Backups"],
        "summary": "Revoke Access to AWS S3 Bucket or Azure Blob Storage Container for Cloud Backup Snapshot Exports",
        "description": "Revoke MongoDB Cloud access to the specified AWS S3 Bucket or Azure Blob Storage Container. This prevents this Export Bucket from receiving Atlas Cloud Backup Snapshots. Auto export must be disabled on all clusters in this Project exporting to this Export Bucket before revoking access. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "deleteExportBucket",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "exportBucketId",
            "in": "path",
            "description": "Unique string that identifies the AWS S3 Bucket or Azure Blob Storage Container to which you export your Snapshots.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/exports": {
      "get": {
        "tags": ["Cloud Backups"],
        "summary": "Return All Cloud Backup Snapshot Export Jobs",
        "description": "Returns all Cloud Backup snapshot export jobs associated with the specified Atlas cluster. To use this resource, the requesting API Key must have the Project Atlas Admin role.",
        "operationId": "listBackupExportJobs",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedApiAtlasDiskBackupExportJobView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      },
      "post": {
        "tags": ["Cloud Backups"],
        "summary": "Create One Cloud Backup Snapshot Export Job",
        "description": "Exports one backup snapshot for dedicated Atlas cluster using Cloud Backups to an Export Bucket. To use this resource, the requesting API Key must have the Project Atlas Admin role.",
        "operationId": "createBackupExportJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Information about the Cloud Backup Snapshot Export Job to create.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/DiskBackupExportJobRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DiskBackupExportJob"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/exports/{exportId}": {
      "get": {
        "tags": ["Cloud Backups"],
        "summary": "Return One Cloud Backup Snapshot Export Job",
        "description": "Returns one Cloud Backup snapshot export job associated with the specified Atlas cluster. To use this resource, the requesting API Key must have the Project Atlas Admin role.",
        "operationId": "getBackupExportJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "exportId",
            "in": "path",
            "description": "Unique string that identifies the export job to return.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DiskBackupExportJob"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/restoreJobs/{restoreJobId}": {
      "get": {
        "tags": ["Cloud Backups"],
        "summary": "Return One Restore Job of One Cluster",
        "description": "Returns one cloud backup restore job for one cluster from the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "getBackupRestoreJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster with the restore jobs you want to return.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "restoreJobId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the restore job to return.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DiskBackupSnapshotRestoreJob"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      },
      "delete": {
        "tags": ["Cloud Backups"],
        "summary": "Cancel One Restore Job of One Cluster",
        "description": "Cancels one cloud backup restore job of one cluster from the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "cancelBackupRestoreJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "restoreJobId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the restore job to remove.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "405": {
            "$ref": "#/components/responses/methodNotAllowed"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/restoreJobs": {
      "get": {
        "tags": ["Cloud Backups"],
        "summary": "Return All Restore Jobs for One Cluster",
        "description": "Returns all cloud backup restore jobs for one cluster from the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "listBackupRestoreJobs",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster with the restore jobs you want to return.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCloudBackupRestoreJobView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      },
      "post": {
        "tags": ["Cloud Backups"],
        "summary": "Restore One Snapshot of One Cluster",
        "description": "Restores one snapshot of one cluster from the specified project. Atlas takes on-demand snapshots immediately and scheduled snapshots at regular intervals. If an on-demand snapshot with a status of **queued** or **inProgress** exists, before taking another snapshot, wait until Atlas completes completes processing the previously taken on-demand snapshot.\n\n To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "createBackupRestoreJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Restores one snapshot of one cluster from the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/DiskBackupSnapshotRestoreJob"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DiskBackupSnapshotRestoreJob"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/snapshots/shardedCluster/{snapshotId}": {
      "get": {
        "tags": ["Cloud Backups"],
        "summary": "Return One Sharded Cluster Cloud Backup",
        "description": "Returns one snapshot of one sharded cluster from the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getShardedClusterBackup",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "snapshotId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the desired snapshot.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DiskBackupShardedClusterSnapshot"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      },
      "delete": {
        "tags": ["Cloud Backups"],
        "summary": "Remove One Sharded Cluster Cloud Backup",
        "description": "Removes one snapshot of one sharded cluster from the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "deleteShardedClusterBackup",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "snapshotId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the desired snapshot.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/snapshots/{snapshotId}": {
      "get": {
        "tags": ["Cloud Backups"],
        "summary": "Return One Replica Set Cloud Backup",
        "description": "Returns one snapshot from the specified cluster. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getReplicaSetBackup",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "snapshotId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the desired snapshot.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DiskBackupReplicaSet"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      },
      "delete": {
        "tags": ["Cloud Backups"],
        "summary": "Remove One Replica Set Cloud Backup",
        "description": "Removes the specified snapshot. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "deleteReplicaSetBackup",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "snapshotId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the desired snapshot.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      },
      "patch": {
        "tags": ["Cloud Backups"],
        "summary": "Change Expiration Date for One Cloud Backup",
        "description": "Changes the expiration date for one cloud backup snapshot for one cluster in the specified project.",
        "operationId": "updateSnapshotRetention",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "snapshotId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the desired snapshot.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Changes the expiration date for one cloud backup snapshot for one cluster in the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/BackupSnapshotRetention"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DiskBackupReplicaSet"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/snapshots/shardedClusters": {
      "get": {
        "tags": ["Cloud Backups"],
        "summary": "Return All Sharded Cluster Cloud Backups",
        "description": "Returns all snapshots of one sharded cluster from the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listShardedClusterBackups",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCloudBackupShardedClusterSnapshotView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/snapshots": {
      "get": {
        "tags": ["Cloud Backups"],
        "summary": "Return All Replica Set Cloud Backups",
        "description": "Returns all snapshots of one cluster from the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listReplicaSetBackups",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCloudBackupReplicaSetView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      },
      "post": {
        "tags": ["Cloud Backups"],
        "summary": "Take One On-Demand Snapshot",
        "description": "Takes one on-demand snapshot for the specified cluster. Atlas takes on-demand snapshots immediately and scheduled snapshots at regular intervals. If an on-demand snapshot with a status of **queued** or **inProgress** exists, before taking another snapshot, wait until Atlas completes completes processing the previously taken on-demand snapshot.\n\n To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "takeSnapshot",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Takes one on-demand snapshot.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/DiskBackupOnDemandSnapshotRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DiskBackupSnapshot"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/restoreJobs": {
      "get": {
        "tags": ["Legacy Backup"],
        "summary": "Return All Legacy Backup Restore Jobs",
        "description": "Returns all legacy backup restore jobs for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Read Only role.\n\n Effective 23 March 2020, all new clusters can use only Cloud Backups. When you upgrade to 4.2, your backup system upgrades to cloud backup if it is currently set to legacy backup. After this upgrade, all your existing legacy backup snapshots remain available. They expire over time in accordance with your retention policy. Your backup policy resets to the default schedule. If you had a custom backup policy in place with legacy backups, you must re-create it with the procedure outlined in the [Cloud Backup documentation](https://www.mongodb.com/docs/atlas/backup/cloud-backup/scheduling/#std-label-cloud-provider-backup-schedule). If you use the `BATCH-ID` query parameter, you can retrieve all restore jobs in the specified batch. When creating a restore job for a sharded cluster, MongoDB Cloud creates a separate job for each shard, plus another for the config server. Each of those jobs are part of a batch. However, a batch can't include a restore job for a replica set.",
        "operationId": "listLegacyBackupRestoreJobs",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "batchId",
            "in": "query",
            "description": "Unique 24-hexadecimal digit string that identifies the batch of restore jobs to return. Timestamp in ISO 8601 date and time format in UTC when creating a restore job for a sharded cluster, Application creates a separate job for each shard, plus another for the config host. Each of these jobs comprise one batch. A restore job for a replica set can't be part of a batch.",
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster with the snapshot you want to return.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedRestoreJobView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "deprecated": true,
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      },
      "post": {
        "tags": ["Legacy Backup"],
        "summary": "Create One Legacy Backup Restore Job",
        "description": "Restores one legacy backup for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Owner role. Effective 23 March 2020, all new clusters can use only Cloud Backups. When you upgrade to 4.2, your backup system upgrades to cloud backup if it is currently set to legacy backup. After this upgrade, all your existing legacy backup snapshots remain available. They expire over time in accordance with your retention policy. Your backup policy resets to the default schedule. If you had a custom backup policy in place with legacy backups, you must re-create it with the procedure outlined in the [Cloud Backup documentation](https://www.mongodb.com/docs/atlas/backup/cloud-backup/scheduling/#std-label-cloud-provider-backup-schedule). This endpoint doesn't support creating checkpoint restore jobs for sharded clusters, or creating restore jobs for queryable backup snapshots. If you create an automated restore job by specifying `delivery.methodName` of `AUTOMATED_RESTORE` in your request body, MongoDB Cloud removes all existing data on the target cluster prior to the restore.",
        "operationId": "createLegacyBackupRestoreJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster with the snapshot you want to return.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Legacy backup to restore to one cluster in the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/BackupRestoreJob"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedRestoreJobView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "deprecated": true,
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/restoreJobs/{jobId}": {
      "get": {
        "tags": ["Legacy Backup"],
        "summary": "Return One Legacy Backup Restore Job",
        "description": "Returns one legacy backup restore job for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Read Only role.\n\n Effective 23 March 2020, all new clusters can use only Cloud Backups. When you upgrade to 4.2, your backup system upgrades to cloud backup if it is currently set to legacy backup. After this upgrade, all your existing legacy backup snapshots remain available. They expire over time in accordance with your retention policy. Your backup policy resets to the default schedule. If you had a custom backup policy in place with legacy backups, you must re-create it with the procedure outlined in the [Cloud Backup documentation](https://www.mongodb.com/docs/atlas/backup/cloud-backup/scheduling/#std-label-cloud-provider-backup-schedule).",
        "operationId": "getLegacyBackupRestoreJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster with the snapshot you want to return.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the restore job.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupRestoreJob"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "deprecated": true,
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      }
    },
    "/api/atlas/v2/groups/{groupId}/serverless/{clusterName}/backup/restoreJobs": {
      "get": {
        "tags": ["Cloud Backups"],
        "summary": "Return All Restore Jobs for One Serverless Instance",
        "description": "Returns all restore jobs for one serverless instance from the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "listServerlessBackupRestoreJobs",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the serverless instance.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedApiAtlasServerlessBackupRestoreJobView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Private Cloud"
      },
      "post": {
        "tags": ["Cloud Backups"],
        "summary": "Restore One Snapshot of One Serverless Instance",
        "description": "Restores one snapshot of one serverless instance from the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "createServerlessBackupRestoreJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the serverless instance whose snapshot you want to restore.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Restores one snapshot of one serverless instance from the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/ServerlessBackupRestoreJob"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerlessBackupRestoreJob"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Private Cloud"
      }
    },
    "/api/atlas/v2/groups/{groupId}/serverless/{clusterName}/backup/restoreJobs/{restoreJobId}": {
      "get": {
        "tags": ["Cloud Backups"],
        "summary": "Return One Restore Job for One Serverless Instance",
        "description": "Returns one restore job for one serverless instance from the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "getServerlessBackupRestoreJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the serverless instance.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "restoreJobId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the restore job to return.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerlessBackupRestoreJob"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Private Cloud"
      }
    },
    "/api/atlas/v2/groups/{groupId}/serverless/{clusterName}/backup/snapshots/{snapshotId}": {
      "get": {
        "tags": ["Cloud Backups"],
        "summary": "Return One Snapshot of One Serverless Instance",
        "description": "Returns one snapshot of one serverless instance from the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getServerlessBackup",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the serverless instance.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "snapshotId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the desired snapshot.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerlessBackupSnapshot"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Private Cloud"
      }
    },
    "/api/atlas/v2/groups/{groupId}/serverless/{clusterName}/backup/snapshots": {
      "get": {
        "tags": ["Cloud Backups"],
        "summary": "Return All Snapshots of One Serverless Instance",
        "description": "Returns all snapshots of one serverless instance from the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listServerlessBackups",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the serverless instance.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedApiAtlasServerlessBackupSnapshotView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Private Cloud"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/snapshotSchedule": {
      "get": {
        "tags": ["Legacy Backup"],
        "summary": "Return One Snapshot Schedule",
        "description": "Returns the snapshot schedule for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Read Only role.\n\n Effective 23 March 2020, all new clusters can use only Cloud Backups. When you upgrade to 4.2, your backup system upgrades to cloud backup if it is currently set to legacy backup. After this upgrade, all your existing legacy backup snapshots remain available. They expire over time in accordance with your retention policy. Your backup policy resets to the default schedule. If you had a custom backup policy in place with legacy backups, you must re-create it with the procedure outlined in the [Cloud Backup documentation](https://www.mongodb.com/docs/atlas/backup/cloud-backup/scheduling/#std-label-cloud-provider-backup-schedule).",
        "operationId": "getLegacySnapshotSchedule",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster with the snapshot you want to return.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasSnapshotScheduleView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "deprecated": true,
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      },
      "patch": {
        "tags": ["Legacy Backup"],
        "summary": "Update Snapshot Schedule for One Cluster",
        "description": "Updates the snapshot schedule for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Owner role.\n\n Effective 23 March 2020, all new clusters can use only Cloud Backups. When you upgrade to 4.2, your backup system upgrades to cloud backup if it is currently set to legacy backup. After this upgrade, all your existing legacy backup snapshots remain available. They expire over time in accordance with your retention policy. Your backup policy resets to the default schedule. If you had a custom backup policy in place with legacy backups, you must re-create it with the procedure outlined in the [Cloud Backup documentation](https://www.mongodb.com/docs/atlas/backup/cloud-backup/scheduling/#std-label-cloud-provider-backup-schedule).",
        "operationId": "updateLegacySnapshotSchedule",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster with the snapshot you want to return.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update the snapshot schedule for one cluster in the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasSnapshotScheduleView"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasSnapshotScheduleView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "deprecated": true,
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/snapshots/{snapshotId}": {
      "get": {
        "tags": ["Legacy Backup"],
        "summary": "Return One Legacy Backup Snapshot",
        "description": "Returns one legacy backup snapshot for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Read Only role. Effective 23 March 2020, all new clusters can use only Cloud Backups. When you upgrade to 4.2, your backup system upgrades to cloud backup if it is currently set to legacy backup. After this upgrade, all your existing legacy backup snapshots remain available. They expire over time in accordance with your retention policy. Your backup policy resets to the default schedule. If you had a custom backup policy in place with legacy backups, you must re-create it with the procedure outlined in the [Cloud Backup documentation](https://www.mongodb.com/docs/atlas/backup/cloud-backup/scheduling/#std-label-cloud-provider-backup-schedule).",
        "operationId": "getLegacySnapshot",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "snapshotId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the desired snapshot.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupSnapshot"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "deprecated": true,
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      },
      "delete": {
        "tags": ["Legacy Backup"],
        "summary": "Remove One Legacy Backup Snapshot",
        "description": "Removes one legacy backup snapshot for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Owner role. Effective 23 March 2020, all new clusters can use only Cloud Backups. When you upgrade to 4.2, your backup system upgrades to cloud backup if it is currently set to legacy backup. After this upgrade, all your existing legacy backup snapshots remain available. They expire over time in accordance with your retention policy. Your backup policy resets to the default schedule. If you had a custom backup policy in place with legacy backups, you must re-create it with the procedure outlined in the [Cloud Backup documentation](https://www.mongodb.com/docs/atlas/backup/cloud-backup/scheduling/#std-label-cloud-provider-backup-schedule).",
        "operationId": "deleteLegacySnapshot",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "snapshotId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the desired snapshot.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "deprecated": true,
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      },
      "patch": {
        "tags": ["Legacy Backup"],
        "summary": "Change One Legacy Backup Snapshot Expiration",
        "description": "Changes the expiration date for one legacy backup snapshot for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Owner role. Effective 23 March 2020, all new clusters can use only Cloud Backups. When you upgrade to 4.2, your backup system upgrades to cloud backup if it is currently set to legacy backup. After this upgrade, all your existing legacy backup snapshots remain available. They expire over time in accordance with your retention policy. Your backup policy resets to the default schedule. If you had a custom backup policy in place with legacy backups, you must re-create it with the procedure outlined in the [Cloud Backup documentation](https://www.mongodb.com/docs/atlas/backup/cloud-backup/scheduling/#std-label-cloud-provider-backup-schedule).",
        "operationId": "updateLegacySnapshotRetention",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "snapshotId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the desired snapshot.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Changes One Legacy Backup Snapshot Expiration.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/BackupSnapshot"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupSnapshot"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "deprecated": true,
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/snapshots": {
      "get": {
        "tags": ["Legacy Backup"],
        "summary": "Return All Legacy Backup Snapshots",
        "description": "Returns all legacy backup snapshots for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Read Only role. Effective 23 March 2020, all new clusters can use only Cloud Backups. When you upgrade to 4.2, your backup system upgrades to cloud backup if it is currently set to legacy backup. After this upgrade, all your existing legacy backup snapshots remain available. They expire over time in accordance with your retention policy. Your backup policy resets to the default schedule. If you had a custom backup policy in place with legacy backups, you must re-create it with the procedure outlined in the [Cloud Backup documentation](https://www.mongodb.com/docs/atlas/backup/cloud-backup/scheduling/#std-label-cloud-provider-backup-schedule).",
        "operationId": "listLegacySnapshots",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "completed",
            "in": "query",
            "description": "Human-readable label that specifies whether to return only completed, incomplete, or all snapshots. By default, MongoDB Cloud only returns completed snapshots.",
            "schema": {
              "type": "string",
              "default": "true",
              "enum": ["all", "true", "false"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedSnapshotView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "deprecated": true,
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      }
    },
    "/api/atlas/v2/groups/{groupId}/backupCompliancePolicy": {
      "get": {
        "tags": ["Cloud Backups"],
        "summary": "Return the Backup Compliance Policy settings",
        "description": "Returns the Backup Compliance Policy settings with the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "getDataProtectionSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-10-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataProtectionSettings20231001"
                },
                "x-xgen-version": "2023-10-01"
              },
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataProtectionSettings"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2024-10-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      },
      "put": {
        "tags": ["Cloud Backups"],
        "summary": "Update or enable the Backup Compliance Policy settings",
        "description": "Updates the Backup Compliance Policy settings for the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "updateDataProtectionSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "overwriteBackupPolicies",
            "in": "query",
            "description": "Flag that indicates whether to overwrite non complying backup policies with the new data protection settings or not.",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "The new Backup Compliance Policy settings.",
          "content": {
            "application/vnd.atlas.2023-10-01+json": {
              "schema": {
                "$ref": "#/components/schemas/DataProtectionSettings20231001"
              },
              "x-xgen-version": "2023-10-01"
            },
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/DataProtectionSettings"
              },
              "x-xgen-version": "2023-01-01",
              "x-sunset": "2024-10-01"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-10-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataProtectionSettings20231001"
                },
                "x-xgen-version": "2023-10-01"
              },
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataProtectionSettings"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2024-10-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      }
    },
    "/api/atlas/v2/groups/{groupId}/backup/exportBuckets": {
      "get": {
        "tags": ["Cloud Backups"],
        "summary": "Return All AWS S3 Buckets and Azure Blob Storage Containers Used for Cloud Backup Snapshot Exports",
        "description": "Returns all AWS S3 buckets and Azure Blob Storage Containers associated with the specified Project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listExportBuckets",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2024-05-30+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBackupSnapshotExportBucketsView"
                },
                "x-xgen-version": "2024-05-30"
              },
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBackupSnapshotExportBucketView"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2025-05-30"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      },
      "post": {
        "tags": ["Cloud Backups"],
        "summary": "Grant Access to AWS S3 Bucket or Azure Blob Storage Container for Cloud Backup Snapshot Exports",
        "description": "Grants MongoDB Cloud access to the specified AWS S3 Bucket or Azure Blob Storage Container. This enables this Export Bucket to receive Atlas Cloud Backup Snapshots. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "createExportBucket",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Grants MongoDB Cloud access to the specified AWS S3 Bucket or Azure Blob Storage Container.",
          "content": {
            "application/vnd.atlas.2024-05-30+json": {
              "schema": {
                "$ref": "#/components/schemas/DiskBackupSnapshotExportBucket"
              },
              "examples": {
                "AWS": {
                  "description": "AWS",
                  "value": {
                    "bucketName": "export-bucket",
                    "cloudProvider": "AWS",
                    "iamRoleId": "668c5f0ed436263134491592"
                  }
                },
                "Azure": {
                  "description": "Azure",
                  "value": {
                    "bucketName": "export-container",
                    "cloudProvider": "AZURE",
                    "roleId": "668c5f0ed436263134491592",
                    "serviceUrl": "https://examplestorageaccount.blob.core.windows.net",
                    "tenantId": "4297fc77-1592-4de8-a6d5-a8c32401df87"
                  }
                }
              },
              "x-xgen-version": "2024-05-30"
            },
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/DiskBackupSnapshotAWSExportBucket"
              },
              "x-xgen-version": "2023-01-01",
              "x-sunset": "2025-05-30"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2024-05-30+json": {
                "schema": {
                  "$ref": "#/components/schemas/DiskBackupSnapshotExportBucket"
                },
                "examples": {
                  "AWS": {
                    "description": "AWS",
                    "value": {
                      "_id": "32b6e34b3d91647abb20e7b8",
                      "bucketName": "export-bucket",
                      "cloudProvider": "AWS",
                      "iamRoleId": "668c5f0ed436263134491592",
                      "links": [
                        {
                          "href": "https://cloud.mongodb.com/api/atlas",
                          "rel": "self"
                        }
                      ]
                    }
                  },
                  "Azure": {
                    "description": "Azure",
                    "value": {
                      "_id": "32b6e34b3d91647abb20e7b8",
                      "bucketName": "export-container",
                      "cloudProvider": "AZURE",
                      "roleId": "668c5f0ed436263134491592",
                      "serviceUrl": "https://examplestorageaccount.blob.core.windows.net",
                      "tenantId": "4297fc77-1592-4de8-a6d5-a8c32401df87",
                      "links": [
                        {
                          "href": "https://cloud.mongodb.com/api/atlas",
                          "rel": "self"
                        }
                      ]
                    }
                  }
                },
                "x-xgen-version": "2024-05-30"
              },
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DiskBackupSnapshotAWSExportBucket"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2025-05-30"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/schedule": {
      "get": {
        "tags": ["Cloud Backups"],
        "summary": "Return One Cloud Backup Schedule",
        "description": "Returns the cloud backup schedule for the specified cluster within the specified project. This schedule defines when MongoDB Cloud takes scheduled snapshots and how long it stores those snapshots. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getBackupSchedule",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2025-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DiskBackupSnapshotSchedule20250101"
                },
                "x-xgen-hidden-env": {
                  "envs": "qa,stage,prod"
                },
                "x-xgen-version": "2025-01-01"
              },
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DiskBackupSnapshotSchedule"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2026-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      },
      "delete": {
        "tags": ["Cloud Backups"],
        "summary": "Remove All Cloud Backup Schedules",
        "description": "Removes all cloud backup schedules for the specified cluster. This schedule defines when MongoDB Cloud takes scheduled snapshots and how long it stores those snapshots. To use this resource, the requesting API Key must have the Project Atlas Admin role.",
        "operationId": "deleteAllBackupSchedules",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2025-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DiskBackupSnapshotSchedule20250101"
                },
                "x-xgen-hidden-env": {
                  "envs": "qa,stage,prod"
                },
                "x-xgen-version": "2025-01-01"
              },
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DiskBackupSnapshotSchedule"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2026-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      },
      "patch": {
        "tags": ["Cloud Backups"],
        "summary": "Update Cloud Backup Schedule for One Cluster",
        "description": "Updates the cloud backup schedule for one cluster within the specified project. This schedule defines when MongoDB Cloud takes scheduled snapshots and how long it stores those snapshots. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "updateBackupSchedule",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updates the cloud backup schedule for one cluster within the specified project.\n\n**Note**: In the request body, provide only the fields that you want to update.",
          "content": {
            "application/vnd.atlas.2025-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/DiskBackupSnapshotSchedule20250101"
              },
              "x-xgen-hidden-env": {
                "envs": "qa,stage,prod"
              }
            },
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/DiskBackupSnapshotSchedule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2025-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DiskBackupSnapshotSchedule20250101"
                },
                "x-xgen-hidden-env": {
                  "envs": "qa,stage,prod"
                },
                "x-xgen-version": "2025-01-01"
              },
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DiskBackupSnapshotSchedule"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2026-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Backup - Atlas"
      }
    },
    "/api/atlas/v2/groups/{groupId}/cloudProviderAccess": {
      "get": {
        "tags": ["Cloud Provider Access"],
        "summary": "Return All Cloud Provider Access Roles",
        "description": "Returns all cloud provider access roles with access to the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "listCloudProviderAccessRoles",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudProviderAccessRoles"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "post": {
        "tags": ["Cloud Provider Access"],
        "summary": "Create One Cloud Provider Access Role",
        "description": "Creates one access role for the specified cloud provider. Some MongoDB Cloud features use these cloud provider access roles for authentication. To use this resource, the requesting API Key must have the Project Owner role.",
        "externalDocs": {
          "description": "Set Up Access to Cloud Providers",
          "url": "https://www.mongodb.com/docs/atlas/security/cloud-provider-access/"
        },
        "operationId": "createCloudProviderAccessRole",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Creates one role for the specified cloud provider.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/CloudProviderAccessRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudProviderAccessRole"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/cloudProviderAccess/{roleId}": {
      "get": {
        "tags": ["Cloud Provider Access"],
        "summary": "Return specified Cloud Provider Access Role",
        "description": "Returns the access role with the specified id and with access to the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "getCloudProviderAccessRole",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the role.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudProviderAccessRole"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "patch": {
        "tags": ["Cloud Provider Access"],
        "summary": "Authorize One Cloud Provider Access Role",
        "description": "Grants access to the specified project for the specified access role. To use this resource, the requesting API Key must have the Project Owner role. This API endpoint is one step in a procedure to create unified access for MongoDB Cloud services.",
        "externalDocs": {
          "description": "Set Up Access to Cloud Providers",
          "url": "https://www.mongodb.com/docs/atlas/security/cloud-provider-access/"
        },
        "operationId": "authorizeCloudProviderAccessRole",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the role.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Grants access to the specified project for the specified access role.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/CloudProviderAccessRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudProviderAccessRole"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/cloudProviderAccess/{cloudProvider}/{roleId}": {
      "delete": {
        "tags": ["Cloud Provider Access"],
        "summary": "Deauthorize One Cloud Provider Access Role",
        "description": "Revokes access to the specified project for the specified access role. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "deauthorizeCloudProviderAccessRole",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "cloudProvider",
            "in": "path",
            "description": "Human-readable label that identifies the cloud provider of the role to deauthorize.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWS"]
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the role.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/provider/regions": {
      "get": {
        "tags": ["Clusters"],
        "summary": "Return All Cloud Provider Regions",
        "description": "Returns the list of regions available for the specified cloud provider at the specified tier. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listCloudProviderRegions",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "providers",
            "in": "query",
            "description": "Cloud providers whose regions to retrieve. When you specify multiple providers, the response can return only tiers and regions that support multi-cloud clusters.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "tier",
            "in": "query",
            "description": "Cluster tier for which to retrieve the regions.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedApiAtlasProviderRegionsView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/encryptionAtRest": {
      "get": {
        "tags": ["Encryption at Rest using Customer Key Management"],
        "summary": "Return One Configuration for Encryption at Rest using Customer-Managed Keys for One Project",
        "description": "Returns the configuration for encryption at rest using the keys you manage through your cloud provider. MongoDB Cloud encrypts all storage even if you don't use your own key management. This resource requires the requesting API Key to have the Project Owner role.\n\n**LIMITED TO M10 OR GREATER:** MongoDB Cloud limits this feature to dedicated cluster tiers of M10 and greater.",
        "operationId": "getEncryptionAtRest",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/EncryptionAtRest"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "patch": {
        "tags": ["Encryption at Rest using Customer Key Management"],
        "summary": "Update Configuration for Encryption at Rest using Customer-Managed Keys for One Project",
        "description": "Updates the configuration for encryption at rest using the keys you manage through your cloud provider. MongoDB Cloud encrypts all storage even if you don't use your own key management. This resource requires the requesting API Key to have the Project Owner role. This feature isn't available for `M0` free clusters, `M2`, `M5`, or serverless clusters.\n\n After you configure at least one Encryption at Rest using a Customer Key Management provider for the MongoDB Cloud project, Project Owners can enable Encryption at Rest using Customer Key Management for each MongoDB Cloud cluster for which they require encryption. The Encryption at Rest using Customer Key Management provider doesn't have to match the cluster cloud service provider. MongoDB Cloud doesn't automatically rotate user-managed encryption keys. Defer to your preferred Encryption at Rest using Customer Key Management provider's documentation and guidance for best practices on key rotation. MongoDB Cloud automatically creates a 90-day key rotation alert when you configure Encryption at Rest using Customer Key Management using your Key Management in an MongoDB Cloud project. MongoDB Cloud encrypts all storage whether or not you use your own key management.",
        "operationId": "updateEncryptionAtRest",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ],
        "requestBody": {
          "description": "Required parameters depend on whether someone has enabled Encryption at Rest using Customer Key Management:\n\nIf you have enabled Encryption at Rest using Customer Key Management (CMK), Atlas requires all of the parameters for the desired encryption provider.\n\n- To use AWS Key Management Service (KMS), MongoDB Cloud requires all the fields in the **awsKms** object.\n- To use Azure Key Vault, MongoDB Cloud requires all the fields in the **azureKeyVault** object.\n- To use Google Cloud Key Management Service (KMS), MongoDB Cloud requires all the fields in the **googleCloudKms** object.\n\nIf you enabled Encryption at Rest using Customer Key  Management, administrators can pass only the changed fields for the **awsKms**, **azureKeyVault**, or **googleCloudKms** object to update the configuration to this endpoint.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/EncryptionAtRest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/EncryptionAtRest"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/tenant/restore": {
      "post": {
        "tags": ["Shared-Tier Restore Jobs"],
        "summary": "Create One Restore Job from One M2 or M5 Cluster",
        "description": "Restores the specified cluster. MongoDB Cloud limits which clusters can be the target clusters of a restore. The target cluster can't use encryption at rest, run a major release MongoDB version different than the snapshot, or receive client requests during restores. MongoDB Cloud deletes all existing data on the target cluster prior to the restore operation. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "createSharedClusterBackupRestoreJob",
        "parameters": [
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "The restore job details.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/TenantRestore"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantRestore"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/tenant/download": {
      "post": {
        "tags": ["Shared-Tier Snapshots"],
        "summary": "Download One M2 or M5 Cluster Snapshot",
        "description": "Requests one snapshot for the specified shared cluster. This resource returns a `snapshotURL` that you can use to download the snapshot. This `snapshotURL` remains active for four hours after you make the request. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "downloadSharedClusterBackup",
        "parameters": [
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Snapshot to be downloaded.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/TenantRestore"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantRestore"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/tenant/restores/{restoreId}": {
      "get": {
        "tags": ["Shared-Tier Restore Jobs"],
        "summary": "Return One Restore Job for One M2 or M5 Cluster",
        "description": "Returns the specified restore job. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getSharedClusterBackupRestoreJob",
        "parameters": [
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "restoreId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the restore job to return.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantRestore"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/tenant/restores": {
      "get": {
        "tags": ["Shared-Tier Restore Jobs"],
        "summary": "Return All Restore Jobs for One M2 or M5 Cluster",
        "description": "Returns all restore jobs for the specified M2 or M5 cluster. Restore jobs restore a cluster using a snapshot. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listSharedClusterBackupRestoreJobs",
        "parameters": [
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTenantRestoreView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/tenant/snapshots/{snapshotId}": {
      "get": {
        "tags": ["Shared-Tier Snapshots"],
        "summary": "Return One Snapshot for One M2 or M5 Cluster",
        "description": "Returns details for one snapshot for the specified shared cluster. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getSharedClusterBackup",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "snapshotId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the desired snapshot.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupTenantSnapshot"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/tenant/snapshots": {
      "get": {
        "tags": ["Shared-Tier Snapshots"],
        "summary": "Return All Snapshots for One M2 or M5 Cluster",
        "description": "Returns details for all snapshots for the specified shared cluster. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listSharedClusterBackups",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTenantSnapshotView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/dataFederation": {
      "get": {
        "tags": ["Data Federation"],
        "summary": "Return All Federated Database Instances in One Project",
        "description": "Returns the details of all federated database instances in the specified project. To use this resource, the requesting API Key must have the Project Read Only or higher role.",
        "operationId": "listFederatedDatabases",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of Federated Database Instances to return.",
            "schema": {
              "type": "string",
              "default": "USER",
              "enum": ["USER", "ONLINE_ARCHIVE"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataLakeTenant"
                  }
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Extended I"
      },
      "post": {
        "tags": ["Data Federation"],
        "summary": "Create One Federated Database Instance in One Project",
        "description": "Creates one federated database instance in the specified project. To use this resource, the requesting API Key must have the Project Owner or Project Charts Admin roles.",
        "operationId": "createFederatedDatabase",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "skipRoleValidation",
            "in": "query",
            "description": "Flag that indicates whether this request should check if the requesting IAM role can read from the S3 bucket. AWS checks if the role can list the objects in the bucket before writing to it. Some IAM roles only need write permissions. This flag allows you to skip that check.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "description": "Details to create one federated database instance in the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/DataLakeTenant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataLakeTenant"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Extended I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/dataFederation/{tenantName}": {
      "get": {
        "tags": ["Data Federation"],
        "summary": "Return One Federated Database Instance in One Project",
        "description": "Returns the details of one federated database instance within the specified project. To use this resource, the requesting API Key must have the Project Read Only or Project Charts Admin roles.",
        "operationId": "getFederatedDatabase",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "tenantName",
            "in": "path",
            "description": "Human-readable label that identifies the Federated Database to return.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataLakeTenant"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Extended I"
      },
      "delete": {
        "tags": ["Data Federation"],
        "summary": "Remove One Federated Database Instance from One Project",
        "description": "Removes one federated database instance from the specified project. To use this resource, the requesting API Key must have the Project Owner or Project Charts Admin roles.",
        "operationId": "deleteFederatedDatabase",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "tenantName",
            "in": "path",
            "description": "Human-readable label that identifies the federated database instance to remove.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Extended I"
      },
      "patch": {
        "tags": ["Data Federation"],
        "summary": "Update One Federated Database Instance in One Project",
        "description": "Updates the details of one federated database instance in the specified project. To use this resource, the requesting API Key must have the Project Owner or higher role.",
        "operationId": "updateFederatedDatabase",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "tenantName",
            "in": "path",
            "description": "Human-readable label that identifies the federated database instance to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipRoleValidation",
            "in": "query",
            "description": "Flag that indicates whether this request should check if the requesting IAM role can read from the S3 bucket. AWS checks if the role can list the objects in the bucket before writing to it. Some IAM roles only need write permissions. This flag allows you to skip that check.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "description": "Details of one Federated Database to update in the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/DataLakeTenant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataLakeTenant"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Extended I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/dataFederation/{tenantName}/limits/{limitName}": {
      "get": {
        "tags": ["Data Federation"],
        "summary": "Return One Federated Database Instance Query Limit for One Project",
        "description": "Returns the details of one query limit for the specified federated database instance in the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "returnFederatedDatabaseQueryLimit",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "tenantName",
            "in": "path",
            "description": "Human-readable label that identifies the federated database instance to which the query limit applies.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitName",
            "in": "path",
            "description": "Human-readable label that identifies this data federation instance limit.\n\n| Limit Name | Description | Default |\n| --- | --- | --- |\n| bytesProcessed.query | Limit on the number of bytes processed during a single data federation query | N/A |\n| bytesProcessed.daily | Limit on the number of bytes processed for the data federation instance for the current day | N/A |\n| bytesProcessed.weekly | Limit on the number of bytes processed for the data federation instance for the current week | N/A |\n| bytesProcessed.monthly | Limit on the number of bytes processed for the data federation instance for the current month | N/A |\n",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "bytesProcessed.query",
                "bytesProcessed.daily",
                "bytesProcessed.weekly",
                "bytesProcessed.monthly"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataFederationTenantQueryLimit"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Extended I"
      },
      "delete": {
        "tags": ["Data Federation"],
        "summary": "Delete One Query Limit For One Federated Database Instance",
        "description": "Deletes one query limit for one federated database instance. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "deleteOneDataFederationInstanceQueryLimit",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "tenantName",
            "in": "path",
            "description": "Human-readable label that identifies the federated database instance to which the query limit applies.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitName",
            "in": "path",
            "description": "Human-readable label that identifies this data federation instance limit.\n\n| Limit Name | Description | Default |\n| --- | --- | --- |\n| bytesProcessed.query | Limit on the number of bytes processed during a single data federation query | N/A |\n| bytesProcessed.daily | Limit on the number of bytes processed for the data federation instance for the current day | N/A |\n| bytesProcessed.weekly | Limit on the number of bytes processed for the data federation instance for the current week | N/A |\n| bytesProcessed.monthly | Limit on the number of bytes processed for the data federation instance for the current month | N/A |\n",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "bytesProcessed.query",
                "bytesProcessed.daily",
                "bytesProcessed.weekly",
                "bytesProcessed.monthly"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Extended I"
      },
      "patch": {
        "tags": ["Data Federation"],
        "summary": "Configure One Query Limit for One Federated Database Instance",
        "description": "Creates or updates one query limit for one federated database instance. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "createOneDataFederationQueryLimit",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "tenantName",
            "in": "path",
            "description": "Human-readable label that identifies the federated database instance to which the query limit applies.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitName",
            "in": "path",
            "description": "Human-readable label that identifies this data federation instance limit.\n\n| Limit Name | Description | Default |\n| --- | --- | --- |\n| bytesProcessed.query | Limit on the number of bytes processed during a single data federation query | N/A |\n| bytesProcessed.daily | Limit on the number of bytes processed for the data federation instance for the current day | N/A |\n| bytesProcessed.weekly | Limit on the number of bytes processed for the data federation instance for the current week | N/A |\n| bytesProcessed.monthly | Limit on the number of bytes processed for the data federation instance for the current month | N/A |\n",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "bytesProcessed.query",
                "bytesProcessed.daily",
                "bytesProcessed.weekly",
                "bytesProcessed.monthly"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Creates or updates one query limit for one federated database instance.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/DataFederationTenantQueryLimit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataFederationTenantQueryLimit"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Extended I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/dataFederation/{tenantName}/limits": {
      "get": {
        "tags": ["Data Federation"],
        "summary": "Return All Query Limits for One Federated Database Instance",
        "description": "Returns query limits for a federated databases instance in the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "returnFederatedDatabaseQueryLimits",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "tenantName",
            "in": "path",
            "description": "Human-readable label that identifies the federated database instance for which you want to retrieve query limits.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataFederationTenantQueryLimit"
                  }
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Extended I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/dataFederation/{tenantName}/queryLogs.gz": {
      "get": {
        "tags": ["Data Federation"],
        "summary": "Download Query Logs for One Federated Database Instance",
        "description": "Downloads the query logs for the specified federated database instance. To use this resource, the requesting API Key must have the Project Owner or Project Data Access Read Write roles. The API does not support direct calls with the json response schema. You must request a gzip response schema using an accept header of the format: \"Accept: application/vnd.atlas.YYYY-MM-DD+gzip\".",
        "operationId": "downloadFederatedDatabaseQueryLogs",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Timestamp that specifies the end point for the range of log messages to download.  MongoDB Cloud expresses this timestamp in the number of seconds that have elapsed since the UNIX epoch.",
            "schema": {
              "pattern": "1199145600",
              "type": "integer",
              "format": "int64",
              "example": 1636481348
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Timestamp that specifies the starting point for the range of log messages to download. MongoDB Cloud expresses this timestamp in the number of seconds that have elapsed since the UNIX epoch.",
            "schema": {
              "pattern": "1199145600",
              "type": "integer",
              "format": "int64",
              "example": 1636466948
            }
          },
          {
            "name": "tenantName",
            "in": "path",
            "description": "Human-readable label that identifies the federated database instance for which you want to download query logs.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+gzip": {
                "schema": {
                  "type": "string",
                  "description": "Compressed archive labeled `queryLogs.gz` downloads",
                  "format": "binary"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Extended I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/pipelines": {
      "get": {
        "tags": ["Data Lake Pipelines"],
        "summary": "Return All Data Lake Pipelines from One Project",
        "description": "Returns a list of Data Lake Pipelines. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listPipelines",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataLakeIngestionPipeline"
                  }
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Extended I"
      },
      "post": {
        "tags": ["Data Lake Pipelines"],
        "summary": "Create One Data Lake Pipeline",
        "description": "Creates one Data Lake Pipeline.",
        "operationId": "createPipeline",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ],
        "requestBody": {
          "description": "Creates one Data Lake Pipeline.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/DataLakeIngestionPipeline"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataLakeIngestionPipeline"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Extended I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}": {
      "get": {
        "tags": ["Data Lake Pipelines"],
        "summary": "Return One Data Lake Pipeline",
        "description": "Returns the details of one Data Lake Pipeline within the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getPipeline",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "Human-readable label that identifies the Data Lake Pipeline.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[^/\\\\ \"$]{1,64}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataLakeIngestionPipeline"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Extended I"
      },
      "delete": {
        "tags": ["Data Lake Pipelines"],
        "summary": "Remove One Data Lake Pipeline",
        "description": "Removes one Data Lake Pipeline.",
        "operationId": "deletePipeline",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "Human-readable label that identifies the Data Lake Pipeline.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[^/\\\\ \"$]{1,64}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Extended I"
      },
      "patch": {
        "tags": ["Data Lake Pipelines"],
        "summary": "Update One Data Lake Pipeline",
        "description": "Updates one Data Lake Pipeline.",
        "operationId": "updatePipeline",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "Human-readable label that identifies the Data Lake Pipeline.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[^/\\\\ \"$]{1,64}$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updates one Data Lake Pipeline.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/DataLakeIngestionPipeline"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataLakeIngestionPipeline"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Extended I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/runs/{pipelineRunId}": {
      "get": {
        "tags": ["Data Lake Pipelines"],
        "summary": "Return One Data Lake Pipeline Run",
        "description": "Returns the details of one Data Lake Pipeline run within the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getPipelineRun",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "Human-readable label that identifies the Data Lake Pipeline.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[^/\\\\ \"$]{1,64}$",
              "type": "string"
            }
          },
          {
            "name": "pipelineRunId",
            "in": "path",
            "description": "Unique 24-hexadecimal character string that identifies a Data Lake Pipeline run.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionPipelineRun"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Extended I"
      },
      "delete": {
        "tags": ["Data Lake Pipelines"],
        "summary": "Delete Pipeline Run Dataset",
        "description": "Deletes dataset that Atlas generated during the specified pipeline run.",
        "operationId": "deletePipelineRunDataset",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "Human-readable label that identifies the Data Lake Pipeline.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[^/\\\\ \"$]{1,64}$",
              "type": "string"
            }
          },
          {
            "name": "pipelineRunId",
            "in": "path",
            "description": "Unique 24-hexadecimal character string that identifies a Data Lake Pipeline run.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestAccepted"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Extended I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/availableSchedules": {
      "get": {
        "tags": ["Data Lake Pipelines"],
        "summary": "Return Available Ingestion Schedules for One Data Lake Pipeline",
        "description": "Returns a list of backup schedule policy items that you can use as a Data Lake Pipeline source. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listPipelineSchedules",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "Human-readable label that identifies the Data Lake Pipeline.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[^/\\\\ \"$]{1,64}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiskBackupApiPolicyItem"
                  }
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Extended I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/availableSnapshots": {
      "get": {
        "tags": ["Data Lake Pipelines"],
        "summary": "Return Available Backup Snapshots for One Data Lake Pipeline",
        "description": "Returns a list of backup snapshots that you can use to trigger an on demand pipeline run. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listPipelineSnapshots",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "completedAfter",
            "in": "query",
            "description": "Date and time after which MongoDB Cloud created the snapshot. If specified, MongoDB Cloud returns available backup snapshots created after this time and date only. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2022-01-01T00:00:00.000Z"
            }
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "Human-readable label that identifies the Data Lake Pipeline.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[^/\\\\ \"$]{1,64}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBackupSnapshotView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Extended I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/runs": {
      "get": {
        "tags": ["Data Lake Pipelines"],
        "summary": "Return All Data Lake Pipeline Runs from One Project",
        "description": "Returns a list of past Data Lake Pipeline runs. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listPipelineRuns",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "If specified, Atlas returns only Data Lake Pipeline runs initiated before this time and date.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2022-01-01T00:00:00.000Z"
            }
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "Human-readable label that identifies the Data Lake Pipeline.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[^/\\\\ \"$]{1,64}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedPipelineRunView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Extended I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/pause": {
      "post": {
        "tags": ["Data Lake Pipelines"],
        "summary": "Pause One Data Lake Pipeline",
        "description": "Pauses ingestion for a Data Lake Pipeline within the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "pausePipeline",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "Human-readable label that identifies the Data Lake Pipeline.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[^/\\\\ \"$]{1,64}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataLakeIngestionPipeline"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Extended I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/resume": {
      "post": {
        "tags": ["Data Lake Pipelines"],
        "summary": "Resume One Data Lake Pipeline",
        "description": "Resumes ingestion for a Data Lake Pipeline within the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "resumePipeline",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "Human-readable label that identifies the Data Lake Pipeline.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[^/\\\\ \"$]{1,64}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataLakeIngestionPipeline"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Extended I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/trigger": {
      "post": {
        "tags": ["Data Lake Pipelines"],
        "summary": "Trigger on demand snapshot ingestion",
        "description": "Triggers a Data Lake Pipeline ingestion of a specified snapshot.",
        "operationId": "triggerSnapshotIngestion",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "Human-readable label that identifies the Data Lake Pipeline.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[^/\\\\ \"$]{1,64}$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Triggers a single ingestion run of a snapshot.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/TriggerIngestionPipelineRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionPipelineRun"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Extended I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/fts/indexes": {
      "post": {
        "tags": ["Atlas Search"],
        "summary": "Create One Atlas Search Index",
        "description": "Creates one Atlas Search index on the specified collection. Atlas Search indexes define the fields on which to create the index and the analyzers to use when creating the index. Only clusters running MongoDB v4.2 or later can use Atlas Search. To use this resource, the requesting API Key must have the Project Data Access Admin role.",
        "externalDocs": {
          "description": "Atlas Search Indexes",
          "url": "https://dochub.mongodb.org/core/index-definitions-fts"
        },
        "operationId": "createAtlasSearchIndexDeprecated",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster that contains the collection on which to create an Atlas Search index.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Creates one Atlas Search index on the specified collection.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterSearchIndex"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterSearchIndex"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2025-06-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "deprecated": true,
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Search Web Platform"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/fts/indexes/{indexId}": {
      "get": {
        "tags": ["Atlas Search"],
        "summary": "Return One Atlas Search Index",
        "description": "Returns one Atlas Search index in the specified project. You identify this index using its unique ID. Atlas Search index contains the indexed fields and the analyzers used to create the index. To use this resource, the requesting API Key must have the Project Data Access Read Write role.",
        "externalDocs": {
          "description": "Atlas Search Indexes",
          "url": "https://dochub.mongodb.org/core/index-definitions-fts"
        },
        "operationId": "getAtlasSearchIndexDeprecated",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster that contains the collection with one or more Atlas Search indexes.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "indexId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the Application Search [index](https://dochub.mongodb.org/core/index-definitions-fts). Use the [Get All Application Search Indexes for a Collection API](https://docs.atlas.mongodb.com/reference/api/fts-indexes-get-all/) endpoint to find the IDs of all Application Search indexes.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterSearchIndex"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2025-06-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "deprecated": true,
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Search Web Platform"
      },
      "delete": {
        "tags": ["Atlas Search"],
        "summary": "Remove One Atlas Search Index",
        "description": "Removes one Atlas Search index that you identified with its unique ID. To use this resource, the requesting API Key must have the Project Data Access Admin role.",
        "externalDocs": {
          "description": "Atlas Search Indexes",
          "url": "https://dochub.mongodb.org/core/index-definitions-fts"
        },
        "operationId": "deleteAtlasSearchIndexDeprecated",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster that contains the database and collection with one or more Application Search indexes.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "indexId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the Atlas Search index. Use the [Get All Atlas Search Indexes for a Collection API](https://docs.atlas.mongodb.com/reference/api/fts-indexes-get-all/) endpoint to find the IDs of all Atlas Search indexes.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2025-06-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "deprecated": true,
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Search Web Platform"
      },
      "patch": {
        "tags": ["Atlas Search"],
        "summary": "Update One Atlas Search Index",
        "description": "Updates one Atlas Search index that you identified with its unique ID. Atlas Search indexes define the fields on which to create the index and the analyzers to use when creating the index. To use this resource, the requesting API Key must have the Project Data Access Admin role.",
        "externalDocs": {
          "description": "Atlas Search Indexes",
          "url": "https://dochub.mongodb.org/core/index-definitions-fts"
        },
        "operationId": "updateAtlasSearchIndexDeprecated",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster that contains the collection whose Atlas Search index to update.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "indexId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the Atlas Search [index](https://dochub.mongodb.org/core/index-definitions-fts). Use the [Get All Atlas Search Indexes for a Collection API](https://docs.atlas.mongodb.com/reference/api/fts-indexes-get-all/) endpoint to find the IDs of all Atlas Search indexes.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Details to update on the Atlas Search index.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterSearchIndex"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterSearchIndex"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2025-06-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "deprecated": true,
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Search Web Platform"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/fts/indexes/{databaseName}/{collectionName}": {
      "get": {
        "tags": ["Atlas Search"],
        "summary": "Return All Atlas Search Indexes for One Collection",
        "description": "Returns all Atlas Search indexes on the specified collection. Atlas Search indexes contain the indexed fields and the analyzers used to create the indexes. To use this resource, the requesting API Key must have the Project Data Access Read Write role.",
        "externalDocs": {
          "description": "Atlas Search Indexes",
          "url": "https://dochub.mongodb.org/core/index-definitions-fts"
        },
        "operationId": "listAtlasSearchIndexesDeprecated",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster that contains the collection with one or more Atlas Search indexes.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "collectionName",
            "in": "path",
            "description": "Name of the collection that contains one or more Atlas Search indexes.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Human-readable label that identifies the database that contains the collection with one or more Atlas Search indexes.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClusterSearchIndex"
                  }
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2025-06-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "deprecated": true,
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Search Web Platform"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/search/deployment": {
      "get": {
        "tags": ["Atlas Search"],
        "summary": "Return Search Nodes",
        "description": "Return the Search Nodes for the specified cluster.",
        "operationId": "getAtlasSearchDeployment",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Label that identifies the cluster to return the Search Nodes for.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSearchDeploymentResponseView"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2026-03-01"
              },
              "application/vnd.atlas.2024-05-30+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSearchDeploymentResponseView"
                },
                "x-xgen-version": "2024-05-30"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Search Web Platform"
      },
      "post": {
        "tags": ["Atlas Search"],
        "summary": "Create Search Nodes",
        "description": "Creates Search Nodes for the specified cluster.",
        "operationId": "createAtlasSearchDeployment",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Label that identifies the cluster to create Search Nodes for.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Creates Search Nodes for the specified cluster.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiSearchDeploymentRequestView"
              }
            },
            "application/vnd.atlas.2024-05-30+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiSearchDeploymentRequestView"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSearchDeploymentResponseView"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2026-03-01"
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/vnd.atlas.2024-05-30+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSearchDeploymentResponseView"
                },
                "x-xgen-version": "2024-05-30"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Search Web Platform"
      },
      "delete": {
        "tags": ["Atlas Search"],
        "summary": "Delete Search Nodes",
        "description": "Deletes the Search Nodes for the specified cluster.",
        "operationId": "deleteAtlasSearchDeployment",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Label that identifies the cluster to delete.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2026-03-01"
              }
            }
          },
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2024-05-30+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2024-05-30"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Search Web Platform"
      },
      "patch": {
        "tags": ["Atlas Search"],
        "summary": "Update Search Nodes",
        "description": "Updates the Search Nodes for the specified cluster.",
        "operationId": "updateAtlasSearchDeployment",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Label that identifies the cluster to update the Search Nodes for.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updates the Search Nodes for the specified cluster.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiSearchDeploymentRequestView"
              }
            },
            "application/vnd.atlas.2024-05-30+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiSearchDeploymentRequestView"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSearchDeploymentResponseView"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2026-03-01"
              },
              "application/vnd.atlas.2024-05-30+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSearchDeploymentResponseView"
                },
                "x-xgen-version": "2024-05-30"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Search Web Platform"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/search/indexes": {
      "get": {
        "tags": ["Atlas Search"],
        "summary": "Return All Atlas Search Indexes for One Cluster",
        "description": "Returns all Atlas Search indexes on the specified cluster. Atlas Search indexes contain the indexed fields and the analyzers used to create the indexes. To use this resource, the requesting API Key must have the Project Data Access Read Write role.",
        "externalDocs": {
          "description": "Atlas Search Indexes",
          "url": "https://dochub.mongodb.org/core/index-definitions-fts"
        },
        "operationId": "listAtlasSearchIndexesCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster that contains the collection with one or more Atlas Search indexes.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2024-05-30+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchIndexResponse"
                  }
                },
                "x-xgen-version": "2024-05-30"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          },
          "503": {
            "description": "Service Unavailable.",
            "content": {
              "application/vnd.atlas.2024-05-30+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Search Web Platform"
      },
      "post": {
        "tags": ["Atlas Search"],
        "summary": "Create One Atlas Search Index",
        "description": "Creates one Atlas Search index on the specified collection. Atlas Search indexes define the fields on which to create the index and the analyzers to use when creating the index. Only clusters running MongoDB v4.2 or later can use Atlas Search. To use this resource, the requesting API Key must have the Project Data Access Admin role.",
        "externalDocs": {
          "description": "Atlas Search Indexes",
          "url": "https://dochub.mongodb.org/core/index-definitions-fts"
        },
        "operationId": "createAtlasSearchIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster that contains the collection on which to create an Atlas Search index.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Creates one Atlas Search index on the specified collection.",
          "content": {
            "application/vnd.atlas.2024-05-30+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchIndexCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/vnd.atlas.2024-05-30+json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchIndexResponse"
                },
                "x-xgen-version": "2024-05-30"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Search Web Platform"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/search/indexes/{indexId}": {
      "get": {
        "tags": ["Atlas Search"],
        "summary": "Return One Atlas Search Index by ID",
        "description": "Returns one Atlas Search index in the specified project. You identify this index using its unique ID. Atlas Search index contains the indexed fields and the analyzers used to create the index. To use this resource, the requesting API Key must have the Project Data Access Read Write role.",
        "externalDocs": {
          "description": "Atlas Search Indexes",
          "url": "https://dochub.mongodb.org/core/index-definitions-fts"
        },
        "operationId": "getAtlasSearchIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster that contains the collection with one or more Atlas Search indexes.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "indexId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the Application Search [index](https://dochub.mongodb.org/core/index-definitions-fts). Use the [Get All Application Search Indexes for a Collection API](https://docs.atlas.mongodb.com/reference/api/fts-indexes-get-all/) endpoint to find the IDs of all Application Search indexes.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2024-05-30+json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchIndexResponse"
                },
                "x-xgen-version": "2024-05-30"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          },
          "503": {
            "description": "Service Unavailable.",
            "content": {
              "application/vnd.atlas.2024-05-30+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Search Web Platform"
      },
      "delete": {
        "tags": ["Atlas Search"],
        "summary": "Remove One Atlas Search Index by Id",
        "description": "Removes one Atlas Search index that you identified with its unique ID. To use this resource, the requesting API key must have the Project Data Access Admin role. This deletion is eventually consistent.",
        "externalDocs": {
          "description": "Atlas Search Indexes",
          "url": "https://dochub.mongodb.org/core/index-definitions-fts"
        },
        "operationId": "deleteAtlasSearchIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster that contains the database and collection with one or more Application Search indexes.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "indexId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the Atlas Search index. Use the [Get All Atlas Search Indexes for a Collection API](https://docs.atlas.mongodb.com/reference/api/fts-indexes-get-all/) endpoint to find the IDs of all Atlas Search indexes.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2024-05-30+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2024-05-30"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Search Web Platform"
      },
      "patch": {
        "tags": ["Atlas Search"],
        "summary": "Update One Atlas Search Index By ID",
        "description": "Updates one Atlas Search index that you identified with its unique ID. Atlas Search indexes define the fields on which to create the index and the analyzers to use when creating the index. To use this resource, the requesting API Key must have the Project Data Access Admin role.",
        "externalDocs": {
          "description": "Atlas Search Indexes",
          "url": "https://dochub.mongodb.org/core/index-definitions-fts"
        },
        "operationId": "updateAtlasSearchIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster that contains the collection whose Atlas Search index you want to update.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "indexId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the Atlas Search [index](https://dochub.mongodb.org/core/index-definitions-fts). Use the [Get All Atlas Search Indexes for a Collection API](https://docs.atlas.mongodb.com/reference/api/fts-indexes-get-all/) endpoint to find the IDs of all Atlas Search indexes.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Details to update on the Atlas Search index.",
          "content": {
            "application/vnd.atlas.2024-05-30+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchIndexUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2024-05-30+json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchIndexResponse"
                },
                "x-xgen-version": "2024-05-30"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Search Web Platform"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/search/indexes/{databaseName}/{collectionName}/{indexName}": {
      "get": {
        "tags": ["Atlas Search"],
        "summary": "Return One Atlas Search Index by Name",
        "description": "Returns one Atlas Search index in the specified project. You identify this index using its database, collection and name. Atlas Search index contains the indexed fields and the analyzers used to create the index. To use this resource, the requesting API Key must have the Project Data Access Read Write role.",
        "externalDocs": {
          "description": "Atlas Search Indexes",
          "url": "https://dochub.mongodb.org/core/index-definitions-fts"
        },
        "operationId": "getAtlasSearchIndexByName",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster that contains the collection with one or more Atlas Search indexes.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "collectionName",
            "in": "path",
            "description": "Name of the collection that contains one or more Atlas Search indexes.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Label that identifies the database that contains the collection with one or more Atlas Search indexes.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "indexName",
            "in": "path",
            "description": "Name of the Atlas Search index to return.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2024-05-30+json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchIndexResponse"
                },
                "x-xgen-version": "2024-05-30"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Search Web Platform"
      },
      "delete": {
        "tags": ["Atlas Search"],
        "summary": "Remove One Atlas Search Index by Name",
        "description": "Removes one Atlas Search index that you identified with its database, collection, and name. To use this resource, the requesting API key must have the Project Data Access Admin role. This deletion is eventually consistent.",
        "externalDocs": {
          "description": "Atlas Search Indexes",
          "url": "https://dochub.mongodb.org/core/index-definitions-fts"
        },
        "operationId": "deleteAtlasSearchIndexByName",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster that contains the database and collection with one or more Application Search indexes.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "collectionName",
            "in": "path",
            "description": "Name of the collection that contains one or more Atlas Search indexes.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Label that identifies the database that contains the collection with one or more Atlas Search indexes.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "indexName",
            "in": "path",
            "description": "Name of the Atlas Search index to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2024-05-30+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2024-05-30"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Search Web Platform"
      },
      "patch": {
        "tags": ["Atlas Search"],
        "summary": "Update One Atlas Search Index By Name",
        "description": "Updates one Atlas Search index that you identified with its database, collection name, and index name. Atlas Search indexes define the fields on which to create the index and the analyzers to use when creating the index. To use this resource, the requesting API Key must have the Project Data Access Admin role.",
        "externalDocs": {
          "description": "Atlas Search Indexes",
          "url": "https://dochub.mongodb.org/core/index-definitions-fts"
        },
        "operationId": "updateAtlasSearchIndexByName",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster that contains the collection whose Atlas Search index you want to update.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "collectionName",
            "in": "path",
            "description": "Name of the collection that contains one or more Atlas Search indexes.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Label that identifies the database that contains the collection with one or more Atlas Search indexes.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "indexName",
            "in": "path",
            "description": "Name of the Atlas Search index to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Details to update the Atlas Search index with.",
          "content": {
            "application/vnd.atlas.2024-05-30+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchIndexUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2024-05-30+json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchIndexResponse"
                },
                "x-xgen-version": "2024-05-30"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Search Web Platform"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/search/indexes/{databaseName}/{collectionName}": {
      "get": {
        "tags": ["Atlas Search"],
        "summary": "Return All Atlas Search Indexes for One Collection",
        "description": "Returns all Atlas Search indexes on the specified collection. Atlas Search indexes contain the indexed fields and the analyzers used to create the indexes. To use this resource, the requesting API Key must have the Project Data Access Read Write role.",
        "externalDocs": {
          "description": "Atlas Search Indexes",
          "url": "https://dochub.mongodb.org/core/index-definitions-fts"
        },
        "operationId": "listAtlasSearchIndexes",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster that contains the collection with one or more Atlas Search indexes.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "collectionName",
            "in": "path",
            "description": "Name of the collection that contains one or more Atlas Search indexes.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Label that identifies the database that contains the collection with one or more Atlas Search indexes.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2024-05-30+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchIndexResponse"
                  }
                },
                "x-xgen-version": "2024-05-30"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          },
          "503": {
            "description": "Service Unavailable.",
            "content": {
              "application/vnd.atlas.2024-05-30+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Search Web Platform"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/index": {
      "post": {
        "tags": ["Rolling Index"],
        "summary": "Create One Rolling Index",
        "description": "Creates an index on the cluster identified by its name in a rolling manner. Creating the index in this way allows index builds on one replica set member as a standalone at a time, starting with the secondary members. Creating indexes in this way requires at least one replica set election. To use this resource, the requesting API Key must have the Project Data Access Admin role.",
        "externalDocs": {
          "description": "Rolling Index Builds on Replica Sets",
          "url": "https://docs.mongodb.com/manual/tutorial/build-indexes-on-replica-sets/"
        },
        "operationId": "createRollingIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster on which MongoDB Cloud creates an index.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Rolling index to create on the specified cluster.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/DatabaseRollingIndexRequest"
              },
              "examples": {
                "2dspere Index": {
                  "description": "2dspere Index",
                  "value": {
                    "collation": {
                      "alternate": "non-ignorable",
                      "backwards": false,
                      "caseFirst": "lower",
                      "caseLevel": false,
                      "locale": "af",
                      "maxVariable": "punct",
                      "normalization": false,
                      "numericOrdering": false,
                      "strength": 3
                    },
                    "collection": "accounts",
                    "db": "sample_airbnb",
                    "keys": [
                      {
                        "property_type": "1"
                      }
                    ],
                    "options": {
                      "name": "PartialIndexTest",
                      "partialFilterExpression": {
                        "limit": {
                          "$gt": 900
                        }
                      }
                    }
                  }
                },
                "Sparse Index": {
                  "description": "Sparse Index",
                  "value": {
                    "collation": {
                      "alternate": "non-ignorable",
                      "backwards": false,
                      "caseFirst": "lower",
                      "caseLevel": false,
                      "locale": "af",
                      "maxVariable": "punct",
                      "normalization": false,
                      "numericOrdering": false,
                      "strength": 3
                    },
                    "collection": "accounts",
                    "db": "sample_airbnb",
                    "keys": [
                      {
                        "test_field": "1"
                      }
                    ],
                    "options": {
                      "name": "SparseIndexTest",
                      "sparse": true
                    }
                  }
                },
                "Partial Index": {
                  "description": "Partial Index",
                  "value": {
                    "collation": {
                      "alternate": "non-ignorable",
                      "backwards": false,
                      "caseFirst": "lower",
                      "caseLevel": false,
                      "locale": "af",
                      "maxVariable": "punct",
                      "normalization": false,
                      "numericOrdering": false,
                      "strength": 3
                    },
                    "collection": "accounts",
                    "db": "sample_airbnb",
                    "keys": [
                      {
                        "property_type": "1"
                      }
                    ],
                    "options": {
                      "name": "PartialIndexTest",
                      "partialFilterExpression": {
                        "limit": {
                          "$gt": 900
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel III"
      }
    },
    "/api/atlas/v2/groups/{groupId}/hosts/{processId}/fts/metrics/indexes/{databaseName}/{collectionName}/{indexName}/measurements": {
      "get": {
        "tags": ["Monitoring and Logs"],
        "summary": "Return Atlas Search Metrics for One Index in One Specified Namespace",
        "description": "Returns the Atlas Search metrics data series within the provided time range for one namespace and index name on the specified process. You must have the Project Read Only or higher role to view the Atlas Search metric types.",
        "operationId": "getIndexMetrics",
        "parameters": [
          {
            "$ref": "#/components/parameters/processId"
          },
          {
            "$ref": "#/components/parameters/indexName"
          },
          {
            "$ref": "#/components/parameters/databaseName"
          },
          {
            "$ref": "#/components/parameters/collectionName"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/granularity"
          },
          {
            "$ref": "#/components/parameters/period"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/end"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "name": "metrics",
            "in": "query",
            "description": "List that contains the measurements that MongoDB Atlas reports for the associated data series.",
            "required": true,
            "style": "form",
            "schema": {
              "maxItems": 10,
              "uniqueItems": true,
              "type": "array",
              "description": "List that contains the measurements that MongoDB Atlas reports for the associated data series.",
              "items": {
                "type": "string",
                "enum": [
                  "INDEX_SIZE_ON_DISK",
                  "NUMBER_OF_DELETES",
                  "NUMBER_OF_ERROR_QUERIES",
                  "NUMBER_OF_GETMORE_COMMANDS",
                  "NUMBER_OF_INDEX_FIELDS",
                  "NUMBER_OF_INSERTS",
                  "NUMBER_OF_SUCCESS_QUERIES",
                  "NUMBER_OF_UPDATES",
                  "REPLICATION_LAG",
                  "TOTAL_NUMBER_OF_QUERIES"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementsIndexes"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/hosts/{processId}/fts/metrics": {
      "get": {
        "tags": ["Monitoring and Logs"],
        "summary": "Return All Atlas Search Metric Types for One Process",
        "description": "Returns all Atlas Search metric types available for one process in the specified project. You must have the Project Read Only or higher role to view the Atlas Search metric types.",
        "operationId": "listMetricTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/processId"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudSearchMetrics"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/hosts/{processId}/fts/metrics/indexes/{databaseName}/{collectionName}/measurements": {
      "get": {
        "tags": ["Monitoring and Logs"],
        "summary": "Return All Atlas Search Index Metrics for One Namespace",
        "description": "Returns the Atlas Search index metrics within the specified time range for one namespace in the specified process.",
        "operationId": "listIndexMetrics",
        "parameters": [
          {
            "$ref": "#/components/parameters/processId"
          },
          {
            "$ref": "#/components/parameters/databaseName"
          },
          {
            "$ref": "#/components/parameters/collectionName"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/granularity"
          },
          {
            "$ref": "#/components/parameters/period"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/end"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "name": "metrics",
            "in": "query",
            "description": "List that contains the measurements that MongoDB Atlas reports for the associated data series.",
            "required": true,
            "style": "form",
            "schema": {
              "maxItems": 10,
              "uniqueItems": true,
              "type": "array",
              "description": "List that contains the measurements that MongoDB Atlas reports for the associated data series.",
              "items": {
                "type": "string",
                "enum": [
                  "INDEX_SIZE_ON_DISK",
                  "NUMBER_OF_DELETES",
                  "NUMBER_OF_ERROR_QUERIES",
                  "NUMBER_OF_GETMORE_COMMANDS",
                  "NUMBER_OF_INDEX_FIELDS",
                  "NUMBER_OF_INSERTS",
                  "NUMBER_OF_SUCCESS_QUERIES",
                  "NUMBER_OF_UPDATES",
                  "REPLICATION_LAG",
                  "TOTAL_NUMBER_OF_QUERIES"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementsIndexes"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/hosts/{processId}/fts/metrics/measurements": {
      "get": {
        "tags": ["Monitoring and Logs"],
        "summary": "Return Atlas Search Hardware and Status Metrics",
        "description": "Returns the Atlas Search hardware and status data series within the provided time range for one process in the specified project. You must have the Project Read Only or higher role to view the Atlas Search metric types.",
        "operationId": "getMeasurements",
        "parameters": [
          {
            "$ref": "#/components/parameters/processId"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/granularity"
          },
          {
            "$ref": "#/components/parameters/period"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/end"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "name": "metrics",
            "in": "query",
            "description": "List that contains the metrics that you want MongoDB Atlas to report for the associated data series. If you don't set this parameter, this resource returns all hardware and status metrics for the associated data series.",
            "required": true,
            "style": "form",
            "schema": {
              "maxItems": 10,
              "uniqueItems": true,
              "type": "array",
              "description": "List that contains the metrics that you want MongoDB Atlas to report for the associated data series. If you don't set this parameter, this resource returns all hardware and status metrics for the associated data series.",
              "items": {
                "type": "string",
                "enum": [
                  "FTS_DISK_USAGE",
                  "FTS_PROCESS_CPU_KERNEL",
                  "FTS_PROCESS_CPU_USER",
                  "FTS_PROCESS_NORMALIZED_CPU_KERNEL",
                  "FTS_PROCESS_NORMALIZED_CPU_USER",
                  "FTS_PROCESS_RESIDENT_MEMORY",
                  "FTS_PROCESS_SHARED_MEMORY",
                  "FTS_PROCESS_VIRTUAL_MEMORY",
                  "JVM_CURRENT_MEMORY",
                  "JVM_MAX_MEMORY",
                  "PAGE_FAULTS"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementsNonIndex"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/dbAccessHistory/clusters/{clusterName}": {
      "get": {
        "tags": ["Access Tracking"],
        "summary": "Return Database Access History for One Cluster using Its Cluster Name",
        "description": "Returns the access logs of one cluster identified by the cluster's name. Access logs contain a list of authentication requests made against your cluster. You can't use this feature on tenant-tier clusters (M0, M2, M5). To use this resource, the requesting API Key must have the Project Monitoring Admin role.",
        "externalDocs": {
          "description": "Database Access History",
          "url": "https://docs.atlas.mongodb.com/access-tracking/"
        },
        "operationId": "listAccessLogsByClusterName",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "authResult",
            "in": "query",
            "description": "Flag that indicates whether the response returns the successful authentication attempts only.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "Date and time when to stop retrieving database history. If you specify **end**, you must also specify **start**. This parameter uses UNIX epoch time in milliseconds.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ipAddress",
            "in": "query",
            "description": "One Internet Protocol address that attempted to authenticate with the database.",
            "schema": {
              "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
              "type": "string"
            }
          },
          {
            "name": "nLogs",
            "in": "query",
            "description": "Maximum number of lines from the log to return.",
            "schema": {
              "maximum": 20000,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 20000
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "Date and time when MongoDB Cloud begins retrieving database history. If you specify **start**, you must also specify **end**. This parameter uses UNIX epoch time in milliseconds.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/MongoDBAccessLogsList"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel II"
      }
    },
    "/api/atlas/v2/groups/{groupId}/dbAccessHistory/processes/{hostname}": {
      "get": {
        "tags": ["Access Tracking"],
        "summary": "Return Database Access History for One Cluster using Its Hostname",
        "description": "Returns the access logs of one cluster identified by the cluster's hostname. Access logs contain a list of authentication requests made against your clusters. You can't use this feature on tenant-tier clusters (M0, M2, M5). To use this resource, the requesting API Key must have the Project Monitoring Admin role.",
        "externalDocs": {
          "description": "Database Access History",
          "url": "https://docs.atlas.mongodb.com/access-tracking/"
        },
        "operationId": "listAccessLogsByHostname",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "authResult",
            "in": "query",
            "description": "Flag that indicates whether the response returns the successful authentication attempts only.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "Date and time when to stop retrieving database history. If you specify **end**, you must also specify **start**. This parameter uses UNIX epoch time in milliseconds.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "hostname",
            "in": "path",
            "description": "Fully qualified domain name or IP address of the MongoDB host that stores the log files that you want to download.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ipAddress",
            "in": "query",
            "description": "One Internet Protocol address that attempted to authenticate with the database.",
            "schema": {
              "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
              "type": "string"
            }
          },
          {
            "name": "nLogs",
            "in": "query",
            "description": "Maximum number of lines from the log to return.",
            "schema": {
              "maximum": 20000,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 20000
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "Date and time when MongoDB Cloud begins retrieving database history. If you specify **start**, you must also specify **end**. This parameter uses UNIX epoch time in milliseconds.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/MongoDBAccessLogsList"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel II"
      }
    },
    "/api/atlas/v2/groups/{groupId}/processes/{processId}/performanceAdvisor/namespaces": {
      "get": {
        "tags": ["Performance Advisor"],
        "summary": "Return All Namespaces for One Host",
        "description": "Returns up to 20 namespaces for collections experiencing slow queries on the specified host. If you specify a secondary member of a replica set that hasn't received any database read operations, the endpoint doesn't return any namespaces. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listSlowQueryNamespaces",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "duration",
            "in": "query",
            "description": "Length of time expressed during which the query finds suggested indexes among the managed namespaces in the cluster. This parameter expresses its value in milliseconds.\n\n- If you don't specify the **since** parameter, the endpoint returns data covering the duration before the current time.\n- If you specify neither the **duration** nor **since** parameters, the endpoint returns data from the previous 24 hours.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "processId",
            "in": "path",
            "description": "Combination of host and port that serves the MongoDB process. The host must be the hostname, FQDN, IPv4 address, or IPv6 address of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "required": true,
            "schema": {
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
              "type": "string"
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "Date and time from which the query retrieves the suggested indexes. This parameter expresses its value in the number of milliseconds that have elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time).\n\n- If you don't specify the **duration** parameter, the endpoint returns data covering from the **since** value and the current time.\n- If you specify neither the **duration** nor the **since** parameters, the endpoint returns data from the previous 24 hours.",
            "schema": {
              "minimum": 1199145600000,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/Namespaces"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel II"
      }
    },
    "/api/atlas/v2/groups/{groupId}/processes/{processId}/performanceAdvisor/slowQueryLogs": {
      "get": {
        "tags": ["Performance Advisor"],
        "summary": "Return Slow Queries",
        "description": "Returns log lines for slow queries that the Performance Advisor and Query Profiler identified. The Performance Advisor monitors queries that MongoDB considers slow and suggests new indexes to improve query performance. MongoDB Cloud bases the threshold for slow queries on the average time of operations on your cluster. This enables workload-relevant recommendations. To use this resource, the requesting API Key must have the Project Data Access Read Write role.",
        "operationId": "listSlowQueries",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "duration",
            "in": "query",
            "description": "Length of time expressed during which the query finds slow queries among the managed namespaces in the cluster. This parameter expresses its value in milliseconds.\n\n- If you don't specify the **since** parameter, the endpoint returns data covering the duration before the current time.\n- If you specify neither the **duration** nor **since** parameters, the endpoint returns data from the previous 24 hours.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "namespaces",
            "in": "query",
            "description": "Namespaces from which to retrieve slow queries. A namespace consists of one database and one collection resource written as `.`: `<database>.<collection>`. To include multiple namespaces, pass the parameter multiple times delimited with an ampersand (`&`) between each namespace. Omit this parameter to return results for all namespaces.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "nLogs",
            "in": "query",
            "description": "Maximum number of lines from the log to return.",
            "schema": {
              "maximum": 20000,
              "minimum": 0,
              "type": "integer",
              "format": "int64",
              "default": 20000
            }
          },
          {
            "name": "processId",
            "in": "path",
            "description": "Combination of host and port that serves the MongoDB process. The host must be the hostname, FQDN, IPv4 address, or IPv6 address of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "required": true,
            "schema": {
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
              "type": "string"
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "Date and time from which the query retrieves the slow queries. This parameter expresses its value in the number of milliseconds that have elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time).\n\n- If you don't specify the **duration** parameter, the endpoint returns data covering from the **since** value and the current time.\n- If you specify neither the **duration** nor the **since** parameters, the endpoint returns data from the previous 24 hours.",
            "schema": {
              "minimum": 1199145600000,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceAdvisorSlowQueryList"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel II"
      }
    },
    "/api/atlas/v2/groups/{groupId}/processes/{processId}/performanceAdvisor/suggestedIndexes": {
      "get": {
        "tags": ["Performance Advisor"],
        "summary": "Return Suggested Indexes",
        "description": "Returns the indexes that the Performance Advisor suggests. The Performance Advisor monitors queries that MongoDB considers slow and suggests new indexes to improve query performance. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listSuggestedIndexes",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "duration",
            "in": "query",
            "description": "Length of time expressed during which the query finds suggested indexes among the managed namespaces in the cluster. This parameter expresses its value in milliseconds.\n\n- If you don't specify the **since** parameter, the endpoint returns data covering the duration before the current time.\n- If you specify neither the **duration** nor **since** parameters, the endpoint returns data from the previous 24 hours.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "namespaces",
            "in": "query",
            "description": "Namespaces from which to retrieve suggested indexes. A namespace consists of one database and one collection resource written as `.`: `<database>.<collection>`. To include multiple namespaces, pass the parameter multiple times delimited with an ampersand (`&`) between each namespace. Omit this parameter to return results for all namespaces.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "nExamples",
            "in": "query",
            "description": "Maximum number of example queries that benefit from the suggested index.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 5
            }
          },
          {
            "name": "nIndexes",
            "in": "query",
            "description": "Number that indicates the maximum indexes to suggest.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "processId",
            "in": "path",
            "description": "Combination of host and port that serves the MongoDB process. The host must be the hostname, FQDN, IPv4 address, or IPv6 address of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "required": true,
            "schema": {
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
              "type": "string"
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "Date and time from which the query retrieves the suggested indexes. This parameter expresses its value in the number of milliseconds that have elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time).\n\n- If you don't specify the **duration** parameter, the endpoint returns data covering from the **since** value and the current time.\n- If you specify neither the **duration** nor the **since** parameters, the endpoint returns data from the previous 24 hours.",
            "schema": {
              "minimum": 1199145600000,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceAdvisorResponse"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel II"
      }
    },
    "/api/atlas/v2/groups/{groupId}/processes/{processId}/databases": {
      "get": {
        "tags": ["Monitoring and Logs"],
        "summary": "Return Available Databases for One MongoDB Process",
        "description": "Returns the list of databases running on the specified host for the specified project. `M0` free clusters, `M2`, `M5`, and serverless clusters have some [operational limits](https://www.mongodb.com/docs/atlas/reference/free-shared-limitations/#operational-limitations). The MongoDB Cloud process must be a `mongod`. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listDatabases",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "required": true,
            "schema": {
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
              "type": "string",
              "example": "mongodb.example.com:27017"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDatabaseView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/processes/{processId}/disks": {
      "get": {
        "tags": ["Monitoring and Logs"],
        "summary": "Return Available Disks for One MongoDB Process",
        "description": "Returns the list of disks or partitions for the specified host for the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listDiskPartitions",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "required": true,
            "schema": {
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
              "type": "string",
              "example": "mongodb.example.com:27017"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDiskPartitionView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/processes/{processId}/measurements": {
      "get": {
        "tags": ["Monitoring and Logs"],
        "summary": "Return Measurements for One MongoDB Process",
        "description": "Returns disk, partition, or host measurements per process for the specified host for the specified project. Returned value can be one of the following:\n- Throughput of I/O operations for the disk partition used for the MongoDB process\n- Percentage of time during which requests the partition issued and serviced\n- Latency per operation type of the disk partition used for the MongoDB process\n- Amount of free and used disk space on the disk partition used for the MongoDB process\n- Measurements for the host, such as CPU usage or number of I/O operations\n\nTo use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getHostMeasurements",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "m",
            "in": "query",
            "description": "One or more types of measurement to request for this MongoDB process. If omitted, the resource returns all measurements. To specify multiple values for `m`, repeat the `m` parameter for each value. Specify measurements that apply to the specified host. MongoDB Cloud returns an error if you specified any invalid measurements.",
            "style": "form",
            "schema": {
              "maxItems": 10,
              "minItems": 1,
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "description": "One measurement requested for this MongoDB process.",
                "enum": [
                  "ASSERT_MSG",
                  "ASSERT_REGULAR",
                  "ASSERT_USER",
                  "ASSERT_WARNING",
                  "BACKGROUND_FLUSH_AVG",
                  "CACHE_BYTES_READ_INTO",
                  "CACHE_BYTES_WRITTEN_FROM",
                  "CACHE_DIRTY_BYTES",
                  "CACHE_USED_BYTES",
                  "COMPUTED_MEMORY",
                  "CONNECTIONS",
                  "CURSORS_TOTAL_OPEN",
                  "CURSORS_TOTAL_TIMED_OUT",
                  "DB_DATA_SIZE_TOTAL",
                  "DB_STORAGE_TOTAL",
                  "DOCUMENT_METRICS_DELETED",
                  "DOCUMENT_METRICS_INSERTED",
                  "DOCUMENT_METRICS_RETURNED",
                  "DOCUMENT_METRICS_UPDATED",
                  "EXTRA_INFO_PAGE_FAULTS",
                  "FTS_DISK_UTILIZATION",
                  "FTS_MEMORY_MAPPED",
                  "FTS_MEMORY_RESIDENT",
                  "FTS_MEMORY_VIRTUAL",
                  "FTS_PROCESS_CPU_KERNEL",
                  "FTS_PROCESS_CPU_USER",
                  "FTS_PROCESS_NORMALIZED_CPU_KERNEL",
                  "FTS_PROCESS_NORMALIZED_CPU_USER",
                  "GLOBAL_ACCESSES_NOT_IN_MEMORY",
                  "GLOBAL_LOCK_CURRENT_QUEUE_READERS",
                  "GLOBAL_LOCK_CURRENT_QUEUE_TOTAL",
                  "GLOBAL_LOCK_CURRENT_QUEUE_WRITERS",
                  "GLOBAL_PAGE_FAULT_EXCEPTIONS_THROWN",
                  "INDEX_COUNTERS_BTREE_ACCESSES",
                  "INDEX_COUNTERS_BTREE_HITS",
                  "INDEX_COUNTERS_BTREE_MISS_RATIO",
                  "INDEX_COUNTERS_BTREE_MISSES",
                  "JOURNALING_COMMITS_IN_WRITE_LOCK",
                  "JOURNALING_MB",
                  "JOURNALING_WRITE_DATA_FILES_MB",
                  "MAX_PROCESS_CPU_CHILDREN_KERNEL",
                  "MAX_PROCESS_CPU_CHILDREN_USER",
                  "MAX_PROCESS_CPU_KERNEL",
                  "MAX_PROCESS_CPU_USER",
                  "MAX_PROCESS_NORMALIZED_CPU_CHILDREN_KERNEL",
                  "MAX_PROCESS_NORMALIZED_CPU_CHILDREN_USER",
                  "MAX_PROCESS_NORMALIZED_CPU_KERNEL",
                  "MAX_PROCESS_NORMALIZED_CPU_USER",
                  "MAX_SWAP_USAGE_FREE",
                  "MAX_SWAP_USAGE_USED ",
                  "MAX_SYSTEM_CPU_GUEST",
                  "MAX_SYSTEM_CPU_IOWAIT",
                  "MAX_SYSTEM_CPU_IRQ",
                  "MAX_SYSTEM_CPU_KERNEL",
                  "MAX_SYSTEM_CPU_SOFTIRQ",
                  "MAX_SYSTEM_CPU_STEAL",
                  "MAX_SYSTEM_CPU_USER",
                  "MAX_SYSTEM_MEMORY_AVAILABLE",
                  "MAX_SYSTEM_MEMORY_FREE",
                  "MAX_SYSTEM_MEMORY_USED",
                  "MAX_SYSTEM_NETWORK_IN",
                  "MAX_SYSTEM_NETWORK_OUT",
                  "MAX_SYSTEM_NORMALIZED_CPU_GUEST",
                  "MAX_SYSTEM_NORMALIZED_CPU_IOWAIT",
                  "MAX_SYSTEM_NORMALIZED_CPU_IRQ",
                  "MAX_SYSTEM_NORMALIZED_CPU_KERNEL",
                  "MAX_SYSTEM_NORMALIZED_CPU_NICE",
                  "MAX_SYSTEM_NORMALIZED_CPU_SOFTIRQ",
                  "MAX_SYSTEM_NORMALIZED_CPU_STEAL",
                  "MAX_SYSTEM_NORMALIZED_CPU_USER",
                  "MEMORY_MAPPED",
                  "MEMORY_RESIDENT",
                  "MEMORY_VIRTUAL",
                  "NETWORK_BYTES_IN",
                  "NETWORK_BYTES_OUT",
                  "NETWORK_NUM_REQUESTS",
                  "OP_EXECUTION_TIME_COMMANDS",
                  "OP_EXECUTION_TIME_READS",
                  "OP_EXECUTION_TIME_WRITES",
                  "OPCOUNTER_CMD",
                  "OPCOUNTER_DELETE",
                  "OPCOUNTER_GETMORE",
                  "OPCOUNTER_INSERT",
                  "OPCOUNTER_QUERY",
                  "OPCOUNTER_REPL_CMD",
                  "OPCOUNTER_REPL_DELETE",
                  "OPCOUNTER_REPL_INSERT",
                  "OPCOUNTER_REPL_UPDATE",
                  "OPCOUNTER_UPDATE",
                  "OPERATIONS_SCAN_AND_ORDER",
                  "OPLOG_MASTER_LAG_TIME_DIFF",
                  "OPLOG_MASTER_TIME",
                  "OPLOG_RATE_GB_PER_HOUR",
                  "OPLOG_SLAVE_LAG_MASTER_TIME",
                  "OPLOG_REPLICATION_LAG",
                  "PROCESS_CPU_CHILDREN_KERNEL",
                  "PROCESS_CPU_CHILDREN_USER",
                  "PROCESS_CPU_KERNEL",
                  "PROCESS_CPU_USER",
                  "PROCESS_NORMALIZED_CPU_CHILDREN_KERNEL",
                  "PROCESS_NORMALIZED_CPU_CHILDREN_USER",
                  "PROCESS_NORMALIZED_CPU_KERNEL",
                  "PROCESS_NORMALIZED_CPU_USER",
                  "QUERY_EXECUTOR_SCANNED",
                  "QUERY_EXECUTOR_SCANNED_OBJECTS",
                  "QUERY_TARGETING_SCANNED_OBJECTS_PER_RETURNED",
                  "QUERY_TARGETING_SCANNED_PER_RETURNED",
                  "RESTARTS_IN_LAST_HOUR",
                  "SWAP_USAGE_FREE",
                  "SWAP_USAGE_USED",
                  "SYSTEM_CPU_GUEST",
                  "SYSTEM_CPU_IOWAIT",
                  "SYSTEM_CPU_IRQ",
                  "SYSTEM_CPU_KERNEL",
                  "SYSTEM_CPU_NICE",
                  "SYSTEM_CPU_SOFTIRQ",
                  "SYSTEM_CPU_STEAL",
                  "SYSTEM_CPU_USER",
                  "SYSTEM_MEMORY_AVAILABLE",
                  "SYSTEM_MEMORY_FREE",
                  "SYSTEM_MEMORY_USED",
                  "SYSTEM_NETWORK_IN",
                  "SYSTEM_NETWORK_OUT",
                  "SYSTEM_NORMALIZED_CPU_GUEST",
                  "SYSTEM_NORMALIZED_CPU_IOWAIT",
                  "SYSTEM_NORMALIZED_CPU_IRQ",
                  "SYSTEM_NORMALIZED_CPU_KERNEL",
                  "SYSTEM_NORMALIZED_CPU_NICE",
                  "SYSTEM_NORMALIZED_CPU_SOFTIRQ",
                  "SYSTEM_NORMALIZED_CPU_STEAL",
                  "SYSTEM_NORMALIZED_CPU_USER",
                  "TICKETS_AVAILABLE_READS",
                  "TICKETS_AVAILABLE_WRITE"
                ]
              }
            }
          },
          {
            "$ref": "#/components/parameters/period"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "required": true,
            "schema": {
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
              "type": "string",
              "example": "mongodb.example.com:27017"
            }
          },
          {
            "$ref": "#/components/parameters/granularity"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/end"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMeasurementsGeneralView_Atlas"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/processes/{processId}/databases/{databaseName}": {
      "get": {
        "tags": ["Monitoring and Logs"],
        "summary": "Return One Database for a MongoDB Process",
        "description": "Returns one database running on the specified host for the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getDatabase",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Human-readable label that identifies the database that the specified MongoDB process serves.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "processId",
            "in": "path",
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "required": true,
            "schema": {
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
              "type": "string",
              "example": "mongodb.example.com:27017"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/MesurementsDatabase"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/processes/{processId}/databases/{databaseName}/measurements": {
      "get": {
        "tags": ["Monitoring and Logs"],
        "summary": "Return Measurements of One Database for One MongoDB Process",
        "description": "Returns the measurements of one database for the specified host for the specified project. Returns the database's on-disk storage space based on the MongoDB `dbStats` command output. To calculate some metric series, Atlas takes the rate between every two adjacent points. For these metric series, the first data point has a null value because Atlas can't calculate a rate for the first data point given the query time range. Atlas retrieves database metrics every 20 minutes but reduces frequency when necessary to optimize database performance. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getDatabaseMeasurements",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Human-readable label that identifies the database that the specified MongoDB process serves.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "m",
            "in": "query",
            "description": "One or more types of measurement to request for this MongoDB process. If omitted, the resource returns all measurements. To specify multiple values for `m`, repeat the `m` parameter for each value. Specify measurements that apply to the specified host. MongoDB Cloud returns an error if you specified any invalid measurements.",
            "style": "form",
            "schema": {
              "maxItems": 10,
              "minItems": 1,
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "description": "One measurement requested for this MongoDB process.",
                "enum": [
                  "DATABASE_AVERAGE_OBJECT_SIZE",
                  "DATABASE_COLLECTION_COUNT",
                  "DATABASE_DATA_SIZE",
                  "DATABASE_STORAGE_SIZE",
                  "DATABASE_INDEX_SIZE",
                  "DATABASE_INDEX_COUNT",
                  "DATABASE_EXTENT_COUNT",
                  "DATABASE_OBJECT_COUNT",
                  "DATABASE_VIEW_COUNT"
                ]
              }
            }
          },
          {
            "name": "processId",
            "in": "path",
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "required": true,
            "schema": {
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
              "type": "string",
              "example": "mongodb.example.com:27017"
            }
          },
          {
            "$ref": "#/components/parameters/granularity"
          },
          {
            "$ref": "#/components/parameters/period"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/end"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMeasurementsGeneralView_Atlas"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/processes/{processId}/disks/{partitionName}": {
      "get": {
        "tags": ["Monitoring and Logs"],
        "summary": "Return Measurements of One Disk",
        "description": "Returns measurement details for one disk or partition for the specified host for the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listDiskMeasurements",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "name": "partitionName",
            "in": "path",
            "description": "Human-readable label of the disk or partition to which the measurements apply.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "required": true,
            "schema": {
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
              "type": "string",
              "example": "mongodb.example.com:27017"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementDiskPartition"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/processes/{processId}/disks/{partitionName}/measurements": {
      "get": {
        "tags": ["Monitoring and Logs"],
        "summary": "Return Measurements of One Disk for One MongoDB Process",
        "description": "Returns the measurements of one disk or partition for the specified host for the specified project. Returned value can be one of the following:\n- Throughput of I/O operations for the disk partition used for the MongoDB process\n- Percentage of time during which requests the partition issued and serviced\n- Latency per operation type of the disk partition used for the MongoDB process\n- Amount of free and used disk space on the disk partition used for the MongoDB process\n\nTo use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getDiskMeasurements",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "m",
            "in": "query",
            "description": "One or more types of measurement to request for this MongoDB process. If omitted, the resource returns all measurements. To specify multiple values for `m`, repeat the `m` parameter for each value. Specify measurements that apply to the specified host. MongoDB Cloud returns an error if you specified any invalid measurements.",
            "style": "form",
            "schema": {
              "maxItems": 10,
              "minItems": 1,
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "description": "One measurement requested for this MongoDB process.",
                "enum": [
                  "DISK_PARTITION_IOPS_READ",
                  "MAX_DISK_PARTITION_IOPS_READ",
                  "DISK_PARTITION_IOPS_WRITE",
                  "MAX_DISK_PARTITION_IOPS_WRITE",
                  "DISK_PARTITION_IOPS_TOTAL",
                  "MAX_DISK_PARTITION_IOPS_TOTAL",
                  "DISK_PARTITION_LATENCY_READ",
                  "MAX_DISK_PARTITION_LATENCY_READ",
                  "DISK_PARTITION_LATENCY_WRITE",
                  "MAX_DISK_PARTITION_LATENCY_WRITE",
                  "DISK_PARTITION_SPACE_FREE",
                  "MAX_DISK_PARTITION_SPACE_FREE",
                  "DISK_PARTITION_SPACE_USED",
                  "MAX_DISK_PARTITION_SPACE_USED",
                  "DISK_PARTITION_SPACE_PERCENT_FREE",
                  "MAX_DISK_PARTITION_SPACE_PERCENT_FREE",
                  "DISK_PARTITION_SPACE_PERCENT_USED",
                  "MAX_DISK_PARTITION_SPACE_PERCENT_USED"
                ]
              }
            }
          },
          {
            "name": "partitionName",
            "in": "path",
            "description": "Human-readable label of the disk or partition to which the measurements apply.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "processId",
            "in": "path",
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "required": true,
            "schema": {
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
              "type": "string",
              "example": "mongodb.example.com:27017"
            }
          },
          {
            "$ref": "#/components/parameters/granularity"
          },
          {
            "$ref": "#/components/parameters/period"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/end"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMeasurementsGeneralView_Atlas"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/processes": {
      "get": {
        "tags": ["Monitoring and Logs"],
        "summary": "Return All MongoDB Processes in One Project",
        "description": "Returns details of all processes for the specified project. A MongoDB process can be either a `mongod` or `mongos`. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listAtlasProcesses",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedHostView_Atlas"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/processes/{processId}": {
      "get": {
        "tags": ["Monitoring and Logs"],
        "summary": "Return One MongoDB Process by ID",
        "description": "Returns the processes for the specified host for the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getAtlasProcess",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "processId",
            "in": "path",
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "required": true,
            "schema": {
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
              "type": "string",
              "example": "mongodb.example.com:27017"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiHostView_Atlas"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/serverless/{clusterName}/performanceAdvisor/autoIndexing": {
      "get": {
        "tags": ["Performance Advisor"],
        "summary": "Return Serverless Auto Indexing Enabled",
        "description": "Get whether the Serverless Auto Indexing feature is enabled.",
        "operationId": "getServerlessAutoIndexing",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "type": "boolean"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel II"
      },
      "post": {
        "tags": ["Performance Advisor"],
        "summary": "Set Serverless Auto Indexing",
        "description": "Set whether the Serverless Auto Indexing feature is enabled.",
        "operationId": "setServerlessAutoIndexing",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "enable",
            "in": "query",
            "description": "Value that we want to set for the Serverless Auto Indexing toggle.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel II"
      }
    },
    "/api/atlas/v2/groups/{groupId}/managedSlowMs/disable": {
      "delete": {
        "tags": ["Performance Advisor"],
        "summary": "Disable Managed Slow Operation Threshold",
        "description": "Disables the slow operation threshold that MongoDB Cloud calculated for the specified project. The threshold determines which operations the Performance Advisor and Query Profiler considers slow. When enabled, MongoDB Cloud uses the average execution time for operations on your cluster to determine slow-running queries. As a result, the threshold is more pertinent to your cluster workload. The slow operation threshold is enabled by default for dedicated clusters (M10+). When disabled, MongoDB Cloud considers any operation that takes longer than 100 milliseconds to be slow. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "disableSlowOperationThresholding",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel II"
      }
    },
    "/api/atlas/v2/groups/{groupId}/managedSlowMs/enable": {
      "post": {
        "tags": ["Performance Advisor"],
        "summary": "Enable Managed Slow Operation Threshold",
        "description": "Enables MongoDB Cloud to use its slow operation threshold for the specified project. The threshold determines which operations the Performance Advisor and Query Profiler considers slow. When enabled, MongoDB Cloud uses the average execution time for operations on your cluster to determine slow-running queries. As a result, the threshold is more pertinent to your cluster workload. The slow operation threshold is enabled by default for dedicated clusters (M10+). When disabled, MongoDB Cloud considers any operation that takes longer than 100 milliseconds to be slow. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "enableSlowOperationThresholding",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel II"
      }
    },
    "/api/atlas/v2/groups/{groupId}/managedSlowMs": {
      "get": {
        "tags": ["Performance Advisor"],
        "summary": "Return Managed Slow MS enabled",
        "description": "Get whether the Managed Slow MS feature is enabled.",
        "operationId": "getManagedSlowMs",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel II"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/{clusterView}/{databaseName}/{collectionName}/collStats/measurements": {
      "get": {
        "tags": ["Collection Level Metrics"],
        "summary": "Return Cluster-Level Query Latency",
        "description": "Get a list of the Coll Stats Latency cluster-level measurements for the given namespace.",
        "operationId": "getCollStatsLatencyNamespaceClusterMeasurements",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster to retrieve metrics for.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "clusterView",
            "in": "path",
            "description": "Human-readable label that identifies the cluster topology to retrieve metrics for.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["PRIMARY", "SECONDARY", "INDIVIDUAL_PROCESS"]
            }
          },
          {
            "$ref": "#/components/parameters/databaseName"
          },
          {
            "$ref": "#/components/parameters/collectionName"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "name": "metrics",
            "in": "query",
            "description": "List that contains the metrics that you want to retrieve for the associated data series. If you don't set this parameter, this resource returns data series for all Coll Stats Latency metrics.",
            "style": "form",
            "explode": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "description": "Metric requested for the given cluster",
                "enum": [
                  "READS_OPS",
                  "READS_LATENCY",
                  "AVERAGE_READS_LATENCY",
                  "READS_P50_VALUE",
                  "READS_P95_VALUE",
                  "READS_P99_VALUE",
                  "WRITES_OPS",
                  "WRITES_LATENCY",
                  "AVERAGE_WRITES_LATENCY",
                  "WRITES_P50_VALUE",
                  "WRITES_P95_VALUE",
                  "WRITES_P99_VALUE",
                  "COMMANDS_OPS",
                  "COMMANDS_LATENCY",
                  "AVERAGE_COMMANDS_LATENCY",
                  "COMMANDS_P50_VALUE",
                  "COMMANDS_P95_VALUE",
                  "COMMANDS_P99_VALUE",
                  "TOTAL_OPS",
                  "TOTAL_LATENCY",
                  "AVERAGE_TOTAL_OPS_LATENCY",
                  "TOTAL_OPS_P50_VALUE",
                  "TOTAL_OPS_P95_VALUE",
                  "TOTAL_OPS_P99_VALUE"
                ]
              }
            }
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/end"
          },
          {
            "$ref": "#/components/parameters/period"
          }
        ],
        "responses": {
          "200": {
            "description": "Succeeded",
            "content": {
              "application/vnd.atlas.2023-11-15+json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementsCollStatsLatencyCluster"
                },
                "x-xgen-version": "2023-11-15"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/{clusterView}/collStats/namespaces": {
      "get": {
        "tags": ["Collection Level Metrics"],
        "summary": "Return Ranked Namespaces from a Cluster",
        "description": "Return the subset of namespaces from the given cluster sorted by highest total execution time (descending) within the given time window.",
        "operationId": "getCollStatsLatencyNamespacesForCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster to pin namespaces to.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "clusterView",
            "in": "path",
            "description": "Human-readable label that identifies the cluster topology to retrieve metrics for.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["PRIMARY", "SECONDARY", "INDIVIDUAL_PROCESS"]
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/end"
          },
          {
            "$ref": "#/components/parameters/period"
          }
        ],
        "responses": {
          "200": {
            "description": "Succeeded",
            "content": {
              "application/vnd.atlas.2023-11-15+json": {
                "schema": {
                  "$ref": "#/components/schemas/CollStatsRankedNamespacesView"
                },
                "x-xgen-version": "2023-11-15"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/collStats/pinned": {
      "get": {
        "tags": ["Collection Level Metrics"],
        "summary": "Return Pinned Namespaces",
        "description": "Returns a list of given cluster's pinned namespaces, a set of namespaces manually selected by users to collect query latency metrics on.",
        "operationId": "getPinnedNamespaces",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster to retrieve pinned namespaces for.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-11-15+json": {
                "schema": {
                  "$ref": "#/components/schemas/PinnedNamespaces"
                },
                "x-xgen-version": "2023-11-15"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel I"
      },
      "put": {
        "tags": ["Collection Level Metrics"],
        "summary": "Pin Namespaces",
        "description": "Pin provided list of namespaces for collection-level latency metrics collection for the given Group and Cluster. This initializes a pinned namespaces list or replaces any existing pinned namespaces list for the Group and Cluster.",
        "operationId": "pinNamespacesPut",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster to pin namespaces to.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "List of namespace strings (combination of database and collection name) to pin for query latency metric collection.",
          "content": {
            "application/vnd.atlas.2023-11-15+json": {
              "schema": {
                "$ref": "#/components/schemas/NamespacesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-11-15+json": {
                "schema": {
                  "$ref": "#/components/schemas/PinnedNamespaces"
                },
                "x-xgen-version": "2023-11-15"
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/vnd.atlas.2023-11-15+json": {
                "schema": {
                  "$ref": "#/components/schemas/PinnedNamespaces"
                },
                "x-xgen-version": "2023-11-15"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel I"
      },
      "patch": {
        "tags": ["Collection Level Metrics"],
        "summary": "Add Pinned Namespaces",
        "description": "Add provided list of namespaces to existing pinned namespaces list for collection-level latency metrics collection for the given Group and Cluster",
        "operationId": "pinNamespacesPatch",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster to pin namespaces to.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "List of namespace strings (combination of database and collection name) to pin for query latency metric collection.",
          "content": {
            "application/vnd.atlas.2023-11-15+json": {
              "schema": {
                "$ref": "#/components/schemas/NamespacesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-11-15+json": {
                "schema": {
                  "$ref": "#/components/schemas/PinnedNamespaces"
                },
                "x-xgen-version": "2023-11-15"
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/vnd.atlas.2023-11-15+json": {
                "schema": {
                  "$ref": "#/components/schemas/PinnedNamespaces"
                },
                "x-xgen-version": "2023-11-15"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/collStats/unpin": {
      "patch": {
        "tags": ["Collection Level Metrics"],
        "summary": "Unpin namespaces",
        "description": "Unpin provided list of namespaces for collection-level latency metrics collection for the given Group and Cluster",
        "operationId": "unpinNamespaces",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster to unpin namespaces from.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "List of namespace strings (combination of database and collection name) to pin for query latency metric collection.",
          "content": {
            "application/vnd.atlas.2023-11-15+json": {
              "schema": {
                "$ref": "#/components/schemas/NamespacesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-11-15+json": {
                "schema": {
                  "$ref": "#/components/schemas/PinnedNamespaces"
                },
                "x-xgen-version": "2023-11-15"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/collStats/metrics": {
      "get": {
        "tags": ["Collection Level Metrics"],
        "summary": "Return all metric names",
        "description": "Returns all available Coll Stats Latency metric names and their respective units for the specified project at the time of request.",
        "operationId": "getCollStatsLatencyNamespaceMetrics",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ],
        "responses": {
          "200": {
            "description": "Succeeded",
            "content": {
              "application/vnd.atlas.2023-11-15+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-11-15"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/processes/{processId}/{databaseName}/{collectionName}/collStats/measurements": {
      "get": {
        "tags": ["Collection Level Metrics"],
        "summary": "Return Host-Level Query Latency",
        "description": "Get a list of the Coll Stats Latency process-level measurements for the given namespace",
        "operationId": "getCollStatsLatencyNamespaceHostMeasurements",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/processId"
          },
          {
            "$ref": "#/components/parameters/databaseName"
          },
          {
            "$ref": "#/components/parameters/collectionName"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "name": "metrics",
            "in": "query",
            "description": "List that contains the metrics that you want to retrieve for the associated data series. If you don't set this parameter, this resource returns data series for all Coll Stats Latency metrics.",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "description": "Metric requested for the given process",
                "enum": [
                  "READS_OPS",
                  "READS_LATENCY",
                  "AVERAGE_READS_LATENCY",
                  "READS_P50_VALUE",
                  "READS_P95_VALUE",
                  "READS_P99_VALUE",
                  "WRITES_OPS",
                  "WRITES_LATENCY",
                  "AVERAGE_WRITES_LATENCY",
                  "WRITES_P50_VALUE",
                  "WRITES_P95_VALUE",
                  "WRITES_P99_VALUE",
                  "COMMANDS_OPS",
                  "COMMANDS_LATENCY",
                  "AVERAGE_COMMANDS_LATENCY",
                  "COMMANDS_P50_VALUE",
                  "COMMANDS_P95_VALUE",
                  "COMMANDS_P99_VALUE",
                  "TOTAL_OPS",
                  "TOTAL_LATENCY",
                  "AVERAGE_TOTAL_OPS_LATENCY",
                  "TOTAL_OPS_P50_VALUE",
                  "TOTAL_OPS_P95_VALUE",
                  "TOTAL_OPS_P99_VALUE"
                ]
              }
            }
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/end"
          },
          {
            "$ref": "#/components/parameters/period"
          }
        ],
        "responses": {
          "200": {
            "description": "Succeeded",
            "content": {
              "application/vnd.atlas.2023-11-15+json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementsCollStatsLatencyHost"
                },
                "x-xgen-version": "2023-11-15"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/processes/{processId}/collStats/namespaces": {
      "get": {
        "tags": ["Collection Level Metrics"],
        "summary": "Return Ranked Namespaces from a Host",
        "description": "Return the subset of namespaces from the given process ranked by highest total execution time (descending) within the given time window.",
        "operationId": "getCollStatsLatencyNamespacesForHost",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/processId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/end"
          },
          {
            "$ref": "#/components/parameters/period"
          }
        ],
        "responses": {
          "200": {
            "description": "Succeeded",
            "content": {
              "application/vnd.atlas.2023-11-15+json": {
                "schema": {
                  "$ref": "#/components/schemas/CollStatsRankedNamespacesView"
                },
                "x-xgen-version": "2023-11-15"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Intel I"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/onlineArchives": {
      "get": {
        "tags": ["Online Archive"],
        "summary": "Return All Online Archives for One Cluster",
        "description": "Returns details of all online archives. This archive stores data from one cluster within one project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "externalDocs": {
          "description": "Online Archive",
          "url": "https://docs.atlas.mongodb.com/online-archive/manage-online-archive/#std-label-manage-online-archive"
        },
        "operationId": "listOnlineArchives",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster that contains the collection for which you want to return the online archives.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedOnlineArchiveView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Online Archive II"
      },
      "post": {
        "tags": ["Online Archive"],
        "summary": "Create One Online Archive",
        "description": "Creates one online archive. This archive stores data from one cluster within one project. To use this resource, the requesting API Key must have the Project Data Access Admin role.",
        "externalDocs": {
          "description": "Online Archive",
          "url": "https://docs.atlas.mongodb.com/online-archive/manage-online-archive/#std-label-manage-online-archive"
        },
        "operationId": "createOnlineArchive",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster that contains the collection for which you want to create one online archive.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Creates one online archive.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/BackupOnlineArchiveCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupOnlineArchive"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-changelog": {
          "2023-08-02": "If 'criteria':'DATE' is specified, then you must specify 'DATE' values in partition fields"
        },
        "x-xgen-owner-team": "Atlas Online Archive II"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/onlineArchives/{archiveId}": {
      "get": {
        "tags": ["Online Archive"],
        "summary": "Return One Online Archive",
        "description": "Returns one online archive for one cluster. This archive stores data from one cluster within one project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "externalDocs": {
          "description": "Online Archive",
          "url": "https://docs.atlas.mongodb.com/online-archive/manage-online-archive/#std-label-manage-online-archive"
        },
        "operationId": "getOnlineArchive",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "archiveId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the online archive to return.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster that contains the specified collection from which Application created the online archive.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupOnlineArchive"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Online Archive II"
      },
      "delete": {
        "tags": ["Online Archive"],
        "summary": "Remove One Online Archive",
        "description": "Removes one online archive. This archive stores data from one cluster within one project. To use this resource, the requesting API Key must have the Project Data Access Admin role.",
        "externalDocs": {
          "description": "Online Archive",
          "url": "https://docs.atlas.mongodb.com/online-archive/manage-online-archive/#std-label-manage-online-archive"
        },
        "operationId": "deleteOnlineArchive",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "archiveId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the online archive to delete.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster that contains the collection from which you want to remove an online archive.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Online Archive II"
      },
      "patch": {
        "tags": ["Online Archive"],
        "summary": "Update One Online Archive",
        "description": "Updates, pauses, or resumes one online archive. This archive stores data from one cluster within one project. To use this resource, the requesting API Key must have the Project Data Access Admin role.",
        "externalDocs": {
          "description": "Online Archive",
          "url": "https://docs.atlas.mongodb.com/online-archive/manage-online-archive/#std-label-manage-online-archive"
        },
        "operationId": "updateOnlineArchive",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "archiveId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the online archive to update.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster that contains the specified collection from which Application created the online archive.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updates, pauses, or resumes one online archive.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/BackupOnlineArchive"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupOnlineArchive"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Online Archive II"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/onlineArchives/queryLogs.gz": {
      "get": {
        "tags": ["Online Archive"],
        "summary": "Download Online Archive Query Logs",
        "description": "Downloads query logs for the specified online archive. To use this resource, the requesting API Key must have the Project Data Access Read Only or higher role. The API does not support direct calls with the json response schema. You must request a gzip response schema using an accept header of the format: \"Accept: application/vnd.atlas.YYYY-MM-DD+gzip\".",
        "externalDocs": {
          "description": "Online Archive",
          "url": "https://docs.atlas.mongodb.com/online-archive/manage-online-archive/#std-label-manage-online-archive"
        },
        "operationId": "downloadOnlineArchiveQueryLogs",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Date and time that specifies the starting point for the range of log messages to return. This resource expresses this value in the number of seconds that have elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time).",
            "schema": {
              "minimum": 1199145600,
              "type": "integer",
              "format": "int64",
              "example": 1636481348
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Date and time that specifies the end point for the range of log messages to return. This resource expresses this value in the number of seconds that have elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time).",
            "schema": {
              "minimum": 1199145600,
              "type": "integer",
              "format": "int64",
              "example": 1636481348
            }
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster that contains the collection for which you want to return the query logs from one online archive.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "archiveOnly",
            "in": "query",
            "description": "Flag that indicates whether to download logs for queries against your online archive only or both your online archive and cluster.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+gzip": {
                "schema": {
                  "type": "string",
                  "description": "This resource downloads a compressed log file to your current working directory. You can specify its name using the `--output` option or use the default filename using the `-OJ` option. The default filename varies based on whether you download logs for queries of your online archive only or both your online archive and cluster.",
                  "format": "binary"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Online Archive II"
      }
    },
    "/api/atlas/v2/unauth/controlPlaneIPAddresses": {
      "get": {
        "tags": ["Root"],
        "summary": "Return All Control Plane IP Addresses",
        "description": "Returns all control plane IP addresses. Currently, inbound Atlas control plane IP addresses are not yet available. The inbound IP address list in your API response is empty. To manually retrieve a list of inbound Atlas control plane IP addresses, see [Required Inbound Access](https://www.mongodb.com/docs/atlas/setup-cluster-security/#std-label-atlas-required-inbound-access).",
        "operationId": "returnAllControlPlaneIPAddresses",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-11-15+json": {
                "schema": {
                  "$ref": "#/components/schemas/ControlPlaneIPAddresses"
                },
                "x-xgen-version": "2023-11-15"
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "x-xgen-owner-team": "Atlas Dedicated IV"
      }
    },
    "/api/atlas/v2/groups/{groupId}/awsCustomDNS": {
      "get": {
        "tags": ["AWS Clusters DNS"],
        "summary": "Return One Custom DNS Configuration for Atlas Clusters on AWS",
        "description": "Returns the custom DNS configuration for AWS clusters in the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getAWSCustomDNS",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/AWSCustomDNSEnabledView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "patch": {
        "tags": ["AWS Clusters DNS"],
        "summary": "Toggle State of One Custom DNS Configuration for Atlas Clusters on AWS",
        "description": "Enables or disables the custom DNS configuration for AWS clusters in the specified project. Enable custom DNS if you use AWS VPC peering and use your own DNS servers. To use this resource, the requesting API Key must have the Project Atlas Admin role.",
        "operationId": "toggleAWSCustomDNS",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Enables or disables the custom DNS configuration for AWS clusters in the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/AWSCustomDNSEnabledView"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/AWSCustomDNSEnabledView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/mongoDBVersions": {
      "get": {
        "tags": ["Projects"],
        "summary": "Return Available MongoDB LTS Versions for clusters in One Project",
        "description": "Returns the MongoDB Long Term Support Major Versions available to new clusters in this project.",
        "operationId": "getProjectLTSVersions",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "cloudProvider",
            "in": "query",
            "description": "Filter results to only one cloud provider.",
            "schema": {
              "type": "string",
              "enum": ["AWS", "AZURE", "GCP", "TENANT"]
            }
          },
          {
            "name": "instanceSize",
            "in": "query",
            "description": "Filter results to only one instance size.",
            "schema": {
              "type": "string",
              "example": "M10"
            }
          },
          {
            "name": "defaultStatus",
            "in": "query",
            "description": "Filter results to only the default values per tier. This value must be DEFAULT.",
            "schema": {
              "type": "string",
              "enum": ["DEFAULT"]
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "Number of items that the response returns per page.",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64",
              "example": 100,
              "default": 100
            }
          },
          {
            "$ref": "#/components/parameters/pageNum"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAvailableVersionView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/containers": {
      "get": {
        "tags": ["Network Peering"],
        "summary": "Return All Network Peering Containers in One Project for One Cloud Provider",
        "description": "Returns details about all network peering containers in the specified project for the specified cloud provider. If you do not specify the cloud provider, MongoDB Cloud returns details about all network peering containers in the project for Amazon Web Services (AWS). To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listPeeringContainerByCloudProvider",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "providerName",
            "in": "query",
            "description": "Cloud service provider that serves the desired network peering containers.",
            "required": true,
            "schema": {
              "type": "string",
              "default": "AWS",
              "enum": ["AWS", "AZURE", "GCP"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCloudProviderContainerView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "post": {
        "tags": ["Network Peering"],
        "summary": "Create One New Network Peering Container",
        "description": "Creates one new network peering container in the specified project. MongoDB Cloud can deploy Network Peering connections in a network peering container. GCP can have one container per project. AWS and Azure can have one container per cloud provider region. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "createPeeringContainer",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Creates one new network peering container in the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/CloudProviderContainer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudProviderContainer"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/containers/{containerId}": {
      "get": {
        "tags": ["Network Peering"],
        "summary": "Return One Network Peering Container",
        "description": "Returns details about one network peering container in one specified project. Network peering containers contain network peering connections. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getPeeringContainer",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "containerId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud network container.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudProviderContainer"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "delete": {
        "tags": ["Network Peering"],
        "summary": "Remove One Network Peering Container",
        "description": "Removes one network peering container in the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "deletePeeringContainer",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "containerId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud network container that you want to remove.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "patch": {
        "tags": ["Network Peering"],
        "summary": "Update One Network Peering Container",
        "description": "Updates the network details and labels of one specified network peering container in the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "updatePeeringContainer",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "containerId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud network container that you want to remove.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          }
        ],
        "requestBody": {
          "description": "Updates the network details and labels of one specified network peering container in the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/CloudProviderContainer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudProviderContainer"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/containers/all": {
      "get": {
        "tags": ["Network Peering"],
        "summary": "Return All Network Peering Containers in One Project",
        "description": "Returns details about all network peering containers in the specified project. Network peering containers contain network peering connections. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listPeeringContainers",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCloudProviderContainerView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/status": {
      "get": {
        "tags": ["Clusters"],
        "summary": "Return Status of All Cluster Operations",
        "description": "Returns the status of all changes that you made to the specified cluster in the specified project. Use this resource to check the progress MongoDB Cloud has made in processing your changes. The response does not include the deployment of new dedicated clusters. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getClusterStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterStatus"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/outageSimulation": {
      "get": {
        "tags": ["Cluster Outage Simulation"],
        "summary": "Return One Outage Simulation",
        "description": "Returns one outage simulation for one cluster.",
        "externalDocs": {
          "description": "Cluster Outage Simulation",
          "url": "https://dochub.mongodb.org/core/test-regional-outage"
        },
        "operationId": "getOutageSimulation",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster that is undergoing outage simulation.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterOutageSimulation"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "post": {
        "tags": ["Cluster Outage Simulation"],
        "summary": "Start an Outage Simulation",
        "description": "Starts a cluster outage simulation.",
        "externalDocs": {
          "description": "Cluster Outage Simulation",
          "url": "https://dochub.mongodb.org/core/test-regional-outage"
        },
        "operationId": "startOutageSimulation",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster to undergo an outage simulation.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Describes the outage simulation.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterOutageSimulation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterOutageSimulation"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "delete": {
        "tags": ["Cluster Outage Simulation"],
        "summary": "End an Outage Simulation",
        "description": "Ends a cluster outage simulation.",
        "externalDocs": {
          "description": "Cluster Outage Simulation",
          "url": "https://dochub.mongodb.org/core/test-regional-outage"
        },
        "operationId": "endOutageSimulation",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster that is undergoing outage simulation.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterOutageSimulation"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/customDBRoles/roles": {
      "get": {
        "tags": ["Custom Database Roles"],
        "summary": "Return All Custom Roles in One Project",
        "description": "Returns all custom roles for the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listCustomDatabaseRoles",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserCustomDBRole"
                  }
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "post": {
        "tags": ["Custom Database Roles"],
        "summary": "Create One Custom Role",
        "description": "Creates one custom role in the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "createCustomDatabaseRole",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Creates one custom role in the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/UserCustomDBRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCustomDBRole"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/customDBRoles/roles/{roleName}": {
      "get": {
        "tags": ["Custom Database Roles"],
        "summary": "Return One Custom Role in One Project",
        "description": "Returns one custom role for the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getCustomDatabaseRole",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "roleName",
            "in": "path",
            "description": "Human-readable label that identifies the role for the request. This name must be unique for this custom role in this project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCustomDBRole"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "delete": {
        "tags": ["Custom Database Roles"],
        "summary": "Remove One Custom Role from One Project",
        "description": "Removes one custom role from the specified project. You can't remove a custom role that would leave one or more child roles with no parent roles or actions. You also can't remove a custom role that would leave one or more database users without roles. To use this resource, the requesting API Key must have the Project Atlas Admin role.",
        "operationId": "deleteCustomDatabaseRole",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "roleName",
            "in": "path",
            "description": "Human-readable label that identifies the role for the request. This name must be unique for this custom role in this project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "patch": {
        "tags": ["Custom Database Roles"],
        "summary": "Update One Custom Role in One Project",
        "description": "Updates one custom role in the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "updateCustomDatabaseRole",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "roleName",
            "in": "path",
            "description": "Human-readable label that identifies the role for the request. This name must beunique for this custom role in this project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updates one custom role in the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomDBRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCustomDBRole"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/databaseUsers": {
      "get": {
        "tags": ["Database Users"],
        "summary": "Return All Database Users from One Project",
        "description": "Returns all database users that belong to the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listDatabaseUsers",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedApiAtlasDatabaseUserView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "post": {
        "tags": ["Database Users"],
        "summary": "Create One Database User in One Project",
        "description": "Creates one database user in the specified project. This MongoDB Cloud supports a maximum of 100 database users per project. If you require more than 100 database users on a project, contact [Support](https://cloud.mongodb.com/support). To use this resource, the requesting API Key must have the Project Owner or Project Charts Admin roles.",
        "operationId": "createDatabaseUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Creates one database user in the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/CloudDatabaseUser"
              },
              "examples": {
                "AWS IAM Authentication": {
                  "description": "AWS IAM Authentication",
                  "value": {
                    "databaseName": "$external",
                    "awsIAMType": "USER",
                    "roles": [
                      {
                        "databaseName": "sales",
                        "roleName": "readWrite"
                      },
                      {
                        "databaseName": "marketing",
                        "roleName": "read"
                      }
                    ],
                    "scopes": [
                      {
                        "name": "myCluster",
                        "type": "CLUSTER"
                      }
                    ],
                    "groupId": "32b6e34b3d91647abb20e7b8",
                    "username": "arn:aws:iam::358363220050:user/mongodb-aws-iam-auth-test-user"
                  }
                },
                "LDAP Authentication": {
                  "description": "LDAP Authentication",
                  "value": {
                    "databaseName": "admin",
                    "ldapAuthType": "GROUP",
                    "roles": [
                      {
                        "databaseName": "sales",
                        "roleName": "readWrite"
                      },
                      {
                        "databaseName": "marketing",
                        "roleName": "read"
                      }
                    ],
                    "scopes": [
                      {
                        "name": "myCluster",
                        "type": "CLUSTER"
                      }
                    ],
                    "groupId": "32b6e34b3d91647abb20e7b8",
                    "username": "CN=marketing,OU=groups,DC=example,DC=com"
                  }
                },
                "SCRAM-SHA Authentication": {
                  "description": "SCRAM-SHA Authentication",
                  "value": {
                    "databaseName": "admin",
                    "password": "changeme123",
                    "roles": [
                      {
                        "databaseName": "sales",
                        "roleName": "readWrite"
                      },
                      {
                        "databaseName": "marketing",
                        "roleName": "read"
                      }
                    ],
                    "scopes": [
                      {
                        "name": "myCluster",
                        "type": "CLUSTER"
                      }
                    ],
                    "groupId": "32b6e34b3d91647abb20e7b8",
                    "username": "david"
                  }
                },
                "X509 Authentication": {
                  "description": "X509 Authentication",
                  "value": {
                    "databaseName": "$external",
                    "x509Type": "CUSTOMER",
                    "roles": [
                      {
                        "databaseName": "sales",
                        "roleName": "readWrite"
                      },
                      {
                        "databaseName": "marketing",
                        "roleName": "read"
                      }
                    ],
                    "scopes": [
                      {
                        "name": "myCluster",
                        "type": "CLUSTER"
                      }
                    ],
                    "groupId": "32b6e34b3d91647abb20e7b8",
                    "username": "CN=david@example.com,OU=users,DC=example,DC=com"
                  }
                },
                "OIDC Workforce Federated Authentication": {
                  "description": "OIDC Workforce Federated Authentication",
                  "value": {
                    "databaseName": "admin",
                    "oidcAuthType": "IDP_GROUP",
                    "roles": [
                      {
                        "databaseName": "sales",
                        "roleName": "readWrite"
                      },
                      {
                        "databaseName": "marketing",
                        "roleName": "read"
                      }
                    ],
                    "scopes": [
                      {
                        "name": "myCluster",
                        "type": "CLUSTER"
                      }
                    ],
                    "groupId": "32b6e34b3d91647abb20e7b8",
                    "username": "5dd7496c7a3e5a648454341c/sales"
                  }
                },
                "OIDC Workload Federated Authentication": {
                  "description": "OIDC Workload Federated Authentication",
                  "value": {
                    "databaseName": "$external",
                    "oidcAuthType": "USER",
                    "roles": [
                      {
                        "databaseName": "sales",
                        "roleName": "readWrite"
                      },
                      {
                        "databaseName": "marketing",
                        "roleName": "read"
                      }
                    ],
                    "scopes": [
                      {
                        "name": "myCluster",
                        "type": "CLUSTER"
                      }
                    ],
                    "groupId": "32b6e34b3d91647abb20e7b8",
                    "username": "5dd7496c7a3e5a648454341c/sales"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudDatabaseUser"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/databaseUsers/{databaseName}/{username}": {
      "get": {
        "tags": ["Database Users"],
        "summary": "Return One Database User from One Project",
        "description": "Returns one database user that belong to the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getDatabaseUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The database against which the database user authenticates. Database users must provide both a username and authentication database to log into MongoDB. If the user authenticates with AWS IAM, x.509, LDAP, or OIDC Workload this value should be `$external`. If the user authenticates with SCRAM-SHA or OIDC Workforce, this value should be `admin`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "path",
            "description": "Human-readable label that represents the user that authenticates to MongoDB. The format of this label depends on the method of authentication:\n\n| Authentication Method | Parameter Needed | Parameter Value | username Format |\n|---|---|---|---|\n| AWS IAM | awsIAMType | ROLE | <abbr title=\"Amazon Resource Name\">ARN</abbr> |\n| AWS IAM | awsIAMType | USER | <abbr title=\"Amazon Resource Name\">ARN</abbr> |\n| x.509 | x509Type | CUSTOMER | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| x.509 | x509Type | MANAGED | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| LDAP | ldapAuthType | USER | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| LDAP | ldapAuthType | GROUP | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| OIDC Workforce | oidcAuthType | IDP_GROUP | Atlas OIDC IdP ID (found in federation settings), followed by a '/', followed by the IdP group name |\n| OIDC Workload | oidcAuthType | USER | Atlas OIDC IdP ID (found in federation settings), followed by a '/', followed by the IdP user name |\n| SCRAM-SHA | awsIAMType, x509Type, ldapAuthType, oidcAuthType | NONE | Alphanumeric string |\n",
            "required": true,
            "schema": {
              "type": "string",
              "example": "SCRAM-SHA: dylan or AWS IAM: arn:aws:iam::123456789012:user/sales/enterprise/DylanBloggs or x.509/LDAP: CN=Dylan Bloggs,OU=Enterprise,OU=Sales,DC=Example,DC=COM or OIDC: IdPIdentifier/IdPGroupName"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudDatabaseUser"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "delete": {
        "tags": ["Database Users"],
        "summary": "Remove One Database User from One Project",
        "description": "Removes one database user from the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "deleteDatabaseUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The database against which the database user authenticates. Database users must provide both a username and authentication database to log into MongoDB. If the user authenticates with AWS IAM, x.509, LDAP, or OIDC Workload this value should be `$external`. If the user authenticates with SCRAM-SHA or OIDC Workforce, this value should be `admin`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "path",
            "description": "Human-readable label that represents the user that authenticates to MongoDB. The format of this label depends on the method of authentication:\n\n| Authentication Method | Parameter Needed | Parameter Value | username Format |\n|---|---|---|---|\n| AWS IAM | awsIAMType | ROLE | <abbr title=\"Amazon Resource Name\">ARN</abbr> |\n| AWS IAM | awsIAMType | USER | <abbr title=\"Amazon Resource Name\">ARN</abbr> |\n| x.509 | x509Type | CUSTOMER | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| x.509 | x509Type | MANAGED | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| LDAP | ldapAuthType | USER | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| LDAP | ldapAuthType | GROUP | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| OIDC Workforce | oidcAuthType | IDP_GROUP | Atlas OIDC IdP ID (found in federation settings), followed by a '/', followed by the IdP group name |\n| OIDC Workload | oidcAuthType | USER | Atlas OIDC IdP ID (found in federation settings), followed by a '/', followed by the IdP user name |\n| SCRAM-SHA | awsIAMType, x509Type, ldapAuthType, oidcAuthType | NONE | Alphanumeric string |\n",
            "required": true,
            "schema": {
              "type": "string",
              "example": "SCRAM-SHA: dylan or AWS IAM: arn:aws:iam::123456789012:user/sales/enterprise/DylanBloggs or x.509/LDAP: CN=Dylan Bloggs,OU=Enterprise,OU=Sales,DC=Example,DC=COM or OIDC: IdPIdentifier/IdPGroupName"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "patch": {
        "tags": ["Database Users"],
        "summary": "Update One Database User in One Project",
        "description": "Updates one database user that belongs to the specified project. To use this resource, the requesting API Key must have the Project Owner or Project Charts Admin roles.",
        "operationId": "updateDatabaseUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The database against which the database user authenticates. Database users must provide both a username and authentication database to log into MongoDB. If the user authenticates with AWS IAM, x.509, LDAP, or OIDC Workload this value should be `$external`. If the user authenticates with SCRAM-SHA or OIDC Workforce, this value should be `admin`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "path",
            "description": "Human-readable label that represents the user that authenticates to MongoDB. The format of this label depends on the method of authentication:\n\n| Authentication Method | Parameter Needed | Parameter Value | username Format |\n|---|---|---|---|\n| AWS IAM | awsIAMType | ROLE | <abbr title=\"Amazon Resource Name\">ARN</abbr> |\n| AWS IAM | awsIAMType | USER | <abbr title=\"Amazon Resource Name\">ARN</abbr> |\n| x.509 | x509Type | CUSTOMER | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| x.509 | x509Type | MANAGED | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| LDAP | ldapAuthType | USER | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| LDAP | ldapAuthType | GROUP | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| OIDC Workforce | oidcAuthType | IDP_GROUP | Atlas OIDC IdP ID (found in federation settings), followed by a '/', followed by the IdP group name |\n| OIDC Workload | oidcAuthType | USER | Atlas OIDC IdP ID (found in federation settings), followed by a '/', followed by the IdP user name |\n| SCRAM-SHA | awsIAMType, x509Type, ldapAuthType, oidcAuthType | NONE | Alphanumeric string |\n",
            "required": true,
            "schema": {
              "type": "string",
              "example": "SCRAM-SHA: dylan or AWS IAM: arn:aws:iam::123456789012:user/sales/enterprise/DylanBloggs or x.509/LDAP: CN=Dylan Bloggs,OU=Enterprise,OU=Sales,DC=Example,DC=COM or OIDC: IdPIdentifier/IdPGroupName"
            }
          }
        ],
        "requestBody": {
          "description": "Updates one database user that belongs to the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/CloudDatabaseUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudDatabaseUser"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/databaseUsers/{username}/certs": {
      "get": {
        "tags": ["X.509 Authentication"],
        "summary": "Return All X.509 Certificates Assigned to One MongoDB User",
        "description": "Returns all unexpired X.509 certificates for the specified MongoDB user. This MongoDB user belongs to one project. Atlas manages these certificates and the MongoDB user. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listDatabaseUserCertificates",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "username",
            "in": "path",
            "description": "Human-readable label that represents the MongoDB database user account whose certificates you want to return.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedUserCertView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "post": {
        "tags": ["X.509 Authentication"],
        "summary": "Create One X.509 Certificate for One MongoDB User",
        "description": "Generates one X.509 certificate for the specified MongoDB user. Atlas manages the certificate and MongoDB user that belong to one project. To use this resource, the requesting API Key must have the Project Owner role.\n\nTo get MongoDB Cloud to generate a managed certificate for a database user, set `\"x509Type\" : \"MANAGED\"` on the desired MongoDB Database User.\n\nIf you are managing your own Certificate Authority (CA) in Self-Managed X.509 mode, you must generate certificates for database users using your own CA.",
        "externalDocs": {
          "description": "Self-Managed X.509",
          "url": "https://www.mongodb.com/docs/atlas/security-self-managed-x509/#std-label-self-managed-x509"
        },
        "operationId": "createDatabaseUserCertificate",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "username",
            "in": "path",
            "description": "Human-readable label that represents the MongoDB database user account for whom to create a certificate.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Generates one X.509 certificate for the specified MongoDB user.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/UserCert"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "This endpoint returns a PEM file with the certificate and private key.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "type": "string",
                  "description": "PEM file that contains the user's X.509 certificate and private key."
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/maintenanceWindow/defer": {
      "post": {
        "tags": ["Maintenance Windows"],
        "summary": "Defer One Maintenance Window for One Project",
        "description": "Defers the maintenance window for the specified project. Urgent maintenance activities such as security patches can't wait for your chosen window. MongoDB Cloud starts those maintenance activities when needed. After you schedule maintenance for your cluster, you can't change your maintenance window until the current maintenance efforts complete. The maintenance procedure that MongoDB Cloud performs requires at least one replica set election during the maintenance window per replica set. Maintenance always begins as close to the scheduled hour as possible, but in-progress cluster updates or unexpected system issues could delay the start time. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "deferMaintenanceWindow",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/maintenanceWindow": {
      "get": {
        "tags": ["Maintenance Windows"],
        "summary": "Return One Maintenance Window for One Project",
        "description": "Returns the maintenance window for the specified project. MongoDB Cloud starts those maintenance activities when needed. You can't change your maintenance window until the current maintenance efforts complete. The maintenance procedure that MongoDB Cloud performs requires at least one replica set election during the maintenance window per replica set. Maintenance always begins as close to the scheduled hour as possible, but in-progress cluster updates or unexpected system issues could delay the start time. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "getMaintenanceWindow",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupMaintenanceWindow"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "delete": {
        "tags": ["Maintenance Windows"],
        "summary": "Reset One Maintenance Window for One Project",
        "description": "Resets the maintenance window for the specified project. To use this resource, the requesting API Key must have the Project Owner role. Urgent maintenance activities such as security patches can't wait for your chosen window. MongoDB Cloud starts those maintenance activities when needed. After you schedule maintenance for your cluster, you can't change your maintenance window until the current maintenance efforts complete. The maintenance procedure that MongoDB Cloud performs requires at least one replica set election during the maintenance window per replica set. Maintenance always begins as close to the scheduled hour as possible, but in-progress cluster updates or unexpected system issues could delay the start time. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "resetMaintenanceWindow",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "patch": {
        "tags": ["Maintenance Windows"],
        "summary": "Update Maintenance Window for One Project",
        "description": "Updates the maintenance window for the specified project. Urgent maintenance activities such as security patches can't wait for your chosen window. MongoDB Cloud starts those maintenance activities when needed. After you schedule maintenance for your cluster, you can't change your maintenance window until the current maintenance efforts complete. The maintenance procedure that MongoDB Cloud performs requires at least one replica set election during the maintenance window per replica set. Maintenance always begins as close to the scheduled hour as possible, but in-progress cluster updates or unexpected system issues could delay the start time. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "updateMaintenanceWindow",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ],
        "requestBody": {
          "description": "Updates the maintenance window for the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupMaintenanceWindow"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/maintenanceWindow/autoDefer": {
      "post": {
        "tags": ["Maintenance Windows"],
        "summary": "Toggle Automatic Deferral of Maintenance for One Project",
        "description": "Toggles automatic deferral of the maintenance window for the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "toggleMaintenanceAutoDefer",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/tenantUpgrade": {
      "post": {
        "tags": ["Clusters"],
        "summary": "Upgrade One Shared-tier Cluster",
        "description": "Upgrades a shared-tier cluster in the specified project. To use this resource, the requesting API key must have the Project Cluster Manager role. Each project supports up to 25 clusters.",
        "operationId": "upgradeSharedCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Details of the shared-tier cluster upgrade in the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/LegacyAtlasTenantClusterUpgradeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyAtlasCluster"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "402": {
            "$ref": "#/components/responses/paymentRequired"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/tenantUpgradeToServerless": {
      "post": {
        "tags": ["Clusters"],
        "summary": "Upgrades One Shared-Tier Cluster to the Serverless Instance",
        "description": "Upgrades a shared-tier cluster to a serverless instance in the specified project. To use this resource, the requesting API key must have the Project Cluster Manager role.",
        "operationId": "upgradeSharedClusterToServerless",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Details of the shared-tier cluster upgrade in the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/ServerlessInstanceDescription"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerlessInstanceDescription"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "402": {
            "$ref": "#/components/responses/paymentRequired"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas"
      }
    },
    "/api/atlas/v2/groups/{groupId}/accessList": {
      "get": {
        "tags": ["Project IP Access List"],
        "summary": "Return Project IP Access List",
        "description": "Returns all access list entries from the specified project's IP access list. Each entry in the project's IP access list contains either one IP address or one CIDR-notated block of IP addresses. MongoDB Cloud only allows client connections to the cluster from entries in the project's IP access list. To use this resource, the requesting API Key must have the Project Read Only or Project Charts Admin roles. This resource replaces the whitelist resource. MongoDB Cloud removed whitelists in July 2021. Update your applications to use this new resource. The `/groups/{GROUP-ID}/accessList` endpoint manages the database IP access list. This endpoint is distinct from the `orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accesslist` endpoint, which manages the access list for MongoDB Cloud organizations.",
        "externalDocs": {
          "description": "IP access list",
          "url": "https://docs.atlas.mongodb.com/security/ip-access-list/#std-label-access-list"
        },
        "operationId": "listProjectIpAccessLists",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedNetworkAccessView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas"
      },
      "post": {
        "tags": ["Project IP Access List"],
        "summary": "Add Entries to Project IP Access List",
        "description": "Adds one or more access list entries to the specified project. MongoDB Cloud only allows client connections to the cluster from entries in the project's IP access list. Write each entry as either one IP address or one CIDR-notated block of IP addresses. To use this resource, the requesting API Key must have the Project Owner or Project Charts Admin roles. This resource replaces the whitelist resource. MongoDB Cloud removed whitelists in July 2021. Update your applications to use this new resource. The `/groups/{GROUP-ID}/accessList` endpoint manages the database IP access list. This endpoint is distinct from the `orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accesslist` endpoint, which manages the access list for MongoDB Cloud organizations. This endpoint doesn't support concurrent `POST` requests. You must submit multiple `POST` requests synchronously.",
        "externalDocs": {
          "description": "IP access list",
          "url": "https://docs.atlas.mongodb.com/security/ip-access-list/#std-label-access-list"
        },
        "operationId": "createProjectIpAccessList",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "One or more access list entries to add to the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NetworkPermissionEntry"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedNetworkAccessView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas"
      }
    },
    "/api/atlas/v2/groups/{groupId}/accessList/{entryValue}": {
      "get": {
        "tags": ["Project IP Access List"],
        "summary": "Return One Project IP Access List Entry",
        "description": "Returns one access list entry from the specified project's IP access list. Each entry in the project's IP access list contains either one IP address or one CIDR-notated block of IP addresses. MongoDB Cloud only allows client connections to the cluster from entries in the project's IP access list. To use this resource, the requesting API Key must have the Project Read Only or Project Charts Admin roles. This resource replaces the whitelist resource. MongoDB Cloud removed whitelists in July 2021. Update your applications to use this new resource. This endpoint (`/groups/{GROUP-ID}/accessList`) manages the Project IP Access List. It doesn't manage the access list for MongoDB Cloud organizations. TheProgrammatic API Keys endpoint (`/orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accesslist`) manages those access lists.",
        "externalDocs": {
          "description": "IP access list",
          "url": "https://docs.atlas.mongodb.com/security/ip-access-list/#std-label-access-list"
        },
        "operationId": "getProjectIpList",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "entryValue",
            "in": "path",
            "description": "Access list entry that you want to return from the project's IP access list. This value can use one of the following: one AWS security group ID, one IP address, or one CIDR block of addresses. For CIDR blocks that use a subnet mask, replace the forward slash (`/`) with its URL-encoded value (`%2F`).",
            "required": true,
            "schema": {
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){7}[0-9a-f]{1,4}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){1,6}\\:(%2[fF][0-9]{1,3})|(sg\\-[a-f0-9]{8})?$",
              "type": "string",
              "example": "IPv4: 192.0.2.0%2F24 or IPv6: 2001:db8:85a3:8d3:1319:8a2e:370:7348 or IPv4 CIDR: 198.51.100.0%2f24 or IPv6 CIDR: 2001:db8::%2f58 or AWS SG: sg-903004f8"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkPermissionEntry"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas"
      },
      "delete": {
        "tags": ["Project IP Access List"],
        "summary": "Remove One Entry from One Project IP Access List",
        "description": "Removes one access list entry from the specified project's IP access list. Each entry in the project's IP access list contains one IP address, one CIDR-notated block of IP addresses, or one AWS Security Group ID. MongoDB Cloud only allows client connections to the cluster from entries in the project's IP access list. To use this resource, the requesting API Key must have the Project Owner role. This resource replaces the whitelist resource. MongoDB Cloud removed whitelists in July 2021. Update your applications to use this new resource. The `/groups/{GROUP-ID}/accessList` endpoint manages the database IP access list. This endpoint is distinct from the `orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accesslist` endpoint, which manages the access list for MongoDB Cloud organizations.",
        "externalDocs": {
          "description": "IP access list",
          "url": "https://docs.atlas.mongodb.com/security/ip-access-list/#std-label-access-list"
        },
        "operationId": "deleteProjectIpAccessList",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "entryValue",
            "in": "path",
            "description": "Access list entry that you want to remove from the project's IP access list. This value can use one of the following: one AWS security group ID, one IP address, or one CIDR block of addresses. For CIDR blocks that use a subnet mask, replace the forward slash (`/`) with its URL-encoded value (`%2F`). When you remove an entry from the IP access list, existing connections from the removed address or addresses may remain open for a variable amount of time. The amount of time it takes MongoDB Cloud to close the connection depends upon several factors, including:\n\n- how your application established the connection,\n- how MongoDB Cloud or the driver using the address behaves, and\n- which protocol (like TCP or UDP) the connection uses.",
            "required": true,
            "schema": {
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){7}[0-9a-f]{1,4}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){1,6}\\:(%2[fF][0-9]{1,3})|(sg\\-[a-f0-9]{8})?$",
              "type": "string",
              "example": "IPv4: 192.0.2.0%2F24 or IPv6: 2001:db8:85a3:8d3:1319:8a2e:370:7348 or IPv4 CIDR: 198.51.100.0%2f24 or IPv6 CIDR: 2001:db8::%2f58 or AWS SG: sg-903004f8"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas"
      }
    },
    "/api/atlas/v2/groups/{groupId}/accessList/{entryValue}/status": {
      "get": {
        "tags": ["Project IP Access List"],
        "summary": "Return Status of One Project IP Access List Entry",
        "description": "Returns the status of one project IP access list entry. This resource checks if the provided project IP access list entry applies to all cloud providers serving clusters from the specified project.",
        "operationId": "getProjectIpAccessListStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "entryValue",
            "in": "path",
            "description": "Network address or cloud provider security construct that identifies which project access list entry to be verified.",
            "required": true,
            "schema": {
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){7}[0-9a-f]{1,4}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){1,6}\\:(%2[fF][0-9]{1,3})|(sg\\-[a-f0-9]{8})?$",
              "type": "string",
              "example": "IPv4: 192.0.2.0%2F24 or IPv6: 2001:db8:85a3:8d3:1319:8a2e:370:7348 or IPv4 CIDR: 198.51.100.0%2f24 or IPv6 CIDR: 2001:db8::%2f58 or AWS SG: sg-903004f8"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkPermissionEntryStatus"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas"
      }
    },
    "/api/atlas/v2/groups/{groupId}/peers": {
      "get": {
        "tags": ["Network Peering"],
        "summary": "Return All Network Peering Connections in One Project",
        "description": "Returns details about all network peering connections in the specified project. Network peering allows multiple cloud-hosted applications to securely connect to the same project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listPeeringConnections",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "providerName",
            "in": "query",
            "description": "Cloud service provider to use for this VPC peering connection.",
            "schema": {
              "type": "string",
              "default": "AWS",
              "enum": ["AWS", "AZURE", "GCP"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedContainerPeerView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "post": {
        "tags": ["Network Peering"],
        "summary": "Create One New Network Peering Connection",
        "description": "Creates one new network peering connection in the specified project. Network peering allows multiple cloud-hosted applications to securely connect to the same project. To use this resource, the requesting API Key must have the Project Owner role. To learn more about considerations and prerequisites, see the Network Peering Documentation.",
        "externalDocs": {
          "description": "Azure Network Peering Prerequisites",
          "url": "https://docs.atlas.mongodb.com/reference/api/vpc-create-peering-connection/#prerequisites"
        },
        "operationId": "createPeeringConnection",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Create one network peering connection.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/BaseNetworkPeeringConnectionSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseNetworkPeeringConnectionSettings"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/peers/{peerId}": {
      "get": {
        "tags": ["Network Peering"],
        "summary": "Return One Network Peering Connection in One Project",
        "description": "Returns details about one specified network peering connection in the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getPeeringConnection",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "peerId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the network peering connection that you want to retrieve.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseNetworkPeeringConnectionSettings"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "delete": {
        "tags": ["Network Peering"],
        "summary": "Remove One Existing Network Peering Connection",
        "description": "Removes one network peering connection in the specified project. If you Removes the last network peering connection associated with a project, MongoDB Cloud also removes any AWS security groups from the project IP access list. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "deletePeeringConnection",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "peerId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the network peering connection that you want to delete.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestAccepted"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "patch": {
        "tags": ["Network Peering"],
        "summary": "Update One New Network Peering Connection",
        "description": "Updates one specified network peering connection in the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "updatePeeringConnection",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "peerId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the network peering connection that you want to update.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Modify one network peering connection.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/BaseNetworkPeeringConnectionSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseNetworkPeeringConnectionSettings"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/privateEndpoint/endpointService": {
      "post": {
        "tags": ["Private Endpoint Services"],
        "summary": "Create One Private Endpoint Service for One Provider",
        "description": "Creates one private endpoint service for the specified cloud service provider. This cloud service provider manages the private endpoint service for the project. When you create a private endpoint service, MongoDB Cloud creates a network container in the project for the cloud provider for which you create the private endpoint service if one doesn't already exist. To learn more about private endpoint terminology in MongoDB Cloud, see Private Endpoint Concepts. To use this resource, the requesting API Key must have the Project Owner role.",
        "externalDocs": {
          "description": "Private Endpoint Concepts",
          "url": "https://dochub.mongodb.org/core/private-endpoint-concepts"
        },
        "operationId": "createPrivateEndpointService",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Creates one private endpoint for the specified cloud service provider.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/CloudProviderEndpointServiceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointService"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/privateEndpoint/{cloudProvider}/endpointService/{endpointServiceId}/endpoint": {
      "post": {
        "tags": ["Private Endpoint Services"],
        "summary": "Create One Private Endpoint for One Provider",
        "description": "Creates one private endpoint for the specified cloud service provider. This cloud service provider manages the private endpoint service, which in turn manages the private endpoints for the project. To use this resource, the requesting API Key must have the Project Owner role. To learn more about considerations, limitations, and prerequisites, see the MongoDB documentation for setting up a private endpoint.",
        "operationId": "createPrivateEndpoint",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "cloudProvider",
            "in": "path",
            "description": "Cloud service provider that manages this private endpoint.",
            "required": true,
            "schema": {
              "type": "string",
              "default": "AWS",
              "enum": ["AWS", "AZURE", "GCP"]
            }
          },
          {
            "name": "endpointServiceId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the private endpoint service for which you want to create a private endpoint.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Creates one private endpoint for the specified cloud service provider.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEndpointRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateLinkEndpoint"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "402": {
            "$ref": "#/components/responses/paymentRequired"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/privateEndpoint/{cloudProvider}/endpointService/{endpointServiceId}/endpoint/{endpointId}": {
      "get": {
        "tags": ["Private Endpoint Services"],
        "summary": "Return One Private Endpoint for One Provider",
        "description": "Returns the connection state of the specified private endpoint. The private endpoint service manages this private endpoint which belongs to one project hosted from one cloud service provider. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getPrivateEndpoint",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "cloudProvider",
            "in": "path",
            "description": "Cloud service provider that manages this private endpoint.",
            "required": true,
            "schema": {
              "type": "string",
              "default": "AWS",
              "enum": ["AWS", "AZURE", "GCP"]
            }
          },
          {
            "name": "endpointId",
            "in": "path",
            "description": "Unique string that identifies the private endpoint you want to return. The format of the **endpointId** parameter differs for AWS and Azure. You must URL encode the **endpointId** for Azure private endpoints.",
            "required": true,
            "schema": {
              "pattern": "^vpce-[0-9a-f]{17}|^%2[fF]subscriptions%2[fF][0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}%2[fF]resource[gG]roups%2[fF]([-\\w._()]+)%2[fF]providers%2[fF]Microsoft\\.Network%2[fF]privateEndpoints%2[fF]([-\\w._()]+)",
              "type": "string"
            }
          },
          {
            "name": "endpointServiceId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the private endpoint service for which you want to return a private endpoint.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateLinkEndpoint"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "delete": {
        "tags": ["Private Endpoint Services"],
        "summary": "Remove One Private Endpoint for One Provider",
        "description": "Removes one private endpoint from the specified project and private endpoint service, as managed by the specified cloud service provider. When the last private endpoint is removed from a given private endpoint service, that private endpoint service is also removed. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "deletePrivateEndpoint",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "cloudProvider",
            "in": "path",
            "description": "Cloud service provider that manages this private endpoint.",
            "required": true,
            "schema": {
              "type": "string",
              "default": "AWS",
              "enum": ["AWS", "AZURE", "GCP"]
            }
          },
          {
            "name": "endpointId",
            "in": "path",
            "description": "Unique string that identifies the private endpoint you want to delete. The format of the **endpointId** parameter differs for AWS and Azure. You must URL encode the **endpointId** for Azure private endpoints.",
            "required": true,
            "schema": {
              "pattern": "^vpce-[0-9a-f]{17}|^%2[fF]subscriptions%2[fF][0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}%2[fF]resource[gG]roups%2[fF]([-\\w._()]+)%2[fF]providers%2[fF]Microsoft\\.Network%2[fF]privateEndpoints%2[fF]([-\\w._()]+)",
              "type": "string"
            }
          },
          {
            "name": "endpointServiceId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the private endpoint service from which you want to delete a private endpoint.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/privateEndpoint/{cloudProvider}/endpointService/{endpointServiceId}": {
      "get": {
        "tags": ["Private Endpoint Services"],
        "summary": "Return One Private Endpoint Service for One Provider",
        "description": "Returns the name, interfaces, and state of the specified private endpoint service from one project. The cloud service provider hosted this private endpoint service that belongs to the project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getPrivateEndpointService",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "cloudProvider",
            "in": "path",
            "description": "Cloud service provider that manages this private endpoint service.",
            "required": true,
            "schema": {
              "type": "string",
              "default": "AWS",
              "enum": ["AWS", "AZURE", "GCP"]
            }
          },
          {
            "name": "endpointServiceId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the private endpoint service that you want to return.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointService"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "delete": {
        "tags": ["Private Endpoint Services"],
        "summary": "Remove One Private Endpoint Service for One Provider",
        "description": "Removes one private endpoint service from the specified project. This cloud service provider manages the private endpoint service that belongs to the project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "deletePrivateEndpointService",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "cloudProvider",
            "in": "path",
            "description": "Cloud service provider that manages this private endpoint service.",
            "required": true,
            "schema": {
              "type": "string",
              "default": "AWS",
              "enum": ["AWS", "AZURE", "GCP"]
            }
          },
          {
            "name": "endpointServiceId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the private endpoint service that you want to delete.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/privateEndpoint/{cloudProvider}/endpointService": {
      "get": {
        "tags": ["Private Endpoint Services"],
        "summary": "Return All Private Endpoint Services for One Provider",
        "description": "Returns the name, interfaces, and state of all private endpoint services for the specified cloud service provider. This cloud service provider manages the private endpoint service for the project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listPrivateEndpointServices",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "cloudProvider",
            "in": "path",
            "description": "Cloud service provider that manages this private endpoint service.",
            "required": true,
            "schema": {
              "type": "string",
              "default": "AWS",
              "enum": ["AWS", "AZURE", "GCP"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EndpointService"
                  }
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/privateEndpoint/regionalMode": {
      "get": {
        "tags": ["Private Endpoint Services"],
        "summary": "Return Regionalized Private Endpoint Status",
        "description": "Checks whether each region in the specified cloud service provider can create multiple private endpoints per region. The cloud service provider manages the private endpoint for the project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getRegionalizedPrivateEndpointSetting",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSettingItemView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "patch": {
        "tags": ["Private Endpoint Services"],
        "summary": "Toggle Regionalized Private Endpoint Status",
        "description": "Enables or disables the ability to create multiple private endpoints per region in all cloud service providers in one project. The cloud service provider manages the private endpoints for the project. Connection strings to existing multi-region and global sharded clusters change when you enable this setting. You must update your applications to use the new connection strings. This might cause downtime. To use this resource, the requesting API Key must have the Project Owner role and all clusters in the deployment must be sharded clusters. Once enabled, you cannot create replica sets.",
        "operationId": "toggleRegionalizedPrivateEndpointSetting",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Enables or disables the ability to create multiple private endpoints per region in all cloud service providers in one project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectSettingItemView"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSettingItemView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/privateIpMode": {
      "get": {
        "tags": ["Network Peering"],
        "summary": "Verify Connect via Peering Only Mode for One Project",
        "description": "Verifies if someone set the specified project to **Connect via Peering Only** mode. To use this resource, the requesting API Key must have the Project Read Only role.",
        "externalDocs": {
          "description": "Changes to Connection Strings",
          "url": "https://docs.atlas.mongodb.com/reference/faq/connection-changes/"
        },
        "operationId": "verifyConnectViaPeeringOnlyModeForOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateIPModeView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "deprecated": true,
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "patch": {
        "tags": ["Network Peering"],
        "summary": "Disable Connect via Peering Only Mode for One Project",
        "description": "Disables Connect via Peering Only mode for the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "externalDocs": {
          "description": "Changes to Connection Strings",
          "url": "https://docs.atlas.mongodb.com/reference/faq/connection-changes/"
        },
        "operationId": "disablePeering",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Disables Connect via Peering Only mode for the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/PrivateIPModeView"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateIPModeView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "deprecated": true,
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/privateNetworkSettings/endpointIds": {
      "get": {
        "tags": ["Data Federation"],
        "summary": "Return All Federated Database Instance and Online Archive Private Endpoints in One Project",
        "description": "Returns all private endpoints for Federated Database Instances and Online Archives in the specified project. To use this resource, the requesting API Key must have the Project Read Only or Project Charts Admin roles.",
        "operationId": "listDataFederationPrivateEndpoints",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedPrivateNetworkEndpointIdEntryView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Online Archive II"
      },
      "post": {
        "tags": ["Data Federation"],
        "summary": "Create One Federated Database Instance and Online Archive Private Endpoint for One Project",
        "description": "Adds one private endpoint for Federated Database Instances and Online Archives to the specified projects. If the endpoint ID already exists and the associated comment is unchanged, Atlas Data Federation makes no change to the endpoint ID list. If the endpoint ID already exists and the associated comment is changed, Atlas Data Federation updates the comment value only in the endpoint ID list. If the endpoint ID doesn't exist, Atlas Data Federation appends the new endpoint to the list of endpoints in the endpoint ID list. Each region has an associated service name for the various endpoints in each region.\n\n `us-east-1` is `com.amazonaws.vpce.us-east-1.vpce-svc-00e311695874992b4`.\n\n `us-west-1` is `com.amazonaws.vpce.us-west-2.vpce-svc-09d86b19e59d1b4bb`.\n\n `eu-west-1` is `com.amazonaws.vpce.eu-west-1.vpce-svc-0824460b72e1a420e`.\n\n `eu-west-2` is `com.amazonaws.vpce.eu-west-2.vpce-svc-052f1840aa0c4f1f9`.\n\n `eu-central-1` is `com.amazonaws.vpce.eu-central-1.vpce-svc-0ac8ce91871138c0d`.\n\n `sa-east-1` is `com.amazonaws.vpce.sa-east-1.vpce-svc-0b56e75e8cdf50044`.\n\n `ap-southeast-2` is `com.amazonaws.vpce.ap-southeast-2.vpce-svc-036f1de74d761706e`.\n\n `ap-south-1` is `com.amazonaws.vpce.ap-south-1.vpce-svc-03eb8a541f96d356d`.\n\n To use this resource, the requesting API Key must have the Project Owner or Project Charts Admin roles.",
        "operationId": "createDataFederationPrivateEndpoint",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Private endpoint for Federated Database Instances and Online Archives to add to the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/PrivateNetworkEndpointIdEntry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedPrivateNetworkEndpointIdEntryView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Online Archive II"
      }
    },
    "/api/atlas/v2/groups/{groupId}/privateNetworkSettings/endpointIds/{endpointId}": {
      "get": {
        "tags": ["Data Federation"],
        "summary": "Return One Federated Database Instance and Online Archive Private Endpoint in One Project",
        "description": "Returns the specified private endpoint for Federated Database Instances or Online Archives in the specified project. To use this resource, the requesting API Key must have the Project Read Only or Project Charts Admin roles.",
        "operationId": "getDataFederationPrivateEndpoint",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "endpointId",
            "in": "path",
            "description": "Unique 22-character alphanumeric string that identifies the private endpoint to return. Atlas Data Federation supports AWS private endpoints using the AWS PrivateLink feature.",
            "required": true,
            "schema": {
              "maxLength": 22,
              "minLength": 22,
              "pattern": "^vpce-[0-9a-f]{17}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateNetworkEndpointIdEntry"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Online Archive II"
      },
      "delete": {
        "tags": ["Data Federation"],
        "summary": "Remove One Federated Database Instance and Online Archive Private Endpoint from One Project",
        "description": "Removes one private endpoint for Federated Database Instances and Online Archives in the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "deleteDataFederationPrivateEndpoint",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "endpointId",
            "in": "path",
            "description": "Unique 22-character alphanumeric string that identifies the private endpoint to remove. Atlas Data Federation supports AWS private endpoints using the AWS PrivateLink feature.",
            "required": true,
            "schema": {
              "maxLength": 22,
              "minLength": 22,
              "pattern": "^vpce-[0-9a-f]{17}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Online Archive II"
      }
    },
    "/api/atlas/v2/groups/{groupId}/pushBasedLogExport": {
      "get": {
        "tags": ["Push-Based Log Export"],
        "summary": "Get the push-based log export configuration for a project",
        "description": "Fetches the current project level settings for the push-based log export feature.",
        "operationId": "getPushBasedLogConfiguration",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PushBasedLogExportProject"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "post": {
        "tags": ["Push-Based Log Export"],
        "summary": "Enable the push-based log export feature for a project",
        "description": "Configures the project level settings for the push-based log export feature.",
        "operationId": "createPushBasedLogConfiguration",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "The project configuration details. The S3 bucket name, IAM role ID, and prefix path fields are required.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePushBasedLogExportProjectRequest"
              },
              "x-xgen-version": "2023-01-01"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "delete": {
        "tags": ["Push-Based Log Export"],
        "summary": "Disable the push-based log export feature for a project",
        "description": "Disables the push-based log export feature by resetting the project level settings to its default configuration.",
        "operationId": "deletePushBasedLogConfiguration",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "patch": {
        "tags": ["Push-Based Log Export"],
        "summary": "Update the push-based log export feature for a project",
        "description": "Updates the project level settings for the push-based log export feature.",
        "operationId": "updatePushBasedLogConfiguration",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "The project configuration details. The S3 bucket name, IAM role ID, and prefix path fields are the only fields that may be specified. Fields left unspecified will not be modified.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/PushBasedLogExportProject"
              },
              "x-xgen-version": "2023-01-01"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/userSecurity/ldap/verify/{requestId}": {
      "get": {
        "tags": ["LDAP Configuration"],
        "summary": "Return the Status of One Verify LDAP Configuration Request",
        "description": "Returns the status of one request to verify one LDAP configuration for the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "getLDAPConfigurationStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "requestId",
            "in": "path",
            "description": "Unique string that identifies the request to verify an <abbr title=\"Lightweight Directory Access Protocol\">LDAP</abbr> configuration.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/LDAPVerifyConnectivityJobRequest"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/userSecurity/ldap/verify": {
      "post": {
        "tags": ["LDAP Configuration"],
        "summary": "Verify the LDAP Configuration in One Project",
        "description": "Verifies the LDAP configuration for the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "verifyLDAPConfiguration",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "The LDAP configuration for the specified project that you want to verify.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/LDAPVerifyConnectivityJobRequestParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/LDAPVerifyConnectivityJobRequest"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/userSecurity/ldap/userToDNMapping": {
      "delete": {
        "tags": ["LDAP Configuration"],
        "summary": "Remove the Current LDAP User to DN Mapping",
        "description": "Removes the current LDAP Distinguished Name mapping captured in the ``userToDNMapping`` document from the LDAP configuration for the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "deleteLDAPConfiguration",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSecurity"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/userSecurity/customerX509": {
      "delete": {
        "tags": ["X.509 Authentication"],
        "summary": "Disable Customer-Managed X.509",
        "description": "Clears the customer-managed X.509 settings on a project, including the uploaded Certificate Authority, which disables self-managed X.509.\n\n Updating this configuration triggers a rolling restart of the database. You must have the Project Owner role to use this endpoint.",
        "operationId": "disableCustomerManagedX509",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSecurity"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/userSecurity": {
      "get": {
        "tags": ["LDAP Configuration"],
        "summary": "Return the Current LDAP or X.509 Configuration",
        "description": "Returns the current LDAP configuration for the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "getLDAPConfiguration",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSecurity"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "patch": {
        "tags": ["LDAP Configuration"],
        "summary": "Edit the LDAP or X.509 Configuration",
        "description": "Edits the LDAP configuration for the specified project. To use this resource, the requesting API Key must have the Project Owner role.\n\nUpdating this configuration triggers a rolling restart of the database.",
        "operationId": "saveLDAPConfiguration",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Updates the LDAP configuration for the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/UserSecurity"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSecurity"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/globalWrites/customZoneMapping": {
      "post": {
        "tags": ["Global Clusters"],
        "summary": "Add One Entry to One Custom Zone Mapping",
        "description": "Creates one custom zone mapping for the specified global cluster. A custom zone mapping matches one ISO 3166-2 location code to a zone in your global cluster. By default, MongoDB Cloud maps each location code to the closest geographical zone. To use this resource, the requesting API Key must have the Project Owner role.",
        "externalDocs": {
          "description": "Global Clusters",
          "url": "https://www.mongodb.com/docs/atlas/global-clusters/"
        },
        "operationId": "createCustomZoneMapping",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies this cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Custom zone mapping to add to the specified global cluster.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomZoneMappings"
              }
            },
            "application/vnd.atlas.2023-02-01+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomZoneMappings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/GeoSharding"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2025-06-01"
              },
              "application/vnd.atlas.2023-02-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/GeoSharding"
                },
                "x-xgen-version": "2023-02-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "delete": {
        "tags": ["Global Clusters"],
        "summary": "Remove All Custom Zone Mappings from One Global Cluster",
        "description": "Removes all custom zone mappings for the specified global cluster. A custom zone mapping matches one ISO 3166-2 location code to a zone in your global cluster. Removing the custom zone mappings restores the default mapping. By default, MongoDB Cloud maps each location code to the closest geographical zone. To use this resource, the requesting API Key must have the Project Owner role.",
        "externalDocs": {
          "description": "Global Clusters",
          "url": "https://www.mongodb.com/docs/atlas/global-clusters/"
        },
        "operationId": "deleteAllCustomZoneMappings",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies this cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/GeoSharding"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2025-06-01"
              },
              "application/vnd.atlas.2023-02-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/GeoSharding"
                },
                "x-xgen-version": "2023-02-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/globalWrites/managedNamespaces": {
      "post": {
        "tags": ["Global Clusters"],
        "summary": "Create One Managed Namespace in One Global Cluster",
        "description": "Creates one managed namespace within the specified global cluster. A managed namespace identifies a collection using the database name, the dot separator, and the collection name. To use this resource, the requesting API Key must have the Project Data Access Admin role.",
        "externalDocs": {
          "description": "Global Clusters",
          "url": "https://www.mongodb.com/docs/atlas/global-clusters/"
        },
        "operationId": "createManagedNamespace",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies this cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Managed namespace to create within the specified global cluster.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/ManagedNamespaces"
              }
            },
            "application/vnd.atlas.2023-02-01+json": {
              "schema": {
                "$ref": "#/components/schemas/ManagedNamespaceView"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/GeoSharding"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2025-06-01"
              },
              "application/vnd.atlas.2023-02-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/GeoSharding"
                },
                "x-xgen-version": "2023-02-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "405": {
            "$ref": "#/components/responses/methodNotAllowed"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "delete": {
        "tags": ["Global Clusters"],
        "summary": "Remove One Managed Namespace from One Global Cluster",
        "description": "Removes one managed namespace within the specified global cluster. A managed namespace identifies a collection using the database name, the dot separator, and the collection name. Deleting a managed namespace does not remove the associated collection or data. To use this resource, the requesting API Key must have the Project Data Access Admin role.",
        "externalDocs": {
          "description": "Global Clusters",
          "url": "https://www.mongodb.com/docs/atlas/global-clusters/"
        },
        "operationId": "deleteManagedNamespace",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies this cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "db",
            "in": "query",
            "description": "Human-readable label that identifies the database that contains the collection.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection",
            "in": "query",
            "description": "Human-readable label that identifies the collection associated with the managed namespace.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/GeoSharding"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2025-06-01"
              },
              "application/vnd.atlas.2023-02-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/GeoSharding"
                },
                "x-xgen-version": "2023-02-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}": {
      "get": {
        "tags": ["Clusters"],
        "summary": "Return One Cluster from One Project",
        "description": "Returns the details for one cluster in the specified project. Clusters contain a group of hosts that maintain the same data set. The response includes clusters with asymmetrically-sized shards. To use this resource, the requesting API Key must have the Project Read Only role. This feature is not available for serverless clusters.",
        "operationId": "getCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies this cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyAtlasCluster"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2025-06-01"
              },
              "application/vnd.atlas.2023-02-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvancedClusterDescription"
                },
                "x-xgen-version": "2023-02-01",
                "x-sunset": "2026-01-01"
              },
              "application/vnd.atlas.2025-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterDescription20250101"
                },
                "x-xgen-hidden-env": {
                  "envs": "qa,stage,prod"
                },
                "x-xgen-version": "2025-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "delete": {
        "tags": ["Clusters"],
        "summary": "Remove One Cluster from One Project",
        "description": "Removes one cluster from the specified project. The cluster must have termination protection disabled in order to be deleted. To use this resource, the requesting API Key must have the Project Owner role. This feature is not available for serverless clusters.",
        "operationId": "deleteCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "retainBackups",
            "in": "query",
            "description": "Flag that indicates whether to retain backup snapshots for the deleted dedicated cluster.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2025-06-01"
              },
              "application/vnd.atlas.2023-02-01+json": {
                "x-xgen-version": "2023-02-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "patch": {
        "tags": ["Clusters"],
        "summary": "Modify One Cluster from One Project",
        "description": "Updates the details for one cluster in the specified project. Clusters contain a group of hosts that maintain the same data set. This resource can update clusters with asymmetrically-sized shards. To update a cluster's termination protection, the requesting API Key must have the Project Owner role. For all other updates, the requesting API Key must have the Project Cluster Manager role. You can't modify a paused cluster (`paused : true`). You must call this endpoint to set `paused : false`. After this endpoint responds with `paused : false`, you can call it again with the changes you want to make to the cluster. This feature is not available for serverless clusters.",
        "operationId": "updateCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Cluster to update in the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/LegacyAtlasCluster"
              }
            },
            "application/vnd.atlas.2023-02-01+json": {
              "schema": {
                "$ref": "#/components/schemas/AdvancedClusterDescription"
              }
            },
            "application/vnd.atlas.2025-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterDescription20250101"
              },
              "x-xgen-hidden-env": {
                "envs": "qa,stage,prod"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyAtlasCluster"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2025-06-01"
              },
              "application/vnd.atlas.2023-02-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvancedClusterDescription"
                },
                "x-xgen-version": "2023-02-01",
                "x-sunset": "2026-01-01"
              },
              "application/vnd.atlas.2025-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterDescription20250101"
                },
                "x-xgen-hidden-env": {
                  "envs": "qa,stage,prod"
                },
                "x-xgen-version": "2025-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/globalWrites": {
      "get": {
        "tags": ["Global Clusters"],
        "summary": "Return One Managed Namespace in One Global Cluster",
        "description": "Returns one managed namespace within the specified global cluster. A managed namespace identifies a collection using the database name, the dot separator, and the collection name. To use this resource, the requesting API Key must have the Project Read Only role.",
        "externalDocs": {
          "description": "Global Clusters",
          "url": "https://www.mongodb.com/docs/atlas/global-clusters/"
        },
        "operationId": "getManagedNamespace",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies this cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/GeoSharding"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2025-06-01"
              },
              "application/vnd.atlas.2023-02-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/GeoSharding"
                },
                "x-xgen-version": "2023-02-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{hostName}/logs/{logName}.gz": {
      "get": {
        "tags": ["Monitoring and Logs"],
        "summary": "Download Logs for One Cluster Host in One Project",
        "description": "Returns a compressed (.gz) log file that contains a range of log messages for the specified host for the specified project. MongoDB updates process and audit logs from the cluster backend infrastructure every five minutes and contain log data from the previous five minutes. If you poll the API for log files, we recommend polling every five minutes. For example, if the logs are updated at 4:00 UTC and then you poll the API, the API returns log data from the interval between 3:55 UTC and 4:00 UTC. This feature isn't available for `M0` free clusters, `M2`, `M5`, or serverless clusters. To use this resource, the requesting API Key must have the Project Data Access Read Only or higher role. The API does not support direct calls with the json response schema. You must request a gzip response schema using an accept header of the format: \"Accept: application/vnd.atlas.YYYY-MM-DD+gzip\".",
        "operationId": "getHostLogs",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "hostName",
            "in": "path",
            "description": "Human-readable label that identifies the host that stores the log files that you want to download.",
            "required": true,
            "schema": {
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?$",
              "type": "string"
            }
          },
          {
            "name": "logName",
            "in": "path",
            "description": "Human-readable label that identifies the log file that you want to return. To return audit logs, enable *Database Auditing* for the specified project.",
            "required": true,
            "schema": {
              "type": "string",
              "externalDocs": {
                "description": "Set up Database Auditing",
                "url": "https://docs.atlas.mongodb.com/database-auditing/"
              },
              "enum": ["mongodb", "mongos", "mongodb-audit-log", "mongos-audit-log"]
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Date and time when the period specifies the inclusive ending point for the range of log messages to retrieve. This parameter expresses its value in the number of seconds that have elapsed since the UNIX epoch.",
            "schema": {
              "minimum": 1199145600,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Date and time when the period specifies the inclusive starting point for the range of log messages to retrieve. This parameter expresses its value in the number of seconds that have elapsed since the UNIX epoch.",
            "schema": {
              "minimum": 1199145600,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-02-01+gzip": {
                "schema": {
                  "type": "string",
                  "description": "Compressed (.gz) log file that contains a range of log messages for the specified host for the specified project",
                  "format": "binary"
                },
                "x-xgen-version": "2023-02-01"
              },
              "application/vnd.atlas.2023-01-01+gzip": {
                "schema": {
                  "type": "string",
                  "description": "Compressed (.gz) log file that contains a range of log messages for the specified host for the specified project",
                  "format": "binary"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2025-06-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/restartPrimaries": {
      "post": {
        "tags": ["Clusters"],
        "summary": "Test Failover for One Cluster",
        "description": "Starts a failover test for the specified cluster in the specified project. Clusters contain a group of hosts that maintain the same data set. A failover test checks how MongoDB Cloud handles the failure of the cluster's primary node. During the test, MongoDB Cloud shuts down the primary node and elects a new primary. To use this resource, the requesting API Key must have the Project Cluster Manager role.",
        "operationId": "testFailover",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2025-06-01"
              },
              "application/vnd.atlas.2023-02-01+json": {
                "x-xgen-version": "2023-02-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters": {
      "get": {
        "tags": ["Clusters"],
        "summary": "Return All Clusters in One Project",
        "description": "Returns the details for all clusters in the specific project to which you have access. Clusters contain a group of hosts that maintain the same data set. The response includes clusters with asymmetrically-sized shards. To use this resource, the requesting API Key must have the Project Read Only role. This feature is not  available for serverless clusters.",
        "operationId": "listClusters",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "includeDeletedWithRetainedBackups",
            "in": "query",
            "description": "Flag that indicates whether to return Clusters with retain backups.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedLegacyClusterView"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2025-06-01"
              },
              "application/vnd.atlas.2023-02-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAdvancedClusterDescriptionView"
                },
                "x-xgen-version": "2023-02-01",
                "x-sunset": "2026-01-01"
              },
              "application/vnd.atlas.2025-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedClusterDescription20250101"
                },
                "x-xgen-hidden-env": {
                  "envs": "qa,stage,prod"
                },
                "x-xgen-version": "2025-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "post": {
        "tags": ["Clusters"],
        "summary": "Create One Cluster from One Project",
        "description": "Creates one cluster in the specified project. Clusters contain a group of hosts that maintain the same data set. This resource can create clusters with asymmetrically-sized shards. Each project supports up to 25 database deployments. To use this resource, the requesting API Key must have the Project Owner role. This feature is not available for serverless clusters.",
        "operationId": "createCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Cluster to create in the specific project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/LegacyAtlasCluster"
              }
            },
            "application/vnd.atlas.2023-02-01+json": {
              "schema": {
                "$ref": "#/components/schemas/AdvancedClusterDescription"
              }
            },
            "application/vnd.atlas.2025-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterDescription20250101"
              },
              "examples": {
                "Cluster": {
                  "description": "Cluster",
                  "value": "{\n  \"clusterType\": \"SHARDED\",\n  \"links\": [],\n  \"name\": \"myCluster\",\n  \"replicationSpecs\": [\n    {\n      \"regionConfigs\": [\n        {\n          \"analyticsAutoScaling\": {\n            \"autoIndexing\": {\n              \"enabled\": false\n            },\n            \"compute\": {\n              \"enabled\": true,\n              \"maxInstanceSize\": \"M40\",\n              \"minInstanceSize\": \"M30\",\n              \"scaleDownEnabled\": true\n            },\n            \"diskGB\": {\n              \"enabled\": true\n            }\n          },\n          \"analyticsSpecs\": {\n            \"instanceSize\": \"M30\",\n            \"nodeCount\": 0,\n            \"diskSizeGB\": 10.0\n          },\n          \"autoScaling\": {\n            \"autoIndexing\": {\n              \"enabled\": false\n            },\n            \"compute\": {\n              \"enabled\": true,\n              \"maxInstanceSize\": \"M40\",\n              \"minInstanceSize\": \"M30\",\n              \"scaleDownEnabled\": true\n            },\n            \"diskGB\": {\n              \"enabled\": true\n            }\n          },\n          \"electableSpecs\": {\n            \"instanceSize\": \"M30\",\n            \"nodeCount\": 3,\n            \"diskSizeGB\": 10.0\n          },\n          \"hiddenSecondarySpecs\": {\n            \"instanceSize\": \"M30\",\n            \"nodeCount\": 0,\n            \"diskSizeGB\": 10.0\n          },\n          \"priority\": 7,\n          \"providerName\": \"AWS\",\n          \"readOnlySpecs\": {\n            \"instanceSize\": \"M30\",\n            \"nodeCount\": 0,\n            \"diskSizeGB\": 10.0\n          },\n          \"regionName\": \"US_EAST_1\"\n        }\n      ],\n      \"zoneName\": \"Zone 1\"\n    },\n    {\n        \"regionConfigs\": [\n          {\n            \"analyticsAutoScaling\": {\n              \"autoIndexing\": {\n                \"enabled\": false\n              },\n              \"compute\": {\n                \"enabled\": true,\n                \"maxInstanceSize\": \"M20\",\n                \"minInstanceSize\": \"M10\",\n                \"scaleDownEnabled\": true\n              },\n              \"diskGB\": {\n                \"enabled\": true\n              }\n            },\n            \"analyticsSpecs\": {\n              \"instanceSize\": \"M10\",\n              \"nodeCount\": 0,\n              \"diskSizeGB\": 10.0\n            },\n            \"autoScaling\": {\n              \"autoIndexing\": {\n                \"enabled\": false\n              },\n              \"compute\": {\n                \"enabled\": true,\n                \"maxInstanceSize\": \"M20\",\n                \"minInstanceSize\": \"M10\",\n                \"scaleDownEnabled\": true\n              },\n              \"diskGB\": {\n                \"enabled\": true\n              }\n            },\n            \"electableSpecs\": {\n              \"instanceSize\": \"M10\",\n              \"nodeCount\": 3,\n              \"diskSizeGB\": 10.0\n            },\n            \"hiddenSecondarySpecs\": {\n              \"instanceSize\": \"M10\",\n              \"nodeCount\": 0,\n              \"diskSizeGB\": 10.0\n            },\n            \"priority\": 7,\n            \"providerName\": \"AWS\",\n            \"readOnlySpecs\": {\n              \"instanceSize\": \"M10\",\n              \"nodeCount\": 0,\n              \"diskSizeGB\": 10.0\n            },\n            \"regionName\": \"US_EAST_1\"\n          }\n        ],\n        \"zoneName\": \"Zone 1\"\n      },\n  ]\n}\n"
                }
              },
              "x-xgen-hidden-env": {
                "envs": "qa,stage,prod"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyAtlasCluster"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2025-06-01"
              },
              "application/vnd.atlas.2023-02-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvancedClusterDescription"
                },
                "x-xgen-version": "2023-02-01",
                "x-sunset": "2026-01-01"
              },
              "application/vnd.atlas.2025-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterDescription20250101"
                },
                "x-xgen-hidden-env": {
                  "envs": "qa,stage,prod"
                },
                "x-xgen-version": "2025-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "402": {
            "$ref": "#/components/responses/paymentRequired"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/processArgs": {
      "get": {
        "tags": ["Clusters"],
        "summary": "Return One Advanced Configuration Options for One Cluster",
        "description": "Returns the advanced configuration details for one cluster in the specified project. Clusters contain a group of hosts that maintain the same data set. Advanced configuration details include the read/write concern, index and oplog limits, and other database settings. This feature isn't available for `M0` free clusters, `M2` and `M5` shared-tier clusters, or serverless clusters. To use this resource, the requesting API Key must have the Project Read Only role.",
        "externalDocs": {
          "description": "Global Clusters",
          "url": "https://www.mongodb.com/docs/atlas/global-clusters/"
        },
        "operationId": "getClusterAdvancedConfiguration",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterDescriptionProcessArgs"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2026-01-01"
              },
              "application/vnd.atlas.2025-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterDescriptionProcessArgs20250101"
                },
                "x-xgen-hidden-env": {
                  "envs": "qa,stage,prod"
                },
                "x-xgen-version": "2025-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      },
      "patch": {
        "tags": ["Clusters"],
        "summary": "Update Advanced Configuration Options for One Cluster",
        "description": "Updates the advanced configuration details for one cluster in the specified project. Clusters contain a group of hosts that maintain the same data set. Advanced configuration details include the read/write concern, index and oplog limits, and other database settings. To use this resource, the requesting API Key must have the Project Cluster Manager role. This feature isn't available for `M0` free clusters, `M2` and `M5` shared-tier clusters, or serverless clusters.",
        "externalDocs": {
          "description": "Global Clusters",
          "url": "https://www.mongodb.com/docs/atlas/global-clusters/"
        },
        "operationId": "updateClusterAdvancedConfiguration",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Human-readable label that identifies the cluster.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Advanced configuration details to add for one cluster in the specified project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterDescriptionProcessArgs"
              },
              "x-xgen-version": "2023-01-01"
            },
            "application/vnd.atlas.2025-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterDescriptionProcessArgs20250101"
              },
              "x-xgen-hidden-env": {
                "envs": "qa,stage,prod"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterDescriptionProcessArgs"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2026-01-01"
              },
              "application/vnd.atlas.2025-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterDescriptionProcessArgs20250101"
                },
                "x-xgen-hidden-env": {
                  "envs": "qa,stage,prod"
                },
                "x-xgen-version": "2025-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Dedicated"
      }
    },
    "/api/atlas/v2/groups/{groupId}/sampleDatasetLoad/{sampleDatasetId}": {
      "get": {
        "tags": ["Clusters"],
        "summary": "Check Status of Cluster Sample Dataset Request",
        "description": "Checks the progress of loading the sample dataset into one cluster. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "getSampleDatasetLoadStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "sampleDatasetId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the loaded sample dataset.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/SampleDatasetStatus"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas"
      }
    },
    "/api/atlas/v2/groups/{groupId}/sampleDatasetLoad/{name}": {
      "post": {
        "tags": ["Clusters"],
        "summary": "Load Sample Dataset Request into Cluster",
        "description": "Requests loading the MongoDB sample dataset into the specified cluster. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "loadSampleDataset",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Human-readable label that identifies the cluster into which you load the sample dataset.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/SampleDatasetStatus"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas"
      }
    },
    "/api/atlas/v2/groups/{groupId}/serverless": {
      "get": {
        "tags": ["Serverless Instances"],
        "summary": "Return All Serverless Instances from One Project",
        "description": "Returns details for all serverless instances in the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listServerlessInstances",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedServerlessInstanceDescriptionView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Serverless II"
      },
      "post": {
        "tags": ["Serverless Instances"],
        "summary": "Create One Serverless Instance in One Project",
        "description": "Creates one serverless instance in the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "createServerlessInstance",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Create One Serverless Instance in One Project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/ServerlessInstanceDescriptionCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerlessInstanceDescription"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "402": {
            "$ref": "#/components/responses/paymentRequired"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Serverless II"
      }
    },
    "/api/atlas/v2/groups/{groupId}/serverless/{name}": {
      "get": {
        "tags": ["Serverless Instances"],
        "summary": "Return One Serverless Instance from One Project",
        "description": "Returns details for one serverless instance in the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getServerlessInstance",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Human-readable label that identifies the serverless instance.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerlessInstanceDescription"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Serverless II"
      },
      "delete": {
        "tags": ["Serverless Instances"],
        "summary": "Remove One Serverless Instance from One Project",
        "description": "Removes one serverless instance from the specified project. The serverless instance must have termination protection disabled in order to be deleted. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "deleteServerlessInstance",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Human-readable label that identifies the serverless instance.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Serverless II"
      },
      "patch": {
        "tags": ["Serverless Instances"],
        "summary": "Update One Serverless Instance in One Project",
        "description": "Updates one serverless instance in the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "updateServerlessInstance",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Human-readable label that identifies the serverless instance.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update One Serverless Instance in One Project.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/ServerlessInstanceDescriptionUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerlessInstanceDescription"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "402": {
            "$ref": "#/components/responses/paymentRequired"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Serverless II"
      }
    },
    "/api/atlas/v2/groups/{groupId}/privateEndpoint/serverless/instance/{instanceName}/endpoint": {
      "get": {
        "tags": ["Serverless Private Endpoints"],
        "summary": "Return All Private Endpoints for One Serverless Instance",
        "description": "Returns all private endpoints for one serverless instance. You must have at least the Project Read Only role for the project to successfully call this resource.",
        "operationId": "listServerlessPrivateEndpoints",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Human-readable label that identifies the serverless instance associated with the tenant endpoint.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServerlessTenantEndpoint"
                  }
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Serverless II"
      },
      "post": {
        "tags": ["Serverless Private Endpoints"],
        "summary": "Create One Private Endpoint for One Serverless Instance",
        "description": "Creates one private endpoint for one serverless instance. To use this resource, the requesting API Key must have the Project Owner role.\n\n A new endpoint won't be immediately available after creation.  Read the steps in the linked tutorial for detailed guidance.",
        "externalDocs": {
          "description": "Set Up a Private Endpoint for a Serverless Instance Tutorial",
          "url": "https://dochub.mongodb.org/core/serverless-private-endpoint"
        },
        "operationId": "createServerlessPrivateEndpoint",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Human-readable label that identifies the serverless instance for which the tenant endpoint will be created.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Information about the Private Endpoint to create for the Serverless Instance.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/ServerlessTenantCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerlessTenantEndpoint"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Serverless II"
      }
    },
    "/api/atlas/v2/groups/{groupId}/privateEndpoint/serverless/instance/{instanceName}/endpoint/{endpointId}": {
      "get": {
        "tags": ["Serverless Private Endpoints"],
        "summary": "Return One Private Endpoint for One Serverless Instance",
        "description": "Return one private endpoint for one serverless instance. Identify this endpoint using its unique ID. You must have at least the Project Read Only role for the project to successfully call this resource.",
        "operationId": "getServerlessPrivateEndpoint",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Human-readable label that identifies the serverless instance associated with the tenant endpoint.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "endpointId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the tenant endpoint.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerlessTenantEndpoint"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Serverless II"
      },
      "delete": {
        "tags": ["Serverless Private Endpoints"],
        "summary": "Remove One Private Endpoint for One Serverless Instance",
        "description": "Remove one private endpoint from one serverless instance. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "deleteServerlessPrivateEndpoint",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Human-readable label that identifies the serverless instance from which the tenant endpoint will be removed.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "endpointId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the tenant endpoint which will be removed.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Serverless II"
      },
      "patch": {
        "tags": ["Serverless Private Endpoints"],
        "summary": "Update One Private Endpoint for One Serverless Instance",
        "description": "Updates one private endpoint for one serverless instance. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "updateServerlessPrivateEndpoint",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Human-readable label that identifies the serverless instance associated with the tenant endpoint that will be updated.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "name": "endpointId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the tenant endpoint which will be updated.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Object used for update.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/ServerlessTenantEndpointUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerlessTenantEndpoint"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Serverless II"
      }
    },
    "/api/atlas/v2/groups/{groupId}/uss": {
      "get": {
        "tags": ["USS Instances"],
        "summary": "Return All USS Instances from One Project",
        "description": "Returns details for all USS instances in the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "listUSSInstances",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2025-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedUSSInstance20250101"
                },
                "x-xgen-version": "2025-01-01"
              }
            }
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-hidden-env": {
          "envs": "qa,prod"
        },
        "x-xgen-owner-team": "Atlas Serverless II"
      },
      "post": {
        "tags": ["USS Instances"],
        "summary": "Create One USS Instance in One Project",
        "description": "Creates one USS instance in the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "createUSSInstance",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Create One USS Instance in One Project.",
          "content": {
            "application/vnd.atlas.2025-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/USSInstanceDescriptionCreate20250101"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/vnd.atlas.2025-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/USSInstanceDescription20250101"
                },
                "x-xgen-version": "2025-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "402": {
            "$ref": "#/components/responses/paymentRequired"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-hidden-env": {
          "envs": "qa,prod"
        },
        "x-xgen-owner-team": "Atlas Serverless II"
      }
    },
    "/api/atlas/v2/groups/{groupId}/uss/{name}": {
      "get": {
        "tags": ["USS Instances"],
        "summary": "Return One USS Instance from One Project",
        "description": "Returns details for one USS instance in the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getUSSInstance",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Human-readable label that identifies the USS instance.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2025-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/USSInstanceDescription20250101"
                },
                "x-xgen-version": "2025-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-hidden-env": {
          "envs": "qa,prod"
        },
        "x-xgen-owner-team": "Atlas Serverless II"
      },
      "delete": {
        "tags": ["USS Instances"],
        "summary": "Remove One USS Instance from One Project",
        "description": "Removes one USS instance from the specified project. The USS instance must have termination protection disabled in order to be deleted. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "deleteUSSInstance",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Human-readable label that identifies the USS instance.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2025-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2025-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-hidden-env": {
          "envs": "qa,prod"
        },
        "x-xgen-owner-team": "Atlas Serverless II"
      },
      "patch": {
        "tags": ["USS Instances"],
        "summary": "Update One USS Instance in One Project",
        "description": "Updates one USS instance in the specified project. To use this resource, the requesting API Key must have the Project Owner role.",
        "operationId": "updateUSSInstance",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Human-readable label that identifies the USS instance.",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update One USS Instance in One Project.",
          "content": {
            "application/vnd.atlas.2025-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/USSInstanceDescription20250101"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2025-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/USSInstanceDescription20250101"
                },
                "x-xgen-version": "2025-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "402": {
            "$ref": "#/components/responses/paymentRequired"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-hidden-env": {
          "envs": "qa,prod"
        },
        "x-xgen-owner-team": "Atlas Serverless II"
      }
    },
    "/api/atlas/v2/orgs": {
      "get": {
        "tags": ["Organizations"],
        "summary": "Return All Organizations",
        "description": "Returns all organizations to which the requesting API Key has access. To use this resource, the requesting API Key must have the Organization Member role.",
        "operationId": "listOrganizations",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Human-readable label of the organization to use to filter the returned list. Performs a case-insensitive search for an organization that starts with the specified name.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedOrganizationView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "post": {
        "tags": ["Organizations"],
        "summary": "Create One Organization",
        "description": "Creates one organization in MongoDB Cloud and links it to the requesting API Key's organization. To use this resource, the requesting API Key must have the Organization Owner role. The requesting API Key's organization must be a paying organization. To learn more, see [Configure a Paying Organization](https://www.mongodb.com/docs/atlas/billing/#configure-a-paying-organization) in the MongoDB Atlas documentation.",
        "operationId": "createOrganization",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Organization that you want to create.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOrganizationResponse"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/apiKeys/{apiUserId}/accessList": {
      "get": {
        "tags": ["Programmatic API Keys"],
        "summary": "Return All Access List Entries for One Organization API Key",
        "description": "Returns all access list entries that you configured for the specified organization API key. To use this resource, the requesting API Key must have the Organization Member role.",
        "externalDocs": {
          "description": "Programmatic API Keys",
          "url": "https://docs.atlas.mongodb.com/configure-api-access/#view-the-details-of-one-api-key-in-one-organization"
        },
        "operationId": "listApiKeyAccessListsEntries",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "apiUserId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies this organization API key for which you want to return access list entries.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedApiUserAccessListResponseView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "post": {
        "tags": ["Programmatic API Keys"],
        "summary": "Create Access List Entries for One Organization API Key",
        "description": "Creates the access list entries for the specified organization API key. Resources require all API requests originate from IP addresses on the API access list. To use this resource, the requesting API Key must have the Read Write role.",
        "operationId": "createApiKeyAccessList",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "apiUserId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies this organization API key for which you want to create a new access list entry.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Access list entries to be created for the specified organization API key.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserAccessListRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedApiUserAccessListResponseView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/apiKeys/{apiUserId}/accessList/{ipAddress}": {
      "get": {
        "tags": ["Programmatic API Keys"],
        "summary": "Return One Access List Entry for One Organization API Key",
        "description": "Returns one access list entry for the specified organization API key. Resources require  all API requests originate from IP addresses on the API access list. To use this resource, the requesting API Key must have the Organization Member role.",
        "externalDocs": {
          "description": "Configure Atlas API Access",
          "url": "https://docs.atlas.mongodb.com/configure-api-access/#std-label-enable-api-access-list"
        },
        "operationId": "getApiKeyAccessList",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "ipAddress",
            "in": "path",
            "description": "One IP address or multiple IP addresses represented as one CIDR block to limit  requests to API resources in the specified organization. When adding a CIDR block with a subnet mask, such as  192.0.2.0/24, use the URL-encoded value %2F for the forward slash /.",
            "required": true,
            "schema": {
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){7}[0-9a-f]{1,4}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){1,6}\\:(%2[fF][0-9]{1,3})?$",
              "type": "string",
              "example": "192.0.2.0%2F24"
            }
          },
          {
            "name": "apiUserId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies this organization API key for  which you want to return access list entries.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAccessListResponse"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "delete": {
        "tags": ["Programmatic API Keys"],
        "summary": "Remove One Access List Entry for One Organization API Key",
        "description": "Removes the specified access list entry from the specified organization API key. Resources require all API requests originate from the IP addresses on the API access list. To use this resource, the requesting API Key must have the Read Write role. In addition, you cannot remove the requesting IP address from the requesting organization API key.",
        "externalDocs": {
          "description": "Configure Atlas API Access",
          "url": "https://docs.atlas.mongodb.com/configure-api-access/#std-label-enable-api-access-list"
        },
        "operationId": "deleteApiKeyAccessListEntry",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "apiUserId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies this organization API key for which you want to remove access list entries.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          },
          {
            "name": "ipAddress",
            "in": "path",
            "description": "One IP address or multiple IP addresses represented as one CIDR block to limit requests to API resources in the specified organization. When adding a CIDR block with a subnet mask, such as 192.0.2.0/24, use the URL-encoded value %2F for the forward slash /.",
            "required": true,
            "schema": {
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){7}[0-9a-f]{1,4}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){1,6}\\:(%2[fF][0-9]{1,3})?$",
              "type": "string",
              "example": "192.0.2.0%2F24"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/apiKeys": {
      "get": {
        "tags": ["Programmatic API Keys"],
        "summary": "Return All Organization API Keys",
        "description": "Returns all organization API keys for the specified organization. The organization API keys grant programmatic access to an organization. You can't use the API key to log into MongoDB Cloud through the console. To use this resource, the requesting API Key must have the Organization Member role.",
        "externalDocs": {
          "description": "Programmatic API Keys",
          "url": "https://docs.atlas.mongodb.com/configure-api-access/#std-label-atlas-prog-api-key"
        },
        "operationId": "listApiKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedApiApiUserView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "post": {
        "tags": ["Programmatic API Keys"],
        "summary": "Create One Organization API Key",
        "description": "Creates one API key for the specified organization. An organization API key grants programmatic access to an organization. You can't use the API key to log into the console. To use this resource, the requesting API Key must have the Organization Owner role.",
        "externalDocs": {
          "description": "Programmatic API Keys",
          "url": "https://docs.atlas.mongodb.com/configure-api-access/#std-label-atlas-prog-api-key"
        },
        "operationId": "createApiKey",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Organization API Key to be created.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAtlasOrganizationApiKey"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyUserDetails"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/apiKeys/{apiUserId}": {
      "get": {
        "tags": ["Programmatic API Keys"],
        "summary": "Return One Organization API Key",
        "description": "Returns one organization API key. The organization API keys grant programmatic access to an organization. You can't use the API key to log into MongoDB Cloud through the user interface. To use this resource, the requesting API Key must have the  Organization Member role.",
        "externalDocs": {
          "description": "Programmatic API Keys",
          "url": "https://docs.atlas.mongodb.com/configure-api-access/#std-label-atlas-prog-api-key"
        },
        "operationId": "getApiKey",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "apiUserId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies this organization API key that  you want to update.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyUserDetails"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "delete": {
        "tags": ["Programmatic API Keys"],
        "summary": "Remove One Organization API Key",
        "description": "Removes one organization API key from the specified organization. When you remove an API key from an organization, MongoDB Cloud also removes that key from any projects that use that key. To use this resource, the requesting API Key must have the Organization Owner role.",
        "externalDocs": {
          "description": "Configure Atlas API Access",
          "url": "https://docs.atlas.mongodb.com/configure-api-access/#std-label-enable-api-access-list"
        },
        "operationId": "deleteApiKey",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "apiUserId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies this organization API key.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "patch": {
        "tags": ["Programmatic API Keys"],
        "summary": "Update One Organization API Key",
        "description": "Updates one organization API key in the specified organization. The organization API keys  grant programmatic access to an organization. To use this resource, the requesting  API Key must have the Organization Owner role.",
        "externalDocs": {
          "description": "Programmatic API Keys",
          "url": "https://docs.atlas.mongodb.com/configure-api-access/#std-label-atlas-prog-api-key"
        },
        "operationId": "updateApiKey",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "apiUserId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies this organization API key you  want to update.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Organization API key to be updated. This request requires a minimum of one of the two body parameters.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAtlasOrganizationApiKey"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyUserDetails"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/teams/{teamId}/users": {
      "get": {
        "tags": ["Teams"],
        "summary": "Return All MongoDB Cloud Users Assigned to One Team",
        "description": "Returns all MongoDB Cloud users assigned to the team specified using its unique 24-hexadecimal digit identifier. This team belongs to one organization. Teams enable you to grant project access roles to MongoDB Cloud users. To use this resource, the requesting API Key must have the Organization Member role.",
        "externalDocs": {
          "description": "Manage Organization Teams",
          "url": "https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams"
        },
        "operationId": "listTeamUsers",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the team whose application users you want to return.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedApiAppUserView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "post": {
        "tags": ["Teams"],
        "summary": "Assign MongoDB Cloud Users from One Organization to One Team",
        "description": "Adds one or more MongoDB Cloud users from the specified organization to the specified team. Teams enable you to grant project access roles to MongoDB Cloud users. You can assign up to 250 MongoDB Cloud users from one organization to one team. To use this resource, the requesting API Key must have the Organization Owner role.",
        "externalDocs": {
          "description": "Manage Organization Teams",
          "url": "https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams"
        },
        "operationId": "addTeamUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "Unique 24-hexadecimal character string that identifies the team to which you want to add MongoDB Cloud users.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "One or more MongoDB Cloud users that you want to add to the specified team.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AddUserToTeam"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedApiAppUserView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/teams": {
      "get": {
        "tags": ["Teams"],
        "summary": "Return All Teams in One Organization",
        "description": "Returns all teams that belong to the specified organization. Teams enable you to grant project access roles to MongoDB Cloud users. MongoDB Cloud only returns teams for which you have access. To use this resource, the requesting API Key must have the Organization Member role.",
        "externalDocs": {
          "description": "Manage Organization Teams",
          "url": "https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams"
        },
        "operationId": "listOrganizationTeams",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTeamView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "post": {
        "tags": ["Teams"],
        "summary": "Create One Team in One Organization",
        "description": "Creates one team in the specified organization. Teams enable you to grant project access roles to MongoDB Cloud users. MongoDB Cloud limits the number of teams to a maximum of 250 teams per organization. To use this resource, the requesting API Key must have the Organization Owner role.",
        "externalDocs": {
          "description": "Manage Organization Teams",
          "url": "https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams"
        },
        "operationId": "createTeam",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Team that you want to create in the specified organization.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/Team"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/teams/{teamId}": {
      "get": {
        "tags": ["Teams"],
        "summary": "Return One Team using its ID",
        "description": "Returns one team that you identified using its unique 24-hexadecimal digit ID. This team belongs to one organization. Teams enable you to grant project access roles to MongoDB Cloud users. To use this resource, the requesting API Key must have the Organization Member role.",
        "externalDocs": {
          "description": "Manage Organization Teams",
          "url": "https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams"
        },
        "operationId": "getTeamById",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the team whose information you want to return.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamResponse"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "delete": {
        "tags": ["Teams"],
        "summary": "Remove One Team from One Organization",
        "description": "Removes one team specified using its unique 24-hexadecimal digit identifier from the organization specified using its unique 24-hexadecimal digit identifier. To use this resource, the requesting API Key must have the Organization Owner role.",
        "externalDocs": {
          "description": "Manage Organization Teams",
          "url": "https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams"
        },
        "operationId": "deleteTeam",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the team that you want to delete.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "patch": {
        "tags": ["Teams"],
        "summary": "Rename One Team",
        "description": "Renames one team in the specified organization. Teams enable you to grant project access roles to MongoDB Cloud users. To use this resource, the requesting API Key must have the Organization Owner role.",
        "externalDocs": {
          "description": "Manage Organization Teams",
          "url": "https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams"
        },
        "operationId": "renameTeam",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the team that you want to rename.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Details to update on the specified team.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/TeamUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamResponse"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/teams/byName/{teamName}": {
      "get": {
        "tags": ["Teams"],
        "summary": "Return One Team using its Name",
        "description": "Returns one team that you identified using its human-readable name. This team belongs to one organization. Teams enable you to grant project access roles to MongoDB Cloud users. To use this resource, the requesting API Key must have the Organization Member role.",
        "externalDocs": {
          "description": "Manage Organization Teams",
          "url": "https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams"
        },
        "operationId": "getTeamByName",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "teamName",
            "in": "path",
            "description": "Name of the team whose information you want to return.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamResponse"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/teams/{teamId}/users/{userId}": {
      "delete": {
        "tags": ["Teams"],
        "summary": "Remove One MongoDB Cloud User from One Team",
        "description": "Removes one MongoDB Cloud user from the specified team. This team belongs to one organization. Teams enable you to grant project access roles to MongoDB Cloud users. To use this resource, the requesting API Key must have the Organization Owner role.",
        "externalDocs": {
          "description": "Manage Organization Teams",
          "url": "https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams"
        },
        "operationId": "removeTeamUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the team from which you want to remove one database application user.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies MongoDB Cloud user that you want to remove from the specified team.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/users/{userId}": {
      "delete": {
        "tags": ["Organizations"],
        "summary": "Remove One MongoDB Cloud User from One Organization",
        "description": "Removes one MongoDB Cloud user from the specified organization. To use this resource, the requesting API Key must have the Organization User Admin role.",
        "operationId": "removeOrganizationUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the user to be deleted.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/orgs/{orgId}": {
      "get": {
        "tags": ["Organizations"],
        "summary": "Return One Organization",
        "description": "Returns one organization to which the requesting API key has access. To use this resource, the requesting API Key must have the Organization Member role.",
        "operationId": "getOrganization",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/AtlasOrganization"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "delete": {
        "tags": ["Organizations"],
        "summary": "Remove One Organization",
        "description": "Removes one specified organization. MongoDB Cloud imposes the following limits on this resource:\n\n - Organizations with active projects cannot be removed.\n - All projects in the organization must be removed before you can remove the organization.\n To use this resource, the requesting API Key must have the Organization Owner role.",
        "operationId": "deleteOrganization",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "402": {
            "$ref": "#/components/responses/paymentRequired"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "patch": {
        "tags": ["Organizations"],
        "summary": "Rename One Organization",
        "description": "Renames one organization. To use this resource, the requesting API Key must have the Organization Owner role.",
        "operationId": "renameOrganization",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Details to update on the specified organization.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/AtlasOrganization"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/AtlasOrganization"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/federationSettings": {
      "get": {
        "tags": ["Federated Authentication"],
        "summary": "Return Federation Settings for One Organization",
        "description": "Returns information about the federation settings for the specified organization. To use this resource, the requesting API Key must have the Organization Owner role in the connected org.",
        "operationId": "getFederationSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgFederationSettings"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/groups": {
      "get": {
        "tags": ["Organizations"],
        "summary": "Return One or More Projects in One Organization",
        "description": "Returns multiple projects in the specified organization. Each organization can have multiple projects. Use projects to:\n\n- Isolate different environments, such as development, test, or production environments, from each other.\n- Associate different MongoDB Cloud users or teams with different environments, or give different permission to MongoDB Cloud users in different environments.\n- Maintain separate cluster security configurations.\n- Create different alert settings.\n\nTo use this resource, the requesting API Key must have the Organization Member role.",
        "operationId": "listOrganizationProjects",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Human-readable label of the project to use to filter the returned list. Performs a case-insensitive search for a project within the organization which is prefixed by the specified name.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAtlasGroupView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/settings": {
      "get": {
        "tags": ["Organizations"],
        "summary": "Return Settings for One Organization",
        "description": "Returns details about the specified organization's settings. To use this resource, the requesting API Key must have the Organization Owner role.",
        "operationId": "getOrganizationSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationSettings"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      },
      "patch": {
        "tags": ["Organizations"],
        "summary": "Update Settings for One Organization",
        "description": "Updates the organization's settings. To use this resource, the requesting API Key must have the Organization Owner role.",
        "operationId": "updateOrganizationSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "Details to update on the specified organization's settings.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationSettings"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/users": {
      "get": {
        "tags": ["Organizations"],
        "summary": "Return All MongoDB Cloud Users in One Organization",
        "description": "Returns details about the MongoDB Cloud users associated with the specified organization. Each MongoDB Cloud user returned must belong to the specified organization or to a project within the specified organization. To use this resource, the requesting API Key must have the Organization Member role.",
        "operationId": "listOrganizationUsers",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAppUserView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/users/{userId}/roles": {
      "put": {
        "tags": ["Organizations"],
        "summary": "Update Organization Roles for One MongoDB Cloud User",
        "description": "Updates the roles of the specified user in the specified organization. To specify the user to update, provide the unique 24-hexadecimal digit string that identifies the user in the specified organization. To use this resource, the requesting API Key must have the Organization User Admin role.",
        "operationId": "updateOrganizationRoles",
        "parameters": [
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the user to modify.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ],
        "requestBody": {
          "description": "Roles to update for the specified user.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrgRolesForUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateOrgRolesForUser"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/invoices": {
      "get": {
        "tags": ["Invoices"],
        "summary": "Return All Invoices for One Organization",
        "description": "Returns all invoices that MongoDB issued to the specified organization. This list includes all invoices regardless of invoice status. To use this resource, the requesting API Key must have the Organization Billing Viewer, Organization Billing Admin, or Organization Owner role. If you have a cross-organization setup, you can view linked invoices if you have the Organization Billing Admin or Organization Owner role.\nTo compute the total owed amount of the invoices - sum up total owed of each invoice. It could be computed as a sum of owed amount of each payment included into the invoice. To compute payment's owed amount - use formula *totalBilledCents* * *unitPrice* + *salesTax* - *startingBalanceCents*.",
        "operationId": "listInvoices",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "viewLinkedInvoices",
            "in": "query",
            "description": "Flag that indicates whether to return linked invoices in the linkedInvoices field.",
            "schema": {
              "type": "boolean",
              "example": true,
              "default": true
            }
          },
          {
            "name": "statusNames",
            "in": "query",
            "description": "Statuses of the invoice to be retrieved. Omit to return invoices of all statuses.",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["PENDING", "CLOSED", "FORGIVEN", "FAILED", "PAID", "FREE", "PREPAID", "INVOICED"]
              }
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "Retrieve the invoices the startDates of which are greater than or equal to the fromDate. If omit, the invoices return will go back to earliest startDate.",
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2023-01-01"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "Retrieve the invoices the endDates of which are smaller than or equal to the toDate. If omit, the invoices return will go further to latest endDate.",
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2023-01-01"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Field used to sort the returned invoices by. Use in combination with orderBy parameter to control the order of the result.",
            "schema": {
              "type": "string",
              "default": "END_DATE",
              "enum": ["START_DATE", "END_DATE"]
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Field used to order the returned invoices by. Use in combination of sortBy parameter to control the order of the result.",
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": ["desc", "asc"]
            },
            "example": "desc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedApiInvoiceMetadataView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Payments"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/invoices/{invoiceId}": {
      "get": {
        "tags": ["Invoices"],
        "summary": "Return One Organization Invoice",
        "description": "Returns one invoice that MongoDB issued to the specified organization. A unique 24-hexadecimal digit string identifies the invoice. You can choose to receive this invoice in JSON or CSV format. To use this resource, the requesting API Key must have the Organization Billing Viewer, Organization Billing Admin, or Organization Owner role. If you have a cross-organization setup, you can query for a linked invoice if you have the Organization Billing Admin or Organization Owner role.\nTo compute the total owed amount of the invoice - sum up total owed amount of each payment included into the invoice. To compute payment's owed amount - use formula *totalBilledCents* * *unitPrice* + *salesTax* - *startingBalanceCents*.",
        "operationId": "getInvoice",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "invoiceId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the invoice submitted to the specified organization. Charges typically post the next day.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingInvoice"
                },
                "x-xgen-version": "2023-01-01"
              },
              "application/vnd.atlas.2023-01-01+csv": {
                "schema": {
                  "type": "string"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Payments"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/invoices/{invoiceId}/csv": {
      "get": {
        "tags": ["Invoices"],
        "summary": "Return One Organization Invoice as CSV",
        "description": "Returns one invoice that MongoDB issued to the specified organization in CSV format. A unique 24-hexadecimal digit string identifies the invoice. To use this resource, the requesting API Key have at least the Organization Billing Viewer, Organization Billing Admin, or Organization Owner role. If you have a cross-organization setup, you can query for a linked invoice if you have the Organization Billing Admin or Organization Owner Role.\n To compute the total owed amount of the invoice - sum up total owed amount of each payment included into the invoice. To compute payment's owed amount - use formula *totalBilledCents* * *unitPrice* + *salesTax* - *startingBalanceCents*.",
        "operationId": "downloadInvoiceCSV",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "invoiceId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the invoice submitted to the specified organization. Charges typically post the next day.",
            "required": true,
            "schema": {
              "pattern": "[0-9a-f]+",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+csv": {
                "schema": {
                  "type": "string"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Payments"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/invoices/pending": {
      "get": {
        "tags": ["Invoices"],
        "summary": "Return All Pending Invoices for One Organization",
        "description": "Returns all invoices accruing charges for the current billing cycle for the specified organization. To use this resource, the requesting API Key must have the Organization Billing Viewer, Organization Billing Admin, or Organization Owner role. If you have a cross-organization setup, you can view linked invoices if you have the Organization Billing Admin or Organization Owner Role.",
        "operationId": "listPendingInvoices",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedApiInvoiceView"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Payments"
      }
    },
    "/api/atlas/v2/groups/{groupId}/streams/{tenantName}/connections": {
      "get": {
        "tags": ["Streams"],
        "summary": "Return All Connections Of The Stream Instances",
        "description": "Returns all connections of the stream instance for the specified project.To use this resource, the requesting API Key must have the Project Data Access roles, Project Owner role or Project Stream Processing Owner role.",
        "operationId": "listStreamConnections",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "tenantName",
            "in": "path",
            "description": "Human-readable label that identifies the stream instance.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-02-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedApiStreamsConnectionView"
                },
                "x-xgen-version": "2023-02-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-changelog": {
          "2023-09-11": "The MongoDB Atlas Streams Processing API is now exposed as part of private preview, but is subject to change until GA."
        },
        "x-xgen-owner-team": "Atlas Streams"
      },
      "post": {
        "tags": ["Streams"],
        "summary": "Create One Connection",
        "description": "Creates one connection for a stream instance in the specified project. To use this resource, the requesting API Key must have the Project Owner or Project Stream Processing Owner role.",
        "operationId": "createStreamConnection",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "tenantName",
            "in": "path",
            "description": "Human-readable label that identifies the stream instance.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Details to create one connection for a streams instance in the specified project.",
          "content": {
            "application/vnd.atlas.2023-02-01+json": {
              "schema": {
                "$ref": "#/components/schemas/StreamsConnection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-02-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamsConnection"
                },
                "x-xgen-version": "2023-02-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "409": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-changelog": {
          "2023-09-11": "The MongoDB Atlas Streams Processing API is now exposed as part of private preview, but is subject to change until GA."
        },
        "x-xgen-owner-team": "Atlas Streams"
      }
    },
    "/api/atlas/v2/groups/{groupId}/streams/{tenantName}/processor": {
      "post": {
        "tags": ["Streams"],
        "summary": "Create One Stream Processor",
        "description": "Create one Stream Processor within the specified stream instance. To use this resource, the requesting API Key must have the Project Owner role or Project Stream Processing Owner role.",
        "operationId": "createStreamProcessor",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "tenantName",
            "in": "path",
            "description": "Human-readable label that identifies the stream instance.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Details to create an Atlas Streams Processor.",
          "content": {
            "application/vnd.atlas.2024-05-30+json": {
              "schema": {
                "$ref": "#/components/schemas/StreamsProcessor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2024-05-30+json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamsProcessor"
                },
                "x-xgen-version": "2024-05-30"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "409": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Streams"
      }
    },
    "/api/atlas/v2/groups/{groupId}/streams": {
      "get": {
        "tags": ["Streams"],
        "summary": "Return All Project Stream Instances",
        "description": "Returns all stream instances for the specified project.",
        "operationId": "listStreamInstances",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-02-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedApiStreamsTenantView"
                },
                "x-xgen-version": "2023-02-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-changelog": {
          "2023-09-11": "The MongoDB Atlas Streams Processing API is now exposed as part of private preview, but is subject to change until GA."
        },
        "x-xgen-owner-team": "Atlas Streams"
      },
      "post": {
        "tags": ["Streams"],
        "summary": "Create One Stream Instance",
        "description": "Creates one stream instance in the specified project. To use this resource, the requesting API Key must have the Project Data Access Admin role, Project Owner role or Project Stream Processing Owner role.",
        "operationId": "createStreamInstance",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ],
        "requestBody": {
          "description": "Details to create one streams instance in the specified project.",
          "content": {
            "application/vnd.atlas.2023-02-01+json": {
              "schema": {
                "$ref": "#/components/schemas/StreamsTenant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-02-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamsTenant"
                },
                "x-xgen-version": "2023-02-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-changelog": {
          "2023-09-11": "The MongoDB Atlas Streams Processing API is now exposed as part of private preview, but is subject to change until GA."
        },
        "x-xgen-owner-team": "Atlas Streams"
      }
    },
    "/api/atlas/v2/groups/{groupId}/streams/{tenantName}/connections/{connectionName}": {
      "get": {
        "tags": ["Streams"],
        "summary": "Return One Stream Connection",
        "description": "Returns the details of one stream connection within the specified stream instance. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "getStreamConnection",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "tenantName",
            "in": "path",
            "description": "Human-readable label that identifies the stream instance to return.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "Human-readable label that identifies the stream connection to return.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-02-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamsConnection"
                },
                "x-xgen-version": "2023-02-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-changelog": {
          "2023-09-11": "The MongoDB Atlas Streams Processing API is now exposed as part of private preview, but is subject to change until GA."
        },
        "x-xgen-owner-team": "Atlas Streams"
      },
      "delete": {
        "tags": ["Streams"],
        "summary": "Delete One Stream Connection",
        "description": "Delete one connection of the specified stream instance. To use this resource, the requesting API Key must have the Project Owner role or Project Stream Processing Owner role.",
        "operationId": "deleteStreamConnection",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "tenantName",
            "in": "path",
            "description": "Human-readable label that identifies the stream instance.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "Human-readable label that identifies the stream connection.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/vnd.atlas.2023-02-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-02-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-changelog": {
          "2023-09-11": "The MongoDB Atlas Streams Processing API is now exposed as part of private preview, but is subject to change until GA."
        },
        "x-xgen-owner-team": "Atlas Streams"
      },
      "patch": {
        "tags": ["Streams"],
        "summary": "Update One Stream Connection",
        "description": "Update one connection for the specified stream instance in the specified project. To use this resource, the requesting API Key must have the Project Owner role or Project Stream Processing Owner role.",
        "operationId": "updateStreamConnection",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "tenantName",
            "in": "path",
            "description": "Human-readable label that identifies the stream instance.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "Human-readable label that identifies the stream connection.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Details to update one connection for a streams instance in the specified project.",
          "content": {
            "application/vnd.atlas.2023-02-01+json": {
              "schema": {
                "$ref": "#/components/schemas/StreamsConnection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-02-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamsConnection"
                },
                "x-xgen-version": "2023-02-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-changelog": {
          "2023-09-11": "The MongoDB Atlas Streams Processing API is now exposed as part of private preview, but is subject to change until GA."
        },
        "x-xgen-owner-team": "Atlas Streams"
      }
    },
    "/api/atlas/v2/groups/{groupId}/streams/{tenantName}/processor/{processorName}": {
      "get": {
        "tags": ["Streams"],
        "summary": "Get One Stream Processor",
        "description": "Get one Stream Processor within the specified stream instance. To use this resource, the requesting API Key must have the Project Owner role or Project Stream Processing Owner role.",
        "operationId": "getStreamProcessor",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "tenantName",
            "in": "path",
            "description": "Human-readable label that identifies the stream instance.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "processorName",
            "in": "path",
            "description": "Human-readable label that identifies the stream processor.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2024-05-30+json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamsProcessorWithStats"
                },
                "x-xgen-version": "2024-05-30"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-hidden-env": {
          "qa": "false",
          "qa-gov": "true",
          "prod": "false",
          "prod-gov": "true",
          "dev": "false",
          "dev-gov": "true"
        },
        "x-xgen-owner-team": "Atlas Streams"
      },
      "delete": {
        "tags": ["Streams"],
        "summary": "Delete One Stream Processor",
        "description": "Delete a Stream Processor within the specified stream instance. To use this resource, the requesting API Key must have the Project Owner role or Project Stream Processing Owner role.",
        "operationId": "deleteStreamProcessor",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "tenantName",
            "in": "path",
            "description": "Human-readable label that identifies the stream instance.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "processorName",
            "in": "path",
            "description": "Human-readable label that identifies the stream processor.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2024-05-30+json": {
                "x-xgen-version": "2024-05-30"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-hidden-env": {
          "qa": "false",
          "qa-gov": "true",
          "prod": "false",
          "prod-gov": "true",
          "dev": "false",
          "dev-gov": "true"
        },
        "x-xgen-owner-team": "Atlas Streams"
      }
    },
    "/api/atlas/v2/groups/{groupId}/streams/{tenantName}": {
      "get": {
        "tags": ["Streams"],
        "summary": "Return One Stream Instance",
        "description": "Returns the details of one stream instance within the specified project. To use this resource, the requesting API Key must have the Project Data Access roles, Project Owner role or Project Stream Processing Owner role.",
        "operationId": "getStreamInstance",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "tenantName",
            "in": "path",
            "description": "Human-readable label that identifies the stream instance to return.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeConnections",
            "in": "query",
            "description": "Flag to indicate whether connections information should be included in the stream instance.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-02-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamsTenant"
                },
                "x-xgen-version": "2023-02-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-changelog": {
          "2023-09-11": "The MongoDB Atlas Streams Processing API is now exposed as part of private preview, but is subject to change until GA."
        },
        "x-xgen-owner-team": "Atlas Streams"
      },
      "delete": {
        "tags": ["Streams"],
        "summary": "Delete One Stream Instance",
        "description": "Delete one stream instance in the specified project. To use this resource, the requesting API Key must have the Project Data Access Admin role, Project Owner role or Project Stream Processing Owner role.",
        "operationId": "deleteStreamInstance",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "tenantName",
            "in": "path",
            "description": "Human-readable label that identifies the stream instance to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/vnd.atlas.2023-02-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-02-01"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-changelog": {
          "2023-09-11": "The MongoDB Atlas Streams Processing API is now exposed as part of private preview, but is subject to change until GA."
        },
        "x-xgen-owner-team": "Atlas Streams"
      },
      "patch": {
        "tags": ["Streams"],
        "summary": "Update One Stream Instance",
        "description": "Update one stream instance in the specified project. To use this resource, the requesting API Key must have the Project Data Access Admin role, Project Owner role or Project Stream Processing Owner role.",
        "operationId": "updateStreamInstance",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "tenantName",
            "in": "path",
            "description": "Human-readable label that identifies the stream instance to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Details of the new data process region to update in the streams instance.",
          "content": {
            "application/vnd.atlas.2023-02-01+json": {
              "schema": {
                "$ref": "#/components/schemas/StreamsDataProcessRegion"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-02-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamsTenant"
                },
                "x-xgen-version": "2023-02-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-changelog": {
          "2023-09-11": "The MongoDB Atlas Streams Processing API is now exposed as part of private preview, but is subject to change until GA."
        },
        "x-xgen-owner-team": "Atlas Streams"
      }
    },
    "/api/atlas/v2/groups/{groupId}/streams/{tenantName}/auditLogs": {
      "get": {
        "tags": ["Streams"],
        "summary": "Download Audit Logs for One Atlas Stream Processing Instance",
        "description": "Downloads the audit logs for the specified Atlas Streams Processing instance. By default, logs cover periods of 30 days. To use this resource, the requesting API Key must have the Project Data Access roles, Project Owner role or Project Stream Processing Owner role. The API does not support direct calls with the json response schema. You must request a gzip response schema using an accept header of the format: \"Accept: application/vnd.atlas.YYYY-MM-DD+gzip\".",
        "operationId": "downloadStreamTenantAuditLogs",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Timestamp that specifies the end point for the range of log messages to download.  MongoDB Cloud expresses this timestamp in the number of seconds that have elapsed since the UNIX epoch.",
            "schema": {
              "pattern": "1199145600",
              "type": "integer",
              "format": "int64",
              "example": 1636481348
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Timestamp that specifies the starting point for the range of log messages to download. MongoDB Cloud expresses this timestamp in the number of seconds that have elapsed since the UNIX epoch.",
            "schema": {
              "pattern": "1199145600",
              "type": "integer",
              "format": "int64",
              "example": 1636466948
            }
          },
          {
            "name": "tenantName",
            "in": "path",
            "description": "Human-readable label that identifies the stream instance.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-02-01+gzip": {
                "schema": {
                  "type": "string",
                  "description": "Compressed archive labeled `auditLogs.gz` downloads",
                  "format": "binary"
                },
                "x-xgen-version": "2023-02-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Streams"
      }
    },
    "/api/atlas/v2/groups/{groupId}/streams/{tenantName}/processor/{processorName}:start": {
      "post": {
        "tags": ["Streams"],
        "summary": "Start One Stream Processor",
        "description": "Start a Stream Processor within the specified stream instance. To use this resource, the requesting API Key must have the Project Owner role or Project Stream Processing Owner role.",
        "operationId": "startStreamProcessor",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "tenantName",
            "in": "path",
            "description": "Human-readable label that identifies the stream instance.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "processorName",
            "in": "path",
            "description": "Human-readable label that identifies the stream processor.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2024-05-30+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2024-05-30"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-hidden-env": {
          "qa": "false",
          "qa-gov": "true",
          "prod": "false",
          "prod-gov": "true",
          "dev": "false",
          "dev-gov": "true"
        },
        "x-xgen-owner-team": "Atlas Streams"
      }
    },
    "/api/atlas/v2/groups/{groupId}/streams/{tenantName}/processor/{processorName}:stop": {
      "post": {
        "tags": ["Streams"],
        "summary": "Stop One Stream Processor",
        "description": "Stop a Stream Processor within the specified stream instance. To use this resource, the requesting API Key must have the Project Owner role or Project Stream Processing Owner role.",
        "operationId": "stopStreamProcessor",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "tenantName",
            "in": "path",
            "description": "Human-readable label that identifies the stream instance.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "processorName",
            "in": "path",
            "description": "Human-readable label that identifies the stream processor.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2024-05-30+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2024-05-30"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-hidden-env": {
          "qa": "false",
          "qa-gov": "true",
          "prod": "false",
          "prod-gov": "true",
          "dev": "false",
          "dev-gov": "true"
        },
        "x-xgen-owner-team": "Atlas Streams"
      }
    },
    "/api/atlas/v2": {
      "get": {
        "tags": ["Root"],
        "summary": "Return the status of this MongoDB application",
        "description": "This resource returns information about the MongoDB application along with API key meta data.",
        "operationId": "getSystemStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemStatus"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "apix"
      }
    },
    "/api/atlas/v2/users": {
      "post": {
        "tags": ["MongoDB Cloud Users"],
        "summary": "Create One MongoDB Cloud User",
        "description": "Creates one MongoDB Cloud user account. A MongoDB Cloud user account grants access to only the MongoDB Cloud application. To grant database access, create a database user. MongoDB Cloud sends an email to the users you specify, inviting them to join the project. Invited users don't have access to the project until they accept the invitation. Invitations expire after 30 days.\n\n MongoDB Cloud limits MongoDB Cloud user membership to a maximum of 250 MongoDB Cloud users per team. MongoDB Cloud limits MongoDB Cloud user membership to 500 MongoDB Cloud users per project and 500 MongoDB Cloud users per organization, which includes the combined membership of all projects in the organization. MongoDB Cloud raises an error if an operation exceeds these limits. For example, if you have an organization with five projects, and each project has 100 MongoDB Cloud users, and each MongoDB Cloud user belongs to only one project, you can't add any MongoDB Cloud users to this organization without first removing existing MongoDB Cloud users from the organization.\n\n To use this resource, the requesting API Key can have any role.",
        "operationId": "createUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "MongoDB Cloud user account to create.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/CloudAppUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudAppUser"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/users/{userId}": {
      "get": {
        "tags": ["MongoDB Cloud Users"],
        "summary": "Return One MongoDB Cloud User using Its ID",
        "description": "Returns the details for one MongoDB Cloud user account with the specified unique identifier for the user. You can't use this endpoint to return information on an API Key. To return information about an API Key, use the [Return One Organization](#tag/Organizations/operation/getOrganization) API Key endpoint. You can always retrieve your own user account. If you are the owner of a MongoDB Cloud organization or project, you can also retrieve the user profile for any user with membership in that organization or project. To use this resource, the requesting API Key can have any role.",
        "operationId": "getUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies this user.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudAppUser"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/users/byName/{userName}": {
      "get": {
        "tags": ["MongoDB Cloud Users"],
        "summary": "Return One MongoDB Cloud User using Their Username",
        "description": "Returns the details for one MongoDB Cloud user account with the specified username. You can't use this endpoint to return information about an API Key. To return information about an API Key, use the [Return One Organization](#tag/Organizations/operation/getOrganization) API Key endpoint. To use this resource, the requesting API Key can have any role.",
        "operationId": "getUserByUsername",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "Email address that belongs to the MongoDB Cloud user account. You cannot modify this address after creating the user.",
            "required": true,
            "schema": {
              "pattern": "^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudAppUser"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "IAM"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/liveMigrations/linkTokens": {
      "post": {
        "tags": ["Cloud Migration Service"],
        "summary": "Create One Link-Token",
        "description": "Create one link-token that contains all the information required to complete the link. MongoDB Atlas uses the link-token for push live migrations only. Live migration (push) allows you to securely push data from Cloud Manager or Ops Manager into MongoDB Atlas. Your API Key must have the Organization Owner role to successfully call this resource.",
        "operationId": "createLinkToken",
        "parameters": [
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "IP address access list entries associated with the migration.",
          "content": {
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/TargetOrgRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetOrg"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Migrations"
      },
      "delete": {
        "tags": ["Cloud Migration Service"],
        "summary": "Remove One Link-Token",
        "description": "Remove one organization link and its associated public API key. MongoDB Atlas uses the link-token for push live migrations only. Live migrations (push) let you securely push data from Cloud Manager or Ops Manager into MongoDB Atlas. Your API Key must have the Organization Owner role to successfully call this resource.",
        "operationId": "deleteLinkToken",
        "parameters": [
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ],
        "responses": {
          "204": {
            "description": "This endpoint does not return a response body.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/NoBody"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Migrations"
      }
    },
    "/api/atlas/v2/orgs/{orgId}/liveMigrations/availableProjects": {
      "get": {
        "tags": ["Cloud Migration Service"],
        "summary": "Return All Projects Available for Migration",
        "description": "Return all projects that you can migrate to the specified organization.",
        "operationId": "listSourceProjects",
        "parameters": [
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LiveImportAvailableProject"
                  }
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Migrations"
      }
    },
    "/api/atlas/v2/groups/{groupId}/liveMigrations/{liveMigrationId}": {
      "get": {
        "tags": ["Cloud Migration Service"],
        "summary": "Return One Migration Job",
        "description": "Return details of one cluster migration job. Each push live migration job uses one migration host. Your API Key must have the Organization Member role to successfully call this resource.",
        "operationId": "getPushMigration",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/liveMigrationId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveMigrationResponse"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Migrations"
      }
    },
    "/api/atlas/v2/groups/{groupId}/liveMigrations/validate/{validationId}": {
      "get": {
        "tags": ["Cloud Migration Service"],
        "summary": "Return One Migration Validation Job",
        "description": "Return the status of one migration validation job. Your API Key must have the Organization Owner role to successfully call this resource.",
        "operationId": "getValidationStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "name": "validationId",
            "in": "path",
            "description": "Unique 24-hexadecimal digit string that identifies the validation job.",
            "required": true,
            "schema": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "example": "507f1f77bcf86cd799439011"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveImportValidation"
                },
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Migrations"
      }
    },
    "/api/atlas/v2/groups/{groupId}/liveMigrations/{liveMigrationId}/cutover": {
      "put": {
        "tags": ["Cloud Migration Service"],
        "summary": "Cut Over the Migrated Cluster",
        "description": "Cut over the migrated cluster to MongoDB Atlas. Confirm when the cut over completes. When the cut over completes, MongoDB Atlas completes the live migration process and stops synchronizing with the source cluster. Your API Key must have the Organization Owner role to successfully call this resource.",
        "operationId": "cutoverMigration",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/liveMigrationId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "content": {
              "application/vnd.atlas.2023-01-01+json": {
                "x-xgen-version": "2023-01-01"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Migrations"
      }
    },
    "/api/atlas/v2/groups/{groupId}/liveMigrations": {
      "post": {
        "tags": ["Cloud Migration Service"],
        "summary": "Migrate One Local Managed Cluster to MongoDB Atlas",
        "description": "Migrate one cluster that Cloud or Ops Manager manages to MongoDB Atlas.\n\n Please make sure to [validate](#tag/Cloud-Migration-Service/operation/validateMigration) your migration before initiating it.\n\n You can use this API endpoint for push live migrations only. Your API Key must have the Organization Owner role to successfully call this resource.\n\n **NOTE**: Migrating time-series collections is not yet supported on MongoDB 6.0 or higher. Migrations on MongoDB 6.0 or higher will skip any time-series collections on the source cluster.",
        "operationId": "createPushMigration",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "One migration to be created.",
          "content": {
            "application/vnd.atlas.2024-05-30+json": {
              "schema": {
                "$ref": "#/components/schemas/LiveMigrationRequest20240530"
              },
              "x-xgen-version": "2024-05-30"
            },
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/LiveMigrationRequest"
              },
              "x-xgen-version": "2023-01-01",
              "x-sunset": "2025-05-30"
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/vnd.atlas.2024-05-30+json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveMigrationResponse"
                },
                "x-xgen-version": "2024-05-30"
              },
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveMigrationResponse"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2025-05-30"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Migrations"
      }
    },
    "/api/atlas/v2/groups/{groupId}/liveMigrations/validate": {
      "post": {
        "tags": ["Cloud Migration Service"],
        "summary": "Validate One Migration Request",
        "description": "Verifies whether the provided credentials, available disk space, MongoDB versions, and so on meet the requirements of the migration request. If the check passes, the migration can proceed. Your API Key must have the Organization Owner role to successfully call this resource.",
        "operationId": "validateMigration",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "description": "One migration to be validated.",
          "content": {
            "application/vnd.atlas.2024-05-30+json": {
              "schema": {
                "$ref": "#/components/schemas/LiveMigrationRequest20240530"
              },
              "x-xgen-version": "2024-05-30"
            },
            "application/vnd.atlas.2023-01-01+json": {
              "schema": {
                "$ref": "#/components/schemas/LiveMigrationRequest"
              },
              "x-xgen-version": "2023-01-01",
              "x-sunset": "2025-05-30"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.atlas.2024-05-30+json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveImportValidation"
                },
                "x-xgen-version": "2024-05-30"
              },
              "application/vnd.atlas.2023-01-01+json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveImportValidation"
                },
                "x-xgen-version": "2023-01-01",
                "x-sunset": "2025-05-30"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "security": [
          {
            "DigestAuth": []
          }
        ],
        "x-xgen-owner-team": "Atlas Migrations"
      }
    }
  },
  "components": {
    "schemas": {
      "RequestAccepted": {
        "type": "object",
        "description": "Accepted"
      },
      "ObjectCreated": {
        "type": "object",
        "description": "Created"
      },
      "NoBody": {
        "type": "object",
        "description": "Endpoint does not return a response body."
      },
      "ApiAtlasFTSMappingsViewManual": {
        "title": "mappings",
        "type": "object",
        "properties": {
          "dynamic": {
            "type": "boolean",
            "description": "Flag that indicates whether the index uses dynamic or static mappings. Required if **mappings.fields** is omitted.",
            "externalDocs": {
              "description": "Dynamic or Static Mappings",
              "url": "https://dochub.mongodb.org/core/index-definitions-fts#field-mapping-examples"
            },
            "default": false
          },
          "fields": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "externalDocs": {
                "description": "Atlas Search Field Mappings",
                "url": "https://dochub.mongodb.org/core/field-mapping-definition-fts#define-field-mappings"
              }
            },
            "description": "One or more field specifications for the Atlas Search index. Required if **mappings.dynamic** is omitted or set to **false**.",
            "externalDocs": {
              "description": "Atlas Search Index",
              "url": "https://dochub.mongodb.org/core/index-definitions-fts"
            }
          }
        },
        "description": "Index specifications for the collection's fields."
      },
      "EventTypeDetails": {
        "title": "Event type details",
        "type": "object",
        "properties": {
          "alertable": {
            "type": "boolean",
            "description": "Whether or not this event type can be configured as an alert via the API.",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Description of the event type.",
            "readOnly": true
          },
          "eventType": {
            "type": "string",
            "description": "Enum representation of the event type.",
            "readOnly": true
          }
        },
        "description": "A singular type of event"
      },
      "Link": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "description": "Uniform Resource Locator (URL) that points another API resource to which this response has some relationship. This URL often begins with `https://cloud.mongodb.com/api/atlas`.",
            "example": "https://cloud.mongodb.com/api/atlas"
          },
          "rel": {
            "type": "string",
            "description": "Uniform Resource Locator (URL) that defines the semantic relationship between this resource and another API resource. This URL often begins with `https://cloud.mongodb.com/api/atlas`.",
            "example": "self"
          }
        }
      },
      "PaginatedEventTypeDetailsResponse": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/EventTypeDetails"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "AlertAudit": {
        "title": "Alert Audits",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "alertId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the alert associated with the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/AlertAuditTypeView"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        },
        "description": "Alert audit indicates acknowledgement status of an alert."
      },
      "AlertAuditTypeView": {
        "title": "Alert Audit Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "example": "ALERT_ACKNOWLEDGED_AUDIT",
        "enum": ["ALERT_ACKNOWLEDGED_AUDIT", "ALERT_UNACKNOWLEDGED_AUDIT"]
      },
      "AlertConfigAudit": {
        "title": "Alert Config Audits",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "alertConfigId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration associated with the **alertId**.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/AlertConfigAuditTypeView"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        },
        "description": "Alert config audit indicates any activities around alert settings."
      },
      "AlertConfigAuditTypeView": {
        "title": "Alert Audit Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "example": "ALERT_CONFIG_ADDED_AUDIT",
        "enum": [
          "ALERT_CONFIG_DISABLED_AUDIT",
          "ALERT_CONFIG_ENABLED_AUDIT",
          "ALERT_CONFIG_ADDED_AUDIT",
          "ALERT_CONFIG_DELETED_AUDIT",
          "ALERT_CONFIG_CHANGED_AUDIT"
        ]
      },
      "ApiUserEventTypeViewForNdsGroup": {
        "title": "API User Event Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "example": "API_KEY_CREATED",
        "enum": [
          "API_KEY_CREATED",
          "API_KEY_DELETED",
          "API_KEY_ACCESS_LIST_ENTRY_ADDED",
          "API_KEY_ACCESS_LIST_ENTRY_DELETED",
          "API_KEY_ROLES_CHANGED",
          "API_KEY_DESCRIPTION_CHANGED",
          "API_KEY_ADDED_TO_GROUP",
          "API_KEY_REMOVED_FROM_GROUP",
          "API_KEY_UI_IP_ACCESS_LIST_INHERITANCE_ENABLED",
          "API_KEY_UI_IP_ACCESS_LIST_INHERITANCE_DISABLED"
        ]
      },
      "ApiUserEventViewForNdsGroup": {
        "title": "API User Events",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/ApiUserEventTypeViewForNdsGroup"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        },
        "description": "API User event identifies different activities around user api keys."
      },
      "AppServiceEventTypeView": {
        "title": "App Services Event Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "example": "DEPLOYMENT_FAILURE",
        "enum": [
          "URL_CONFIRMATION",
          "SUCCESSFUL_DEPLOY",
          "DEPLOYMENT_FAILURE",
          "DEPLOYMENT_MODEL_CHANGE_SUCCESS",
          "DEPLOYMENT_MODEL_CHANGE_FAILURE",
          "REQUEST_RATE_LIMIT",
          "LOG_FORWARDER_FAILURE",
          "INSIDE_REALM_METRIC_THRESHOLD",
          "OUTSIDE_REALM_METRIC_THRESHOLD",
          "SYNC_FAILURE",
          "TRIGGER_FAILURE",
          "TRIGGER_AUTO_RESUMED"
        ]
      },
      "AppServiceEventView": {
        "title": "App Services Events",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/AppServiceEventTypeView"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          }
        },
        "description": "App Services event identifies different activities about a BAAS application."
      },
      "AutomationConfigEventTypeView": {
        "title": "Automation Config Event Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "example": "AUTOMATION_CONFIG_PUBLISHED_AUDIT",
        "enum": ["AUTOMATION_CONFIG_PUBLISHED_AUDIT"]
      },
      "AutomationConfigEventView": {
        "title": "Automation Config Events",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/AutomationConfigEventTypeView"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        },
        "description": "Automation config event identifies that deployment configuration is published."
      },
      "BillingEventTypeViewForNdsGroup": {
        "title": "Billing Event Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "example": "CREDIT_CARD_CURRENT",
        "enum": [
          "CREDIT_CARD_CURRENT",
          "CREDIT_CARD_ABOUT_TO_EXPIRE",
          "PENDING_INVOICE_UNDER_THRESHOLD",
          "PENDING_INVOICE_OVER_THRESHOLD",
          "DAILY_BILL_UNDER_THRESHOLD",
          "DAILY_BILL_OVER_THRESHOLD"
        ]
      },
      "BillingEventViewForNdsGroup": {
        "title": "Billing Events",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/BillingEventTypeViewForNdsGroup"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "invoiceId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies of the invoice associated with the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "paymentId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the invoice payment associated with this event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        },
        "description": "Billing event identifies different activities related to billing, payment or financial status change of an organization."
      },
      "ClusterEventTypeViewForNdsGroup": {
        "title": "Cluster Event Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "example": "CLUSTER_MONGOS_IS_PRESENT",
        "enum": ["CLUSTER_MONGOS_IS_PRESENT", "CLUSTER_MONGOS_IS_MISSING"]
      },
      "ClusterEventViewForNdsGroup": {
        "title": "Cluster Events",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/ClusterEventTypeViewForNdsGroup"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "shardName": {
            "type": "string",
            "description": "Human-readable label of the shard associated with the event.",
            "readOnly": true,
            "example": "event-sh-01"
          }
        },
        "description": "Cluster event identifies different activities about cluster of mongod hosts."
      },
      "DataExplorerAccessedEventTypeView": {
        "title": "Data Explorer Accessed Event Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "example": "DATA_EXPLORER",
        "enum": ["DATA_EXPLORER", "DATA_EXPLORER_CRUD_ATTEMPT", "DATA_EXPLORER_CRUD_ERROR", "DATA_EXPLORER_CRUD"]
      },
      "DataExplorerAccessedEventView": {
        "title": "Data Explorer Accessed Events",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "collection": {
            "type": "string",
            "description": "Human-readable label of the collection on which the event occurred. The resource returns this parameter when the **eventTypeName** includes `DATA_EXPLORER`.",
            "readOnly": true,
            "example": "test_collection"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "database": {
            "type": "string",
            "description": "Human-readable label of the database on which this incident occurred. The resource returns this parameter when `\"eventTypeName\" : \"DATA_EXPLORER\"` or `\"eventTypeName\" : \"DATA_EXPLORER_CRUD\"`.",
            "readOnly": true,
            "example": "test_db"
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/DataExplorerAccessedEventTypeView"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "opType": {
            "type": "string",
            "description": "Action that the database attempted to execute when the event triggered. The response returns this parameter when `eventTypeName\" : \"DATA_EXPLORER\"`.",
            "readOnly": true,
            "example": "insertDocument"
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        },
        "description": "Data Explorer accessed event tracks different data operations via Data Explorer interactions."
      },
      "DataMetricEventView": {
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "currentValue": {
            "$ref": "#/components/schemas/DataMetricValueView"
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/HostMetricEventTypeView"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "metricName": {
            "type": "string",
            "description": "Human-readable label of the metric associated with the **alertId**. This field may change type of **currentValue** field.",
            "readOnly": true
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "port": {
            "type": "integer",
            "description": "IANA port on which the MongoDB process listens for requests.",
            "format": "int32",
            "readOnly": true,
            "example": 27017
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "replicaSetName": {
            "type": "string",
            "description": "Human-readable label of the replica set associated with the event.",
            "readOnly": true,
            "example": "event-replica-set"
          },
          "shardName": {
            "type": "string",
            "description": "Human-readable label of the shard associated with the event.",
            "readOnly": true,
            "example": "event-sh-01"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        }
      },
      "DataMetricUnits": {
        "title": "Data Metric Units",
        "type": "string",
        "description": "Element used to express the quantity. This can be an element of time, storage capacity, and the like.",
        "example": "BYTES",
        "enum": [
          "BITS",
          "KILOBITS",
          "MEGABITS",
          "GIGABITS",
          "BYTES",
          "KILOBYTES",
          "MEGABYTES",
          "GIGABYTES",
          "TERABYTES",
          "PETABYTES"
        ]
      },
      "DataMetricValueView": {
        "title": "Data Metric Value",
        "type": "object",
        "properties": {
          "number": {
            "type": "number",
            "description": "Amount of the **metricName** recorded at the time of the event. This value triggered the alert.",
            "format": "double",
            "readOnly": true
          },
          "units": {
            "$ref": "#/components/schemas/DataMetricUnits"
          }
        },
        "description": "Measurement of the **metricName** recorded at the time of the event.",
        "readOnly": true
      },
      "DefaultEventViewForNdsGroup": {
        "title": "Any Other Events",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "type": "object",
            "description": "Unique identifier of event type.",
            "oneOf": [
              {
                "title": "Auto Indexing Event Types",
                "type": "string",
                "enum": [
                  "AUTO_INDEXING_ENABLED",
                  "AUTO_INDEXING_DISABLED",
                  "AUTO_INDEXING_INDEX_BUILD_SUBMITTED",
                  "AUTO_INDEXING_SLOW_INDEX_BUILD",
                  "AUTO_INDEXING_STALLED_INDEX_BUILD",
                  "AUTO_INDEXING_FAILED_INDEX_BUILD",
                  "AUTO_INDEXING_COMPLETED_INDEX_BUILD",
                  "AUTO_INDEXING_STARTED_INDEX_BUILD"
                ]
              },
              {
                "title": "AWS Peer Vpc Audit Types",
                "type": "string",
                "enum": ["PEER_CREATED", "PEER_DELETED", "PEER_UPDATED"]
              },
              {
                "title": "Azure Peer Network Audit Types",
                "type": "string",
                "enum": ["AZURE_PEER_CREATED", "AZURE_PEER_UPDATED", "AZURE_PEER_ACTIVE", "AZURE_PEER_DELETED"]
              },
              {
                "title": "Cluster Connection Audit Types",
                "type": "string",
                "enum": [
                  "CLUSTER_CONNECTION_GET_DATABASES",
                  "CLUSTER_CONNECTION_GET_DATABASE_COLLECTIONS",
                  "CLUSTER_CONNECTION_GET_DATABASE_NAMESPACES",
                  "CLUSTER_CONNECTION_GET_NAMESPACES_WITH_UUID",
                  "CLUSTER_CONNECTION_AGGREGATE",
                  "CLUSTER_CONNECTION_CREATE_COLLECTION",
                  "CLUSTER_CONNECTION_SAMPLE_COLLECTION_FIELD_NAMES"
                ]
              },
              {
                "title": "Cps Backup Event Types",
                "type": "string",
                "enum": [
                  "CPS_SNAPSHOT_STARTED",
                  "CPS_SNAPSHOT_SUCCESSFUL",
                  "CPS_SNAPSHOT_FAILED",
                  "CPS_CONCURRENT_SNAPSHOT_FAILED_WILL_RETRY",
                  "CPS_SNAPSHOT_FALLBACK_SUCCESSFUL",
                  "CPS_SNAPSHOT_BEHIND",
                  "CPS_COPY_SNAPSHOT_STARTED",
                  "CPS_COPY_SNAPSHOT_FAILED",
                  "CPS_COPY_SNAPSHOT_SUCCESSFUL",
                  "CPS_PREV_SNAPSHOT_OLD",
                  "CPS_SNAPSHOT_FALLBACK_FAILED",
                  "CPS_RESTORE_SUCCESSFUL",
                  "CPS_EXPORT_SUCCESSFUL",
                  "CPS_RESTORE_FAILED",
                  "CPS_EXPORT_FAILED",
                  "CPS_AUTO_EXPORT_FAILED",
                  "CPS_SNAPSHOT_DOWNLOAD_REQUEST_FAILED",
                  "CPS_OPLOG_BEHIND",
                  "CPS_OPLOG_CAUGHT_UP"
                ]
              },
              {
                "title": "CPS Backup Compliance Policy Event Types",
                "type": "string",
                "enum": [
                  "CPS_DATA_PROTECTION_ENABLE_REQUESTED",
                  "CPS_DATA_PROTECTION_ENABLED",
                  "CPS_DATA_PROTECTION_UPDATE_REQUESTED",
                  "CPS_DATA_PROTECTION_UPDATED",
                  "CPS_DATA_PROTECTION_DISABLE_REQUESTED",
                  "CPS_DATA_PROTECTION_DISABLED"
                ]
              },
              {
                "title": "Disk Backup Event Types",
                "type": "string",
                "enum": [
                  "CPS_RESTORE_REQUESTED_AUDIT",
                  "CPS_SNAPSHOT_SCHEDULE_UPDATED_AUDIT",
                  "CPS_SNAPSHOT_FASTER_RESTORES_START_AUDIT",
                  "CPS_SNAPSHOT_FASTER_RESTORES_SUCCESS_AUDIT",
                  "CPS_SNAPSHOT_FASTER_RESTORES_FAILED_AUDIT",
                  "CPS_SNAPSHOT_DELETED_AUDIT",
                  "CPS_SNAPSHOT_RETENTION_MODIFIED_AUDIT",
                  "CPS_SNAPSHOT_IN_PROGRESS_AUDIT",
                  "CPS_SNAPSHOT_COMPLETED_AUDIT",
                  "CPS_ON_DEMAND_SNAPSHOT_REQUESTED",
                  "CPS_OPLOG_CAUGHT_UP_AUDIT",
                  "CPS_OPLOG_BEHIND_AUDIT"
                ]
              },
              {
                "title": "Encryption Event Types",
                "type": "string",
                "enum": [
                  "AWS_ENCRYPTION_KEY_ROTATED",
                  "AWS_ENCRYPTION_KEY_NEEDS_ROTATION",
                  "AZURE_ENCRYPTION_KEY_ROTATED",
                  "AZURE_ENCRYPTION_KEY_NEEDS_ROTATION",
                  "GCP_ENCRYPTION_KEY_ROTATED",
                  "GCP_ENCRYPTION_KEY_NEEDS_ROTATION",
                  "AWS_ENCRYPTION_KEY_VALID",
                  "AWS_ENCRYPTION_KEY_INVALID",
                  "AZURE_ENCRYPTION_KEY_VALID",
                  "AZURE_ENCRYPTION_KEY_INVALID",
                  "GCP_ENCRYPTION_KEY_VALID",
                  "GCP_ENCRYPTION_KEY_INVALID"
                ]
              },
              {
                "title": "Export Bucket Audit Types",
                "type": "string",
                "enum": ["BUCKET_CREATED_AUDIT", "BUCKET_DELETED_AUDIT"]
              },
              {
                "title": "GCP Peer Vpc Audit Types",
                "type": "string",
                "enum": [
                  "GCP_PEER_CREATED",
                  "GCP_PEER_DELETED",
                  "GCP_PEER_UPDATED",
                  "GCP_PEER_ACTIVE",
                  "GCP_PEER_INACTIVE"
                ]
              },
              {
                "title": "Group Audit Types",
                "type": "string",
                "enum": [
                  "DATA_EXPLORER_ENABLED",
                  "DATA_EXPLORER_DISABLED",
                  "CREDIT_CARD_ADDED",
                  "CREDIT_CARD_UPDATED",
                  "GROUP_DELETED",
                  "GROUP_CREATED",
                  "GROUP_MOVED",
                  "GROUP_TEMPORARILY_ACTIVATED",
                  "GROUP_ACTIVATED",
                  "GROUP_LOCKED",
                  "GROUP_SUSPENDED",
                  "GROUP_FLUSHED",
                  "GROUP_NAME_CHANGED",
                  "GROUP_CHARTS_ACTIVATION_REQUESTED",
                  "GROUP_CHARTS_ACTIVATED",
                  "GROUP_CHARTS_UPGRADED",
                  "GROUP_CHARTS_RESET"
                ]
              },
              {
                "title": "Group Event Types",
                "type": "string",
                "enum": [
                  "PAID_IN_FULL",
                  "DELINQUENT",
                  "ALL_USERS_HAVE_MULTI_FACTOR_AUTH",
                  "USERS_WITHOUT_MULTI_FACTOR_AUTH",
                  "ENCRYPTION_AT_REST_KMS_NETWORK_ACCESS_DENIED",
                  "ENCRYPTION_AT_REST_KMS_NETWORK_ACCESS_RESTORED"
                ]
              },
              {
                "title": "Group Integration Event Types",
                "type": "string",
                "enum": ["INTEGRATION_CONFIGURED", "INTEGRATION_REMOVED"]
              },
              {
                "title": "Index Build Audit Types",
                "type": "string",
                "enum": [
                  "ROLLING_INDEX_FAILED_INDEX_BUILD",
                  "ROLLING_INDEX_SUCCESS_INDEX_BUILD",
                  "INDEX_FAILED_INDEX_BUILD",
                  "INDEX_SUCCESS_INDEX_BUILD"
                ]
              },
              {
                "title": "NDS DB Check Audit Types",
                "type": "string",
                "enum": [
                  "DB_CHECK_SUBMITTED",
                  "DB_CHECK_UPDATED",
                  "CLUSTER_SAMPLED_FOR_DB_CHECK",
                  "DB_CHECK_SCHEDULED_FOR_CLUSTER",
                  "DB_CHECK_DEFERRED_FOR_CLUSTER",
                  "CLUSTER_OPTED_OUT_OF_DB_CHECK"
                ]
              },
              {
                "title": "NDS Data Validation Audit Types",
                "type": "string",
                "enum": [
                  "CLUSTER_SAMPLED_FOR_DATA_VALIDATION",
                  "DATA_VALIDATION_SUBMITTED_FOR_CLUSTER",
                  "CLUSTER_OPTED_OUT_OF_DATA_VALIDATION"
                ]
              },
              {
                "title": "NDS Maintenance Window Audit Types",
                "type": "string",
                "enum": [
                  "MAINTENANCE_IN_ADVANCED",
                  "MAINTENANCE_AUTO_DEFERRED",
                  "MAINTENANCE_STARTED",
                  "MAINTENANCE_NO_LONGER_NEEDED"
                ]
              },
              {
                "title": "NDS Serverless Auto Scaling Audit Types",
                "type": "string",
                "enum": [
                  "SERVERLESS_AUTO_SCALING_INITIATED",
                  "SERVERLESS_VERTICAL_SCALING_INITIATED",
                  "SERVERLESS_HORIZONTAL_SCALING_INITIATED",
                  "SERVERLESS_MTM_DRAIN_REQUESTED",
                  "SERVERLESS_MTM_DRAIN_INITIATED",
                  "SERVERLESS_MTM_DRAIN_COMPLETED",
                  "SERVERLESS_MTM_DRAIN_STOPPED"
                ]
              },
              {
                "title": "NDS Tenant Endpoint Service Deployment Audit Types",
                "type": "string",
                "enum": [
                  "TENANT_ENDPOINT_SERVICE_DEPLOYMENT_CREATED",
                  "TENANT_ENDPOINT_SERVICE_CREATED",
                  "TENANT_ENDPOINT_SERVICE_AVAILABLE",
                  "TENANT_ENDPOINT_SERVICE_DEPLOYMENT_DELETE_REQUESTED",
                  "TENANT_ENDPOINT_SERVICE_DELETED",
                  "TENANT_ENDPOINT_SERVICE_DEPLOYMENT_DELETED",
                  "TENANT_ENDPOINT_SERVICE_DEPLOYMENT_NUM_DESIRED_ENDPOINT_SERVICES_INCREASED"
                ]
              },
              {
                "title": "NDS x509 User Auth Event Types",
                "type": "string",
                "enum": [
                  "NDS_X509_USER_AUTHENTICATION_CUSTOMER_CA_EXPIRATION_RESOLVED",
                  "NDS_X509_USER_AUTHENTICATION_CUSTOMER_CA_EXPIRATION_CHECK",
                  "NDS_X509_USER_AUTHENTICATION_CUSTOMER_CRL_EXPIRATION_RESOLVED",
                  "NDS_X509_USER_AUTHENTICATION_CUSTOMER_CRL_EXPIRATION_CHECK",
                  "NDS_X509_USER_AUTHENTICATION_MANAGED_USER_CERTS_EXPIRATION_RESOLVED",
                  "NDS_X509_USER_AUTHENTICATION_MANAGED_USER_CERTS_EXPIRATION_CHECK"
                ]
              },
              {
                "title": "Online Archive Event Types",
                "type": "string",
                "enum": [
                  "ONLINE_ARCHIVE_INSUFFICIENT_INDEXES_CHECK",
                  "ONLINE_ARCHIVE_INSUFFICIENT_INDEXES_RESOLVED",
                  "ONLINE_ARCHIVE_UP_TO_DATE",
                  "ONLINE_ARCHIVE_DATA_EXPIRATION_RESOLVED",
                  "ONLINE_ARCHIVE_MAX_CONSECUTIVE_OFFLOAD_WINDOWS_CHECK"
                ]
              },
              {
                "title": "Private Link Audit Types",
                "type": "string",
                "enum": [
                  "ENDPOINT_SERVICE_CREATED",
                  "ENDPOINT_SERVICE_DELETED",
                  "INTERFACE_ENDPOINT_CREATED",
                  "INTERFACE_ENDPOINT_DELETED",
                  "INTERFACE_ENDPOINT_PATCHED"
                ]
              },
              {
                "title": "Proactive Operation Event Types",
                "type": "string",
                "enum": ["PROACTIVE_OPERATION_EVENT_LOGGED"]
              },
              {
                "title": "Serverless Deployment Audit Types",
                "type": "string",
                "enum": [
                  "SERVERLESS_DEPLOYMENT_CREATED",
                  "SERVERLESS_DEPLOYMENT_DELETED",
                  "SERVERLESS_DEPLOYMENT_UPDATED",
                  "SERVERLESS_DEPLOYMENT_INSTANCE_REPLACED",
                  "SERVERLESS_DEPLOYMENT_INSTANCE_REBOOTED",
                  "SERVERLESS_DEPLOYMENT_ENDPOINT_SERVICE_LINKED",
                  "SERVERLESS_DEPLOYMENT_ENDPOINT_SERVICE_UNLINKED",
                  "SERVERLESS_DEPLOYMENT_ENVOY_INSTANCE_UIS_KEYS_ROTATED"
                ]
              },
              {
                "title": "Serverless Event Types",
                "type": "string",
                "enum": ["INSIDE_SERVERLESS_METRIC_THRESHOLD", "OUTSIDE_SERVERLESS_METRIC_THRESHOLD"]
              },
              {
                "title": "Setup Serverless Audit Types",
                "type": "string",
                "enum": ["SETUP_SERVERLESS_INITIATED"]
              },
              {
                "title": "Streams Event Types",
                "type": "string",
                "enum": ["MAX_PROCESSOR_COUNT_REACHED"]
              },
              {
                "title": "Stream Processor Event Types",
                "type": "string",
                "enum": ["STREAM_PROCESSOR_STATE_IS_FAILED"]
              },
              {
                "title": "Support Case Event Types",
                "type": "string",
                "enum": ["CASE_CREATED"]
              },
              {
                "title": "Support Event Types",
                "type": "string",
                "enum": ["SUPPORT_EMAILS_SENT_SUCCESSFULLY", "SUPPORT_EMAILS_SENT_FAILURE"]
              },
              {
                "title": "Tenant Backup Event Types",
                "type": "string",
                "enum": [
                  "TENANT_SNAPSHOT_STARTED_AUDIT",
                  "TENANT_SNAPSHOT_COMPLETED_AUDIT",
                  "TENANT_SNAPSHOT_DELETED_AUDIT",
                  "TENANT_RESTORE_REQUESTED_AUDIT",
                  "TENANT_RESTORE_COMPLETED_AUDIT",
                  "TENANT_SNAPSHOT_DOWNLOAD_REQUESTED_AUDIT"
                ]
              },
              {
                "title": "Version Audit Types",
                "type": "string",
                "enum": [
                  "CLUSTER_VERSION_FIXED",
                  "CLUSTER_VERSION_UNFIXED",
                  "CLUSTER_FCV_FIXED",
                  "CLUSTER_FCV_UNFIXED",
                  "AGENT_VERSION_FIXED",
                  "AGENT_VERSION_UNFIXED",
                  "FIXED_VERSION_UPDATED",
                  "FIXED_AGENT_VERSION_UPDATED",
                  "CLUSTER_FCV_DOWNGRADED"
                ]
              }
            ]
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        },
        "description": "Other events which don't have extra details beside of basic one."
      },
      "EventViewForNdsGroup": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/DefaultEventViewForNdsGroup"
          },
          {
            "$ref": "#/components/schemas/AlertAudit"
          },
          {
            "$ref": "#/components/schemas/AlertConfigAudit"
          },
          {
            "$ref": "#/components/schemas/ApiUserEventViewForNdsGroup"
          },
          {
            "$ref": "#/components/schemas/ServiceAccountGroupEvents"
          },
          {
            "$ref": "#/components/schemas/AutomationConfigEventView"
          },
          {
            "$ref": "#/components/schemas/AppServiceEventView"
          },
          {
            "$ref": "#/components/schemas/BillingEventViewForNdsGroup"
          },
          {
            "$ref": "#/components/schemas/ClusterEventViewForNdsGroup"
          },
          {
            "$ref": "#/components/schemas/DataExplorerAccessedEventView"
          },
          {
            "$ref": "#/components/schemas/FTSIndexAuditView"
          },
          {
            "$ref": "#/components/schemas/HostEventViewForNdsGroup"
          },
          {
            "$ref": "#/components/schemas/HostMetricEvent"
          },
          {
            "$ref": "#/components/schemas/NDSAuditViewForNdsGroup"
          },
          {
            "$ref": "#/components/schemas/NDSAutoScalingAuditViewForNdsGroup"
          },
          {
            "$ref": "#/components/schemas/NDSServerlessInstanceAuditView"
          },
          {
            "$ref": "#/components/schemas/NDSTenantEndpointAuditView"
          },
          {
            "$ref": "#/components/schemas/ForNdsGroup"
          },
          {
            "$ref": "#/components/schemas/TeamEventViewForNdsGroup"
          },
          {
            "$ref": "#/components/schemas/UserEventViewForNdsGroup"
          },
          {
            "$ref": "#/components/schemas/ResourceEventViewForNdsGroup"
          },
          {
            "$ref": "#/components/schemas/StreamsEventViewForNdsGroup"
          },
          {
            "$ref": "#/components/schemas/StreamProcessorEventViewForNdsGroup"
          }
        ]
      },
      "FTSIndexAuditTypeView": {
        "title": "FTS Index Audit Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "example": "FTS_INDEX_CREATED",
        "enum": [
          "FTS_INDEX_DELETION_FAILED",
          "FTS_INDEX_BUILD_COMPLETE",
          "FTS_INDEX_BUILD_FAILED",
          "FTS_INDEX_CREATED",
          "FTS_INDEX_UPDATED",
          "FTS_INDEX_DELETED",
          "FTS_INDEX_CLEANED_UP",
          "FTS_INDEXES_RESTORED",
          "FTS_INDEXES_RESTORE_FAILED"
        ]
      },
      "FTSIndexAuditView": {
        "title": "FTS Index Audits",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/FTSIndexAuditTypeView"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        },
        "description": "FTS index audit indicates any activities about search index."
      },
      "ForNdsGroup": {
        "title": "ReplicaSet Events",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/ReplicaSetEventTypeViewForNdsGroup"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "port": {
            "type": "integer",
            "description": "IANA port on which the MongoDB process listens for requests.",
            "format": "int32",
            "readOnly": true,
            "example": 27017
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "replicaSetName": {
            "type": "string",
            "description": "Human-readable label of the replica set associated with the event.",
            "readOnly": true,
            "example": "event-replica-set"
          },
          "shardName": {
            "type": "string",
            "description": "Human-readable label of the shard associated with the event.",
            "readOnly": true,
            "example": "event-sh-01"
          }
        },
        "description": "ReplicaSet Event identifies different activities about replica set of mongod instances."
      },
      "GroupPaginatedEventView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/EventViewForNdsGroup"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "HostEventTypeViewForNdsGroup": {
        "title": "Host Event Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "example": "HOST_DOWN",
        "enum": [
          "AUTO_CREATED_INDEX_AUDIT",
          "ATTEMPT_KILLOP_AUDIT",
          "ATTEMPT_KILLSESSION_AUDIT",
          "HOST_UP",
          "HOST_DOWN",
          "HOST_HAS_INDEX_SUGGESTIONS",
          "HOST_MONGOT_RECOVERED_OOM",
          "HOST_MONGOT_CRASHING_OOM",
          "HOST_ENOUGH_DISK_SPACE",
          "HOST_NOT_ENOUGH_DISK_SPACE"
        ]
      },
      "HostEventViewForNdsGroup": {
        "title": "Host Events",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/HostEventTypeViewForNdsGroup"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "port": {
            "type": "integer",
            "description": "IANA port on which the MongoDB process listens for requests.",
            "format": "int32",
            "readOnly": true,
            "example": 27017
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "replicaSetName": {
            "type": "string",
            "description": "Human-readable label of the replica set associated with the event.",
            "readOnly": true,
            "example": "event-replica-set"
          },
          "shardName": {
            "type": "string",
            "description": "Human-readable label of the shard associated with the event.",
            "readOnly": true,
            "example": "event-sh-01"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        },
        "description": "Host event identifies different activities about mongod host."
      },
      "HostMetricEvent": {
        "title": "Host Metric Events",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "currentValue": {
            "$ref": "#/components/schemas/HostMetricValue"
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/HostMetricEventTypeView"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "metricName": {
            "type": "string",
            "description": "Human-readable label of the metric associated with the **alertId**. This field may change type of **currentValue** field.",
            "readOnly": true
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "port": {
            "type": "integer",
            "description": "IANA port on which the MongoDB process listens for requests.",
            "format": "int32",
            "readOnly": true,
            "example": 27017
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "replicaSetName": {
            "type": "string",
            "description": "Human-readable label of the replica set associated with the event.",
            "readOnly": true,
            "example": "event-replica-set"
          },
          "shardName": {
            "type": "string",
            "description": "Human-readable label of the shard associated with the event.",
            "readOnly": true,
            "example": "event-sh-01"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        },
        "description": "Host Metric Event reflects different measurements and metrics about mongod host.",
        "discriminator": {
          "propertyName": "metricName",
          "mapping": {
            "ASSERT_REGULAR": "#/components/schemas/RawMetricEventView",
            "ASSERT_WARNING": "#/components/schemas/RawMetricEventView",
            "ASSERT_MSG": "#/components/schemas/RawMetricEventView",
            "ASSERT_USER": "#/components/schemas/RawMetricEventView",
            "OPCOUNTER_CMD": "#/components/schemas/RawMetricEventView",
            "OPCOUNTER_QUERY": "#/components/schemas/RawMetricEventView",
            "OPCOUNTER_UPDATE": "#/components/schemas/RawMetricEventView",
            "OPCOUNTER_DELETE": "#/components/schemas/RawMetricEventView",
            "OPCOUNTER_INSERT": "#/components/schemas/RawMetricEventView",
            "OPCOUNTER_GETMORE": "#/components/schemas/RawMetricEventView",
            "OPCOUNTER_REPL_CMD": "#/components/schemas/RawMetricEventView",
            "OPCOUNTER_REPL_UPDATE": "#/components/schemas/RawMetricEventView",
            "OPCOUNTER_REPL_DELETE": "#/components/schemas/RawMetricEventView",
            "OPCOUNTER_REPL_INSERT": "#/components/schemas/RawMetricEventView",
            "FTS_MEMORY_RESIDENT": "#/components/schemas/DataMetricEventView",
            "FTS_MEMORY_VIRTUAL": "#/components/schemas/DataMetricEventView",
            "FTS_MEMORY_MAPPED": "#/components/schemas/DataMetricEventView",
            "FTS_PROCESS_CPU_USER": "#/components/schemas/RawMetricEventView",
            "FTS_PROCESS_CPU_KERNEL": "#/components/schemas/RawMetricEventView",
            "NORMALIZED_FTS_PROCESS_CPU_USER": "#/components/schemas/RawMetricEventView",
            "NORMALIZED_FTS_PROCESS_CPU_KERNEL": "#/components/schemas/RawMetricEventView",
            "SYSTEM_MEMORY_PERCENT_USED": "#/components/schemas/RawMetricEventView",
            "MEMORY_RESIDENT": "#/components/schemas/DataMetricEventView",
            "MEMORY_VIRTUAL": "#/components/schemas/DataMetricEventView",
            "MEMORY_MAPPED": "#/components/schemas/DataMetricEventView",
            "COMPUTED_MEMORY": "#/components/schemas/DataMetricEventView",
            "INDEX_COUNTERS_BTREE_ACCESSES": "#/components/schemas/RawMetricEventView",
            "INDEX_COUNTERS_BTREE_HITS": "#/components/schemas/RawMetricEventView",
            "INDEX_COUNTERS_BTREE_MISSES": "#/components/schemas/RawMetricEventView",
            "INDEX_COUNTERS_BTREE_MISS_RATIO": "#/components/schemas/RawMetricEventView",
            "GLOBAL_LOCK_PERCENTAGE": "#/components/schemas/RawMetricEventView",
            "BACKGROUND_FLUSH_AVG": "#/components/schemas/TimeMetricEventView",
            "CONNECTIONS": "#/components/schemas/RawMetricEventView",
            "CONNECTIONS_MAX": "#/components/schemas/RawMetricEventView",
            "CONNECTIONS_PERCENT": "#/components/schemas/RawMetricEventView",
            "GLOBAL_ACCESSES_NOT_IN_MEMORY": "#/components/schemas/RawMetricEventView",
            "GLOBAL_PAGE_FAULT_EXCEPTIONS_THROWN": "#/components/schemas/RawMetricEventView",
            "GLOBAL_LOCK_CURRENT_QUEUE_TOTAL": "#/components/schemas/RawMetricEventView",
            "GLOBAL_LOCK_CURRENT_QUEUE_READERS": "#/components/schemas/RawMetricEventView",
            "GLOBAL_LOCK_CURRENT_QUEUE_WRITERS": "#/components/schemas/RawMetricEventView",
            "CURSORS_TOTAL_OPEN": "#/components/schemas/RawMetricEventView",
            "CURSORS_TOTAL_TIMED_OUT": "#/components/schemas/RawMetricEventView",
            "CURSORS_TOTAL_CLIENT_CURSORS_SIZE": "#/components/schemas/RawMetricEventView",
            "NETWORK_BYTES_IN": "#/components/schemas/DataMetricEventView",
            "NETWORK_BYTES_OUT": "#/components/schemas/DataMetricEventView",
            "NETWORK_NUM_REQUESTS": "#/components/schemas/RawMetricEventView",
            "OPLOG_MASTER_TIME": "#/components/schemas/TimeMetricEventView",
            "OPLOG_MASTER_TIME_ESTIMATED_TTL": "#/components/schemas/TimeMetricEventView",
            "OPLOG_SLAVE_LAG_MASTER_TIME": "#/components/schemas/TimeMetricEventView",
            "OPLOG_REPLICATION_LAG_TIME": "#/components/schemas/TimeMetricEventView",
            "OPLOG_MASTER_LAG_TIME_DIFF": "#/components/schemas/TimeMetricEventView",
            "OPLOG_RATE_GB_PER_HOUR": "#/components/schemas/DataMetricEventView",
            "EXTRA_INFO_PAGE_FAULTS": "#/components/schemas/RawMetricEventView",
            "DB_STORAGE_TOTAL": "#/components/schemas/DataMetricEventView",
            "DB_DATA_SIZE_TOTAL": "#/components/schemas/DataMetricEventView",
            "DB_DATA_SIZE_TOTAL_WO_SYSTEM": "#/components/schemas/DataMetricEventView",
            "DB_INDEX_SIZE_TOTAL": "#/components/schemas/DataMetricEventView",
            "JOURNALING_COMMITS_IN_WRITE_LOCK": "#/components/schemas/RawMetricEventView",
            "JOURNALING_MB": "#/components/schemas/DataMetricEventView",
            "JOURNALING_WRITE_DATA_FILES_MB": "#/components/schemas/DataMetricEventView",
            "TICKETS_AVAILABLE_READS": "#/components/schemas/RawMetricEventView",
            "TICKETS_AVAILABLE_WRITES": "#/components/schemas/RawMetricEventView",
            "CACHE_USAGE_DIRTY": "#/components/schemas/DataMetricEventView",
            "CACHE_USAGE_USED": "#/components/schemas/DataMetricEventView",
            "CACHE_BYTES_READ_INTO": "#/components/schemas/DataMetricEventView",
            "CACHE_BYTES_WRITTEN_FROM": "#/components/schemas/DataMetricEventView",
            "NORMALIZED_SYSTEM_CPU_USER": "#/components/schemas/RawMetricEventView",
            "NORMALIZED_SYSTEM_CPU_STEAL": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_SPACE_USED_DATA": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_SPACE_USED_INDEX": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_SPACE_USED_JOURNAL": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_UTILIZATION_DATA": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_UTILIZATION_INDEX": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_UTILIZATION_JOURNAL": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_READ_IOPS_DATA": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_READ_IOPS_INDEX": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_READ_IOPS_JOURNAL": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_WRITE_IOPS_DATA": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_WRITE_IOPS_INDEX": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_WRITE_IOPS_JOURNAL": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_READ_LATENCY_DATA": "#/components/schemas/TimeMetricEventView",
            "DISK_PARTITION_READ_LATENCY_INDEX": "#/components/schemas/TimeMetricEventView",
            "DISK_PARTITION_READ_LATENCY_JOURNAL": "#/components/schemas/TimeMetricEventView",
            "DISK_PARTITION_WRITE_LATENCY_DATA": "#/components/schemas/TimeMetricEventView",
            "DISK_PARTITION_WRITE_LATENCY_INDEX": "#/components/schemas/TimeMetricEventView",
            "DISK_PARTITION_WRITE_LATENCY_JOURNAL": "#/components/schemas/TimeMetricEventView",
            "DISK_PARTITION_QUEUE_DEPTH_DATA": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_QUEUE_DEPTH_INDEX": "#/components/schemas/RawMetricEventView",
            "DISK_PARTITION_QUEUE_DEPTH_JOURNAL": "#/components/schemas/RawMetricEventView",
            "FTS_DISK_UTILIZATION": "#/components/schemas/DataMetricEventView",
            "MUNIN_CPU_USER": "#/components/schemas/RawMetricEventView",
            "MUNIN_CPU_NICE": "#/components/schemas/RawMetricEventView",
            "MUNIN_CPU_SYSTEM": "#/components/schemas/RawMetricEventView",
            "MUNIN_CPU_IOWAIT": "#/components/schemas/RawMetricEventView",
            "MUNIN_CPU_IRQ": "#/components/schemas/RawMetricEventView",
            "MUNIN_CPU_SOFTIRQ": "#/components/schemas/RawMetricEventView",
            "MUNIN_CPU_STEAL": "#/components/schemas/RawMetricEventView",
            "DOCUMENT_RETURNED": "#/components/schemas/RawMetricEventView",
            "DOCUMENT_INSERTED": "#/components/schemas/RawMetricEventView",
            "DOCUMENT_UPDATED": "#/components/schemas/RawMetricEventView",
            "DOCUMENT_DELETED": "#/components/schemas/RawMetricEventView",
            "OPERATIONS_SCAN_AND_ORDER": "#/components/schemas/RawMetricEventView",
            "QUERY_EXECUTOR_SCANNED": "#/components/schemas/RawMetricEventView",
            "QUERY_EXECUTOR_SCANNED_OBJECTS": "#/components/schemas/RawMetricEventView",
            "QUERY_TARGETING_SCANNED_PER_RETURNED": "#/components/schemas/RawMetricEventView",
            "QUERY_TARGETING_SCANNED_OBJECTS_PER_RETURNED": "#/components/schemas/RawMetricEventView",
            "AVG_READ_EXECUTION_TIME": "#/components/schemas/TimeMetricEventView",
            "AVG_WRITE_EXECUTION_TIME": "#/components/schemas/TimeMetricEventView",
            "AVG_COMMAND_EXECUTION_TIME": "#/components/schemas/TimeMetricEventView",
            "LOGICAL_SIZE": "#/components/schemas/DataMetricEventView",
            "RESTARTS_IN_LAST_HOUR": "#/components/schemas/RawMetricEventView",
            "SYSTEM_MEMORY_USED": "#/components/schemas/DataMetricEventView",
            "SYSTEM_MEMORY_AVAILABLE": "#/components/schemas/DataMetricEventView",
            "SWAP_USAGE_USED": "#/components/schemas/DataMetricEventView",
            "SWAP_USAGE_FREE": "#/components/schemas/DataMetricEventView",
            "SYSTEM_NETWORK_IN": "#/components/schemas/DataMetricEventView",
            "SYSTEM_NETWORK_OUT": "#/components/schemas/DataMetricEventView",
            "MAX_NORMALIZED_SYSTEM_CPU_USER": "#/components/schemas/RawMetricEventView",
            "MAX_NORMALIZED_SYSTEM_CPU_STEAL": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_SPACE_USED_DATA": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_SPACE_USED_INDEX": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_SPACE_USED_JOURNAL": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_UTILIZATION_DATA": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_UTILIZATION_INDEX": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_UTILIZATION_JOURNAL": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_READ_IOPS_DATA": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_READ_IOPS_INDEX": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_READ_IOPS_JOURNAL": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_WRITE_IOPS_DATA": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_WRITE_IOPS_INDEX": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_WRITE_IOPS_JOURNAL": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_READ_LATENCY_DATA": "#/components/schemas/TimeMetricEventView",
            "MAX_DISK_PARTITION_READ_LATENCY_INDEX": "#/components/schemas/TimeMetricEventView",
            "MAX_DISK_PARTITION_READ_LATENCY_JOURNAL": "#/components/schemas/TimeMetricEventView",
            "MAX_DISK_PARTITION_WRITE_LATENCY_DATA": "#/components/schemas/TimeMetricEventView",
            "MAX_DISK_PARTITION_WRITE_LATENCY_INDEX": "#/components/schemas/TimeMetricEventView",
            "MAX_DISK_PARTITION_WRITE_LATENCY_JOURNAL": "#/components/schemas/TimeMetricEventView",
            "MAX_DISK_PARTITION_QUEUE_DEPTH_DATA": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_QUEUE_DEPTH_INDEX": "#/components/schemas/RawMetricEventView",
            "MAX_DISK_PARTITION_QUEUE_DEPTH_JOURNAL": "#/components/schemas/RawMetricEventView",
            "MAX_SYSTEM_MEMORY_PERCENT_USED": "#/components/schemas/RawMetricEventView",
            "MAX_SYSTEM_MEMORY_USED": "#/components/schemas/DataMetricEventView",
            "MAX_SYSTEM_MEMORY_AVAILABLE": "#/components/schemas/DataMetricEventView",
            "MAX_SWAP_USAGE_USED": "#/components/schemas/DataMetricEventView",
            "MAX_SWAP_USAGE_FREE": "#/components/schemas/DataMetricEventView",
            "MAX_SYSTEM_NETWORK_IN": "#/components/schemas/DataMetricEventView",
            "MAX_SYSTEM_NETWORK_OUT": "#/components/schemas/DataMetricEventView",
            "SEARCH_INDEX_SIZE": "#/components/schemas/DataMetricEventView",
            "SEARCH_NUMBER_OF_FIELDS_IN_INDEX": "#/components/schemas/RawMetricEventView",
            "SEARCH_REPLICATION_LAG": "#/components/schemas/TimeMetricEventView",
            "SEARCH_MAX_NUMBER_OF_LUCENE_DOCS": "#/components/schemas/NumberMetricEventView",
            "SEARCH_OPCOUNTER_INSERT": "#/components/schemas/RawMetricEventView",
            "SEARCH_OPCOUNTER_DELETE": "#/components/schemas/RawMetricEventView",
            "SEARCH_OPCOUNTER_UPDATE": "#/components/schemas/RawMetricEventView",
            "SEARCH_OPCOUNTER_GETMORE": "#/components/schemas/RawMetricEventView",
            "SEARCH_NUMBER_OF_QUERIES_TOTAL": "#/components/schemas/RawMetricEventView",
            "SEARCH_NUMBER_OF_QUERIES_ERROR": "#/components/schemas/RawMetricEventView",
            "SEARCH_NUMBER_OF_QUERIES_SUCCESS": "#/components/schemas/RawMetricEventView",
            "FTS_JVM_MAX_MEMORY": "#/components/schemas/DataMetricEventView",
            "FTS_JVM_CURRENT_MEMORY": "#/components/schemas/DataMetricEventView"
          }
        }
      },
      "HostMetricEventTypeView": {
        "title": "Host Metric Event Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "example": "OUTSIDE_METRIC_THRESHOLD",
        "enum": ["INSIDE_METRIC_THRESHOLD", "OUTSIDE_METRIC_THRESHOLD"]
      },
      "HostMetricValue": {
        "type": "object",
        "properties": {
          "number": {
            "type": "number",
            "description": "Amount of the **metricName** recorded at the time of the event. This value triggered the alert.",
            "format": "double",
            "readOnly": true
          },
          "units": {
            "type": "string",
            "description": "Element used to express the quantity in **currentValue.number**. This can be an element of time, storage capacity, and the like. This metric triggered the alert.",
            "readOnly": true,
            "enum": [
              "bits",
              "Kbits",
              "Mbits",
              "Gbits",
              "bytes",
              "KB",
              "MB",
              "GB",
              "TB",
              "PB",
              "nsec",
              "msec",
              "sec",
              "min",
              "hours",
              "million minutes",
              "days",
              "requests",
              "1000 requests",
              "GB seconds",
              "GB hours",
              "GB days",
              "RPU",
              "thousand RPU",
              "million RPU",
              "WPU",
              "thousand WPU",
              "million WPU",
              "count",
              "thousand",
              "million",
              "billion",
              "",
              "",
              ""
            ]
          }
        },
        "description": "Value of the metric that triggered the alert. The resource returns this parameter for alerts of events impacting hosts.",
        "readOnly": true
      },
      "NDSAuditTypeViewForNdsGroup": {
        "title": "NDS Audit Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "example": "CLUSTER_CREATED",
        "enum": [
          "CLUSTER_CREATED",
          "CLUSTER_RESURRECTED",
          "CLUSTER_READY",
          "CLUSTER_UPDATE_SUBMITTED",
          "CLUSTER_UPDATE_SUBMITTED_INTERNAL",
          "CLUSTER_PROCESS_ARGS_UPDATE_SUBMITTED",
          "CLUSTER_MONGOT_PROCESS_ARGS_UPDATE_SUBMITTED",
          "CLUSTER_SERVER_PARAMETERS_UPDATE_SUBMITTED",
          "CLUSTER_AUTOMATICALLY_PAUSED",
          "CLUSTER_UPDATE_STARTED",
          "CLUSTER_UPDATE_STARTED_INTERNAL",
          "CLUSTER_UPDATE_COMPLETED",
          "MATERIAL_CLUSTER_UPDATE_COMPLETED_INTERNAL",
          "CLUSTER_DELETE_SUBMITTED",
          "CLUSTER_DELETE_SUBMITTED_INTERNAL",
          "CLUSTER_DELETED",
          "CLUSTER_IMPORT_STARTED",
          "CLUSTER_IMPORT_CANCELLED",
          "CLUSTER_IMPORT_EXPIRED",
          "CLUSTER_IMPORT_CUTOVER",
          "CLUSTER_IMPORT_RESTART_REQUESTED",
          "PROJECT_LIVE_IMPORT_OVERRIDES_ADDED",
          "PROJECT_LIVE_IMPORT_OVERRIDES_UPDATED",
          "PROJECT_LIVE_IMPORT_OVERRIDES_DELETED",
          "CLUSTER_OPLOG_RESIZED",
          "CLUSTER_INSTANCE_RESTARTED",
          "CLUSTER_INSTANCE_STOP_START",
          "CLUSTER_INSTANCE_RESYNC_REQUESTED",
          "CLUSTER_INSTANCE_RESYNC_CLEARED",
          "CLUSTER_INSTANCE_UPDATE_REQUESTED",
          "CLUSTER_INSTANCE_REPLACED",
          "CLUSTER_INSTANCE_REPLACE_CLEARED",
          "CLUSTER_INSTANCE_CONFIG_UPDATED",
          "CLUSTER_INSTANCE_SSL_ROTATED",
          "CLUSTER_INSTANCE_SSL_ROTATED_PER_CLUSTER",
          "CLUSTER_INSTANCE_SSL_REVOKED",
          "RELOAD_SSL_ON_PROCESSES",
          "CLUSTER_INSTANCE_ADMIN_BACKUP_SNAPSHOT_REQUESTED",
          "UPDATE_BUMPER_FILES",
          "DATA_LAKE_QUERY_LOGS_DOWNLOADED",
          "FEDERATED_DATABASE_QUERY_LOGS_DOWNLOADED",
          "ONLINE_ARCHIVE_QUERY_LOGS_DOWNLOADED",
          "MONGODB_LOGS_DOWNLOADED",
          "MONGOSQLD_LOGS_DOWNLOADED",
          "MONGODB_USER_ADDED",
          "MONGODB_USER_DELETED",
          "MONGODB_USER_X509_CERT_CREATED",
          "MONGODB_USER_X509_CERT_REVOKED",
          "MONGODB_USER_UPDATED",
          "MONGODB_ROLE_ADDED",
          "MONGODB_ROLE_DELETED",
          "MONGODB_ROLE_UPDATED",
          "NETWORK_PERMISSION_ENTRY_ADDED",
          "NETWORK_PERMISSION_ENTRY_REMOVED",
          "NETWORK_PERMISSION_ENTRY_UPDATED",
          "PRIVATE_NETWORK_ENDPOINT_ENTRY_ADDED",
          "PRIVATE_NETWORK_ENDPOINT_ENTRY_REMOVED",
          "PRIVATE_NETWORK_ENDPOINT_ENTRY_UPDATED",
          "PLAN_STARTED",
          "PLAN_COMPLETED",
          "PLAN_ABANDONED",
          "PLAN_FAILURE_COUNT_RESET",
          "PLAN_ASAP_REQUESTED",
          "MOVE_SKIPPED",
          "PROXY_RESTARTED",
          "PROXY_PANICKED",
          "ATLAS_MAINTENANCE_WINDOW_ADDED",
          "ATLAS_MAINTENANCE_WINDOW_MODIFIED",
          "ATLAS_MAINTENANCE_WINDOW_REMOVED",
          "ATLAS_MAINTENANCE_START_ASAP",
          "ATLAS_MAINTENANCE_SCHEDULED_FOR_NEXT_WINDOW",
          "ATLAS_MAINTENANCE_DEFERRED",
          "ATLAS_MAINTENANCE_AUTO_DEFER_ENABLED",
          "ATLAS_MAINTENANCE_AUTO_DEFER_DISABLED",
          "SCHEDULED_MAINTENANCE",
          "PROJECT_SCHEDULED_MAINTENANCE",
          "PROJECT_LIMIT_UPDATED",
          "PROJECT_OPERATIONAL_LIMIT_UPDATED",
          "PROJECT_ENABLE_EXTENDED_STORAGE_SIZES_UPDATED",
          "OS_MAINTENANCE",
          "OS_MAINTENANCE_RESTART",
          "OS_MAINTENANCE_REPLACEMENT",
          "FREE_UPGRADE_STARTED",
          "TEST_FAILOVER_REQUESTED",
          "USER_SECURITY_SETTINGS_UPDATED",
          "AUDIT_LOG_CONFIGURATION_UPDATED",
          "STREAMS_AUDIT_LOG_CONFIGURATION_UPDATED",
          "ENCRYPTION_AT_REST_CONFIGURATION_UPDATED",
          "ENCRYPTION_AT_REST_CONFIGURATION_VALIDATION_FAILED",
          "NDS_SET_IMAGE_OVERRIDES",
          "NDS_SET_CHEF_TARBALL_URI",
          "RESTRICTED_EMPLOYEE_ACCESS_BYPASS",
          "REVOKED_EMPLOYEE_ACCESS_BYPASS",
          "DEVICE_SYNC_DEBUG_ACCESS_GRANTED",
          "DEVICE_SYNC_DEBUG_ACCESS_REVOKED",
          "DEVICE_SYNC_DEBUG_X509_CERT_CREATED",
          "QUERY_ENGINE_TENANT_CREATED",
          "QUERY_ENGINE_TENANT_UPDATED",
          "QUERY_ENGINE_TENANT_REMOVED",
          "FEDERATED_DATABASE_CREATED",
          "FEDERATED_DATABASE_UPDATED",
          "FEDERATED_DATABASE_REMOVED",
          "TENANT_CLUSTER_UPGRADE_FROM_MTM",
          "TENANT_SNAPSHOT_FAILED",
          "TENANT_RESTORE_FAILED",
          "SAMPLE_DATASET_LOAD_REQUESTED",
          "CUSTOMER_X509_CRL_UPDATED",
          "CONTAINER_SUBNETS_UPDATE_REQUESTED",
          "CLEAR_UNPROVISIONED_TARGET_GROUPS_REQUESTED",
          "ONLINE_ARCHIVE_CREATED",
          "ONLINE_ARCHIVE_DELETED",
          "ONLINE_ARCHIVE_UPDATED",
          "ONLINE_ARCHIVE_PAUSE_REQUESTED",
          "ONLINE_ARCHIVE_PAUSED",
          "ONLINE_ARCHIVE_ACTIVE",
          "ONLINE_ARCHIVE_ORPHANED",
          "ONLINE_ARCHIVE_DATA_EXPIRATION_RULE_ENABLED",
          "ONLINE_ARCHIVE_DATA_EXPIRATION_RULE_UPDATED",
          "ONLINE_ARCHIVE_DATA_EXPIRATION_RULE_DISABLED",
          "CLOUD_PROVIDER_ACCESS_AWS_IAM_ROLE_ADDED",
          "CLOUD_PROVIDER_ACCESS_AWS_IAM_ROLE_DELETED",
          "CLOUD_PROVIDER_ACCESS_AWS_IAM_ROLE_UPDATED",
          "CLOUD_PROVIDER_ACCESS_AZURE_SERVICE_PRINCIPAL_ADDED",
          "CLOUD_PROVIDER_ACCESS_AZURE_SERVICE_PRINCIPAL_DELETED",
          "CLOUD_PROVIDER_ACCESS_AZURE_SERVICE_PRINCIPAL_UPDATED",
          "PENDING_INDEXES_DELETED",
          "PENDING_INDEXES_CANCELED",
          "PROCESS_RESTART_REQUESTED",
          "AUTO_HEALING_ACTION",
          "EXTRA_MAINTENANCE_DEFERRAL_GRANTED",
          "ADMIN_NOTE_UPDATED",
          "GROUP_AUTOMATION_CONFIG_PUBLISHED",
          "CLUSTER_AUTOMATION_CONFIG_PUBLISHED",
          "SET_ENSURE_CLUSTER_CONNECTIVITY_AFTER_FOR_CLUSTER",
          "CLUSTER_LINKED_TO_VERCEL",
          "CLUSTER_UNLINKED_FROM_VERCEL",
          "INGESTION_PIPELINE_DELETED",
          "INGESTION_PIPELINE_DESTROYED",
          "INGESTION_PIPELINE_CREATED",
          "INGESTION_PIPELINE_UPDATED",
          "OS_TUNE_FILE_OVERRIDES",
          "CLUSTER_PREFERRED_CPU_ARCHITECTURE_MODIFIED",
          "CLUSTER_FORCE_PLANNED",
          "DATA_PROCESSING_REGION_UPDATED",
          "CLUSTER_REGIONAL_OUTAGE_SIMULATION_STARTED",
          "CLUSTER_REGIONAL_OUTAGE_SIMULATION_FAILED_TO_START",
          "CLUSTER_REGIONAL_OUTAGE_SIMULATION_END_REQUESTED",
          "CLUSTER_REGIONAL_OUTAGE_SIMULATION_COMPLETED",
          "CLUSTER_REGIONAL_OUTAGE_SIMULATION_CANCELLED_CLUSTER_PAUSE",
          "UIS_PANICKED",
          "TENANT_UPGRADE_TO_SERVERLESS_SUCCESSFUL",
          "TENANT_UPGRADE_TO_SERVERLESS_FAILED",
          "CLUSTER_FORCE_RECONFIG_REQUESTED",
          "PROJECT_BYPASSED_MAINTENANCE",
          "DATA_FEDERATION_QUERY_LIMIT_CONFIGURED",
          "DATA_FEDERATION_QUERY_LIMIT_DELETED",
          "DATA_API_SETUP_FOR_VERCEL",
          "ADMIN_CLUSTER_LOCK_UPDATED",
          "CLUSTER_ROLLING_RESYNC_STARTED",
          "CLUSTER_ROLLING_RESYNC_COMPLETED",
          "CLUSTER_ROLLING_RESYNC_FAILED",
          "NODE_ROLLING_RESYNC_SCHEDULED",
          "CLUSTER_ROLLING_RESYNC_CANCELED",
          "CLUSTER_OS_UPDATED",
          "CLUSTER_INSTANCE_FAMILY_UPDATED",
          "PUSH_BASED_LOG_EXPORT_ENABLED",
          "PUSH_BASED_LOG_EXPORT_CONFIGURATION_UPDATED",
          "PUSH_BASED_LOG_EXPORT_DISABLED",
          "AZURE_CLUSTER_PREFERRED_STORAGE_TYPE_UPDATED",
          "CONTAINER_DELETED",
          "REGIONALIZED_PRIVATE_ENDPOINT_MODE_ENABLED",
          "REGIONALIZED_PRIVATE_ENDPOINT_MODE_DISABLED",
          "STREAM_TENANT_CREATED",
          "STREAM_TENANT_UPDATED",
          "STREAM_TENANT_DELETED",
          "STREAM_TENANT_CONNECTIONS_LISTED",
          "STREAM_TENANT_CONNECTION_UPDATED",
          "STREAM_TENANT_CONNECTION_DELETED",
          "STREAM_TENANT_CONNECTION_CREATED",
          "STREAM_TENANT_CONNECTION_VIEWED",
          "STREAM_TENANT_AUDIT_LOGS",
          "STREAM_TENANT_AUDIT_LOGS_DELETED",
          "QUEUED_ADMIN_ACTION_CREATED"
        ]
      },
      "NDSAuditViewForNdsGroup": {
        "title": "NDS Audits",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "dbUserUsername": {
            "type": "string",
            "description": "The username of the MongoDB User that was created, deleted, or edited.",
            "readOnly": true,
            "example": "user1"
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/NDSAuditTypeViewForNdsGroup"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          },
          "whitelistEntry": {
            "type": "string",
            "description": "Entry in the list of source host addresses that the API key accepts and this event targets.",
            "readOnly": true,
            "example": "0.0.0.0"
          }
        },
        "description": "NDS audit saving information about atlas cloud provider and other atlas related details."
      },
      "NDSAutoScalingAuditTypeViewForNdsGroup": {
        "title": "NDS Auto Scaling Audit Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "example": "COMPUTE_AUTO_SCALE_INITIATED",
        "enum": [
          "COMPUTE_AUTO_SCALE_INITIATED",
          "DISK_AUTO_SCALE_INITIATED",
          "COMPUTE_AUTO_SCALE_INITIATED_BASE",
          "COMPUTE_AUTO_SCALE_INITIATED_ANALYTICS",
          "COMPUTE_AUTO_SCALE_SCALE_DOWN_FAIL_BASE",
          "COMPUTE_AUTO_SCALE_SCALE_DOWN_FAIL_ANALYTICS",
          "COMPUTE_AUTO_SCALE_MAX_INSTANCE_SIZE_FAIL_BASE",
          "COMPUTE_AUTO_SCALE_MAX_INSTANCE_SIZE_FAIL_ANALYTICS",
          "COMPUTE_AUTO_SCALE_OPLOG_FAIL_BASE",
          "COMPUTE_AUTO_SCALE_OPLOG_FAIL_ANALYTICS",
          "DISK_AUTO_SCALE_MAX_DISK_SIZE_FAIL",
          "DISK_AUTO_SCALE_OPLOG_FAIL"
        ]
      },
      "NDSAutoScalingAuditViewForNdsGroup": {
        "title": "NDS Auto Scaling Audits",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/NDSAutoScalingAuditTypeViewForNdsGroup"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        },
        "description": "NDS auto scaling audit indicates when atlas auto-scaling cluster tier up or down."
      },
      "NDSServerlessInstanceAuditTypeView": {
        "title": "NDS Serverless Instance Audit Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "example": "SERVERLESS_INSTANCE_CREATED",
        "enum": [
          "SERVERLESS_INSTANCE_CREATED",
          "SERVERLESS_INSTANCE_READY",
          "SERVERLESS_INSTANCE_UPDATE_SUBMITTED",
          "SERVERLESS_INSTANCE_UPDATE_STARTED",
          "SERVERLESS_INSTANCE_UPDATE_COMPLETED",
          "SERVERLESS_INSTANCE_DELETE_SUBMITTED",
          "SERVERLESS_INSTANCE_DELETED",
          "SERVERLESS_INSTANCE_BLOCKED",
          "SERVERLESS_INSTANCE_UNBLOCKED"
        ]
      },
      "NDSServerlessInstanceAuditView": {
        "title": "NDS Serverless Instance Audits",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/NDSServerlessInstanceAuditTypeView"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        },
        "description": "NDS serverless instance audit identifies any activities around serverless instance."
      },
      "NDSTenantEndpointAuditTypeView": {
        "title": "NDS Auto Scaling Audit Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "example": "TENANT_ENDPOINT_CREATED",
        "enum": [
          "TENANT_ENDPOINT_CREATED",
          "TENANT_ENDPOINT_RESERVED",
          "TENANT_ENDPOINT_RESERVATION_FAILED",
          "TENANT_ENDPOINT_UPDATED",
          "TENANT_ENDPOINT_INITIATING",
          "TENANT_ENDPOINT_AVAILABLE",
          "TENANT_ENDPOINT_FAILED",
          "TENANT_ENDPOINT_DELETING",
          "TENANT_ENDPOINT_DELETED",
          "TENANT_ENDPOINT_EXPIRED"
        ]
      },
      "NDSTenantEndpointAuditView": {
        "title": "NDS Tenant Endpoint Audits",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "endpointId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the endpoint associated with this event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/NDSTenantEndpointAuditTypeView"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "providerEndpointId": {
            "type": "string",
            "description": "Unique identification string that the cloud provider uses to identify the private endpoint.",
            "readOnly": true,
            "example": "vpce-0d6c248dedef65a25"
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        },
        "description": "NDS tenant endpoint audit indicates when atlas auto-scaling cluster tier up or down."
      },
      "NumberMetricEventView": {
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "currentValue": {
            "$ref": "#/components/schemas/NumberMetricValueView"
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/HostMetricEventTypeView"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "metricName": {
            "type": "string",
            "description": "Human-readable label of the metric associated with the **alertId**. This field may change type of **currentValue** field.",
            "readOnly": true
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "port": {
            "type": "integer",
            "description": "IANA port on which the MongoDB process listens for requests.",
            "format": "int32",
            "readOnly": true,
            "example": 27017
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "replicaSetName": {
            "type": "string",
            "description": "Human-readable label of the replica set associated with the event.",
            "readOnly": true,
            "example": "event-replica-set"
          },
          "shardName": {
            "type": "string",
            "description": "Human-readable label of the shard associated with the event.",
            "readOnly": true,
            "example": "event-sh-01"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        }
      },
      "NumberMetricUnits": {
        "title": "Number Metric Units",
        "type": "string",
        "description": "Element used to express the quantity. This can be an element of time, storage capacity, and the like.",
        "example": "COUNT",
        "enum": ["COUNT", "THOUSAND", "MILLION", "BILLION"]
      },
      "NumberMetricValueView": {
        "title": "Number Metric Value",
        "type": "object",
        "properties": {
          "number": {
            "type": "number",
            "description": "Amount of the **metricName** recorded at the time of the event. This value triggered the alert.",
            "format": "double",
            "readOnly": true
          },
          "units": {
            "$ref": "#/components/schemas/NumberMetricUnits"
          }
        },
        "description": "Measurement of the **metricName** recorded at the time of the event.",
        "readOnly": true
      },
      "RawMetricEventView": {
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "currentValue": {
            "$ref": "#/components/schemas/RawMetricValueView"
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/HostMetricEventTypeView"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "metricName": {
            "type": "string",
            "description": "Human-readable label of the metric associated with the **alertId**. This field may change type of **currentValue** field.",
            "readOnly": true
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "port": {
            "type": "integer",
            "description": "IANA port on which the MongoDB process listens for requests.",
            "format": "int32",
            "readOnly": true,
            "example": 27017
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "replicaSetName": {
            "type": "string",
            "description": "Human-readable label of the replica set associated with the event.",
            "readOnly": true,
            "example": "event-replica-set"
          },
          "shardName": {
            "type": "string",
            "description": "Human-readable label of the shard associated with the event.",
            "readOnly": true,
            "example": "event-sh-01"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        }
      },
      "RawMetricUnits": {
        "title": "Raw Metric Units",
        "type": "string",
        "description": "Element used to express the quantity. This can be an element of time, storage capacity, and the like.",
        "default": "RAW",
        "enum": ["RAW"]
      },
      "RawMetricValueView": {
        "title": "Raw Metric Value",
        "type": "object",
        "properties": {
          "number": {
            "type": "number",
            "description": "Amount of the **metricName** recorded at the time of the event. This value triggered the alert.",
            "format": "double",
            "readOnly": true
          },
          "units": {
            "$ref": "#/components/schemas/RawMetricUnits"
          }
        },
        "description": "Measurement of the **metricName** recorded at the time of the event.",
        "readOnly": true
      },
      "ReplicaSetEventTypeViewForNdsGroup": {
        "title": "ReplicaSet Event Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "example": "PRIMARY_ELECTED",
        "enum": [
          "PRIMARY_ELECTED",
          "REPLICATION_OPLOG_WINDOW_HEALTHY",
          "REPLICATION_OPLOG_WINDOW_RUNNING_OUT",
          "ONE_PRIMARY",
          "NO_PRIMARY",
          "TOO_MANY_ELECTIONS"
        ]
      },
      "ResourceEventTypeView": {
        "title": "Resource Event Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "example": "TAGS_MODIFIED",
        "enum": ["TAGS_MODIFIED", "GROUP_TAGS_MODIFIED"]
      },
      "ResourceEventViewForNdsGroup": {
        "title": "Resource Events",
        "required": ["created", "eventTypeName", "id", "resourceType"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/ResourceEventTypeView"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "resourceId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the resource associated with the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "resourceType": {
            "type": "string",
            "description": "Unique identifier of resource type.",
            "example": "cluster"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        },
        "description": "Resource event reflects different activities about resources."
      },
      "ServiceAccountEventTypeViewForNdsGroup": {
        "title": "Service Account Event Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "enum": [
          "SERVICE_ACCOUNT_CREATED",
          "SERVICE_ACCOUNT_DELETED",
          "SERVICE_ACCOUNT_ROLES_CHANGED",
          "SERVICE_ACCOUNT_DETAILS_CHANGED",
          "SERVICE_ACCOUNT_ADDED_TO_GROUP",
          "SERVICE_ACCOUNT_REMOVED_FROM_GROUP",
          "SERVICE_ACCOUNT_ACCESS_LIST_ENTRY_ADDED",
          "SERVICE_ACCOUNT_ACCESS_LIST_ENTRY_DELETED",
          "SERVICE_ACCOUNT_SECRET_ADDED",
          "SERVICE_ACCOUNT_SECRET_DELETED",
          "SERVICE_ACCOUNT_UI_IP_ACCESS_LIST_INHERITANCE_ENABLED",
          "SERVICE_ACCOUNT_UI_IP_ACCESS_LIST_INHERITANCE_DISABLED"
        ]
      },
      "ServiceAccountGroupEvents": {
        "title": "ServiceAccount Events",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/ServiceAccountEventTypeViewForNdsGroup"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        },
        "description": "Service Account event identifies different activities around user api keys."
      },
      "StreamProcessorEventTypeViewForNdsGroup": {
        "title": "Stream Processor Event Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "example": "STREAM_PROCESSOR_STATE_IS_FAILED",
        "enum": ["STREAM_PROCESSOR_STATE_IS_FAILED"]
      },
      "StreamProcessorEventViewForNdsGroup": {
        "title": "Stream Processor Events",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/StreamProcessorEventTypeViewForNdsGroup"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "instanceName": {
            "type": "string",
            "description": "Name of the stream processing instance associated with the event.",
            "readOnly": true,
            "example": "foobar"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "processorErrorMsg": {
            "type": "string",
            "description": "Error message linked to the stream processor associated with the event.",
            "readOnly": true,
            "example": "invalid auth"
          },
          "processorName": {
            "type": "string",
            "description": "Name of the stream processor associated with the event.",
            "readOnly": true,
            "example": "foobar"
          },
          "processorState": {
            "type": "string",
            "description": "State of the stream processor associated with the event.",
            "readOnly": true,
            "example": "FAILED"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          }
        },
        "description": "Stream Processor event identifies different activities about a stream processor in Atlas Streams."
      },
      "StreamsEventTypeViewForNdsGroup": {
        "title": "Streams Event Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "example": "MAX_PROCESSOR_COUNT_REACHED",
        "enum": ["MAX_PROCESSOR_COUNT_REACHED"]
      },
      "StreamsEventViewForNdsGroup": {
        "title": "Streams Events",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/StreamsEventTypeViewForNdsGroup"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "instanceName": {
            "type": "string",
            "description": "Name of the stream processing instance associated with the event.",
            "readOnly": true,
            "example": "foobar"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          }
        },
        "description": "Streams event identifies different activities about Atlas Streams."
      },
      "TeamEventTypeViewForNdsGroup": {
        "title": "Team Event Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "example": "TEAM_ADDED_TO_GROUP",
        "enum": ["TEAM_ADDED_TO_GROUP", "TEAM_REMOVED_FROM_GROUP", "TEAM_ROLES_MODIFIED"]
      },
      "TeamEventViewForNdsGroup": {
        "title": "Team Events",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/TeamEventTypeViewForNdsGroup"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "teamId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization team associated with this event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        },
        "description": "Team event identifies different activities around organization teams."
      },
      "TimeMetricEventView": {
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "currentValue": {
            "$ref": "#/components/schemas/TimeMetricValueView"
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/HostMetricEventTypeView"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "metricName": {
            "type": "string",
            "description": "Human-readable label of the metric associated with the **alertId**. This field may change type of **currentValue** field.",
            "readOnly": true
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "port": {
            "type": "integer",
            "description": "IANA port on which the MongoDB process listens for requests.",
            "format": "int32",
            "readOnly": true,
            "example": 27017
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "replicaSetName": {
            "type": "string",
            "description": "Human-readable label of the replica set associated with the event.",
            "readOnly": true,
            "example": "event-replica-set"
          },
          "shardName": {
            "type": "string",
            "description": "Human-readable label of the shard associated with the event.",
            "readOnly": true,
            "example": "event-sh-01"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        }
      },
      "TimeMetricUnits": {
        "title": "Time Metric Units",
        "type": "string",
        "description": "Element used to express the quantity. This can be an element of time, storage capacity, and the like.",
        "default": "HOURS",
        "enum": ["NANOSECONDS", "MILLISECONDS", "MILLION_MINUTES", "SECONDS", "MINUTES", "HOURS", "DAYS"]
      },
      "TimeMetricValueView": {
        "title": "Time Metric Value",
        "type": "object",
        "properties": {
          "number": {
            "type": "number",
            "description": "Amount of the **metricName** recorded at the time of the event. This value triggered the alert.",
            "format": "double",
            "readOnly": true
          },
          "units": {
            "$ref": "#/components/schemas/TimeMetricUnits"
          }
        },
        "description": "Measurement of the **metricName** recorded at the time of the event.",
        "readOnly": true
      },
      "UserEventTypeViewForNdsGroup": {
        "title": "User Event Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "example": "JOINED_GROUP",
        "enum": [
          "JOINED_GROUP",
          "REMOVED_FROM_GROUP",
          "INVITED_TO_GROUP",
          "REQUESTED_TO_JOIN_GROUP",
          "GROUP_INVITATION_DELETED",
          "USER_ROLES_CHANGED_AUDIT",
          "JOIN_GROUP_REQUEST_DENIED_AUDIT",
          "JOIN_GROUP_REQUEST_APPROVED_AUDIT"
        ]
      },
      "UserEventViewForNdsGroup": {
        "title": "User Events",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/UserEventTypeViewForNdsGroup"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "targetUsername": {
            "type": "string",
            "description": "Email address for the console user that this event targets. The resource returns this parameter when `\"eventTypeName\" : \"USER\"`.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        },
        "description": "User event reflects different activities about the atlas user."
      },
      "raw": {
        "type": "object",
        "properties": {
          "_t": {
            "type": "string",
            "description": "Unique identifier of event type.",
            "example": "ALERT_AUDIT"
          },
          "alertConfigId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration related to the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "cid": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "cre": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Description of the event.",
            "example": "Alert Acknowledged"
          },
          "gn": {
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "description": "Human-readable label that identifies the project.",
            "example": "Test Project"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "orgName": {
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "description": "Human-readable label that identifies the organization that contains the project.",
            "example": "Test Organization"
          },
          "severity": {
            "type": "string",
            "description": "Severity of the event.",
            "enum": ["INFO", "WARNING", "ERROR", "CRITICAL"]
          }
        },
        "description": "Additional meta information captured about this event. The response returns this parameter as a JSON object when the query parameter `includeRaw=true`. The list of fields in the raw document may change. Don't rely on raw values for formal monitoring.",
        "readOnly": true
      },
      "EventTypeForNdsGroup": {
        "type": "object",
        "oneOf": [
          {
            "title": "Alert Audit Types",
            "type": "string",
            "enum": ["ALERT_ACKNOWLEDGED_AUDIT", "ALERT_UNACKNOWLEDGED_AUDIT"]
          },
          {
            "title": "Alert Audit Types",
            "type": "string",
            "enum": [
              "ALERT_CONFIG_DISABLED_AUDIT",
              "ALERT_CONFIG_ENABLED_AUDIT",
              "ALERT_CONFIG_ADDED_AUDIT",
              "ALERT_CONFIG_DELETED_AUDIT",
              "ALERT_CONFIG_CHANGED_AUDIT"
            ]
          },
          {
            "title": "API User Event Types",
            "type": "string",
            "enum": [
              "API_KEY_CREATED",
              "API_KEY_DELETED",
              "API_KEY_ACCESS_LIST_ENTRY_ADDED",
              "API_KEY_ACCESS_LIST_ENTRY_DELETED",
              "API_KEY_ROLES_CHANGED",
              "API_KEY_DESCRIPTION_CHANGED",
              "API_KEY_ADDED_TO_GROUP",
              "API_KEY_REMOVED_FROM_GROUP",
              "API_KEY_UI_IP_ACCESS_LIST_INHERITANCE_ENABLED",
              "API_KEY_UI_IP_ACCESS_LIST_INHERITANCE_DISABLED"
            ]
          },
          {
            "title": "Service Account Event Types",
            "type": "string",
            "enum": [
              "SERVICE_ACCOUNT_CREATED",
              "SERVICE_ACCOUNT_DELETED",
              "SERVICE_ACCOUNT_ROLES_CHANGED",
              "SERVICE_ACCOUNT_DETAILS_CHANGED",
              "SERVICE_ACCOUNT_ADDED_TO_GROUP",
              "SERVICE_ACCOUNT_REMOVED_FROM_GROUP",
              "SERVICE_ACCOUNT_ACCESS_LIST_ENTRY_ADDED",
              "SERVICE_ACCOUNT_ACCESS_LIST_ENTRY_DELETED",
              "SERVICE_ACCOUNT_SECRET_ADDED",
              "SERVICE_ACCOUNT_SECRET_DELETED",
              "SERVICE_ACCOUNT_UI_IP_ACCESS_LIST_INHERITANCE_ENABLED",
              "SERVICE_ACCOUNT_UI_IP_ACCESS_LIST_INHERITANCE_DISABLED"
            ]
          },
          {
            "title": "App Services Event Types",
            "type": "string",
            "enum": [
              "URL_CONFIRMATION",
              "SUCCESSFUL_DEPLOY",
              "DEPLOYMENT_FAILURE",
              "DEPLOYMENT_MODEL_CHANGE_SUCCESS",
              "DEPLOYMENT_MODEL_CHANGE_FAILURE",
              "REQUEST_RATE_LIMIT",
              "LOG_FORWARDER_FAILURE",
              "INSIDE_REALM_METRIC_THRESHOLD",
              "OUTSIDE_REALM_METRIC_THRESHOLD",
              "SYNC_FAILURE",
              "TRIGGER_FAILURE",
              "TRIGGER_AUTO_RESUMED"
            ]
          },
          {
            "title": "Auto Indexing Event Types",
            "type": "string",
            "enum": [
              "AUTO_INDEXING_ENABLED",
              "AUTO_INDEXING_DISABLED",
              "AUTO_INDEXING_INDEX_BUILD_SUBMITTED",
              "AUTO_INDEXING_SLOW_INDEX_BUILD",
              "AUTO_INDEXING_STALLED_INDEX_BUILD",
              "AUTO_INDEXING_FAILED_INDEX_BUILD",
              "AUTO_INDEXING_COMPLETED_INDEX_BUILD",
              "AUTO_INDEXING_STARTED_INDEX_BUILD"
            ]
          },
          {
            "title": "Automation Config Event Types",
            "type": "string",
            "enum": ["AUTOMATION_CONFIG_PUBLISHED_AUDIT"]
          },
          {
            "title": "AWS Peer Vpc Audit Types",
            "type": "string",
            "enum": ["PEER_CREATED", "PEER_DELETED", "PEER_UPDATED"]
          },
          {
            "title": "Azure Peer Network Audit Types",
            "type": "string",
            "enum": ["AZURE_PEER_CREATED", "AZURE_PEER_UPDATED", "AZURE_PEER_ACTIVE", "AZURE_PEER_DELETED"]
          },
          {
            "title": "Billing Event Types",
            "type": "string",
            "enum": [
              "CREDIT_CARD_CURRENT",
              "CREDIT_CARD_ABOUT_TO_EXPIRE",
              "PENDING_INVOICE_UNDER_THRESHOLD",
              "PENDING_INVOICE_OVER_THRESHOLD",
              "DAILY_BILL_UNDER_THRESHOLD",
              "DAILY_BILL_OVER_THRESHOLD"
            ]
          },
          {
            "title": "Cluster Connection Audit Types",
            "type": "string",
            "enum": [
              "CLUSTER_CONNECTION_GET_DATABASES",
              "CLUSTER_CONNECTION_GET_DATABASE_COLLECTIONS",
              "CLUSTER_CONNECTION_GET_DATABASE_NAMESPACES",
              "CLUSTER_CONNECTION_GET_NAMESPACES_WITH_UUID",
              "CLUSTER_CONNECTION_AGGREGATE",
              "CLUSTER_CONNECTION_CREATE_COLLECTION",
              "CLUSTER_CONNECTION_SAMPLE_COLLECTION_FIELD_NAMES"
            ]
          },
          {
            "title": "Cluster Event Types",
            "type": "string",
            "enum": ["CLUSTER_MONGOS_IS_PRESENT", "CLUSTER_MONGOS_IS_MISSING"]
          },
          {
            "title": "Cps Backup Event Types",
            "type": "string",
            "enum": [
              "CPS_SNAPSHOT_STARTED",
              "CPS_SNAPSHOT_SUCCESSFUL",
              "CPS_SNAPSHOT_FAILED",
              "CPS_CONCURRENT_SNAPSHOT_FAILED_WILL_RETRY",
              "CPS_SNAPSHOT_FALLBACK_SUCCESSFUL",
              "CPS_SNAPSHOT_BEHIND",
              "CPS_COPY_SNAPSHOT_STARTED",
              "CPS_COPY_SNAPSHOT_FAILED",
              "CPS_COPY_SNAPSHOT_SUCCESSFUL",
              "CPS_PREV_SNAPSHOT_OLD",
              "CPS_SNAPSHOT_FALLBACK_FAILED",
              "CPS_RESTORE_SUCCESSFUL",
              "CPS_EXPORT_SUCCESSFUL",
              "CPS_RESTORE_FAILED",
              "CPS_EXPORT_FAILED",
              "CPS_AUTO_EXPORT_FAILED",
              "CPS_SNAPSHOT_DOWNLOAD_REQUEST_FAILED",
              "CPS_OPLOG_BEHIND",
              "CPS_OPLOG_CAUGHT_UP"
            ]
          },
          {
            "title": "Data Explorer Accessed Event Types",
            "type": "string",
            "enum": ["DATA_EXPLORER", "DATA_EXPLORER_CRUD_ATTEMPT", "DATA_EXPLORER_CRUD_ERROR", "DATA_EXPLORER_CRUD"]
          },
          {
            "title": "CPS Backup Compliance Policy Event Types",
            "type": "string",
            "enum": [
              "CPS_DATA_PROTECTION_ENABLE_REQUESTED",
              "CPS_DATA_PROTECTION_ENABLED",
              "CPS_DATA_PROTECTION_UPDATE_REQUESTED",
              "CPS_DATA_PROTECTION_UPDATED",
              "CPS_DATA_PROTECTION_DISABLE_REQUESTED",
              "CPS_DATA_PROTECTION_DISABLED"
            ]
          },
          {
            "title": "Disk Backup Event Types",
            "type": "string",
            "enum": [
              "CPS_RESTORE_REQUESTED_AUDIT",
              "CPS_SNAPSHOT_SCHEDULE_UPDATED_AUDIT",
              "CPS_SNAPSHOT_FASTER_RESTORES_START_AUDIT",
              "CPS_SNAPSHOT_FASTER_RESTORES_SUCCESS_AUDIT",
              "CPS_SNAPSHOT_FASTER_RESTORES_FAILED_AUDIT",
              "CPS_SNAPSHOT_DELETED_AUDIT",
              "CPS_SNAPSHOT_RETENTION_MODIFIED_AUDIT",
              "CPS_SNAPSHOT_IN_PROGRESS_AUDIT",
              "CPS_SNAPSHOT_COMPLETED_AUDIT",
              "CPS_ON_DEMAND_SNAPSHOT_REQUESTED",
              "CPS_OPLOG_CAUGHT_UP_AUDIT",
              "CPS_OPLOG_BEHIND_AUDIT"
            ]
          },
          {
            "title": "Encryption Event Types",
            "type": "string",
            "enum": [
              "AWS_ENCRYPTION_KEY_ROTATED",
              "AWS_ENCRYPTION_KEY_NEEDS_ROTATION",
              "AZURE_ENCRYPTION_KEY_ROTATED",
              "AZURE_ENCRYPTION_KEY_NEEDS_ROTATION",
              "GCP_ENCRYPTION_KEY_ROTATED",
              "GCP_ENCRYPTION_KEY_NEEDS_ROTATION",
              "AWS_ENCRYPTION_KEY_VALID",
              "AWS_ENCRYPTION_KEY_INVALID",
              "AZURE_ENCRYPTION_KEY_VALID",
              "AZURE_ENCRYPTION_KEY_INVALID",
              "GCP_ENCRYPTION_KEY_VALID",
              "GCP_ENCRYPTION_KEY_INVALID"
            ]
          },
          {
            "title": "Export Bucket Audit Types",
            "type": "string",
            "enum": ["BUCKET_CREATED_AUDIT", "BUCKET_DELETED_AUDIT"]
          },
          {
            "title": "FTS Index Audit Types",
            "type": "string",
            "enum": [
              "FTS_INDEX_DELETION_FAILED",
              "FTS_INDEX_BUILD_COMPLETE",
              "FTS_INDEX_BUILD_FAILED",
              "FTS_INDEX_CREATED",
              "FTS_INDEX_UPDATED",
              "FTS_INDEX_DELETED",
              "FTS_INDEX_CLEANED_UP",
              "FTS_INDEXES_RESTORED",
              "FTS_INDEXES_RESTORE_FAILED"
            ]
          },
          {
            "title": "GCP Peer Vpc Audit Types",
            "type": "string",
            "enum": ["GCP_PEER_CREATED", "GCP_PEER_DELETED", "GCP_PEER_UPDATED", "GCP_PEER_ACTIVE", "GCP_PEER_INACTIVE"]
          },
          {
            "title": "Group Audit Types",
            "type": "string",
            "enum": [
              "DATA_EXPLORER_ENABLED",
              "DATA_EXPLORER_DISABLED",
              "CREDIT_CARD_ADDED",
              "CREDIT_CARD_UPDATED",
              "GROUP_DELETED",
              "GROUP_CREATED",
              "GROUP_MOVED",
              "GROUP_TEMPORARILY_ACTIVATED",
              "GROUP_ACTIVATED",
              "GROUP_LOCKED",
              "GROUP_SUSPENDED",
              "GROUP_FLUSHED",
              "GROUP_NAME_CHANGED",
              "GROUP_CHARTS_ACTIVATION_REQUESTED",
              "GROUP_CHARTS_ACTIVATED",
              "GROUP_CHARTS_UPGRADED",
              "GROUP_CHARTS_RESET"
            ]
          },
          {
            "title": "Group Event Types",
            "type": "string",
            "enum": [
              "PAID_IN_FULL",
              "DELINQUENT",
              "ALL_USERS_HAVE_MULTI_FACTOR_AUTH",
              "USERS_WITHOUT_MULTI_FACTOR_AUTH",
              "ENCRYPTION_AT_REST_KMS_NETWORK_ACCESS_DENIED",
              "ENCRYPTION_AT_REST_KMS_NETWORK_ACCESS_RESTORED"
            ]
          },
          {
            "title": "Group Integration Event Types",
            "type": "string",
            "enum": ["INTEGRATION_CONFIGURED", "INTEGRATION_REMOVED"]
          },
          {
            "title": "Host Event Types",
            "type": "string",
            "enum": [
              "AUTO_CREATED_INDEX_AUDIT",
              "ATTEMPT_KILLOP_AUDIT",
              "ATTEMPT_KILLSESSION_AUDIT",
              "HOST_UP",
              "HOST_DOWN",
              "HOST_HAS_INDEX_SUGGESTIONS",
              "HOST_MONGOT_RECOVERED_OOM",
              "HOST_MONGOT_CRASHING_OOM",
              "HOST_ENOUGH_DISK_SPACE",
              "HOST_NOT_ENOUGH_DISK_SPACE"
            ]
          },
          {
            "title": "Host Metric Event Types",
            "type": "string",
            "enum": ["INSIDE_METRIC_THRESHOLD", "OUTSIDE_METRIC_THRESHOLD"]
          },
          {
            "title": "Index Build Audit Types",
            "type": "string",
            "enum": [
              "ROLLING_INDEX_FAILED_INDEX_BUILD",
              "ROLLING_INDEX_SUCCESS_INDEX_BUILD",
              "INDEX_FAILED_INDEX_BUILD",
              "INDEX_SUCCESS_INDEX_BUILD"
            ]
          },
          {
            "title": "NDS Audit Types",
            "type": "string",
            "enum": [
              "CLUSTER_CREATED",
              "CLUSTER_RESURRECTED",
              "CLUSTER_READY",
              "CLUSTER_UPDATE_SUBMITTED",
              "CLUSTER_UPDATE_SUBMITTED_INTERNAL",
              "CLUSTER_PROCESS_ARGS_UPDATE_SUBMITTED",
              "CLUSTER_MONGOT_PROCESS_ARGS_UPDATE_SUBMITTED",
              "CLUSTER_SERVER_PARAMETERS_UPDATE_SUBMITTED",
              "CLUSTER_AUTOMATICALLY_PAUSED",
              "CLUSTER_UPDATE_STARTED",
              "CLUSTER_UPDATE_STARTED_INTERNAL",
              "CLUSTER_UPDATE_COMPLETED",
              "MATERIAL_CLUSTER_UPDATE_COMPLETED_INTERNAL",
              "CLUSTER_DELETE_SUBMITTED",
              "CLUSTER_DELETE_SUBMITTED_INTERNAL",
              "CLUSTER_DELETED",
              "CLUSTER_IMPORT_STARTED",
              "CLUSTER_IMPORT_CANCELLED",
              "CLUSTER_IMPORT_EXPIRED",
              "CLUSTER_IMPORT_CUTOVER",
              "CLUSTER_IMPORT_RESTART_REQUESTED",
              "PROJECT_LIVE_IMPORT_OVERRIDES_ADDED",
              "PROJECT_LIVE_IMPORT_OVERRIDES_UPDATED",
              "PROJECT_LIVE_IMPORT_OVERRIDES_DELETED",
              "CLUSTER_OPLOG_RESIZED",
              "CLUSTER_INSTANCE_RESTARTED",
              "CLUSTER_INSTANCE_STOP_START",
              "CLUSTER_INSTANCE_RESYNC_REQUESTED",
              "CLUSTER_INSTANCE_RESYNC_CLEARED",
              "CLUSTER_INSTANCE_UPDATE_REQUESTED",
              "CLUSTER_INSTANCE_REPLACED",
              "CLUSTER_INSTANCE_REPLACE_CLEARED",
              "CLUSTER_INSTANCE_CONFIG_UPDATED",
              "CLUSTER_INSTANCE_SSL_ROTATED",
              "CLUSTER_INSTANCE_SSL_ROTATED_PER_CLUSTER",
              "CLUSTER_INSTANCE_SSL_REVOKED",
              "RELOAD_SSL_ON_PROCESSES",
              "CLUSTER_INSTANCE_ADMIN_BACKUP_SNAPSHOT_REQUESTED",
              "UPDATE_BUMPER_FILES",
              "DATA_LAKE_QUERY_LOGS_DOWNLOADED",
              "FEDERATED_DATABASE_QUERY_LOGS_DOWNLOADED",
              "ONLINE_ARCHIVE_QUERY_LOGS_DOWNLOADED",
              "MONGODB_LOGS_DOWNLOADED",
              "MONGOSQLD_LOGS_DOWNLOADED",
              "MONGODB_USER_ADDED",
              "MONGODB_USER_DELETED",
              "MONGODB_USER_X509_CERT_CREATED",
              "MONGODB_USER_X509_CERT_REVOKED",
              "MONGODB_USER_UPDATED",
              "MONGODB_ROLE_ADDED",
              "MONGODB_ROLE_DELETED",
              "MONGODB_ROLE_UPDATED",
              "NETWORK_PERMISSION_ENTRY_ADDED",
              "NETWORK_PERMISSION_ENTRY_REMOVED",
              "NETWORK_PERMISSION_ENTRY_UPDATED",
              "PRIVATE_NETWORK_ENDPOINT_ENTRY_ADDED",
              "PRIVATE_NETWORK_ENDPOINT_ENTRY_REMOVED",
              "PRIVATE_NETWORK_ENDPOINT_ENTRY_UPDATED",
              "PLAN_STARTED",
              "PLAN_COMPLETED",
              "PLAN_ABANDONED",
              "PLAN_FAILURE_COUNT_RESET",
              "PLAN_ASAP_REQUESTED",
              "MOVE_SKIPPED",
              "PROXY_RESTARTED",
              "PROXY_PANICKED",
              "ATLAS_MAINTENANCE_WINDOW_ADDED",
              "ATLAS_MAINTENANCE_WINDOW_MODIFIED",
              "ATLAS_MAINTENANCE_WINDOW_REMOVED",
              "ATLAS_MAINTENANCE_START_ASAP",
              "ATLAS_MAINTENANCE_SCHEDULED_FOR_NEXT_WINDOW",
              "ATLAS_MAINTENANCE_DEFERRED",
              "ATLAS_MAINTENANCE_AUTO_DEFER_ENABLED",
              "ATLAS_MAINTENANCE_AUTO_DEFER_DISABLED",
              "SCHEDULED_MAINTENANCE",
              "PROJECT_SCHEDULED_MAINTENANCE",
              "PROJECT_LIMIT_UPDATED",
              "PROJECT_OPERATIONAL_LIMIT_UPDATED",
              "PROJECT_ENABLE_EXTENDED_STORAGE_SIZES_UPDATED",
              "OS_MAINTENANCE",
              "OS_MAINTENANCE_RESTART",
              "OS_MAINTENANCE_REPLACEMENT",
              "FREE_UPGRADE_STARTED",
              "TEST_FAILOVER_REQUESTED",
              "USER_SECURITY_SETTINGS_UPDATED",
              "AUDIT_LOG_CONFIGURATION_UPDATED",
              "STREAMS_AUDIT_LOG_CONFIGURATION_UPDATED",
              "ENCRYPTION_AT_REST_CONFIGURATION_UPDATED",
              "ENCRYPTION_AT_REST_CONFIGURATION_VALIDATION_FAILED",
              "NDS_SET_IMAGE_OVERRIDES",
              "NDS_SET_CHEF_TARBALL_URI",
              "RESTRICTED_EMPLOYEE_ACCESS_BYPASS",
              "REVOKED_EMPLOYEE_ACCESS_BYPASS",
              "DEVICE_SYNC_DEBUG_ACCESS_GRANTED",
              "DEVICE_SYNC_DEBUG_ACCESS_REVOKED",
              "DEVICE_SYNC_DEBUG_X509_CERT_CREATED",
              "QUERY_ENGINE_TENANT_CREATED",
              "QUERY_ENGINE_TENANT_UPDATED",
              "QUERY_ENGINE_TENANT_REMOVED",
              "FEDERATED_DATABASE_CREATED",
              "FEDERATED_DATABASE_UPDATED",
              "FEDERATED_DATABASE_REMOVED",
              "TENANT_CLUSTER_UPGRADE_FROM_MTM",
              "TENANT_SNAPSHOT_FAILED",
              "TENANT_RESTORE_FAILED",
              "SAMPLE_DATASET_LOAD_REQUESTED",
              "CUSTOMER_X509_CRL_UPDATED",
              "CONTAINER_SUBNETS_UPDATE_REQUESTED",
              "CLEAR_UNPROVISIONED_TARGET_GROUPS_REQUESTED",
              "ONLINE_ARCHIVE_CREATED",
              "ONLINE_ARCHIVE_DELETED",
              "ONLINE_ARCHIVE_UPDATED",
              "ONLINE_ARCHIVE_PAUSE_REQUESTED",
              "ONLINE_ARCHIVE_PAUSED",
              "ONLINE_ARCHIVE_ACTIVE",
              "ONLINE_ARCHIVE_ORPHANED",
              "ONLINE_ARCHIVE_DATA_EXPIRATION_RULE_ENABLED",
              "ONLINE_ARCHIVE_DATA_EXPIRATION_RULE_UPDATED",
              "ONLINE_ARCHIVE_DATA_EXPIRATION_RULE_DISABLED",
              "CLOUD_PROVIDER_ACCESS_AWS_IAM_ROLE_ADDED",
              "CLOUD_PROVIDER_ACCESS_AWS_IAM_ROLE_DELETED",
              "CLOUD_PROVIDER_ACCESS_AWS_IAM_ROLE_UPDATED",
              "CLOUD_PROVIDER_ACCESS_AZURE_SERVICE_PRINCIPAL_ADDED",
              "CLOUD_PROVIDER_ACCESS_AZURE_SERVICE_PRINCIPAL_DELETED",
              "CLOUD_PROVIDER_ACCESS_AZURE_SERVICE_PRINCIPAL_UPDATED",
              "PENDING_INDEXES_DELETED",
              "PENDING_INDEXES_CANCELED",
              "PROCESS_RESTART_REQUESTED",
              "AUTO_HEALING_ACTION",
              "EXTRA_MAINTENANCE_DEFERRAL_GRANTED",
              "ADMIN_NOTE_UPDATED",
              "GROUP_AUTOMATION_CONFIG_PUBLISHED",
              "CLUSTER_AUTOMATION_CONFIG_PUBLISHED",
              "SET_ENSURE_CLUSTER_CONNECTIVITY_AFTER_FOR_CLUSTER",
              "CLUSTER_LINKED_TO_VERCEL",
              "CLUSTER_UNLINKED_FROM_VERCEL",
              "INGESTION_PIPELINE_DELETED",
              "INGESTION_PIPELINE_DESTROYED",
              "INGESTION_PIPELINE_CREATED",
              "INGESTION_PIPELINE_UPDATED",
              "OS_TUNE_FILE_OVERRIDES",
              "CLUSTER_PREFERRED_CPU_ARCHITECTURE_MODIFIED",
              "CLUSTER_FORCE_PLANNED",
              "DATA_PROCESSING_REGION_UPDATED",
              "CLUSTER_REGIONAL_OUTAGE_SIMULATION_STARTED",
              "CLUSTER_REGIONAL_OUTAGE_SIMULATION_FAILED_TO_START",
              "CLUSTER_REGIONAL_OUTAGE_SIMULATION_END_REQUESTED",
              "CLUSTER_REGIONAL_OUTAGE_SIMULATION_COMPLETED",
              "CLUSTER_REGIONAL_OUTAGE_SIMULATION_CANCELLED_CLUSTER_PAUSE",
              "UIS_PANICKED",
              "TENANT_UPGRADE_TO_SERVERLESS_SUCCESSFUL",
              "TENANT_UPGRADE_TO_SERVERLESS_FAILED",
              "CLUSTER_FORCE_RECONFIG_REQUESTED",
              "PROJECT_BYPASSED_MAINTENANCE",
              "DATA_FEDERATION_QUERY_LIMIT_CONFIGURED",
              "DATA_FEDERATION_QUERY_LIMIT_DELETED",
              "DATA_API_SETUP_FOR_VERCEL",
              "ADMIN_CLUSTER_LOCK_UPDATED",
              "CLUSTER_ROLLING_RESYNC_STARTED",
              "CLUSTER_ROLLING_RESYNC_COMPLETED",
              "CLUSTER_ROLLING_RESYNC_FAILED",
              "NODE_ROLLING_RESYNC_SCHEDULED",
              "CLUSTER_ROLLING_RESYNC_CANCELED",
              "CLUSTER_OS_UPDATED",
              "CLUSTER_INSTANCE_FAMILY_UPDATED",
              "PUSH_BASED_LOG_EXPORT_ENABLED",
              "PUSH_BASED_LOG_EXPORT_CONFIGURATION_UPDATED",
              "PUSH_BASED_LOG_EXPORT_DISABLED",
              "AZURE_CLUSTER_PREFERRED_STORAGE_TYPE_UPDATED",
              "CONTAINER_DELETED",
              "REGIONALIZED_PRIVATE_ENDPOINT_MODE_ENABLED",
              "REGIONALIZED_PRIVATE_ENDPOINT_MODE_DISABLED",
              "STREAM_TENANT_CREATED",
              "STREAM_TENANT_UPDATED",
              "STREAM_TENANT_DELETED",
              "STREAM_TENANT_CONNECTIONS_LISTED",
              "STREAM_TENANT_CONNECTION_UPDATED",
              "STREAM_TENANT_CONNECTION_DELETED",
              "STREAM_TENANT_CONNECTION_CREATED",
              "STREAM_TENANT_CONNECTION_VIEWED",
              "STREAM_TENANT_AUDIT_LOGS",
              "STREAM_TENANT_AUDIT_LOGS_DELETED",
              "QUEUED_ADMIN_ACTION_CREATED"
            ]
          },
          {
            "title": "NDS DB Check Audit Types",
            "type": "string",
            "enum": [
              "DB_CHECK_SUBMITTED",
              "DB_CHECK_UPDATED",
              "CLUSTER_SAMPLED_FOR_DB_CHECK",
              "DB_CHECK_SCHEDULED_FOR_CLUSTER",
              "DB_CHECK_DEFERRED_FOR_CLUSTER",
              "CLUSTER_OPTED_OUT_OF_DB_CHECK"
            ]
          },
          {
            "title": "NDS Data Validation Audit Types",
            "type": "string",
            "enum": [
              "CLUSTER_SAMPLED_FOR_DATA_VALIDATION",
              "DATA_VALIDATION_SUBMITTED_FOR_CLUSTER",
              "CLUSTER_OPTED_OUT_OF_DATA_VALIDATION"
            ]
          },
          {
            "title": "NDS Auto Scaling Audit Types",
            "type": "string",
            "enum": [
              "COMPUTE_AUTO_SCALE_INITIATED",
              "DISK_AUTO_SCALE_INITIATED",
              "COMPUTE_AUTO_SCALE_INITIATED_BASE",
              "COMPUTE_AUTO_SCALE_INITIATED_ANALYTICS",
              "COMPUTE_AUTO_SCALE_SCALE_DOWN_FAIL_BASE",
              "COMPUTE_AUTO_SCALE_SCALE_DOWN_FAIL_ANALYTICS",
              "COMPUTE_AUTO_SCALE_MAX_INSTANCE_SIZE_FAIL_BASE",
              "COMPUTE_AUTO_SCALE_MAX_INSTANCE_SIZE_FAIL_ANALYTICS",
              "COMPUTE_AUTO_SCALE_OPLOG_FAIL_BASE",
              "COMPUTE_AUTO_SCALE_OPLOG_FAIL_ANALYTICS",
              "DISK_AUTO_SCALE_MAX_DISK_SIZE_FAIL",
              "DISK_AUTO_SCALE_OPLOG_FAIL"
            ]
          },
          {
            "title": "NDS Maintenance Window Audit Types",
            "type": "string",
            "enum": [
              "MAINTENANCE_IN_ADVANCED",
              "MAINTENANCE_AUTO_DEFERRED",
              "MAINTENANCE_STARTED",
              "MAINTENANCE_NO_LONGER_NEEDED"
            ]
          },
          {
            "title": "NDS Serverless Auto Scaling Audit Types",
            "type": "string",
            "enum": [
              "SERVERLESS_AUTO_SCALING_INITIATED",
              "SERVERLESS_VERTICAL_SCALING_INITIATED",
              "SERVERLESS_HORIZONTAL_SCALING_INITIATED",
              "SERVERLESS_MTM_DRAIN_REQUESTED",
              "SERVERLESS_MTM_DRAIN_INITIATED",
              "SERVERLESS_MTM_DRAIN_COMPLETED",
              "SERVERLESS_MTM_DRAIN_STOPPED"
            ]
          },
          {
            "title": "NDS Serverless Instance Audit Types",
            "type": "string",
            "enum": [
              "SERVERLESS_INSTANCE_CREATED",
              "SERVERLESS_INSTANCE_READY",
              "SERVERLESS_INSTANCE_UPDATE_SUBMITTED",
              "SERVERLESS_INSTANCE_UPDATE_STARTED",
              "SERVERLESS_INSTANCE_UPDATE_COMPLETED",
              "SERVERLESS_INSTANCE_DELETE_SUBMITTED",
              "SERVERLESS_INSTANCE_DELETED",
              "SERVERLESS_INSTANCE_BLOCKED",
              "SERVERLESS_INSTANCE_UNBLOCKED"
            ]
          },
          {
            "title": "NDS Auto Scaling Audit Types",
            "type": "string",
            "enum": [
              "TENANT_ENDPOINT_CREATED",
              "TENANT_ENDPOINT_RESERVED",
              "TENANT_ENDPOINT_RESERVATION_FAILED",
              "TENANT_ENDPOINT_UPDATED",
              "TENANT_ENDPOINT_INITIATING",
              "TENANT_ENDPOINT_AVAILABLE",
              "TENANT_ENDPOINT_FAILED",
              "TENANT_ENDPOINT_DELETING",
              "TENANT_ENDPOINT_DELETED",
              "TENANT_ENDPOINT_EXPIRED"
            ]
          },
          {
            "title": "NDS Tenant Endpoint Service Deployment Audit Types",
            "type": "string",
            "enum": [
              "TENANT_ENDPOINT_SERVICE_DEPLOYMENT_CREATED",
              "TENANT_ENDPOINT_SERVICE_CREATED",
              "TENANT_ENDPOINT_SERVICE_AVAILABLE",
              "TENANT_ENDPOINT_SERVICE_DEPLOYMENT_DELETE_REQUESTED",
              "TENANT_ENDPOINT_SERVICE_DELETED",
              "TENANT_ENDPOINT_SERVICE_DEPLOYMENT_DELETED",
              "TENANT_ENDPOINT_SERVICE_DEPLOYMENT_NUM_DESIRED_ENDPOINT_SERVICES_INCREASED"
            ]
          },
          {
            "title": "NDS x509 User Auth Event Types",
            "type": "string",
            "enum": [
              "NDS_X509_USER_AUTHENTICATION_CUSTOMER_CA_EXPIRATION_RESOLVED",
              "NDS_X509_USER_AUTHENTICATION_CUSTOMER_CA_EXPIRATION_CHECK",
              "NDS_X509_USER_AUTHENTICATION_CUSTOMER_CRL_EXPIRATION_RESOLVED",
              "NDS_X509_USER_AUTHENTICATION_CUSTOMER_CRL_EXPIRATION_CHECK",
              "NDS_X509_USER_AUTHENTICATION_MANAGED_USER_CERTS_EXPIRATION_RESOLVED",
              "NDS_X509_USER_AUTHENTICATION_MANAGED_USER_CERTS_EXPIRATION_CHECK"
            ]
          },
          {
            "title": "Online Archive Event Types",
            "type": "string",
            "enum": [
              "ONLINE_ARCHIVE_INSUFFICIENT_INDEXES_CHECK",
              "ONLINE_ARCHIVE_INSUFFICIENT_INDEXES_RESOLVED",
              "ONLINE_ARCHIVE_UP_TO_DATE",
              "ONLINE_ARCHIVE_DATA_EXPIRATION_RESOLVED",
              "ONLINE_ARCHIVE_MAX_CONSECUTIVE_OFFLOAD_WINDOWS_CHECK"
            ]
          },
          {
            "title": "Private Link Audit Types",
            "type": "string",
            "enum": [
              "ENDPOINT_SERVICE_CREATED",
              "ENDPOINT_SERVICE_DELETED",
              "INTERFACE_ENDPOINT_CREATED",
              "INTERFACE_ENDPOINT_DELETED",
              "INTERFACE_ENDPOINT_PATCHED"
            ]
          },
          {
            "title": "Proactive Operation Event Types",
            "type": "string",
            "enum": ["PROACTIVE_OPERATION_EVENT_LOGGED"]
          },
          {
            "title": "ReplicaSet Event Types",
            "type": "string",
            "enum": [
              "PRIMARY_ELECTED",
              "REPLICATION_OPLOG_WINDOW_HEALTHY",
              "REPLICATION_OPLOG_WINDOW_RUNNING_OUT",
              "ONE_PRIMARY",
              "NO_PRIMARY",
              "TOO_MANY_ELECTIONS"
            ]
          },
          {
            "title": "Serverless Deployment Audit Types",
            "type": "string",
            "enum": [
              "SERVERLESS_DEPLOYMENT_CREATED",
              "SERVERLESS_DEPLOYMENT_DELETED",
              "SERVERLESS_DEPLOYMENT_UPDATED",
              "SERVERLESS_DEPLOYMENT_INSTANCE_REPLACED",
              "SERVERLESS_DEPLOYMENT_INSTANCE_REBOOTED",
              "SERVERLESS_DEPLOYMENT_ENDPOINT_SERVICE_LINKED",
              "SERVERLESS_DEPLOYMENT_ENDPOINT_SERVICE_UNLINKED",
              "SERVERLESS_DEPLOYMENT_ENVOY_INSTANCE_UIS_KEYS_ROTATED"
            ]
          },
          {
            "title": "Serverless Event Types",
            "type": "string",
            "enum": ["INSIDE_SERVERLESS_METRIC_THRESHOLD", "OUTSIDE_SERVERLESS_METRIC_THRESHOLD"]
          },
          {
            "title": "Setup Serverless Audit Types",
            "type": "string",
            "enum": ["SETUP_SERVERLESS_INITIATED"]
          },
          {
            "title": "Streams Event Types",
            "type": "string",
            "enum": ["MAX_PROCESSOR_COUNT_REACHED"]
          },
          {
            "title": "Stream Processor Event Types",
            "type": "string",
            "enum": ["STREAM_PROCESSOR_STATE_IS_FAILED"]
          },
          {
            "title": "Support Case Event Types",
            "type": "string",
            "enum": ["CASE_CREATED"]
          },
          {
            "title": "Support Event Types",
            "type": "string",
            "enum": ["SUPPORT_EMAILS_SENT_SUCCESSFULLY", "SUPPORT_EMAILS_SENT_FAILURE"]
          },
          {
            "title": "Team Event Types",
            "type": "string",
            "enum": ["TEAM_ADDED_TO_GROUP", "TEAM_REMOVED_FROM_GROUP", "TEAM_ROLES_MODIFIED"]
          },
          {
            "title": "Tenant Backup Event Types",
            "type": "string",
            "enum": [
              "TENANT_SNAPSHOT_STARTED_AUDIT",
              "TENANT_SNAPSHOT_COMPLETED_AUDIT",
              "TENANT_SNAPSHOT_DELETED_AUDIT",
              "TENANT_RESTORE_REQUESTED_AUDIT",
              "TENANT_RESTORE_COMPLETED_AUDIT",
              "TENANT_SNAPSHOT_DOWNLOAD_REQUESTED_AUDIT"
            ]
          },
          {
            "title": "User Event Types",
            "type": "string",
            "enum": [
              "JOINED_GROUP",
              "REMOVED_FROM_GROUP",
              "INVITED_TO_GROUP",
              "REQUESTED_TO_JOIN_GROUP",
              "GROUP_INVITATION_DELETED",
              "USER_ROLES_CHANGED_AUDIT",
              "JOIN_GROUP_REQUEST_DENIED_AUDIT",
              "JOIN_GROUP_REQUEST_APPROVED_AUDIT"
            ]
          },
          {
            "title": "Version Audit Types",
            "type": "string",
            "enum": [
              "CLUSTER_VERSION_FIXED",
              "CLUSTER_VERSION_UNFIXED",
              "CLUSTER_FCV_FIXED",
              "CLUSTER_FCV_UNFIXED",
              "AGENT_VERSION_FIXED",
              "AGENT_VERSION_UNFIXED",
              "FIXED_VERSION_UPDATED",
              "FIXED_AGENT_VERSION_UPDATED",
              "CLUSTER_FCV_DOWNGRADED"
            ]
          },
          {
            "title": "Resource Event Types",
            "type": "string",
            "enum": ["TAGS_MODIFIED", "GROUP_TAGS_MODIFIED"]
          }
        ]
      },
      "ApiUserEventTypeViewForOrg": {
        "title": "API User Event Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "example": "API_KEY_CREATED",
        "enum": [
          "API_KEY_CREATED",
          "API_KEY_DELETED",
          "API_KEY_ACCESS_LIST_ENTRY_ADDED",
          "API_KEY_ACCESS_LIST_ENTRY_DELETED",
          "API_KEY_ROLES_CHANGED",
          "API_KEY_DESCRIPTION_CHANGED",
          "API_KEY_ADDED_TO_GROUP",
          "API_KEY_REMOVED_FROM_GROUP",
          "API_KEY_UI_IP_ACCESS_LIST_INHERITANCE_ENABLED",
          "API_KEY_UI_IP_ACCESS_LIST_INHERITANCE_DISABLED"
        ]
      },
      "ApiUserEventViewForOrg": {
        "title": "API User Events",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/ApiUserEventTypeViewForOrg"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        },
        "description": "API User event identifies different activities around user api keys."
      },
      "BillingEventTypeViewForOrg": {
        "title": "Billing Event Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "example": "CHARGE_SUCCEEDED",
        "enum": [
          "CHARGE_SUCCEEDED",
          "CHARGE_FAILED",
          "CHARGE_PROCESSING",
          "CHARGE_PENDING_REVERSAL",
          "BRAINTREE_CHARGE_FAILED",
          "INVOICE_CLOSED",
          "CHECK_PAYMENT_RECEIVED",
          "WIRE_TRANSFER_PAYMENT_RECEIVED",
          "DISCOUNT_APPLIED",
          "CREDIT_ISSUED",
          "CREDIT_PULLED_FWD",
          "CREDIT_END_DATE_MODIFIED",
          "PROMO_CODE_APPLIED",
          "PAYMENT_FORGIVEN",
          "REFUND_ISSUED",
          "ACCOUNT_DOWNGRADED",
          "ACCOUNT_UPGRADED",
          "ACCOUNT_MODIFIED",
          "SUPPORT_PLAN_ACTIVATED",
          "SUPPORT_PLAN_CANCELLED",
          "SUPPORT_PLAN_CANCELLATION_SCHEDULED",
          "INITIATE_SALESFORCE_SERVICE_CLOUD_SYNC",
          "INVOICE_ADDRESS_CHANGED",
          "INVOICE_ADDRESS_ADDED",
          "PREPAID_PLAN_ACTIVATED",
          "ELASTIC_INVOICING_MODE_ACTIVATED",
          "ELASTIC_INVOICING_MODE_DEACTIVATED",
          "TERMINATE_PAID_SERVICES",
          "BILLING_EMAIL_ADDRESS_ADDED",
          "BILLING_EMAIL_ADDRESS_CHANGED",
          "BILLING_EMAIL_ADDRESS_REMOVED",
          "AWS_BILLING_ACCOUNT_CREDIT_ISSUED",
          "GCP_BILLING_ACCOUNT_CREDIT_ISSUED",
          "CREDIT_SFOLID_MODIFIED",
          "PREPAID_PLAN_MODIFIED",
          "AWS_USAGE_REPORTED",
          "AZURE_USAGE_REPORTED",
          "GCP_USAGE_REPORTED",
          "BECAME_PAYING_ORG",
          "NEW_LINKED_ORG",
          "UNLINKED_ORG",
          "ORG_LINKED_TO_PAYING_ORG",
          "ORG_UNLINKED_FROM_PAYING_ORG",
          "ORG_UNLINK_REQUESTED",
          "ORG_UNLINK_CANCELLED",
          "PAYMENT_UPDATED_THROUGH_API",
          "AZURE_BILLING_ACCOUNT_CREDIT_ISSUED",
          "CREDIT_START_DATE_MODIFIED",
          "CREDIT_ELASTIC_INVOICING_MODIFIED",
          "CREDIT_TYPE_MODIFIED",
          "CREDIT_AMOUNT_CENTS_MODIFIED",
          "CREDIT_AMOUNT_REMAINING_CENTS_MODIFIED",
          "CREDIT_TOTAL_BILLED_CENTS_MODIFIED",
          "CREDIT_AWS_CUSTOMER_ID_MODIFIED",
          "CREDIT_AWS_PRODUCT_CODE_MODIFIED",
          "CREDIT_GCP_MARKETPLACE_ENTITLEMENT_ID_MODIFIED",
          "CREDIT_AZURE_SUBSCRIPTION_ID_MODIFIED",
          "CREDIT_AZURE_PRIVATE_PLAN_ID_MODIFIED",
          "TARGETED_REBILL_EXECUTED",
          "LEGACY_REBILL_EXECUTED",
          "EVERGREEN_DEAL_CANCELLED",
          "GRACE_PERIOD_ACTIVATED",
          "GRACE_PERIOD_NO_LONGER_IN_EFFECT",
          "PENDING_DEAL_ACTIVATION_ADDED",
          "PENDING_DEAL_ACTIVATION_CANCELED",
          "PENDING_DEAL_APPLIED",
          "PENDING_DEAL_ACTIVATION_FAILED",
          "EVERGREEN_PRIORITY_MODIFIED"
        ]
      },
      "BillingEventViewForOrg": {
        "title": "Billing Events",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/BillingEventTypeViewForOrg"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "invoiceId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies of the invoice associated with the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "paymentId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the invoice payment associated with this event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        },
        "description": "Billing event identifies different activities related to billing, payment or financial status change of an organization."
      },
      "DefaultEventViewForOrg": {
        "title": "Any Other Events",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "type": "object",
            "description": "Unique identifier of event type.",
            "oneOf": [
              {
                "title": "Federation Settings Event Types",
                "type": "string",
                "enum": [
                  "FEDERATION_SETTINGS_CREATED",
                  "FEDERATION_SETTINGS_DELETED",
                  "FEDERATION_SETTINGS_UPDATED",
                  "IDENTITY_PROVIDER_CREATED",
                  "IDENTITY_PROVIDER_UPDATED",
                  "IDENTITY_PROVIDER_DELETED",
                  "IDENTITY_PROVIDER_ACTIVATED",
                  "OIDC_IDENTITY_PROVIDER_UPDATED",
                  "IDENTITY_PROVIDER_DEACTIVATED",
                  "IDENTITY_PROVIDER_JWKS_REVOKED",
                  "OIDC_IDENTITY_PROVIDER_ENABLED",
                  "OIDC_IDENTITY_PROVIDER_DISABLED",
                  "DOMAINS_ASSOCIATED",
                  "DOMAIN_CREATED",
                  "DOMAIN_DELETED",
                  "DOMAIN_VERIFIED",
                  "ORG_SETTINGS_CONFIGURED",
                  "ORG_SETTINGS_UPDATED",
                  "ORG_SETTINGS_DELETED",
                  "RESTRICT_ORG_MEMBERSHIP_ENABLED",
                  "RESTRICT_ORG_MEMBERSHIP_DISABLED",
                  "ROLE_MAPPING_CREATED",
                  "ROLE_MAPPING_UPDATED",
                  "ROLE_MAPPING_DELETED"
                ]
              },
              {
                "title": "Group Audit Types",
                "type": "string",
                "enum": ["GROUP_DELETED", "GROUP_CREATED", "GROUP_MOVED"]
              },
              {
                "title": "Mlab Migration Audit Types",
                "type": "string",
                "enum": [
                  "MLAB_MIGRATION_COMPLETED",
                  "MLAB_MIGRATION_TARGET_CLUSTER_CREATED",
                  "MLAB_MIGRATION_DATABASE_USERS_IMPORTED",
                  "MLAB_MIGRATION_IP_WHITELIST_IMPORTED",
                  "MLAB_MIGRATION_TARGET_CLUSTER_SET",
                  "MLAB_MIGRATION_DATABASE_RENAMED",
                  "MLAB_MIGRATION_LIVE_IMPORT_STARTED",
                  "MLAB_MIGRATION_LIVE_IMPORT_READY_FOR_CUTOVER",
                  "MLAB_MIGRATION_LIVE_IMPORT_CUTOVER_COMPLETE",
                  "MLAB_MIGRATION_LIVE_IMPORT_ERROR",
                  "MLAB_MIGRATION_LIVE_IMPORT_CANCELLED",
                  "MLAB_MIGRATION_DUMP_AND_RESTORE_TEST_STARTED",
                  "MLAB_MIGRATION_DUMP_AND_RESTORE_TEST_SKIPPED",
                  "MLAB_MIGRATION_DUMP_AND_RESTORE_STARTED",
                  "MLAB_MIGRATION_SUPPORT_PLAN_SELECTED",
                  "MLAB_MIGRATION_SUPPORT_PLAN_OPTED_OUT"
                ]
              },
              {
                "title": "Partner Event Types",
                "type": "string",
                "enum": [
                  "AWS_SELF_SERVE_ACCOUNT_LINKED",
                  "AWS_SELF_SERVE_ACCOUNT_LINK_PENDING",
                  "AWS_SELF_SERVE_ACCOUNT_CANCELLED",
                  "AWS_SELF_SERVE_ACCOUNT_LINK_FAILED",
                  "GCP_SELF_SERVE_ACCOUNT_LINK_PENDING",
                  "GCP_SELF_SERVE_ACCOUNT_LINK_FAILED",
                  "AZURE_SELF_SERVE_ACCOUNT_LINKED",
                  "AZURE_SELF_SERVE_ACCOUNT_LINK_PENDING",
                  "AZURE_SELF_SERVE_ACCOUNT_CANCELLED",
                  "AZURE_SELF_SERVE_ACCOUNT_LINK_FAILED",
                  "GCP_SELF_SERVE_ACCOUNT_LINKED",
                  "GCP_SELF_SERVE_ACCOUNT_CANCELLED"
                ]
              },
              {
                "title": "Support Event Types",
                "type": "string",
                "enum": ["SUPPORT_EMAILS_SENT_SUCCESSFULLY", "SUPPORT_EMAILS_SENT_FAILURE"]
              }
            ]
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        },
        "description": "Other events which don't have extra details beside of basic one."
      },
      "EventViewForOrg": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/DefaultEventViewForOrg"
          },
          {
            "$ref": "#/components/schemas/AlertAudit"
          },
          {
            "$ref": "#/components/schemas/AlertConfigAudit"
          },
          {
            "$ref": "#/components/schemas/ApiUserEventViewForOrg"
          },
          {
            "$ref": "#/components/schemas/ServiceAccountOrgEvents"
          },
          {
            "$ref": "#/components/schemas/BillingEventViewForOrg"
          },
          {
            "$ref": "#/components/schemas/NDSAuditViewForOrg"
          },
          {
            "$ref": "#/components/schemas/OrgEventViewForOrg"
          },
          {
            "$ref": "#/components/schemas/TeamEvent"
          },
          {
            "$ref": "#/components/schemas/UserEventViewForOrg"
          },
          {
            "$ref": "#/components/schemas/ResourceEventViewForOrg"
          }
        ]
      },
      "NDSAuditTypeViewForOrg": {
        "title": "NDS Audit Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "example": "ORG_LIMIT_UPDATED",
        "enum": ["ORG_LIMIT_UPDATED"]
      },
      "NDSAuditViewForOrg": {
        "title": "NDS Audits",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "dbUserUsername": {
            "type": "string",
            "description": "The username of the MongoDB User that was created, deleted, or edited.",
            "readOnly": true,
            "example": "user1"
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/NDSAuditTypeViewForOrg"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          },
          "whitelistEntry": {
            "type": "string",
            "description": "Entry in the list of source host addresses that the API key accepts and this event targets.",
            "readOnly": true,
            "example": "0.0.0.0"
          }
        },
        "description": "NDS audit saving information about atlas cloud provider and other atlas related details."
      },
      "OrgEventTypeViewForOrg": {
        "title": "Org Event Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "example": "ORG_CREATED",
        "enum": [
          "ORG_CREATED",
          "SECURITY_CONTACT_MODIFIED",
          "ORG_CREDIT_CARD_ADDED",
          "ORG_CREDIT_CARD_UPDATED",
          "ORG_CREDIT_CARD_CURRENT",
          "ORG_CREDIT_CARD_ABOUT_TO_EXPIRE",
          "ORG_PAYPAL_LINKED",
          "ORG_PAYPAL_UPDATED",
          "ORG_PAYPAL_CANCELLED",
          "ORG_OVERRIDE_PAYMENT_METHOD_ADDED",
          "ORG_ACTIVATED",
          "ORG_TEMPORARILY_ACTIVATED",
          "ORG_SUSPENSION_DATE_CHANGED",
          "ORG_SUSPENDED",
          "ORG_ADMIN_SUSPENDED",
          "ORG_ADMIN_LOCKED",
          "ORG_CLUSTERS_DELETED",
          "ORG_CLUSTERS_PAUSED",
          "ORG_LOCKED",
          "ORG_UNDER_FINANCIAL_PROTECTION",
          "ORG_NO_FINANCIAL_PROTECTION",
          "ORG_RENAMED",
          "ALL_ORG_USERS_HAVE_MFA",
          "ORG_USERS_WITHOUT_MFA",
          "ORG_INVOICE_UNDER_THRESHOLD",
          "ORG_INVOICE_OVER_THRESHOLD",
          "ORG_DAILY_BILL_UNDER_THRESHOLD",
          "ORG_DAILY_BILL_OVER_THRESHOLD",
          "ORG_GROUP_CHARGES_UNDER_THRESHOLD",
          "ORG_GROUP_CHARGES_OVER_THRESHOLD",
          "ORG_TWO_FACTOR_AUTH_REQUIRED",
          "ORG_TWO_FACTOR_AUTH_OPTIONAL",
          "ORG_PUBLIC_API_ACCESS_LIST_REQUIRED",
          "ORG_PUBLIC_API_ACCESS_LIST_NOT_REQUIRED",
          "ORG_EMPLOYEE_ACCESS_RESTRICTED",
          "ORG_EMPLOYEE_ACCESS_UNRESTRICTED",
          "ORG_SFDC_ACCOUNT_ID_CHANGED",
          "ORG_CONNECTED_TO_MLAB",
          "ORG_DISCONNECTED_FROM_MLAB",
          "ORG_IDP_CERTIFICATE_CURRENT",
          "ORG_IDP_CERTIFICATE_ABOUT_TO_EXPIRE",
          "ORG_CONNECTED_TO_VERCEL",
          "ORG_DISCONNECTED_TO_VERCEL",
          "ORG_CONNECTION_UNINSTALLED_FROM_VERCEL",
          "ORG_UI_IP_ACCESS_LIST_ENABLED",
          "ORG_UI_IP_ACCESS_LIST_DISABLED",
          "ORG_EDITED_UI_IP_ACCESS_LIST_ENTRIES",
          "ORG_SERVICE_ACCOUNT_MAX_SECRET_VALIDITY_EDITED"
        ]
      },
      "OrgEventViewForOrg": {
        "title": "Org Events",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/OrgEventTypeViewForOrg"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "invoiceId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies of the invoice associated with the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        },
        "description": "Org event identifies different activities and changes in an organization settings."
      },
      "OrgPaginatedEventView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/EventViewForOrg"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "ResourceEventTypeViewForOrg": {
        "title": "Resource Event Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "example": "GROUP_TAGS_MODIFIED",
        "enum": ["GROUP_TAGS_MODIFIED"]
      },
      "ResourceEventViewForOrg": {
        "title": "Resource Events",
        "required": ["created", "eventTypeName", "id", "resourceType"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/ResourceEventTypeViewForOrg"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "resourceId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the resource associated with the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "resourceType": {
            "type": "string",
            "description": "Unique identifier of resource type.",
            "example": "cluster"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        },
        "description": "Resource event reflects different activities about resources."
      },
      "ServiceAccountEventTypeViewForOrg": {
        "title": "Service Account Event Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "enum": [
          "SERVICE_ACCOUNT_CREATED",
          "SERVICE_ACCOUNT_DELETED",
          "SERVICE_ACCOUNT_ROLES_CHANGED",
          "SERVICE_ACCOUNT_DETAILS_CHANGED",
          "SERVICE_ACCOUNT_ADDED_TO_GROUP",
          "SERVICE_ACCOUNT_REMOVED_FROM_GROUP",
          "SERVICE_ACCOUNT_ACCESS_LIST_ENTRY_ADDED",
          "SERVICE_ACCOUNT_ACCESS_LIST_ENTRY_DELETED",
          "SERVICE_ACCOUNT_SECRET_ADDED",
          "SERVICE_ACCOUNT_SECRET_DELETED",
          "SERVICE_ACCOUNT_UI_IP_ACCESS_LIST_INHERITANCE_ENABLED",
          "SERVICE_ACCOUNT_UI_IP_ACCESS_LIST_INHERITANCE_DISABLED"
        ]
      },
      "ServiceAccountOrgEvents": {
        "title": "ServiceAccount Events",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/ServiceAccountEventTypeViewForOrg"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        },
        "description": "Service Account event identifies different activities around user api keys."
      },
      "TeamEvent": {
        "title": "Team Events",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/TeamEventTypeView"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "teamId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization team associated with this event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        },
        "description": "Team event identifies different activities around organization teams."
      },
      "TeamEventTypeView": {
        "title": "Team Event Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "example": "TEAM_ADDED_TO_GROUP",
        "enum": [
          "TEAM_CREATED",
          "TEAM_DELETED",
          "TEAM_UPDATED",
          "TEAM_NAME_CHANGED",
          "TEAM_ADDED_TO_GROUP",
          "TEAM_REMOVED_FROM_GROUP",
          "TEAM_ROLES_MODIFIED"
        ]
      },
      "UserEventTypeViewForOrg": {
        "title": "User Event Types",
        "type": "string",
        "description": "Unique identifier of event type.",
        "example": "JOINED_ORG",
        "enum": [
          "JOINED_ORG",
          "JOINED_TEAM",
          "INVITED_TO_ORG",
          "ORG_INVITATION_DELETED",
          "REMOVED_FROM_ORG",
          "REMOVED_FROM_TEAM",
          "USER_ROLES_CHANGED_AUDIT",
          "ORG_FLEX_CONSULTING_PURCHASED",
          "ORG_FLEX_CONSULTING_PURCHASE_FAILED",
          "INVITED_TO_TEAM"
        ]
      },
      "UserEventViewForOrg": {
        "title": "User Events",
        "required": ["created", "eventTypeName", "id"],
        "type": "object",
        "properties": {
          "apiKeyId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when this event occurred. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/UserEventTypeViewForOrg"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true,
            "default": false
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which these events apply.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          },
          "raw": {
            "$ref": "#/components/schemas/raw"
          },
          "remoteAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "readOnly": true,
            "example": "216.172.40.186"
          },
          "targetUsername": {
            "type": "string",
            "description": "Email address for the console user that this event targets. The resource returns this parameter when `\"eventTypeName\" : \"USER\"`.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "username": {
            "type": "string",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "format": "email",
            "readOnly": true,
            "example": "test.user@mongodb.com"
          }
        },
        "description": "User event reflects different activities about the atlas user."
      },
      "EventTypeForOrg": {
        "type": "object",
        "oneOf": [
          {
            "title": "Alert Audit Types",
            "type": "string",
            "enum": ["ALERT_ACKNOWLEDGED_AUDIT", "ALERT_UNACKNOWLEDGED_AUDIT"]
          },
          {
            "title": "Alert Audit Types",
            "type": "string",
            "enum": [
              "ALERT_CONFIG_DISABLED_AUDIT",
              "ALERT_CONFIG_ENABLED_AUDIT",
              "ALERT_CONFIG_ADDED_AUDIT",
              "ALERT_CONFIG_DELETED_AUDIT",
              "ALERT_CONFIG_CHANGED_AUDIT"
            ]
          },
          {
            "title": "API User Event Types",
            "type": "string",
            "enum": [
              "API_KEY_CREATED",
              "API_KEY_DELETED",
              "API_KEY_ACCESS_LIST_ENTRY_ADDED",
              "API_KEY_ACCESS_LIST_ENTRY_DELETED",
              "API_KEY_ROLES_CHANGED",
              "API_KEY_DESCRIPTION_CHANGED",
              "API_KEY_ADDED_TO_GROUP",
              "API_KEY_REMOVED_FROM_GROUP",
              "API_KEY_UI_IP_ACCESS_LIST_INHERITANCE_ENABLED",
              "API_KEY_UI_IP_ACCESS_LIST_INHERITANCE_DISABLED"
            ]
          },
          {
            "title": "Service Account Event Types",
            "type": "string",
            "enum": [
              "SERVICE_ACCOUNT_CREATED",
              "SERVICE_ACCOUNT_DELETED",
              "SERVICE_ACCOUNT_ROLES_CHANGED",
              "SERVICE_ACCOUNT_DETAILS_CHANGED",
              "SERVICE_ACCOUNT_ADDED_TO_GROUP",
              "SERVICE_ACCOUNT_REMOVED_FROM_GROUP",
              "SERVICE_ACCOUNT_ACCESS_LIST_ENTRY_ADDED",
              "SERVICE_ACCOUNT_ACCESS_LIST_ENTRY_DELETED",
              "SERVICE_ACCOUNT_SECRET_ADDED",
              "SERVICE_ACCOUNT_SECRET_DELETED",
              "SERVICE_ACCOUNT_UI_IP_ACCESS_LIST_INHERITANCE_ENABLED",
              "SERVICE_ACCOUNT_UI_IP_ACCESS_LIST_INHERITANCE_DISABLED"
            ]
          },
          {
            "title": "Billing Event Types",
            "type": "string",
            "enum": [
              "CHARGE_SUCCEEDED",
              "CHARGE_FAILED",
              "CHARGE_PROCESSING",
              "CHARGE_PENDING_REVERSAL",
              "BRAINTREE_CHARGE_FAILED",
              "INVOICE_CLOSED",
              "CHECK_PAYMENT_RECEIVED",
              "WIRE_TRANSFER_PAYMENT_RECEIVED",
              "DISCOUNT_APPLIED",
              "CREDIT_ISSUED",
              "CREDIT_PULLED_FWD",
              "CREDIT_END_DATE_MODIFIED",
              "PROMO_CODE_APPLIED",
              "PAYMENT_FORGIVEN",
              "REFUND_ISSUED",
              "ACCOUNT_DOWNGRADED",
              "ACCOUNT_UPGRADED",
              "ACCOUNT_MODIFIED",
              "SUPPORT_PLAN_ACTIVATED",
              "SUPPORT_PLAN_CANCELLED",
              "SUPPORT_PLAN_CANCELLATION_SCHEDULED",
              "INITIATE_SALESFORCE_SERVICE_CLOUD_SYNC",
              "INVOICE_ADDRESS_CHANGED",
              "INVOICE_ADDRESS_ADDED",
              "PREPAID_PLAN_ACTIVATED",
              "ELASTIC_INVOICING_MODE_ACTIVATED",
              "ELASTIC_INVOICING_MODE_DEACTIVATED",
              "TERMINATE_PAID_SERVICES",
              "BILLING_EMAIL_ADDRESS_ADDED",
              "BILLING_EMAIL_ADDRESS_CHANGED",
              "BILLING_EMAIL_ADDRESS_REMOVED",
              "AWS_BILLING_ACCOUNT_CREDIT_ISSUED",
              "GCP_BILLING_ACCOUNT_CREDIT_ISSUED",
              "CREDIT_SFOLID_MODIFIED",
              "PREPAID_PLAN_MODIFIED",
              "AWS_USAGE_REPORTED",
              "AZURE_USAGE_REPORTED",
              "GCP_USAGE_REPORTED",
              "BECAME_PAYING_ORG",
              "NEW_LINKED_ORG",
              "UNLINKED_ORG",
              "ORG_LINKED_TO_PAYING_ORG",
              "ORG_UNLINKED_FROM_PAYING_ORG",
              "ORG_UNLINK_REQUESTED",
              "ORG_UNLINK_CANCELLED",
              "PAYMENT_UPDATED_THROUGH_API",
              "AZURE_BILLING_ACCOUNT_CREDIT_ISSUED",
              "CREDIT_START_DATE_MODIFIED",
              "CREDIT_ELASTIC_INVOICING_MODIFIED",
              "CREDIT_TYPE_MODIFIED",
              "CREDIT_AMOUNT_CENTS_MODIFIED",
              "CREDIT_AMOUNT_REMAINING_CENTS_MODIFIED",
              "CREDIT_TOTAL_BILLED_CENTS_MODIFIED",
              "CREDIT_AWS_CUSTOMER_ID_MODIFIED",
              "CREDIT_AWS_PRODUCT_CODE_MODIFIED",
              "CREDIT_GCP_MARKETPLACE_ENTITLEMENT_ID_MODIFIED",
              "CREDIT_AZURE_SUBSCRIPTION_ID_MODIFIED",
              "CREDIT_AZURE_PRIVATE_PLAN_ID_MODIFIED",
              "TARGETED_REBILL_EXECUTED",
              "LEGACY_REBILL_EXECUTED",
              "EVERGREEN_DEAL_CANCELLED",
              "GRACE_PERIOD_ACTIVATED",
              "GRACE_PERIOD_NO_LONGER_IN_EFFECT",
              "PENDING_DEAL_ACTIVATION_ADDED",
              "PENDING_DEAL_ACTIVATION_CANCELED",
              "PENDING_DEAL_APPLIED",
              "PENDING_DEAL_ACTIVATION_FAILED",
              "EVERGREEN_PRIORITY_MODIFIED"
            ]
          },
          {
            "title": "Federation Settings Event Types",
            "type": "string",
            "enum": [
              "FEDERATION_SETTINGS_CREATED",
              "FEDERATION_SETTINGS_DELETED",
              "FEDERATION_SETTINGS_UPDATED",
              "IDENTITY_PROVIDER_CREATED",
              "IDENTITY_PROVIDER_UPDATED",
              "IDENTITY_PROVIDER_DELETED",
              "IDENTITY_PROVIDER_ACTIVATED",
              "OIDC_IDENTITY_PROVIDER_UPDATED",
              "IDENTITY_PROVIDER_DEACTIVATED",
              "IDENTITY_PROVIDER_JWKS_REVOKED",
              "OIDC_IDENTITY_PROVIDER_ENABLED",
              "OIDC_IDENTITY_PROVIDER_DISABLED",
              "DOMAINS_ASSOCIATED",
              "DOMAIN_CREATED",
              "DOMAIN_DELETED",
              "DOMAIN_VERIFIED",
              "ORG_SETTINGS_CONFIGURED",
              "ORG_SETTINGS_UPDATED",
              "ORG_SETTINGS_DELETED",
              "RESTRICT_ORG_MEMBERSHIP_ENABLED",
              "RESTRICT_ORG_MEMBERSHIP_DISABLED",
              "ROLE_MAPPING_CREATED",
              "ROLE_MAPPING_UPDATED",
              "ROLE_MAPPING_DELETED"
            ]
          },
          {
            "title": "Group Audit Types",
            "type": "string",
            "enum": ["GROUP_DELETED", "GROUP_CREATED", "GROUP_MOVED"]
          },
          {
            "title": "Mlab Migration Audit Types",
            "type": "string",
            "enum": [
              "MLAB_MIGRATION_COMPLETED",
              "MLAB_MIGRATION_TARGET_CLUSTER_CREATED",
              "MLAB_MIGRATION_DATABASE_USERS_IMPORTED",
              "MLAB_MIGRATION_IP_WHITELIST_IMPORTED",
              "MLAB_MIGRATION_TARGET_CLUSTER_SET",
              "MLAB_MIGRATION_DATABASE_RENAMED",
              "MLAB_MIGRATION_LIVE_IMPORT_STARTED",
              "MLAB_MIGRATION_LIVE_IMPORT_READY_FOR_CUTOVER",
              "MLAB_MIGRATION_LIVE_IMPORT_CUTOVER_COMPLETE",
              "MLAB_MIGRATION_LIVE_IMPORT_ERROR",
              "MLAB_MIGRATION_LIVE_IMPORT_CANCELLED",
              "MLAB_MIGRATION_DUMP_AND_RESTORE_TEST_STARTED",
              "MLAB_MIGRATION_DUMP_AND_RESTORE_TEST_SKIPPED",
              "MLAB_MIGRATION_DUMP_AND_RESTORE_STARTED",
              "MLAB_MIGRATION_SUPPORT_PLAN_SELECTED",
              "MLAB_MIGRATION_SUPPORT_PLAN_OPTED_OUT"
            ]
          },
          {
            "title": "NDS Audit Types",
            "type": "string",
            "enum": ["ORG_LIMIT_UPDATED"]
          },
          {
            "title": "Org Event Types",
            "type": "string",
            "enum": [
              "ORG_CREATED",
              "SECURITY_CONTACT_MODIFIED",
              "ORG_CREDIT_CARD_ADDED",
              "ORG_CREDIT_CARD_UPDATED",
              "ORG_CREDIT_CARD_CURRENT",
              "ORG_CREDIT_CARD_ABOUT_TO_EXPIRE",
              "ORG_PAYPAL_LINKED",
              "ORG_PAYPAL_UPDATED",
              "ORG_PAYPAL_CANCELLED",
              "ORG_OVERRIDE_PAYMENT_METHOD_ADDED",
              "ORG_ACTIVATED",
              "ORG_TEMPORARILY_ACTIVATED",
              "ORG_SUSPENSION_DATE_CHANGED",
              "ORG_SUSPENDED",
              "ORG_ADMIN_SUSPENDED",
              "ORG_ADMIN_LOCKED",
              "ORG_CLUSTERS_DELETED",
              "ORG_CLUSTERS_PAUSED",
              "ORG_LOCKED",
              "ORG_UNDER_FINANCIAL_PROTECTION",
              "ORG_NO_FINANCIAL_PROTECTION",
              "ORG_RENAMED",
              "ALL_ORG_USERS_HAVE_MFA",
              "ORG_USERS_WITHOUT_MFA",
              "ORG_INVOICE_UNDER_THRESHOLD",
              "ORG_INVOICE_OVER_THRESHOLD",
              "ORG_DAILY_BILL_UNDER_THRESHOLD",
              "ORG_DAILY_BILL_OVER_THRESHOLD",
              "ORG_GROUP_CHARGES_UNDER_THRESHOLD",
              "ORG_GROUP_CHARGES_OVER_THRESHOLD",
              "ORG_TWO_FACTOR_AUTH_REQUIRED",
              "ORG_TWO_FACTOR_AUTH_OPTIONAL",
              "ORG_PUBLIC_API_ACCESS_LIST_REQUIRED",
              "ORG_PUBLIC_API_ACCESS_LIST_NOT_REQUIRED",
              "ORG_EMPLOYEE_ACCESS_RESTRICTED",
              "ORG_EMPLOYEE_ACCESS_UNRESTRICTED",
              "ORG_SFDC_ACCOUNT_ID_CHANGED",
              "ORG_CONNECTED_TO_MLAB",
              "ORG_DISCONNECTED_FROM_MLAB",
              "ORG_IDP_CERTIFICATE_CURRENT",
              "ORG_IDP_CERTIFICATE_ABOUT_TO_EXPIRE",
              "ORG_CONNECTED_TO_VERCEL",
              "ORG_DISCONNECTED_TO_VERCEL",
              "ORG_CONNECTION_UNINSTALLED_FROM_VERCEL",
              "ORG_UI_IP_ACCESS_LIST_ENABLED",
              "ORG_UI_IP_ACCESS_LIST_DISABLED",
              "ORG_EDITED_UI_IP_ACCESS_LIST_ENTRIES",
              "ORG_SERVICE_ACCOUNT_MAX_SECRET_VALIDITY_EDITED"
            ]
          },
          {
            "title": "Partner Event Types",
            "type": "string",
            "enum": [
              "AWS_SELF_SERVE_ACCOUNT_LINKED",
              "AWS_SELF_SERVE_ACCOUNT_LINK_PENDING",
              "AWS_SELF_SERVE_ACCOUNT_CANCELLED",
              "AWS_SELF_SERVE_ACCOUNT_LINK_FAILED",
              "GCP_SELF_SERVE_ACCOUNT_LINK_PENDING",
              "GCP_SELF_SERVE_ACCOUNT_LINK_FAILED",
              "AZURE_SELF_SERVE_ACCOUNT_LINKED",
              "AZURE_SELF_SERVE_ACCOUNT_LINK_PENDING",
              "AZURE_SELF_SERVE_ACCOUNT_CANCELLED",
              "AZURE_SELF_SERVE_ACCOUNT_LINK_FAILED",
              "GCP_SELF_SERVE_ACCOUNT_LINKED",
              "GCP_SELF_SERVE_ACCOUNT_CANCELLED"
            ]
          },
          {
            "title": "Support Event Types",
            "type": "string",
            "enum": ["SUPPORT_EMAILS_SENT_SUCCESSFULLY", "SUPPORT_EMAILS_SENT_FAILURE"]
          },
          {
            "title": "Team Event Types",
            "type": "string",
            "enum": [
              "TEAM_CREATED",
              "TEAM_DELETED",
              "TEAM_UPDATED",
              "TEAM_NAME_CHANGED",
              "TEAM_ADDED_TO_GROUP",
              "TEAM_REMOVED_FROM_GROUP",
              "TEAM_ROLES_MODIFIED"
            ]
          },
          {
            "title": "User Event Types",
            "type": "string",
            "enum": [
              "JOINED_ORG",
              "JOINED_TEAM",
              "INVITED_TO_ORG",
              "ORG_INVITATION_DELETED",
              "REMOVED_FROM_ORG",
              "REMOVED_FROM_TEAM",
              "USER_ROLES_CHANGED_AUDIT",
              "ORG_FLEX_CONSULTING_PURCHASED",
              "ORG_FLEX_CONSULTING_PURCHASE_FAILED",
              "INVITED_TO_TEAM"
            ]
          },
          {
            "title": "Resource Event Types",
            "type": "string",
            "enum": ["GROUP_TAGS_MODIFIED"]
          }
        ]
      },
      "AlertViewForNdsGroup": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/AppServiceAlertView"
          },
          {
            "$ref": "#/components/schemas/ClusterAlertView"
          },
          {
            "$ref": "#/components/schemas/HostAlertViewForNdsGroup"
          },
          {
            "$ref": "#/components/schemas/HostMetricAlert"
          },
          {
            "$ref": "#/components/schemas/ReplicaSetAlertViewForNdsGroup"
          },
          {
            "$ref": "#/components/schemas/StreamProcessorAlertViewForNdsGroup"
          },
          {
            "$ref": "#/components/schemas/DefaultAlertViewForNdsGroup"
          }
        ]
      },
      "AppServiceAlertView": {
        "title": "App Services Alerts",
        "required": ["alertConfigId", "created", "eventTypeName", "id", "status", "updated"],
        "type": "object",
        "properties": {
          "acknowledgedUntil": {
            "type": "string",
            "description": "Date and time until which this alert has been acknowledged. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter if a MongoDB User previously acknowledged this alert.\n\n- To acknowledge this alert forever, set the parameter value to 100 years in the future.\n\n- To unacknowledge a previously acknowledged alert, do not set this parameter value.",
            "format": "date-time"
          },
          "acknowledgementComment": {
            "maxLength": 200,
            "type": "string",
            "description": "Comment that a MongoDB Cloud user submitted when acknowledging the alert.",
            "example": "Expiration on 3/19.  Silencing for 7days."
          },
          "acknowledgingUsername": {
            "type": "string",
            "description": "MongoDB Cloud username of the person who acknowledged the alert. The response returns this parameter if a MongoDB Cloud user previously acknowledged this alert.",
            "format": "email",
            "readOnly": true
          },
          "alertConfigId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration that sets this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/AppServiceEventTypeViewAlertable"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "lastNotified": {
            "type": "string",
            "description": "Date and time that any notifications were last sent for this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter if MongoDB Cloud has sent notifications for this alert.",
            "format": "date-time",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the organization that owns the project to which this alert applies.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "resolved": {
            "type": "string",
            "description": "Date and time that this alert changed to `\"status\" : \"CLOSED\"`. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter once `\"status\" : \"CLOSED\"`.",
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "State of this alert at the time you requested its details.",
            "readOnly": true,
            "example": "OPEN",
            "enum": ["CANCELLED", "CLOSED", "OPEN", "TRACKING"]
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "App Services alert notifies different activities about a BAAS application."
      },
      "AppServiceEventTypeViewAlertable": {
        "title": "App Services Event Types",
        "type": "string",
        "description": "Incident that triggered this alert.",
        "readOnly": true,
        "example": "DEPLOYMENT_FAILURE",
        "enum": [
          "URL_CONFIRMATION",
          "SUCCESSFUL_DEPLOY",
          "DEPLOYMENT_FAILURE",
          "DEPLOYMENT_MODEL_CHANGE_SUCCESS",
          "DEPLOYMENT_MODEL_CHANGE_FAILURE",
          "REQUEST_RATE_LIMIT",
          "LOG_FORWARDER_FAILURE",
          "OUTSIDE_REALM_METRIC_THRESHOLD",
          "SYNC_FAILURE",
          "TRIGGER_FAILURE",
          "TRIGGER_AUTO_RESUMED"
        ]
      },
      "ClusterAlertView": {
        "title": "Cluster Alerts",
        "required": ["alertConfigId", "created", "eventTypeName", "id", "status", "updated"],
        "type": "object",
        "properties": {
          "acknowledgedUntil": {
            "type": "string",
            "description": "Date and time until which this alert has been acknowledged. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter if a MongoDB User previously acknowledged this alert.\n\n- To acknowledge this alert forever, set the parameter value to 100 years in the future.\n\n- To unacknowledge a previously acknowledged alert, do not set this parameter value.",
            "format": "date-time"
          },
          "acknowledgementComment": {
            "maxLength": 200,
            "type": "string",
            "description": "Comment that a MongoDB Cloud user submitted when acknowledging the alert.",
            "example": "Expiration on 3/19.  Silencing for 7days."
          },
          "acknowledgingUsername": {
            "type": "string",
            "description": "MongoDB Cloud username of the person who acknowledged the alert. The response returns this parameter if a MongoDB Cloud user previously acknowledged this alert.",
            "format": "email",
            "readOnly": true
          },
          "alertConfigId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration that sets this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "clusterName": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the cluster to which this alert applies. This resource returns this parameter for alerts of events impacting backups, replica sets, or sharded clusters.",
            "readOnly": true,
            "example": "cluster1"
          },
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/ClusterEventTypeViewAlertable"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "lastNotified": {
            "type": "string",
            "description": "Date and time that any notifications were last sent for this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter if MongoDB Cloud has sent notifications for this alert.",
            "format": "date-time",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the organization that owns the project to which this alert applies.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "resolved": {
            "type": "string",
            "description": "Date and time that this alert changed to `\"status\" : \"CLOSED\"`. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter once `\"status\" : \"CLOSED\"`.",
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "State of this alert at the time you requested its details.",
            "readOnly": true,
            "example": "OPEN",
            "enum": ["CANCELLED", "CLOSED", "OPEN", "TRACKING"]
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Cluster alert notifies different activities and conditions about cluster of mongod hosts."
      },
      "ClusterEventTypeViewAlertable": {
        "title": "Cluster Event Types",
        "type": "string",
        "description": "Event type that triggers an alert.",
        "example": "CLUSTER_MONGOS_IS_MISSING",
        "enum": ["CLUSTER_MONGOS_IS_MISSING"]
      },
      "DataMetricAlertView": {
        "required": ["alertConfigId", "created", "eventTypeName", "id", "status", "updated"],
        "type": "object",
        "properties": {
          "acknowledgedUntil": {
            "type": "string",
            "description": "Date and time until which this alert has been acknowledged. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter if a MongoDB User previously acknowledged this alert.\n\n- To acknowledge this alert forever, set the parameter value to 100 years in the future.\n\n- To unacknowledge a previously acknowledged alert, do not set this parameter value.",
            "format": "date-time"
          },
          "acknowledgementComment": {
            "maxLength": 200,
            "type": "string",
            "description": "Comment that a MongoDB Cloud user submitted when acknowledging the alert.",
            "example": "Expiration on 3/19.  Silencing for 7days."
          },
          "acknowledgingUsername": {
            "type": "string",
            "description": "MongoDB Cloud username of the person who acknowledged the alert. The response returns this parameter if a MongoDB Cloud user previously acknowledged this alert.",
            "format": "email",
            "readOnly": true
          },
          "alertConfigId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration that sets this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "clusterName": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the cluster to which this alert applies. This resource returns this parameter for alerts of events impacting backups, replica sets, or sharded clusters.",
            "readOnly": true,
            "example": "cluster1"
          },
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "currentValue": {
            "$ref": "#/components/schemas/DataMetricValueView"
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/HostMetricEventTypeViewAlertable"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "hostnameAndPort": {
            "type": "string",
            "description": "Hostname and port of the host to which this alert applies. The resource returns this parameter for alerts of events impacting hosts or replica sets.",
            "readOnly": true,
            "example": "cloud-test.mongodb.com:27017"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "lastNotified": {
            "type": "string",
            "description": "Date and time that any notifications were last sent for this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter if MongoDB Cloud has sent notifications for this alert.",
            "format": "date-time",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "metricName": {
            "type": "string",
            "description": "Name of the metric against which Atlas checks the configured `metricThreshold.threshold`.\n\nTo learn more about the available metrics, see <a href=\"https://www.mongodb.com/docs/atlas/reference/alert-host-metrics/#std-label-measurement-types\" target=\"_blank\">Host Metrics</a>.\n\n**NOTE**: If you set eventTypeName to OUTSIDE_SERVERLESS_METRIC_THRESHOLD, you can specify only metrics available for serverless. To learn more, see <a href=\"https://dochub.mongodb.org/core/alert-config-serverless-measurements\" target=\"_blank\">Serverless Measurements</a>.",
            "readOnly": true,
            "example": "ASSERT_USER"
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the organization that owns the project to which this alert applies.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "replicaSetName": {
            "type": "string",
            "description": "Name of the replica set to which this alert applies. The response returns this parameter for alerts of events impacting backups, hosts, or replica sets.",
            "readOnly": true,
            "example": "event-replica-set"
          },
          "resolved": {
            "type": "string",
            "description": "Date and time that this alert changed to `\"status\" : \"CLOSED\"`. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter once `\"status\" : \"CLOSED\"`.",
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "State of this alert at the time you requested its details.",
            "readOnly": true,
            "example": "OPEN",
            "enum": ["CANCELLED", "CLOSED", "OPEN", "TRACKING"]
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "DefaultAlertViewForNdsGroup": {
        "title": "Any Other Alerts",
        "required": ["alertConfigId", "created", "eventTypeName", "id", "status", "updated"],
        "type": "object",
        "properties": {
          "acknowledgedUntil": {
            "type": "string",
            "description": "Date and time until which this alert has been acknowledged. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter if a MongoDB User previously acknowledged this alert.\n\n- To acknowledge this alert forever, set the parameter value to 100 years in the future.\n\n- To unacknowledge a previously acknowledged alert, do not set this parameter value.",
            "format": "date-time"
          },
          "acknowledgementComment": {
            "maxLength": 200,
            "type": "string",
            "description": "Comment that a MongoDB Cloud user submitted when acknowledging the alert.",
            "example": "Expiration on 3/19.  Silencing for 7days."
          },
          "acknowledgingUsername": {
            "type": "string",
            "description": "MongoDB Cloud username of the person who acknowledged the alert. The response returns this parameter if a MongoDB Cloud user previously acknowledged this alert.",
            "format": "email",
            "readOnly": true
          },
          "alertConfigId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration that sets this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "type": "object",
            "description": "Incident that triggered this alert.",
            "readOnly": true,
            "oneOf": [
              {
                "title": "Billing Event Types",
                "type": "string",
                "enum": ["CREDIT_CARD_ABOUT_TO_EXPIRE", "PENDING_INVOICE_OVER_THRESHOLD", "DAILY_BILL_OVER_THRESHOLD"]
              },
              {
                "title": "Cps Backup Event Types",
                "type": "string",
                "enum": [
                  "CPS_SNAPSHOT_STARTED",
                  "CPS_SNAPSHOT_SUCCESSFUL",
                  "CPS_SNAPSHOT_FAILED",
                  "CPS_CONCURRENT_SNAPSHOT_FAILED_WILL_RETRY",
                  "CPS_SNAPSHOT_BEHIND",
                  "CPS_COPY_SNAPSHOT_STARTED",
                  "CPS_COPY_SNAPSHOT_FAILED",
                  "CPS_COPY_SNAPSHOT_SUCCESSFUL",
                  "CPS_PREV_SNAPSHOT_OLD",
                  "CPS_SNAPSHOT_FALLBACK_SUCCESSFUL",
                  "CPS_SNAPSHOT_FALLBACK_FAILED",
                  "CPS_RESTORE_SUCCESSFUL",
                  "CPS_EXPORT_SUCCESSFUL",
                  "CPS_RESTORE_FAILED",
                  "CPS_EXPORT_FAILED",
                  "CPS_AUTO_EXPORT_FAILED",
                  "CPS_SNAPSHOT_DOWNLOAD_REQUEST_FAILED",
                  "CPS_OPLOG_BEHIND",
                  "CPS_OPLOG_CAUGHT_UP"
                ]
              },
              {
                "title": "Encryption Event Types",
                "type": "string",
                "enum": [
                  "AWS_ENCRYPTION_KEY_NEEDS_ROTATION",
                  "AZURE_ENCRYPTION_KEY_NEEDS_ROTATION",
                  "GCP_ENCRYPTION_KEY_NEEDS_ROTATION",
                  "AWS_ENCRYPTION_KEY_INVALID",
                  "AZURE_ENCRYPTION_KEY_INVALID",
                  "GCP_ENCRYPTION_KEY_INVALID"
                ]
              },
              {
                "title": "FTS Index Audit Types",
                "type": "string",
                "enum": [
                  "FTS_INDEX_DELETION_FAILED",
                  "FTS_INDEX_BUILD_COMPLETE",
                  "FTS_INDEX_BUILD_FAILED",
                  "FTS_INDEXES_RESTORE_FAILED"
                ]
              },
              {
                "title": "Group Event Types",
                "type": "string",
                "enum": ["USERS_WITHOUT_MULTI_FACTOR_AUTH", "ENCRYPTION_AT_REST_KMS_NETWORK_ACCESS_DENIED"]
              },
              {
                "title": "NDS Audit Types",
                "type": "string",
                "enum": [
                  "CLUSTER_INSTANCE_STOP_START",
                  "CLUSTER_INSTANCE_RESYNC_REQUESTED",
                  "CLUSTER_INSTANCE_UPDATE_REQUESTED",
                  "SAMPLE_DATASET_LOAD_REQUESTED",
                  "TENANT_UPGRADE_TO_SERVERLESS_SUCCESSFUL",
                  "TENANT_UPGRADE_TO_SERVERLESS_FAILED",
                  "NETWORK_PERMISSION_ENTRY_ADDED",
                  "NETWORK_PERMISSION_ENTRY_REMOVED",
                  "NETWORK_PERMISSION_ENTRY_UPDATED"
                ]
              },
              {
                "title": "NDS Maintenance Window Audit Types",
                "type": "string",
                "enum": [
                  "MAINTENANCE_IN_ADVANCED",
                  "MAINTENANCE_AUTO_DEFERRED",
                  "MAINTENANCE_STARTED",
                  "MAINTENANCE_NO_LONGER_NEEDED"
                ]
              },
              {
                "title": "NDS x509 User Auth Event Types",
                "type": "string",
                "enum": [
                  "NDS_X509_USER_AUTHENTICATION_CUSTOMER_CA_EXPIRATION_CHECK",
                  "NDS_X509_USER_AUTHENTICATION_CUSTOMER_CRL_EXPIRATION_CHECK",
                  "NDS_X509_USER_AUTHENTICATION_MANAGED_USER_CERTS_EXPIRATION_CHECK"
                ]
              },
              {
                "title": "Online Archive Event Types",
                "type": "string",
                "enum": [
                  "ONLINE_ARCHIVE_INSUFFICIENT_INDEXES_CHECK",
                  "ONLINE_ARCHIVE_MAX_CONSECUTIVE_OFFLOAD_WINDOWS_CHECK"
                ]
              },
              {
                "title": "Serverless Event Types",
                "type": "string",
                "enum": ["OUTSIDE_SERVERLESS_METRIC_THRESHOLD"]
              },
              {
                "title": "User Event Types",
                "type": "string",
                "enum": ["JOINED_GROUP", "REMOVED_FROM_GROUP", "USER_ROLES_CHANGED_AUDIT"]
              },
              {
                "title": "Resource Event Types",
                "type": "string",
                "enum": ["TAGS_MODIFIED", "GROUP_TAGS_MODIFIED"]
              },
              {
                "title": "Stream Processor Event Types",
                "type": "string",
                "enum": ["STREAM_PROCESSOR_STATE_IS_FAILED"]
              },
              {
                "title": "NDS Auto Scaling Audit Types",
                "type": "string",
                "enum": [
                  "COMPUTE_AUTO_SCALE_INITIATED_BASE",
                  "COMPUTE_AUTO_SCALE_INITIATED_ANALYTICS",
                  "COMPUTE_AUTO_SCALE_SCALE_DOWN_FAIL_BASE",
                  "COMPUTE_AUTO_SCALE_SCALE_DOWN_FAIL_ANALYTICS",
                  "COMPUTE_AUTO_SCALE_MAX_INSTANCE_SIZE_FAIL_BASE",
                  "COMPUTE_AUTO_SCALE_MAX_INSTANCE_SIZE_FAIL_ANALYTICS",
                  "COMPUTE_AUTO_SCALE_OPLOG_FAIL_BASE",
                  "COMPUTE_AUTO_SCALE_OPLOG_FAIL_ANALYTICS",
                  "DISK_AUTO_SCALE_INITIATED",
                  "DISK_AUTO_SCALE_MAX_DISK_SIZE_FAIL",
                  "DISK_AUTO_SCALE_OPLOG_FAIL"
                ]
              }
            ]
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "lastNotified": {
            "type": "string",
            "description": "Date and time that any notifications were last sent for this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter if MongoDB Cloud has sent notifications for this alert.",
            "format": "date-time",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the organization that owns the project to which this alert applies.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "resolved": {
            "type": "string",
            "description": "Date and time that this alert changed to `\"status\" : \"CLOSED\"`. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter once `\"status\" : \"CLOSED\"`.",
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "State of this alert at the time you requested its details.",
            "readOnly": true,
            "example": "OPEN",
            "enum": ["CANCELLED", "CLOSED", "OPEN", "TRACKING"]
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Other alerts which don't have extra details beside of basic one."
      },
      "HostAlertViewForNdsGroup": {
        "title": "Host Alerts",
        "required": ["alertConfigId", "created", "eventTypeName", "id", "status", "updated"],
        "type": "object",
        "properties": {
          "acknowledgedUntil": {
            "type": "string",
            "description": "Date and time until which this alert has been acknowledged. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter if a MongoDB User previously acknowledged this alert.\n\n- To acknowledge this alert forever, set the parameter value to 100 years in the future.\n\n- To unacknowledge a previously acknowledged alert, do not set this parameter value.",
            "format": "date-time"
          },
          "acknowledgementComment": {
            "maxLength": 200,
            "type": "string",
            "description": "Comment that a MongoDB Cloud user submitted when acknowledging the alert.",
            "example": "Expiration on 3/19.  Silencing for 7days."
          },
          "acknowledgingUsername": {
            "type": "string",
            "description": "MongoDB Cloud username of the person who acknowledged the alert. The response returns this parameter if a MongoDB Cloud user previously acknowledged this alert.",
            "format": "email",
            "readOnly": true
          },
          "alertConfigId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration that sets this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "clusterName": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the cluster to which this alert applies. This resource returns this parameter for alerts of events impacting backups, replica sets, or sharded clusters.",
            "readOnly": true,
            "example": "cluster1"
          },
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/HostEventTypeViewForNdsGroupAlertable"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "hostnameAndPort": {
            "type": "string",
            "description": "Hostname and port of the host to which this alert applies. The resource returns this parameter for alerts of events impacting hosts or replica sets.",
            "readOnly": true,
            "example": "cloud-test.mongodb.com:27017"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "lastNotified": {
            "type": "string",
            "description": "Date and time that any notifications were last sent for this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter if MongoDB Cloud has sent notifications for this alert.",
            "format": "date-time",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the organization that owns the project to which this alert applies.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "replicaSetName": {
            "type": "string",
            "description": "Name of the replica set to which this alert applies. The response returns this parameter for alerts of events impacting backups, hosts, or replica sets.",
            "readOnly": true,
            "example": "event-replica-set"
          },
          "resolved": {
            "type": "string",
            "description": "Date and time that this alert changed to `\"status\" : \"CLOSED\"`. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter once `\"status\" : \"CLOSED\"`.",
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "State of this alert at the time you requested its details.",
            "readOnly": true,
            "example": "OPEN",
            "enum": ["CANCELLED", "CLOSED", "OPEN", "TRACKING"]
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Host alert notifies about activities on mongod host."
      },
      "HostEventTypeViewForNdsGroupAlertable": {
        "title": "Host Event Types",
        "type": "string",
        "description": "Event type that triggers an alert.",
        "example": "HOST_DOWN",
        "enum": ["HOST_DOWN", "HOST_HAS_INDEX_SUGGESTIONS", "HOST_MONGOT_CRASHING_OOM", "HOST_NOT_ENOUGH_DISK_SPACE"]
      },
      "HostMetricAlert": {
        "title": "Host Metric Alerts",
        "required": ["alertConfigId", "created", "eventTypeName", "id", "status", "updated"],
        "type": "object",
        "properties": {
          "acknowledgedUntil": {
            "type": "string",
            "description": "Date and time until which this alert has been acknowledged. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter if a MongoDB User previously acknowledged this alert.\n\n- To acknowledge this alert forever, set the parameter value to 100 years in the future.\n\n- To unacknowledge a previously acknowledged alert, do not set this parameter value.",
            "format": "date-time"
          },
          "acknowledgementComment": {
            "maxLength": 200,
            "type": "string",
            "description": "Comment that a MongoDB Cloud user submitted when acknowledging the alert.",
            "example": "Expiration on 3/19.  Silencing for 7days."
          },
          "acknowledgingUsername": {
            "type": "string",
            "description": "MongoDB Cloud username of the person who acknowledged the alert. The response returns this parameter if a MongoDB Cloud user previously acknowledged this alert.",
            "format": "email",
            "readOnly": true
          },
          "alertConfigId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration that sets this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "clusterName": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the cluster to which this alert applies. This resource returns this parameter for alerts of events impacting backups, replica sets, or sharded clusters.",
            "readOnly": true,
            "example": "cluster1"
          },
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "currentValue": {
            "$ref": "#/components/schemas/HostMetricValue"
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/HostMetricEventTypeViewAlertable"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "hostnameAndPort": {
            "type": "string",
            "description": "Hostname and port of the host to which this alert applies. The resource returns this parameter for alerts of events impacting hosts or replica sets.",
            "readOnly": true,
            "example": "cloud-test.mongodb.com:27017"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "lastNotified": {
            "type": "string",
            "description": "Date and time that any notifications were last sent for this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter if MongoDB Cloud has sent notifications for this alert.",
            "format": "date-time",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "metricName": {
            "type": "string",
            "description": "Name of the metric against which Atlas checks the configured `metricThreshold.threshold`.\n\nTo learn more about the available metrics, see <a href=\"https://www.mongodb.com/docs/atlas/reference/alert-host-metrics/#std-label-measurement-types\" target=\"_blank\">Host Metrics</a>.\n\n**NOTE**: If you set eventTypeName to OUTSIDE_SERVERLESS_METRIC_THRESHOLD, you can specify only metrics available for serverless. To learn more, see <a href=\"https://dochub.mongodb.org/core/alert-config-serverless-measurements\" target=\"_blank\">Serverless Measurements</a>.",
            "readOnly": true,
            "example": "ASSERT_USER"
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the organization that owns the project to which this alert applies.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "replicaSetName": {
            "type": "string",
            "description": "Name of the replica set to which this alert applies. The response returns this parameter for alerts of events impacting backups, hosts, or replica sets.",
            "readOnly": true,
            "example": "event-replica-set"
          },
          "resolved": {
            "type": "string",
            "description": "Date and time that this alert changed to `\"status\" : \"CLOSED\"`. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter once `\"status\" : \"CLOSED\"`.",
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "State of this alert at the time you requested its details.",
            "readOnly": true,
            "example": "OPEN",
            "enum": ["CANCELLED", "CLOSED", "OPEN", "TRACKING"]
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Host Metric Alert notifies about changes of measurements or metrics for mongod host.",
        "discriminator": {
          "propertyName": "metricName",
          "mapping": {
            "ASSERT_REGULAR": "#/components/schemas/RawMetricAlertView",
            "ASSERT_WARNING": "#/components/schemas/RawMetricAlertView",
            "ASSERT_MSG": "#/components/schemas/RawMetricAlertView",
            "ASSERT_USER": "#/components/schemas/RawMetricAlertView",
            "OPCOUNTER_CMD": "#/components/schemas/RawMetricAlertView",
            "OPCOUNTER_QUERY": "#/components/schemas/RawMetricAlertView",
            "OPCOUNTER_UPDATE": "#/components/schemas/RawMetricAlertView",
            "OPCOUNTER_DELETE": "#/components/schemas/RawMetricAlertView",
            "OPCOUNTER_INSERT": "#/components/schemas/RawMetricAlertView",
            "OPCOUNTER_GETMORE": "#/components/schemas/RawMetricAlertView",
            "OPCOUNTER_REPL_CMD": "#/components/schemas/RawMetricAlertView",
            "OPCOUNTER_REPL_UPDATE": "#/components/schemas/RawMetricAlertView",
            "OPCOUNTER_REPL_DELETE": "#/components/schemas/RawMetricAlertView",
            "OPCOUNTER_REPL_INSERT": "#/components/schemas/RawMetricAlertView",
            "FTS_MEMORY_RESIDENT": "#/components/schemas/DataMetricAlertView",
            "FTS_MEMORY_VIRTUAL": "#/components/schemas/DataMetricAlertView",
            "FTS_MEMORY_MAPPED": "#/components/schemas/DataMetricAlertView",
            "FTS_PROCESS_CPU_USER": "#/components/schemas/RawMetricAlertView",
            "FTS_PROCESS_CPU_KERNEL": "#/components/schemas/RawMetricAlertView",
            "NORMALIZED_FTS_PROCESS_CPU_USER": "#/components/schemas/RawMetricAlertView",
            "NORMALIZED_FTS_PROCESS_CPU_KERNEL": "#/components/schemas/RawMetricAlertView",
            "SYSTEM_MEMORY_PERCENT_USED": "#/components/schemas/RawMetricAlertView",
            "MEMORY_RESIDENT": "#/components/schemas/DataMetricAlertView",
            "MEMORY_VIRTUAL": "#/components/schemas/DataMetricAlertView",
            "MEMORY_MAPPED": "#/components/schemas/DataMetricAlertView",
            "COMPUTED_MEMORY": "#/components/schemas/DataMetricAlertView",
            "INDEX_COUNTERS_BTREE_ACCESSES": "#/components/schemas/RawMetricAlertView",
            "INDEX_COUNTERS_BTREE_HITS": "#/components/schemas/RawMetricAlertView",
            "INDEX_COUNTERS_BTREE_MISSES": "#/components/schemas/RawMetricAlertView",
            "INDEX_COUNTERS_BTREE_MISS_RATIO": "#/components/schemas/RawMetricAlertView",
            "GLOBAL_LOCK_PERCENTAGE": "#/components/schemas/RawMetricAlertView",
            "BACKGROUND_FLUSH_AVG": "#/components/schemas/TimeMetricAlertView",
            "CONNECTIONS": "#/components/schemas/RawMetricAlertView",
            "CONNECTIONS_MAX": "#/components/schemas/RawMetricAlertView",
            "CONNECTIONS_PERCENT": "#/components/schemas/RawMetricAlertView",
            "GLOBAL_ACCESSES_NOT_IN_MEMORY": "#/components/schemas/RawMetricAlertView",
            "GLOBAL_PAGE_FAULT_EXCEPTIONS_THROWN": "#/components/schemas/RawMetricAlertView",
            "GLOBAL_LOCK_CURRENT_QUEUE_TOTAL": "#/components/schemas/RawMetricAlertView",
            "GLOBAL_LOCK_CURRENT_QUEUE_READERS": "#/components/schemas/RawMetricAlertView",
            "GLOBAL_LOCK_CURRENT_QUEUE_WRITERS": "#/components/schemas/RawMetricAlertView",
            "CURSORS_TOTAL_OPEN": "#/components/schemas/RawMetricAlertView",
            "CURSORS_TOTAL_TIMED_OUT": "#/components/schemas/RawMetricAlertView",
            "CURSORS_TOTAL_CLIENT_CURSORS_SIZE": "#/components/schemas/RawMetricAlertView",
            "NETWORK_BYTES_IN": "#/components/schemas/DataMetricAlertView",
            "NETWORK_BYTES_OUT": "#/components/schemas/DataMetricAlertView",
            "NETWORK_NUM_REQUESTS": "#/components/schemas/RawMetricAlertView",
            "OPLOG_MASTER_TIME": "#/components/schemas/TimeMetricAlertView",
            "OPLOG_MASTER_TIME_ESTIMATED_TTL": "#/components/schemas/TimeMetricAlertView",
            "OPLOG_SLAVE_LAG_MASTER_TIME": "#/components/schemas/TimeMetricAlertView",
            "OPLOG_REPLICATION_LAG_TIME": "#/components/schemas/TimeMetricAlertView",
            "OPLOG_MASTER_LAG_TIME_DIFF": "#/components/schemas/TimeMetricAlertView",
            "OPLOG_RATE_GB_PER_HOUR": "#/components/schemas/DataMetricAlertView",
            "EXTRA_INFO_PAGE_FAULTS": "#/components/schemas/RawMetricAlertView",
            "DB_STORAGE_TOTAL": "#/components/schemas/DataMetricAlertView",
            "DB_DATA_SIZE_TOTAL": "#/components/schemas/DataMetricAlertView",
            "DB_DATA_SIZE_TOTAL_WO_SYSTEM": "#/components/schemas/DataMetricAlertView",
            "DB_INDEX_SIZE_TOTAL": "#/components/schemas/DataMetricAlertView",
            "JOURNALING_COMMITS_IN_WRITE_LOCK": "#/components/schemas/RawMetricAlertView",
            "JOURNALING_MB": "#/components/schemas/DataMetricAlertView",
            "JOURNALING_WRITE_DATA_FILES_MB": "#/components/schemas/DataMetricAlertView",
            "TICKETS_AVAILABLE_READS": "#/components/schemas/RawMetricAlertView",
            "TICKETS_AVAILABLE_WRITES": "#/components/schemas/RawMetricAlertView",
            "CACHE_USAGE_DIRTY": "#/components/schemas/DataMetricAlertView",
            "CACHE_USAGE_USED": "#/components/schemas/DataMetricAlertView",
            "CACHE_BYTES_READ_INTO": "#/components/schemas/DataMetricAlertView",
            "CACHE_BYTES_WRITTEN_FROM": "#/components/schemas/DataMetricAlertView",
            "NORMALIZED_SYSTEM_CPU_USER": "#/components/schemas/RawMetricAlertView",
            "NORMALIZED_SYSTEM_CPU_STEAL": "#/components/schemas/RawMetricAlertView",
            "DISK_PARTITION_SPACE_USED_DATA": "#/components/schemas/RawMetricAlertView",
            "DISK_PARTITION_SPACE_USED_INDEX": "#/components/schemas/RawMetricAlertView",
            "DISK_PARTITION_SPACE_USED_JOURNAL": "#/components/schemas/RawMetricAlertView",
            "DISK_PARTITION_UTILIZATION_DATA": "#/components/schemas/RawMetricAlertView",
            "DISK_PARTITION_UTILIZATION_INDEX": "#/components/schemas/RawMetricAlertView",
            "DISK_PARTITION_UTILIZATION_JOURNAL": "#/components/schemas/RawMetricAlertView",
            "DISK_PARTITION_READ_IOPS_DATA": "#/components/schemas/RawMetricAlertView",
            "DISK_PARTITION_READ_IOPS_INDEX": "#/components/schemas/RawMetricAlertView",
            "DISK_PARTITION_READ_IOPS_JOURNAL": "#/components/schemas/RawMetricAlertView",
            "DISK_PARTITION_WRITE_IOPS_DATA": "#/components/schemas/RawMetricAlertView",
            "DISK_PARTITION_WRITE_IOPS_INDEX": "#/components/schemas/RawMetricAlertView",
            "DISK_PARTITION_WRITE_IOPS_JOURNAL": "#/components/schemas/RawMetricAlertView",
            "DISK_PARTITION_READ_LATENCY_DATA": "#/components/schemas/TimeMetricAlertView",
            "DISK_PARTITION_READ_LATENCY_INDEX": "#/components/schemas/TimeMetricAlertView",
            "DISK_PARTITION_READ_LATENCY_JOURNAL": "#/components/schemas/TimeMetricAlertView",
            "DISK_PARTITION_WRITE_LATENCY_DATA": "#/components/schemas/TimeMetricAlertView",
            "DISK_PARTITION_WRITE_LATENCY_INDEX": "#/components/schemas/TimeMetricAlertView",
            "DISK_PARTITION_WRITE_LATENCY_JOURNAL": "#/components/schemas/TimeMetricAlertView",
            "DISK_PARTITION_QUEUE_DEPTH_DATA": "#/components/schemas/RawMetricAlertView",
            "DISK_PARTITION_QUEUE_DEPTH_INDEX": "#/components/schemas/RawMetricAlertView",
            "DISK_PARTITION_QUEUE_DEPTH_JOURNAL": "#/components/schemas/RawMetricAlertView",
            "FTS_DISK_UTILIZATION": "#/components/schemas/DataMetricAlertView",
            "MUNIN_CPU_USER": "#/components/schemas/RawMetricAlertView",
            "MUNIN_CPU_NICE": "#/components/schemas/RawMetricAlertView",
            "MUNIN_CPU_SYSTEM": "#/components/schemas/RawMetricAlertView",
            "MUNIN_CPU_IOWAIT": "#/components/schemas/RawMetricAlertView",
            "MUNIN_CPU_IRQ": "#/components/schemas/RawMetricAlertView",
            "MUNIN_CPU_SOFTIRQ": "#/components/schemas/RawMetricAlertView",
            "MUNIN_CPU_STEAL": "#/components/schemas/RawMetricAlertView",
            "DOCUMENT_RETURNED": "#/components/schemas/RawMetricAlertView",
            "DOCUMENT_INSERTED": "#/components/schemas/RawMetricAlertView",
            "DOCUMENT_UPDATED": "#/components/schemas/RawMetricAlertView",
            "DOCUMENT_DELETED": "#/components/schemas/RawMetricAlertView",
            "OPERATIONS_SCAN_AND_ORDER": "#/components/schemas/RawMetricAlertView",
            "QUERY_EXECUTOR_SCANNED": "#/components/schemas/RawMetricAlertView",
            "QUERY_EXECUTOR_SCANNED_OBJECTS": "#/components/schemas/RawMetricAlertView",
            "QUERY_TARGETING_SCANNED_PER_RETURNED": "#/components/schemas/RawMetricAlertView",
            "QUERY_TARGETING_SCANNED_OBJECTS_PER_RETURNED": "#/components/schemas/RawMetricAlertView",
            "AVG_READ_EXECUTION_TIME": "#/components/schemas/TimeMetricAlertView",
            "AVG_WRITE_EXECUTION_TIME": "#/components/schemas/TimeMetricAlertView",
            "AVG_COMMAND_EXECUTION_TIME": "#/components/schemas/TimeMetricAlertView",
            "LOGICAL_SIZE": "#/components/schemas/DataMetricAlertView",
            "RESTARTS_IN_LAST_HOUR": "#/components/schemas/RawMetricAlertView",
            "SYSTEM_MEMORY_USED": "#/components/schemas/DataMetricAlertView",
            "SYSTEM_MEMORY_AVAILABLE": "#/components/schemas/DataMetricAlertView",
            "SWAP_USAGE_USED": "#/components/schemas/DataMetricAlertView",
            "SWAP_USAGE_FREE": "#/components/schemas/DataMetricAlertView",
            "SYSTEM_NETWORK_IN": "#/components/schemas/DataMetricAlertView",
            "SYSTEM_NETWORK_OUT": "#/components/schemas/DataMetricAlertView",
            "MAX_NORMALIZED_SYSTEM_CPU_USER": "#/components/schemas/RawMetricAlertView",
            "MAX_NORMALIZED_SYSTEM_CPU_STEAL": "#/components/schemas/RawMetricAlertView",
            "MAX_DISK_PARTITION_SPACE_USED_DATA": "#/components/schemas/RawMetricAlertView",
            "MAX_DISK_PARTITION_SPACE_USED_INDEX": "#/components/schemas/RawMetricAlertView",
            "MAX_DISK_PARTITION_SPACE_USED_JOURNAL": "#/components/schemas/RawMetricAlertView",
            "MAX_DISK_PARTITION_UTILIZATION_DATA": "#/components/schemas/RawMetricAlertView",
            "MAX_DISK_PARTITION_UTILIZATION_INDEX": "#/components/schemas/RawMetricAlertView",
            "MAX_DISK_PARTITION_UTILIZATION_JOURNAL": "#/components/schemas/RawMetricAlertView",
            "MAX_DISK_PARTITION_READ_IOPS_DATA": "#/components/schemas/RawMetricAlertView",
            "MAX_DISK_PARTITION_READ_IOPS_INDEX": "#/components/schemas/RawMetricAlertView",
            "MAX_DISK_PARTITION_READ_IOPS_JOURNAL": "#/components/schemas/RawMetricAlertView",
            "MAX_DISK_PARTITION_WRITE_IOPS_DATA": "#/components/schemas/RawMetricAlertView",
            "MAX_DISK_PARTITION_WRITE_IOPS_INDEX": "#/components/schemas/RawMetricAlertView",
            "MAX_DISK_PARTITION_WRITE_IOPS_JOURNAL": "#/components/schemas/RawMetricAlertView",
            "MAX_DISK_PARTITION_READ_LATENCY_DATA": "#/components/schemas/TimeMetricAlertView",
            "MAX_DISK_PARTITION_READ_LATENCY_INDEX": "#/components/schemas/TimeMetricAlertView",
            "MAX_DISK_PARTITION_READ_LATENCY_JOURNAL": "#/components/schemas/TimeMetricAlertView",
            "MAX_DISK_PARTITION_WRITE_LATENCY_DATA": "#/components/schemas/TimeMetricAlertView",
            "MAX_DISK_PARTITION_WRITE_LATENCY_INDEX": "#/components/schemas/TimeMetricAlertView",
            "MAX_DISK_PARTITION_WRITE_LATENCY_JOURNAL": "#/components/schemas/TimeMetricAlertView",
            "MAX_DISK_PARTITION_QUEUE_DEPTH_DATA": "#/components/schemas/RawMetricAlertView",
            "MAX_DISK_PARTITION_QUEUE_DEPTH_INDEX": "#/components/schemas/RawMetricAlertView",
            "MAX_DISK_PARTITION_QUEUE_DEPTH_JOURNAL": "#/components/schemas/RawMetricAlertView",
            "MAX_SYSTEM_MEMORY_PERCENT_USED": "#/components/schemas/RawMetricAlertView",
            "MAX_SYSTEM_MEMORY_USED": "#/components/schemas/DataMetricAlertView",
            "MAX_SYSTEM_MEMORY_AVAILABLE": "#/components/schemas/DataMetricAlertView",
            "MAX_SWAP_USAGE_USED": "#/components/schemas/DataMetricAlertView",
            "MAX_SWAP_USAGE_FREE": "#/components/schemas/DataMetricAlertView",
            "MAX_SYSTEM_NETWORK_IN": "#/components/schemas/DataMetricAlertView",
            "MAX_SYSTEM_NETWORK_OUT": "#/components/schemas/DataMetricAlertView",
            "SEARCH_INDEX_SIZE": "#/components/schemas/DataMetricAlertView",
            "SEARCH_NUMBER_OF_FIELDS_IN_INDEX": "#/components/schemas/RawMetricAlertView",
            "SEARCH_REPLICATION_LAG": "#/components/schemas/TimeMetricAlertView",
            "SEARCH_MAX_NUMBER_OF_LUCENE_DOCS": "#/components/schemas/NumberMetricAlertView",
            "SEARCH_OPCOUNTER_INSERT": "#/components/schemas/RawMetricAlertView",
            "SEARCH_OPCOUNTER_DELETE": "#/components/schemas/RawMetricAlertView",
            "SEARCH_OPCOUNTER_UPDATE": "#/components/schemas/RawMetricAlertView",
            "SEARCH_OPCOUNTER_GETMORE": "#/components/schemas/RawMetricAlertView",
            "SEARCH_NUMBER_OF_QUERIES_TOTAL": "#/components/schemas/RawMetricAlertView",
            "SEARCH_NUMBER_OF_QUERIES_ERROR": "#/components/schemas/RawMetricAlertView",
            "SEARCH_NUMBER_OF_QUERIES_SUCCESS": "#/components/schemas/RawMetricAlertView",
            "FTS_JVM_MAX_MEMORY": "#/components/schemas/DataMetricAlertView",
            "FTS_JVM_CURRENT_MEMORY": "#/components/schemas/DataMetricAlertView"
          }
        }
      },
      "HostMetricEventTypeViewAlertable": {
        "title": "Host Metric Event Types",
        "type": "string",
        "description": "Event type that triggers an alert.",
        "example": "OUTSIDE_METRIC_THRESHOLD",
        "enum": ["OUTSIDE_METRIC_THRESHOLD"]
      },
      "NumberMetricAlertView": {
        "required": ["alertConfigId", "created", "eventTypeName", "id", "status", "updated"],
        "type": "object",
        "properties": {
          "acknowledgedUntil": {
            "type": "string",
            "description": "Date and time until which this alert has been acknowledged. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter if a MongoDB User previously acknowledged this alert.\n\n- To acknowledge this alert forever, set the parameter value to 100 years in the future.\n\n- To unacknowledge a previously acknowledged alert, do not set this parameter value.",
            "format": "date-time"
          },
          "acknowledgementComment": {
            "maxLength": 200,
            "type": "string",
            "description": "Comment that a MongoDB Cloud user submitted when acknowledging the alert.",
            "example": "Expiration on 3/19.  Silencing for 7days."
          },
          "acknowledgingUsername": {
            "type": "string",
            "description": "MongoDB Cloud username of the person who acknowledged the alert. The response returns this parameter if a MongoDB Cloud user previously acknowledged this alert.",
            "format": "email",
            "readOnly": true
          },
          "alertConfigId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration that sets this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "clusterName": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the cluster to which this alert applies. This resource returns this parameter for alerts of events impacting backups, replica sets, or sharded clusters.",
            "readOnly": true,
            "example": "cluster1"
          },
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "currentValue": {
            "$ref": "#/components/schemas/NumberMetricValueView"
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/HostMetricEventTypeViewAlertable"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "hostnameAndPort": {
            "type": "string",
            "description": "Hostname and port of the host to which this alert applies. The resource returns this parameter for alerts of events impacting hosts or replica sets.",
            "readOnly": true,
            "example": "cloud-test.mongodb.com:27017"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "lastNotified": {
            "type": "string",
            "description": "Date and time that any notifications were last sent for this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter if MongoDB Cloud has sent notifications for this alert.",
            "format": "date-time",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "metricName": {
            "type": "string",
            "description": "Name of the metric against which Atlas checks the configured `metricThreshold.threshold`.\n\nTo learn more about the available metrics, see <a href=\"https://www.mongodb.com/docs/atlas/reference/alert-host-metrics/#std-label-measurement-types\" target=\"_blank\">Host Metrics</a>.\n\n**NOTE**: If you set eventTypeName to OUTSIDE_SERVERLESS_METRIC_THRESHOLD, you can specify only metrics available for serverless. To learn more, see <a href=\"https://dochub.mongodb.org/core/alert-config-serverless-measurements\" target=\"_blank\">Serverless Measurements</a>.",
            "readOnly": true,
            "example": "ASSERT_USER"
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the organization that owns the project to which this alert applies.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "replicaSetName": {
            "type": "string",
            "description": "Name of the replica set to which this alert applies. The response returns this parameter for alerts of events impacting backups, hosts, or replica sets.",
            "readOnly": true,
            "example": "event-replica-set"
          },
          "resolved": {
            "type": "string",
            "description": "Date and time that this alert changed to `\"status\" : \"CLOSED\"`. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter once `\"status\" : \"CLOSED\"`.",
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "State of this alert at the time you requested its details.",
            "readOnly": true,
            "example": "OPEN",
            "enum": ["CANCELLED", "CLOSED", "OPEN", "TRACKING"]
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "PaginatedAlertView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/AlertViewForNdsGroup"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "RawMetricAlertView": {
        "required": ["alertConfigId", "created", "eventTypeName", "id", "status", "updated"],
        "type": "object",
        "properties": {
          "acknowledgedUntil": {
            "type": "string",
            "description": "Date and time until which this alert has been acknowledged. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter if a MongoDB User previously acknowledged this alert.\n\n- To acknowledge this alert forever, set the parameter value to 100 years in the future.\n\n- To unacknowledge a previously acknowledged alert, do not set this parameter value.",
            "format": "date-time"
          },
          "acknowledgementComment": {
            "maxLength": 200,
            "type": "string",
            "description": "Comment that a MongoDB Cloud user submitted when acknowledging the alert.",
            "example": "Expiration on 3/19.  Silencing for 7days."
          },
          "acknowledgingUsername": {
            "type": "string",
            "description": "MongoDB Cloud username of the person who acknowledged the alert. The response returns this parameter if a MongoDB Cloud user previously acknowledged this alert.",
            "format": "email",
            "readOnly": true
          },
          "alertConfigId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration that sets this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "clusterName": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the cluster to which this alert applies. This resource returns this parameter for alerts of events impacting backups, replica sets, or sharded clusters.",
            "readOnly": true,
            "example": "cluster1"
          },
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "currentValue": {
            "$ref": "#/components/schemas/RawMetricValueView"
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/HostMetricEventTypeViewAlertable"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "hostnameAndPort": {
            "type": "string",
            "description": "Hostname and port of the host to which this alert applies. The resource returns this parameter for alerts of events impacting hosts or replica sets.",
            "readOnly": true,
            "example": "cloud-test.mongodb.com:27017"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "lastNotified": {
            "type": "string",
            "description": "Date and time that any notifications were last sent for this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter if MongoDB Cloud has sent notifications for this alert.",
            "format": "date-time",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "metricName": {
            "type": "string",
            "description": "Name of the metric against which Atlas checks the configured `metricThreshold.threshold`.\n\nTo learn more about the available metrics, see <a href=\"https://www.mongodb.com/docs/atlas/reference/alert-host-metrics/#std-label-measurement-types\" target=\"_blank\">Host Metrics</a>.\n\n**NOTE**: If you set eventTypeName to OUTSIDE_SERVERLESS_METRIC_THRESHOLD, you can specify only metrics available for serverless. To learn more, see <a href=\"https://dochub.mongodb.org/core/alert-config-serverless-measurements\" target=\"_blank\">Serverless Measurements</a>.",
            "readOnly": true,
            "example": "ASSERT_USER"
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the organization that owns the project to which this alert applies.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "replicaSetName": {
            "type": "string",
            "description": "Name of the replica set to which this alert applies. The response returns this parameter for alerts of events impacting backups, hosts, or replica sets.",
            "readOnly": true,
            "example": "event-replica-set"
          },
          "resolved": {
            "type": "string",
            "description": "Date and time that this alert changed to `\"status\" : \"CLOSED\"`. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter once `\"status\" : \"CLOSED\"`.",
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "State of this alert at the time you requested its details.",
            "readOnly": true,
            "example": "OPEN",
            "enum": ["CANCELLED", "CLOSED", "OPEN", "TRACKING"]
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "ReplicaSetAlertViewForNdsGroup": {
        "title": "ReplicaSet Alerts",
        "required": ["alertConfigId", "created", "eventTypeName", "id", "status", "updated"],
        "type": "object",
        "properties": {
          "acknowledgedUntil": {
            "type": "string",
            "description": "Date and time until which this alert has been acknowledged. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter if a MongoDB User previously acknowledged this alert.\n\n- To acknowledge this alert forever, set the parameter value to 100 years in the future.\n\n- To unacknowledge a previously acknowledged alert, do not set this parameter value.",
            "format": "date-time"
          },
          "acknowledgementComment": {
            "maxLength": 200,
            "type": "string",
            "description": "Comment that a MongoDB Cloud user submitted when acknowledging the alert.",
            "example": "Expiration on 3/19.  Silencing for 7days."
          },
          "acknowledgingUsername": {
            "type": "string",
            "description": "MongoDB Cloud username of the person who acknowledged the alert. The response returns this parameter if a MongoDB Cloud user previously acknowledged this alert.",
            "format": "email",
            "readOnly": true
          },
          "alertConfigId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration that sets this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "clusterName": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the cluster to which this alert applies. This resource returns this parameter for alerts of events impacting backups, replica sets, or sharded clusters.",
            "readOnly": true,
            "example": "cluster1"
          },
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/ReplicaSetEventTypeViewForNdsGroupAlertable"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "hostnameAndPort": {
            "type": "string",
            "description": "Hostname and port of the host to which this alert applies. The resource returns this parameter for alerts of events impacting hosts or replica sets.",
            "readOnly": true,
            "example": "cloud-test.mongodb.com:27017"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "lastNotified": {
            "type": "string",
            "description": "Date and time that any notifications were last sent for this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter if MongoDB Cloud has sent notifications for this alert.",
            "format": "date-time",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "nonRunningHostIds": {
            "type": "array",
            "description": "List of unique 24-hexadecimal character strings that identify the replica set members that are not in PRIMARY nor SECONDARY state.",
            "readOnly": true,
            "items": {
              "maxLength": 32,
              "minLength": 8,
              "pattern": "^([a-f0-9]{8,32})$",
              "type": "string",
              "readOnly": true,
              "example": "32b6e34b3d91647abb20e7b8"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the organization that owns the project to which this alert applies.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "parentClusterId": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the parent cluster to which this alert applies. The parent cluster contains the sharded nodes. MongoDB Cloud returns this parameter only for alerts of events impacting sharded clusters.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "replicaSetName": {
            "type": "string",
            "description": "Name of the replica set to which this alert applies. The response returns this parameter for alerts of events impacting backups, hosts, or replica sets.",
            "readOnly": true,
            "example": "event-replica-set"
          },
          "resolved": {
            "type": "string",
            "description": "Date and time that this alert changed to `\"status\" : \"CLOSED\"`. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter once `\"status\" : \"CLOSED\"`.",
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "State of this alert at the time you requested its details.",
            "readOnly": true,
            "example": "OPEN",
            "enum": ["CANCELLED", "CLOSED", "OPEN", "TRACKING"]
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "ReplicaSet alert notifies about different activities on replica set of mongod instances."
      },
      "ReplicaSetEventTypeViewForNdsGroupAlertable": {
        "title": "ReplicaSet Event Types",
        "type": "string",
        "description": "Incident that triggered this alert.",
        "readOnly": true,
        "example": "NO_PRIMARY",
        "enum": ["REPLICATION_OPLOG_WINDOW_RUNNING_OUT", "NO_PRIMARY", "PRIMARY_ELECTED", "TOO_MANY_ELECTIONS"]
      },
      "StreamProcessorAlertViewForNdsGroup": {
        "title": "Stream Processor Alerts",
        "required": ["alertConfigId", "created", "eventTypeName", "id", "status", "updated"],
        "type": "object",
        "properties": {
          "acknowledgedUntil": {
            "type": "string",
            "description": "Date and time until which this alert has been acknowledged. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter if a MongoDB User previously acknowledged this alert.\n\n- To acknowledge this alert forever, set the parameter value to 100 years in the future.\n\n- To unacknowledge a previously acknowledged alert, do not set this parameter value.",
            "format": "date-time"
          },
          "acknowledgementComment": {
            "maxLength": 200,
            "type": "string",
            "description": "Comment that a MongoDB Cloud user submitted when acknowledging the alert.",
            "example": "Expiration on 3/19.  Silencing for 7days."
          },
          "acknowledgingUsername": {
            "type": "string",
            "description": "MongoDB Cloud username of the person who acknowledged the alert. The response returns this parameter if a MongoDB Cloud user previously acknowledged this alert.",
            "format": "email",
            "readOnly": true
          },
          "alertConfigId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration that sets this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/HostEventTypeViewForNdsGroupAlertable"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "instanceName": {
            "type": "string",
            "description": "The name of the Stream Processing Instance to which this alert applies. The resource returns this parameter for alerts of events impacting Stream Processing Instances.",
            "readOnly": true,
            "example": "foobar"
          },
          "lastNotified": {
            "type": "string",
            "description": "Date and time that any notifications were last sent for this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter if MongoDB Cloud has sent notifications for this alert.",
            "format": "date-time",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the organization that owns the project to which this alert applies.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "processorErrorMsg": {
            "type": "string",
            "description": "The error message associated with the Stream Processor to which this alert applies.",
            "readOnly": true,
            "example": "MongoServerError: Failed to start stream processor: (Location77175) Could not connect to the Kafka topic with kafka error code: -195, message: Local: Broker transport failure.: (Location77175)"
          },
          "processorName": {
            "type": "string",
            "description": "The name of the Stream Processor to which this alert applies. The resource returns this parameter for alerts of events impacting Stream Processors.",
            "readOnly": true,
            "example": "foobar"
          },
          "processorState": {
            "type": "string",
            "description": "The state of the Stream Processor to which this alert applies. The resource returns this parameter for alerts of events impacting Stream Processors.",
            "readOnly": true,
            "example": "STARTED"
          },
          "resolved": {
            "type": "string",
            "description": "Date and time that this alert changed to `\"status\" : \"CLOSED\"`. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter once `\"status\" : \"CLOSED\"`.",
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "State of this alert at the time you requested its details.",
            "readOnly": true,
            "example": "OPEN",
            "enum": ["CANCELLED", "CLOSED", "OPEN", "TRACKING"]
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Stream Processor alert notifies about activities on Stream Processor in AtlasStreams."
      },
      "TimeMetricAlertView": {
        "required": ["alertConfigId", "created", "eventTypeName", "id", "status", "updated"],
        "type": "object",
        "properties": {
          "acknowledgedUntil": {
            "type": "string",
            "description": "Date and time until which this alert has been acknowledged. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter if a MongoDB User previously acknowledged this alert.\n\n- To acknowledge this alert forever, set the parameter value to 100 years in the future.\n\n- To unacknowledge a previously acknowledged alert, do not set this parameter value.",
            "format": "date-time"
          },
          "acknowledgementComment": {
            "maxLength": 200,
            "type": "string",
            "description": "Comment that a MongoDB Cloud user submitted when acknowledging the alert.",
            "example": "Expiration on 3/19.  Silencing for 7days."
          },
          "acknowledgingUsername": {
            "type": "string",
            "description": "MongoDB Cloud username of the person who acknowledged the alert. The response returns this parameter if a MongoDB Cloud user previously acknowledged this alert.",
            "format": "email",
            "readOnly": true
          },
          "alertConfigId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration that sets this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "clusterName": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the cluster to which this alert applies. This resource returns this parameter for alerts of events impacting backups, replica sets, or sharded clusters.",
            "readOnly": true,
            "example": "cluster1"
          },
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "currentValue": {
            "$ref": "#/components/schemas/TimeMetricValueView"
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/HostMetricEventTypeViewAlertable"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "hostnameAndPort": {
            "type": "string",
            "description": "Hostname and port of the host to which this alert applies. The resource returns this parameter for alerts of events impacting hosts or replica sets.",
            "readOnly": true,
            "example": "cloud-test.mongodb.com:27017"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "lastNotified": {
            "type": "string",
            "description": "Date and time that any notifications were last sent for this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter if MongoDB Cloud has sent notifications for this alert.",
            "format": "date-time",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "metricName": {
            "type": "string",
            "description": "Name of the metric against which Atlas checks the configured `metricThreshold.threshold`.\n\nTo learn more about the available metrics, see <a href=\"https://www.mongodb.com/docs/atlas/reference/alert-host-metrics/#std-label-measurement-types\" target=\"_blank\">Host Metrics</a>.\n\n**NOTE**: If you set eventTypeName to OUTSIDE_SERVERLESS_METRIC_THRESHOLD, you can specify only metrics available for serverless. To learn more, see <a href=\"https://dochub.mongodb.org/core/alert-config-serverless-measurements\" target=\"_blank\">Serverless Measurements</a>.",
            "readOnly": true,
            "example": "ASSERT_USER"
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the organization that owns the project to which this alert applies.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "replicaSetName": {
            "type": "string",
            "description": "Name of the replica set to which this alert applies. The response returns this parameter for alerts of events impacting backups, hosts, or replica sets.",
            "readOnly": true,
            "example": "event-replica-set"
          },
          "resolved": {
            "type": "string",
            "description": "Date and time that this alert changed to `\"status\" : \"CLOSED\"`. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter once `\"status\" : \"CLOSED\"`.",
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "State of this alert at the time you requested its details.",
            "readOnly": true,
            "example": "OPEN",
            "enum": ["CANCELLED", "CLOSED", "OPEN", "TRACKING"]
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "AlertView": {
        "title": "Alert",
        "required": ["alertConfigId", "created", "id", "status", "updated"],
        "type": "object",
        "properties": {
          "acknowledgedUntil": {
            "type": "string",
            "description": "Date and time until which this alert has been acknowledged. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter if a MongoDB User previously acknowledged this alert.\n\n- To acknowledge this alert forever, set the parameter value to 100 years in the future.\n\n- To unacknowledge a previously acknowledged alert, do not set this parameter value.",
            "format": "date-time"
          },
          "acknowledgementComment": {
            "maxLength": 200,
            "type": "string",
            "description": "Comment that a MongoDB Cloud user submitted when acknowledging the alert.",
            "example": "Expiration on 3/19.  Silencing for 7days."
          },
          "acknowledgingUsername": {
            "type": "string",
            "description": "MongoDB Cloud username of the person who acknowledged the alert. The response returns this parameter if a MongoDB Cloud user previously acknowledged this alert.",
            "format": "email",
            "readOnly": true
          },
          "alertConfigId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration that sets this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "lastNotified": {
            "type": "string",
            "description": "Date and time that any notifications were last sent for this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter if MongoDB Cloud has sent notifications for this alert.",
            "format": "date-time",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the organization that owns the project to which this alert applies.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "resolved": {
            "type": "string",
            "description": "Date and time that this alert changed to `\"status\" : \"CLOSED\"`. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter once `\"status\" : \"CLOSED\"`.",
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "State of this alert at the time you requested its details.",
            "readOnly": true,
            "example": "OPEN",
            "enum": ["CANCELLED", "CLOSED", "OPEN", "TRACKING"]
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Alert represents a notice of warning, a threat or a problem in the system. It can reflect a certain event or condition in the system. An Alert can be acknowledged by the user, but stays open until alert condition is resolved in the system."
      },
      "AcknowledgeAlert": {
        "title": "Acknowledge Alert",
        "type": "object",
        "properties": {
          "acknowledgedUntil": {
            "type": "string",
            "description": "Date and time until which this alert has been acknowledged. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC. The resource returns this parameter if a MongoDB User previously acknowledged this alert.",
            "format": "date-time"
          },
          "acknowledgementComment": {
            "maxLength": 200,
            "type": "string",
            "description": "Comment that a MongoDB Cloud user submitted when acknowledging the alert.",
            "example": "Expiration on 3/19.  Silencing for 7days."
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "unacknowledgeAlert": {
            "type": "boolean",
            "description": "Flag that indicates to unacknowledge a previously acknowledged alert. By default this value is set to false. If set to true, it will override the acknowledgedUntil parameter."
          }
        },
        "description": "Acknowledging an alert prevents successive notifications. Specify the acknowledgeUntil date and optional comment or unacknowledgeAlert boolean."
      },
      "AlertMatcher": {
        "title": "Matchers",
        "required": ["fieldName", "operator", "value"],
        "type": "object",
        "properties": {
          "fieldName": {
            "type": "string",
            "description": "Name of the parameter in the target object that MongoDB Cloud checks. The parameter must match all rules for MongoDB Cloud to check for alert configurations."
          },
          "operator": {
            "type": "string",
            "description": "Comparison operator to apply when checking the current metric value against **matcher[n].value**.",
            "enum": ["EQUALS", "CONTAINS", "STARTS_WITH", "ENDS_WITH", "NOT_EQUALS", "NOT_CONTAINS", "REGEX"]
          },
          "value": {
            "type": "string",
            "description": "Value to match or exceed using the specified **matchers.operator**.",
            "example": "event-replica-set"
          }
        },
        "description": "Rules to apply when comparing an target instance against this alert configuration."
      },
      "AlertsNotificationRootForGroup": {
        "type": "object",
        "description": "One target that MongoDB Cloud sends notifications when an alert triggers.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/DatadogNotification"
          },
          {
            "$ref": "#/components/schemas/EmailNotification"
          },
          {
            "$ref": "#/components/schemas/GroupNotification"
          },
          {
            "$ref": "#/components/schemas/HipChatNotification"
          },
          {
            "$ref": "#/components/schemas/MicrosoftTeamsNotification"
          },
          {
            "$ref": "#/components/schemas/OpsGenieNotification"
          },
          {
            "$ref": "#/components/schemas/OrgNotification"
          },
          {
            "$ref": "#/components/schemas/PagerDutyNotification"
          },
          {
            "$ref": "#/components/schemas/SlackNotification"
          },
          {
            "$ref": "#/components/schemas/SMSNotification"
          },
          {
            "$ref": "#/components/schemas/TeamNotification"
          },
          {
            "$ref": "#/components/schemas/UserNotification"
          },
          {
            "$ref": "#/components/schemas/VictorOpsNotification"
          },
          {
            "$ref": "#/components/schemas/WebhookNotification"
          }
        ]
      },
      "AlertsThresholdInteger": {
        "title": "Threshold",
        "type": "object",
        "properties": {
          "operator": {
            "$ref": "#/components/schemas/Operator"
          },
          "threshold": {
            "type": "integer",
            "description": "Value of metric that, when exceeded, triggers an alert.",
            "format": "int32"
          },
          "units": {
            "type": "string",
            "description": "Element used to express the quantity. This can be an element of time, storage capacity, and the like.",
            "enum": [
              "bits",
              "Kbits",
              "Mbits",
              "Gbits",
              "bytes",
              "KB",
              "MB",
              "GB",
              "TB",
              "PB",
              "nsec",
              "msec",
              "sec",
              "min",
              "hours",
              "million minutes",
              "days",
              "requests",
              "1000 requests",
              "GB seconds",
              "GB hours",
              "GB days",
              "RPU",
              "thousand RPU",
              "million RPU",
              "WPU",
              "thousand WPU",
              "million WPU",
              "count",
              "thousand",
              "million",
              "billion",
              "",
              "",
              ""
            ]
          }
        },
        "description": "A Limit that triggers an alert when  exceeded. The resource returns this parameter when **eventTypeName** has not been set to `OUTSIDE_METRIC_THRESHOLD`."
      },
      "AppServiceAlertConfigViewForNdsGroup": {
        "title": "App Services Alert Configuration",
        "required": ["eventTypeName", "notifications"],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created the alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled this alert configuration for the specified project.",
            "default": false
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/AppServiceEventTypeViewAlertableNoThreshold"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "matchers": {
            "type": "array",
            "description": "List of rules that determine whether MongoDB Cloud checks an object for the alert configuration. You can filter using the matchers array if the **eventTypeName** specifies an event for a host, replica set, or sharded cluster.",
            "items": {
              "$ref": "#/components/schemas/AppServiceMetricMatcher"
            }
          },
          "notifications": {
            "type": "array",
            "description": "List that contains the targets that MongoDB Cloud sends notifications.",
            "items": {
              "$ref": "#/components/schemas/AlertsNotificationRootForGroup"
            }
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "App Services metric alert configuration allows to select which app service conditions and events trigger alerts and how users are notified."
      },
      "AppServiceEventTypeViewAlertableNoThreshold": {
        "title": "App Services Event Types",
        "type": "string",
        "description": "Event type that triggers an alert.",
        "example": "DEPLOYMENT_FAILURE",
        "enum": [
          "URL_CONFIRMATION",
          "SUCCESSFUL_DEPLOY",
          "DEPLOYMENT_FAILURE",
          "REQUEST_RATE_LIMIT",
          "LOG_FORWARDER_FAILURE",
          "SYNC_FAILURE",
          "TRIGGER_FAILURE",
          "TRIGGER_AUTO_RESUMED",
          "DEPLOYMENT_MODEL_CHANGE_SUCCESS",
          "DEPLOYMENT_MODEL_CHANGE_FAILURE"
        ]
      },
      "AppServiceEventTypeViewAlertableWithThreshold": {
        "title": "App Services Event Types",
        "type": "string",
        "description": "Event type that triggers an alert.",
        "example": "OUTSIDE_REALM_METRIC_THRESHOLD",
        "enum": ["OUTSIDE_REALM_METRIC_THRESHOLD"]
      },
      "AppServiceMetricAlertConfigViewForNdsGroup": {
        "title": "App Services Metric Alert Configuration",
        "required": ["eventTypeName", "notifications"],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created the alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled this alert configuration for the specified project.",
            "default": false
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/AppServiceEventTypeViewAlertableWithThreshold"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "matchers": {
            "type": "array",
            "description": "List of rules that determine whether MongoDB Cloud checks an object for the alert configuration. You can filter using the matchers array if the **eventTypeName** specifies an event for a host, replica set, or sharded cluster.",
            "items": {
              "$ref": "#/components/schemas/AppServiceMetricMatcher"
            }
          },
          "metricThreshold": {
            "$ref": "#/components/schemas/AppServiceMetricThreshold"
          },
          "notifications": {
            "type": "array",
            "description": "List that contains the targets that MongoDB Cloud sends notifications.",
            "items": {
              "$ref": "#/components/schemas/AlertsNotificationRootForGroup"
            }
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "App Services metric alert configuration allows to select which app service metrics trigger alerts and how users are notified."
      },
      "AppServiceMetricMatcher": {
        "title": "Matchers",
        "required": ["fieldName", "operator", "value"],
        "type": "object",
        "properties": {
          "fieldName": {
            "$ref": "#/components/schemas/AppServiceMetricMatcherField"
          },
          "operator": {
            "type": "string",
            "description": "Comparison operator to apply when checking the current metric value against **matcher[n].value**.",
            "enum": ["EQUALS", "CONTAINS", "STARTS_WITH", "ENDS_WITH", "NOT_EQUALS", "NOT_CONTAINS", "REGEX"]
          },
          "value": {
            "type": "string",
            "description": "Value to match or exceed using the specified **matchers.operator**.",
            "example": "event-replica-set"
          }
        },
        "description": "Rules to apply when comparing an app service metric against this alert configuration."
      },
      "AppServiceMetricMatcherField": {
        "title": "App Services Metric Matcher Fields",
        "type": "string",
        "description": "Name of the parameter in the target object that MongoDB Cloud checks. The parameter must match all rules for MongoDB Cloud to check for alert configurations.",
        "example": "APPLICATION_ID",
        "enum": ["APPLICATION_ID"]
      },
      "AppServiceMetricThreshold": {
        "title": "App Services Metric Threshold",
        "required": ["metricName"],
        "type": "object",
        "properties": {
          "metricName": {
            "type": "string",
            "description": "Human-readable label that identifies the metric against which MongoDB Cloud checks the configured **metricThreshold.threshold**."
          },
          "mode": {
            "type": "string",
            "description": "MongoDB Cloud computes the current metric value as an average.",
            "enum": ["AVERAGE"]
          },
          "operator": {
            "$ref": "#/components/schemas/Operator"
          },
          "threshold": {
            "type": "number",
            "description": "Value of metric that, when exceeded, triggers an alert.",
            "format": "double"
          },
          "units": {
            "type": "string",
            "description": "Element used to express the quantity. This can be an element of time, storage capacity, and the like.",
            "enum": [
              "bits",
              "Kbits",
              "Mbits",
              "Gbits",
              "bytes",
              "KB",
              "MB",
              "GB",
              "TB",
              "PB",
              "nsec",
              "msec",
              "sec",
              "min",
              "hours",
              "million minutes",
              "days",
              "requests",
              "1000 requests",
              "GB seconds",
              "GB hours",
              "GB days",
              "RPU",
              "thousand RPU",
              "million RPU",
              "WPU",
              "thousand WPU",
              "million WPU",
              "count",
              "thousand",
              "million",
              "billion",
              "",
              "",
              ""
            ]
          }
        },
        "description": "Threshold for the metric that, when exceeded, triggers an alert. The metric threshold pertains to event types which reflects changes of measurements and metrics in the app services.",
        "discriminator": {
          "propertyName": "metricName",
          "mapping": {
            "REALM_TRIGGERS_FAILED_REQUESTS": "#/components/schemas/RawMetricThresholdView",
            "REALM_GQL_FAILED_REQUESTS": "#/components/schemas/RawMetricThresholdView",
            "REALM_ENDPOINTS_FAILED_REQUESTS": "#/components/schemas/RawMetricThresholdView",
            "REALM_SDKFNS_FAILED_REQUESTS": "#/components/schemas/RawMetricThresholdView",
            "REALM_OVERALL_FAILED_REQUESTS": "#/components/schemas/RawMetricThresholdView",
            "REALM_OVERALL_COMPUTE_MS": "#/components/schemas/TimeMetricThresholdView",
            "REALM_OVERALL_EGRESS_BYTES": "#/components/schemas/DataMetricThresholdView",
            "REALM_TRIGGERS_COMPUTE_MS": "#/components/schemas/TimeMetricThresholdView",
            "REALM_TRIGGERS_EGRESS_BYTES": "#/components/schemas/DataMetricThresholdView",
            "REALM_SYNC_EGRESS_BYTES": "#/components/schemas/DataMetricThresholdView",
            "REALM_SYNC_FAILED_REQUESTS": "#/components/schemas/DataMetricThresholdView",
            "REALM_SYNC_SESSIONS_ENDED": "#/components/schemas/DataMetricThresholdView",
            "REALM_SYNC_CLIENT_BOOTSTRAP_MS": "#/components/schemas/TimeMetricThresholdView",
            "REALM_SYNC_CLIENT_READS_FAILED": "#/components/schemas/DataMetricThresholdView",
            "REALM_SYNC_CLIENT_UPLOADS_FAILED": "#/components/schemas/DataMetricThresholdView",
            "REALM_SYNC_CLIENT_CHANGESETS_INVALID": "#/components/schemas/DataMetricThresholdView",
            "REALM_ENDPOINTS_COMPUTE_MS": "#/components/schemas/TimeMetricThresholdView",
            "REALM_ENDPOINTS_EGRESS_BYTES": "#/components/schemas/DataMetricThresholdView",
            "REALM_SDK_MQL_COMPUTE_MS": "#/components/schemas/TimeMetricThresholdView",
            "REALM_SDK_MQL_EGRESS_BYTES": "#/components/schemas/DataMetricThresholdView",
            "REALM_SDK_FUNCTIONS_COMPUTE_MS": "#/components/schemas/TimeMetricThresholdView",
            "REALM_SDK_FUNCTIONS_EGRESS_BYTES": "#/components/schemas/DataMetricThresholdView",
            "REALM_GQL_COMPUTE_MS": "#/components/schemas/TimeMetricThresholdView",
            "REALM_GQL_EGRESS_BYTES": "#/components/schemas/DataMetricThresholdView",
            "REALM_AUTH_LOGIN_FAIL": "#/components/schemas/RawMetricThresholdView",
            "REALM_SYNC_CURRENT_OPLOG_LAG_MS_SUM": "#/components/schemas/TimeMetricThresholdView",
            "REALM_TRIGGERS_CURRENT_OPLOG_LAG_MS_SUM": "#/components/schemas/TimeMetricThresholdView",
            "REALM_GQL_RESPONSE_MS": "#/components/schemas/TimeMetricThresholdView",
            "REALM_ENDPOINTS_RESPONSE_MS": "#/components/schemas/TimeMetricThresholdView",
            "REALM_SDK_FNS_RESPONSE_MS": "#/components/schemas/TimeMetricThresholdView",
            "REALM_SDK_MQL_RESPONSE_MS": "#/components/schemas/TimeMetricThresholdView",
            "REALM_TRIGGERS_RESPONSE_MS": "#/components/schemas/TimeMetricThresholdView",
            "REALM_SYNC_NUM_UNSYNCABLE_DOCS_PERCENT": "#/components/schemas/RawMetricThresholdView"
          }
        }
      },
      "BillingEventTypeViewAlertableWithThreshold": {
        "title": "Billing Event Type",
        "type": "string",
        "description": "Event type that triggers an alert.",
        "example": "PENDING_INVOICE_OVER_THRESHOLD",
        "enum": ["PENDING_INVOICE_OVER_THRESHOLD", "DAILY_BILL_OVER_THRESHOLD"]
      },
      "BillingThresholdAlertConfigViewForNdsGroup": {
        "title": "Billing Threshold Alert Configuration",
        "required": ["eventTypeName", "notifications"],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created the alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled this alert configuration for the specified project.",
            "default": false
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/BillingEventTypeViewAlertableWithThreshold"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "matchers": {
            "type": "array",
            "description": "Matching conditions for target resources.",
            "items": {
              "$ref": "#/components/schemas/AlertMatcher"
            }
          },
          "notifications": {
            "type": "array",
            "description": "List that contains the targets that MongoDB Cloud sends notifications.",
            "items": {
              "$ref": "#/components/schemas/AlertsNotificationRootForGroup"
            }
          },
          "threshold": {
            "$ref": "#/components/schemas/GreaterThanRawThreshold"
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Billing threshold alert configuration allows to select thresholds for bills and invoices which trigger alerts and how users are notified."
      },
      "ClusterAlertConfigViewForNdsGroup": {
        "title": "Cluster Alert Configuration",
        "required": ["eventTypeName", "notifications"],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created the alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled this alert configuration for the specified project.",
            "default": false
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/ClusterEventTypeViewAlertable"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "matchers": {
            "type": "array",
            "description": "List of rules that determine whether MongoDB Cloud checks an object for the alert configuration. You can filter using the matchers array if the **eventTypeName** specifies an event for a host, replica set, or sharded cluster.",
            "items": {
              "$ref": "#/components/schemas/ClusterMatcher"
            }
          },
          "notifications": {
            "type": "array",
            "description": "List that contains the targets that MongoDB Cloud sends notifications.",
            "items": {
              "$ref": "#/components/schemas/AlertsNotificationRootForGroup"
            }
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Cluster alert configuration allows to select which conditions of mongod cluster which trigger alerts and how users are notified."
      },
      "ClusterMatcher": {
        "title": "Matchers",
        "required": ["fieldName", "operator", "value"],
        "type": "object",
        "properties": {
          "fieldName": {
            "$ref": "#/components/schemas/ClusterMatcherField"
          },
          "operator": {
            "type": "string",
            "description": "Comparison operator to apply when checking the current metric value against **matcher[n].value**.",
            "enum": ["EQUALS", "CONTAINS", "STARTS_WITH", "ENDS_WITH", "NOT_EQUALS", "NOT_CONTAINS", "REGEX"]
          },
          "value": {
            "type": "string",
            "description": "Value to match or exceed using the specified **matchers.operator**.",
            "example": "event-replica-set"
          }
        },
        "description": "Rules to apply when comparing an cluster against this alert configuration."
      },
      "ClusterMatcherField": {
        "title": "Cluster Matcher Fields",
        "type": "string",
        "description": "Name of the parameter in the target object that MongoDB Cloud checks. The parameter must match all rules for MongoDB Cloud to check for alert configurations.",
        "example": "CLUSTER_NAME",
        "enum": ["CLUSTER_NAME"]
      },
      "CpsBackupEventTypeViewForNdsGroupAlertableWithThreshold": {
        "title": "Cps Backup Event Type",
        "type": "string",
        "description": "Event type that triggers an alert.",
        "example": "CPS_SNAPSHOT_BEHIND",
        "enum": ["CPS_SNAPSHOT_BEHIND", "CPS_PREV_SNAPSHOT_OLD", "CPS_OPLOG_BEHIND"]
      },
      "CpsBackupThresholdAlertConfigViewForNdsGroup": {
        "title": "Cps Backup Threshold Alert Configuration",
        "required": ["eventTypeName", "notifications"],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created the alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled this alert configuration for the specified project.",
            "default": false
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/CpsBackupEventTypeViewForNdsGroupAlertableWithThreshold"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "matchers": {
            "type": "array",
            "description": "Matching conditions for target resources.",
            "items": {
              "$ref": "#/components/schemas/AlertMatcher"
            }
          },
          "notifications": {
            "type": "array",
            "description": "List that contains the targets that MongoDB Cloud sends notifications.",
            "items": {
              "$ref": "#/components/schemas/AlertsNotificationRootForGroup"
            }
          },
          "threshold": {
            "$ref": "#/components/schemas/GreaterThanTimeThreshold"
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Cps Backup threshold alert configuration allows to select thresholds for conditions of CPS backup or oplogs anomalies which trigger alerts and how users are notified."
      },
      "DataMetricThresholdView": {
        "required": ["metricName"],
        "type": "object",
        "properties": {
          "metricName": {
            "type": "string",
            "description": "Human-readable label that identifies the metric against which MongoDB Cloud checks the configured **metricThreshold.threshold**."
          },
          "mode": {
            "type": "string",
            "description": "MongoDB Cloud computes the current metric value as an average.",
            "enum": ["AVERAGE"]
          },
          "operator": {
            "$ref": "#/components/schemas/Operator"
          },
          "threshold": {
            "type": "number",
            "description": "Value of metric that, when exceeded, triggers an alert.",
            "format": "double"
          },
          "units": {
            "$ref": "#/components/schemas/DataMetricUnits"
          }
        }
      },
      "DatadogNotification": {
        "title": "Datadog Notification",
        "required": ["typeName"],
        "type": "object",
        "properties": {
          "datadogApiKey": {
            "type": "string",
            "description": "Datadog API Key that MongoDB Cloud needs to send alert notifications to Datadog. You can find this API key in the Datadog dashboard. The resource requires this parameter when `\"notifications.[n].typeName\" : \"DATADOG\"`.\n\n**NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:\n\n* View or edit the alert through the Atlas UI.\n\n* Query the alert for the notification through the Atlas Administration API.",
            "example": "****************************a23c"
          },
          "datadogRegion": {
            "type": "string",
            "description": "Datadog region that indicates which API Uniform Resource Locator (URL) to use. The resource requires this parameter when `\"notifications.[n].typeName\" : \"DATADOG\"`.\n\nTo learn more about Datadog's regions, see <a href=\"https://docs.datadoghq.com/getting_started/site/\" target=\"_blank\" rel=\"noopener noreferrer\">Datadog Sites</a>.",
            "default": "US",
            "enum": ["US", "EU", "US3", "US5", "AP1"]
          },
          "delayMin": {
            "type": "integer",
            "description": "Number of minutes that MongoDB Cloud waits after detecting an alert condition before it sends out the first notification.",
            "format": "int32"
          },
          "integrationId": {
            "type": "string",
            "description": "The id of the associated integration, the credentials of which to use for requests.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "intervalMin": {
            "minimum": 5,
            "type": "integer",
            "description": "Number of minutes to wait between successive notifications. MongoDB Cloud sends notifications until someone acknowledges the unacknowledged alert.\n\nPagerDuty, VictorOps, and OpsGenie notifications don't return this element. Configure and manage the notification interval within each of those services.",
            "format": "int32"
          },
          "notifierId": {
            "type": "string",
            "description": "The notifierId is a system-generated unique identifier assigned to each notification method. This is needed when updating third-party notifications without requiring explicit authentication credentials.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "typeName": {
            "type": "string",
            "description": "Human-readable label that displays the alert notification type.",
            "enum": ["DATADOG"]
          }
        },
        "description": "Datadog notification configuration for MongoDB Cloud to send information when an event triggers an alert condition."
      },
      "DefaultAlertConfigViewForNdsGroup": {
        "title": "Any Other Alert Configurations",
        "required": ["eventTypeName", "notifications"],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created the alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled this alert configuration for the specified project.",
            "default": false
          },
          "eventTypeName": {
            "type": "object",
            "description": "Incident that triggered this alert.",
            "oneOf": [
              {
                "title": "Billing Event Types",
                "type": "string",
                "enum": ["CREDIT_CARD_ABOUT_TO_EXPIRE"]
              },
              {
                "title": "Cps Backup Event Types",
                "type": "string",
                "enum": [
                  "CPS_SNAPSHOT_STARTED",
                  "CPS_SNAPSHOT_SUCCESSFUL",
                  "CPS_SNAPSHOT_FAILED",
                  "CPS_CONCURRENT_SNAPSHOT_FAILED_WILL_RETRY",
                  "CPS_SNAPSHOT_FALLBACK_SUCCESSFUL",
                  "CPS_SNAPSHOT_FALLBACK_FAILED",
                  "CPS_COPY_SNAPSHOT_STARTED",
                  "CPS_COPY_SNAPSHOT_FAILED",
                  "CPS_COPY_SNAPSHOT_SUCCESSFUL",
                  "CPS_RESTORE_SUCCESSFUL",
                  "CPS_EXPORT_SUCCESSFUL",
                  "CPS_RESTORE_FAILED",
                  "CPS_EXPORT_FAILED",
                  "CPS_AUTO_EXPORT_FAILED",
                  "CPS_SNAPSHOT_DOWNLOAD_REQUEST_FAILED",
                  "CPS_OPLOG_CAUGHT_UP"
                ]
              },
              {
                "title": "FTS Index Audit Types",
                "type": "string",
                "enum": [
                  "FTS_INDEX_DELETION_FAILED",
                  "FTS_INDEX_BUILD_COMPLETE",
                  "FTS_INDEX_BUILD_FAILED",
                  "FTS_INDEXES_RESTORE_FAILED"
                ]
              },
              {
                "title": "Group Event Types",
                "type": "string",
                "enum": ["USERS_WITHOUT_MULTI_FACTOR_AUTH", "ENCRYPTION_AT_REST_KMS_NETWORK_ACCESS_DENIED"]
              },
              {
                "title": "NDS Audit Types",
                "type": "string",
                "enum": [
                  "CLUSTER_INSTANCE_STOP_START",
                  "CLUSTER_INSTANCE_RESYNC_REQUESTED",
                  "CLUSTER_INSTANCE_UPDATE_REQUESTED",
                  "SAMPLE_DATASET_LOAD_REQUESTED",
                  "TENANT_UPGRADE_TO_SERVERLESS_SUCCESSFUL",
                  "TENANT_UPGRADE_TO_SERVERLESS_FAILED",
                  "NETWORK_PERMISSION_ENTRY_ADDED",
                  "NETWORK_PERMISSION_ENTRY_REMOVED",
                  "NETWORK_PERMISSION_ENTRY_UPDATED"
                ]
              },
              {
                "title": "NDS Maintenance Window Audit Types",
                "type": "string",
                "enum": [
                  "MAINTENANCE_IN_ADVANCED",
                  "MAINTENANCE_AUTO_DEFERRED",
                  "MAINTENANCE_STARTED",
                  "MAINTENANCE_NO_LONGER_NEEDED"
                ]
              },
              {
                "title": "Online Archive Event Types",
                "type": "string",
                "enum": [
                  "ONLINE_ARCHIVE_INSUFFICIENT_INDEXES_CHECK",
                  "ONLINE_ARCHIVE_MAX_CONSECUTIVE_OFFLOAD_WINDOWS_CHECK"
                ]
              },
              {
                "title": "User Event Types",
                "type": "string",
                "enum": ["JOINED_GROUP", "REMOVED_FROM_GROUP", "USER_ROLES_CHANGED_AUDIT"]
              },
              {
                "title": "Resource Event Types",
                "type": "string",
                "enum": ["TAGS_MODIFIED", "GROUP_TAGS_MODIFIED"]
              },
              {
                "title": "Stream Processor Event Types",
                "type": "string",
                "enum": ["STREAM_PROCESSOR_STATE_IS_FAILED"]
              },
              {
                "title": "NDS Auto Scaling Audit Types",
                "type": "string",
                "enum": [
                  "COMPUTE_AUTO_SCALE_INITIATED_BASE",
                  "COMPUTE_AUTO_SCALE_INITIATED_ANALYTICS",
                  "COMPUTE_AUTO_SCALE_SCALE_DOWN_FAIL_BASE",
                  "COMPUTE_AUTO_SCALE_SCALE_DOWN_FAIL_ANALYTICS",
                  "COMPUTE_AUTO_SCALE_MAX_INSTANCE_SIZE_FAIL_BASE",
                  "COMPUTE_AUTO_SCALE_MAX_INSTANCE_SIZE_FAIL_ANALYTICS",
                  "COMPUTE_AUTO_SCALE_OPLOG_FAIL_BASE",
                  "COMPUTE_AUTO_SCALE_OPLOG_FAIL_ANALYTICS",
                  "DISK_AUTO_SCALE_INITIATED",
                  "DISK_AUTO_SCALE_MAX_DISK_SIZE_FAIL",
                  "DISK_AUTO_SCALE_OPLOG_FAIL"
                ]
              }
            ]
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "matchers": {
            "type": "array",
            "description": "Matching conditions for target resources.",
            "items": {
              "$ref": "#/components/schemas/AlertMatcher"
            }
          },
          "notifications": {
            "type": "array",
            "description": "List that contains the targets that MongoDB Cloud sends notifications.",
            "items": {
              "$ref": "#/components/schemas/AlertsNotificationRootForGroup"
            }
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Other alerts which don't have extra details beside of basic one."
      },
      "EmailNotification": {
        "title": "Email Notification",
        "required": ["typeName"],
        "type": "object",
        "properties": {
          "delayMin": {
            "type": "integer",
            "description": "Number of minutes that MongoDB Cloud waits after detecting an alert condition before it sends out the first notification.",
            "format": "int32"
          },
          "emailAddress": {
            "type": "string",
            "description": "Email address to which MongoDB Cloud sends alert notifications. The resource requires this parameter when `\"notifications.[n].typeName\" : \"EMAIL\"`. You don't need to set this value to send emails to individual or groups of MongoDB Cloud users including:\n\n- specific MongoDB Cloud users (`\"notifications.[n].typeName\" : \"USER\"`)\n- MongoDB Cloud users with specific project roles (`\"notifications.[n].typeName\" : \"GROUP\"`)\n- MongoDB Cloud users with specific organization roles (`\"notifications.[n].typeName\" : \"ORG\"`)\n- MongoDB Cloud teams (`\"notifications.[n].typeName\" : \"TEAM\"`)\n\nTo send emails to one MongoDB Cloud user or grouping of users, set the `notifications.[n].emailEnabled` parameter.",
            "format": "email"
          },
          "intervalMin": {
            "minimum": 5,
            "type": "integer",
            "description": "Number of minutes to wait between successive notifications. MongoDB Cloud sends notifications until someone acknowledges the unacknowledged alert.\n\nPagerDuty, VictorOps, and OpsGenie notifications don't return this element. Configure and manage the notification interval within each of those services.",
            "format": "int32"
          },
          "notifierId": {
            "type": "string",
            "description": "The notifierId is a system-generated unique identifier assigned to each notification method. This is needed when updating third-party notifications without requiring explicit authentication credentials.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "typeName": {
            "type": "string",
            "description": "Human-readable label that displays the alert notification type.",
            "enum": ["EMAIL"]
          }
        },
        "description": "Email notification configuration for MongoDB Cloud to send information when an event triggers an alert condition."
      },
      "EncryptionKeyAlertConfigViewForNdsGroup": {
        "title": "Encryption Key Alert Configuration",
        "required": ["eventTypeName", "notifications"],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created the alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled this alert configuration for the specified project.",
            "default": false
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/EncryptionKeyEventTypeViewAlertable"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "matchers": {
            "type": "array",
            "description": "Matching conditions for target resources.",
            "items": {
              "$ref": "#/components/schemas/AlertMatcher"
            }
          },
          "notifications": {
            "type": "array",
            "description": "List that contains the targets that MongoDB Cloud sends notifications.",
            "items": {
              "$ref": "#/components/schemas/AlertsNotificationRootForGroup"
            }
          },
          "threshold": {
            "$ref": "#/components/schemas/GreaterThanDaysThresholdView"
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Encryption key alert configuration allows to select thresholds  which trigger alerts and how users are notified."
      },
      "EncryptionKeyEventTypeViewAlertable": {
        "title": "Encryption Event Types",
        "type": "string",
        "description": "Event type that triggers an alert.",
        "example": "AWS_ENCRYPTION_KEY_NEEDS_ROTATION",
        "enum": [
          "AWS_ENCRYPTION_KEY_NEEDS_ROTATION",
          "AZURE_ENCRYPTION_KEY_NEEDS_ROTATION",
          "GCP_ENCRYPTION_KEY_NEEDS_ROTATION",
          "AWS_ENCRYPTION_KEY_INVALID",
          "AZURE_ENCRYPTION_KEY_INVALID",
          "GCP_ENCRYPTION_KEY_INVALID"
        ]
      },
      "GreaterThanDaysThresholdView": {
        "type": "object",
        "properties": {
          "operator": {
            "type": "string",
            "description": "Comparison operator to apply when checking the current metric value.",
            "enum": ["GREATER_THAN"]
          },
          "threshold": {
            "type": "integer",
            "description": "Value of metric that, when exceeded, triggers an alert.",
            "format": "int32"
          },
          "units": {
            "type": "string",
            "description": "Element used to express the quantity. This can be an element of time, storage capacity, and the like.",
            "enum": ["DAYS"]
          }
        },
        "description": "Threshold value that triggers an alert."
      },
      "GreaterThanRawThreshold": {
        "title": "Greater Than Raw Threshold",
        "type": "object",
        "properties": {
          "operator": {
            "type": "string",
            "description": "Comparison operator to apply when checking the current metric value.",
            "enum": ["GREATER_THAN"]
          },
          "threshold": {
            "type": "integer",
            "description": "Value of metric that, when exceeded, triggers an alert.",
            "format": "int32"
          },
          "units": {
            "$ref": "#/components/schemas/RawMetricUnits"
          }
        },
        "description": "A Limit that triggers an alert when greater than a number."
      },
      "GreaterThanRawThresholdAlertConfigViewForNdsGroup": {
        "required": ["eventTypeName", "notifications"],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created the alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled this alert configuration for the specified project.",
            "default": false
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/ReplicaSetEventTypeViewForNdsGroupAlertableWithThreshold"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "matchers": {
            "type": "array",
            "description": "List of rules that determine whether MongoDB Cloud checks an object for the alert configuration. You can filter using the matchers array if the **eventTypeName** specifies an event for a host, replica set, or sharded cluster.",
            "items": {
              "$ref": "#/components/schemas/ReplicaSetMatcher"
            }
          },
          "notifications": {
            "type": "array",
            "description": "List that contains the targets that MongoDB Cloud sends notifications.",
            "items": {
              "$ref": "#/components/schemas/AlertsNotificationRootForGroup"
            }
          },
          "threshold": {
            "$ref": "#/components/schemas/GreaterThanRawThreshold"
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "GreaterThanTimeThreshold": {
        "title": "Greater Than Time Threshold",
        "type": "object",
        "properties": {
          "operator": {
            "type": "string",
            "description": "Comparison operator to apply when checking the current metric value.",
            "enum": ["GREATER_THAN"]
          },
          "threshold": {
            "type": "integer",
            "description": "Value of metric that, when exceeded, triggers an alert.",
            "format": "int32"
          },
          "units": {
            "$ref": "#/components/schemas/TimeMetricUnits"
          }
        },
        "description": "A Limit that triggers an alert when greater than a time period."
      },
      "GroupAlertsConfig": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/DefaultAlertConfigViewForNdsGroup"
          },
          {
            "$ref": "#/components/schemas/AppServiceAlertConfigViewForNdsGroup"
          },
          {
            "$ref": "#/components/schemas/AppServiceMetricAlertConfigViewForNdsGroup"
          },
          {
            "$ref": "#/components/schemas/BillingThresholdAlertConfigViewForNdsGroup"
          },
          {
            "$ref": "#/components/schemas/ClusterAlertConfigViewForNdsGroup"
          },
          {
            "$ref": "#/components/schemas/CpsBackupThresholdAlertConfigViewForNdsGroup"
          },
          {
            "$ref": "#/components/schemas/EncryptionKeyAlertConfigViewForNdsGroup"
          },
          {
            "$ref": "#/components/schemas/HostAlertConfigViewForNdsGroup"
          },
          {
            "$ref": "#/components/schemas/HostMetricAlertConfigViewForNdsGroup"
          },
          {
            "$ref": "#/components/schemas/NDSX509UserAuthenticationAlertConfigViewForNdsGroup"
          },
          {
            "$ref": "#/components/schemas/ReplicaSetAlertConfigViewForNdsGroup"
          },
          {
            "$ref": "#/components/schemas/ReplicaSetThresholdAlertConfigViewForNdsGroup"
          },
          {
            "$ref": "#/components/schemas/ServerlessMetricAlertConfigViewForNdsGroup"
          },
          {
            "$ref": "#/components/schemas/StreamProcessorAlertConfigViewForNdsGroup"
          }
        ]
      },
      "GroupNotification": {
        "title": "Group Notification",
        "required": ["typeName"],
        "type": "object",
        "properties": {
          "delayMin": {
            "type": "integer",
            "description": "Number of minutes that MongoDB Cloud waits after detecting an alert condition before it sends out the first notification.",
            "format": "int32"
          },
          "emailEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud should send email notifications. The resource requires this parameter when one of the following values have been set:\n\n- `\"notifications.[n].typeName\" : \"ORG\"`\n- `\"notifications.[n].typeName\" : \"GROUP\"`\n- `\"notifications.[n].typeName\" : \"USER\"`"
          },
          "intervalMin": {
            "minimum": 5,
            "type": "integer",
            "description": "Number of minutes to wait between successive notifications. MongoDB Cloud sends notifications until someone acknowledges the unacknowledged alert.\n\nPagerDuty, VictorOps, and OpsGenie notifications don't return this element. Configure and manage the notification interval within each of those services.",
            "format": "int32"
          },
          "notifierId": {
            "type": "string",
            "description": "The notifierId is a system-generated unique identifier assigned to each notification method. This is needed when updating third-party notifications without requiring explicit authentication credentials.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "roles": {
            "type": "array",
            "description": "List that contains the one or more [organization](https://dochub.mongodb.org/core/atlas-org-roles) or [project roles](https://dochub.mongodb.org/core/atlas-proj-roles) that receive the configured alert. The resource requires this parameter when `\"notifications.[n].typeName\" : \"GROUP\"` or `\"notifications.[n].typeName\" : \"ORG\"`. If you include this parameter, MongoDB Cloud sends alerts only to users assigned the roles you specify in the array. If you omit this parameter, MongoDB Cloud sends alerts to users assigned any role.",
            "items": {
              "type": "string",
              "description": "One organization or project role that receive the configured alert.",
              "enum": [
                "GROUP_CLUSTER_MANAGER",
                "GROUP_DATA_ACCESS_ADMIN",
                "GROUP_DATA_ACCESS_READ_ONLY",
                "GROUP_DATA_ACCESS_READ_WRITE",
                "GROUP_OWNER",
                "GROUP_READ_WRITE",
                "ORG_OWNER",
                "ORG_MEMBER",
                "ORG_GROUP_CREATOR",
                "ORG_BILLING_ADMIN",
                "ORG_READ_ONLY"
              ]
            }
          },
          "smsEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud should send text message notifications. The resource requires this parameter when one of the following values have been set:\n\n- `\"notifications.[n].typeName\" : \"ORG\"`\n- `\"notifications.[n].typeName\" : \"GROUP\"`\n- `\"notifications.[n].typeName\" : \"USER\"`"
          },
          "typeName": {
            "type": "string",
            "description": "Human-readable label that displays the alert notification type.",
            "enum": ["GROUP"]
          }
        },
        "description": "Group notification configuration for MongoDB Cloud to send information when an event triggers an alert condition."
      },
      "HipChatNotification": {
        "title": "HipChat Notification",
        "required": ["typeName"],
        "type": "object",
        "properties": {
          "delayMin": {
            "type": "integer",
            "description": "Number of minutes that MongoDB Cloud waits after detecting an alert condition before it sends out the first notification.",
            "format": "int32"
          },
          "integrationId": {
            "type": "string",
            "description": "The id of the associated integration, the credentials of which to use for requests.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "intervalMin": {
            "minimum": 5,
            "type": "integer",
            "description": "Number of minutes to wait between successive notifications. MongoDB Cloud sends notifications until someone acknowledges the unacknowledged alert.\n\nPagerDuty, VictorOps, and OpsGenie notifications don't return this element. Configure and manage the notification interval within each of those services.",
            "format": "int32"
          },
          "notificationToken": {
            "type": "string",
            "description": "HipChat API token that MongoDB Cloud needs to send alert notifications to HipChat. The resource requires this parameter when `\"notifications.[n].typeName\" : \"HIP_CHAT\"`\". If the token later becomes invalid, MongoDB Cloud sends an email to the project owners. If the token remains invalid, MongoDB Cloud removes it.\n\n**NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:\n\n* View or edit the alert through the Atlas UI.\n\n* Query the alert for the notification through the Atlas Administration API.",
            "example": "************************************1234"
          },
          "notifierId": {
            "type": "string",
            "description": "The notifierId is a system-generated unique identifier assigned to each notification method. This is needed when updating third-party notifications without requiring explicit authentication credentials.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "roomName": {
            "type": "string",
            "description": "HipChat API room name to which MongoDB Cloud sends alert notifications. The resource requires this parameter when `\"notifications.[n].typeName\" : \"HIP_CHAT\"`\".",
            "example": "test room"
          },
          "typeName": {
            "type": "string",
            "description": "Human-readable label that displays the alert notification type.",
            "enum": ["HIP_CHAT"]
          }
        },
        "description": "HipChat notification configuration for MongoDB Cloud to send information when an event triggers an alert condition."
      },
      "HostAlertConfigViewForNdsGroup": {
        "title": "Host Alert Configuration",
        "required": ["eventTypeName", "notifications"],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created the alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled this alert configuration for the specified project.",
            "default": false
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/HostEventTypeViewForNdsGroupAlertable"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "matchers": {
            "type": "array",
            "description": "List of rules that determine whether MongoDB Cloud checks an object for the alert configuration. You can filter using the matchers array if the **eventTypeName** specifies an event for a host, replica set, or sharded cluster.",
            "items": {
              "$ref": "#/components/schemas/HostMatcher"
            }
          },
          "notifications": {
            "type": "array",
            "description": "List that contains the targets that MongoDB Cloud sends notifications.",
            "items": {
              "$ref": "#/components/schemas/AlertsNotificationRootForGroup"
            }
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Host alert configuration allows to select which mongod host events trigger alerts and how users are notified."
      },
      "HostMatcher": {
        "title": "Matchers",
        "required": ["fieldName", "operator"],
        "type": "object",
        "properties": {
          "fieldName": {
            "$ref": "#/components/schemas/HostMatcherField"
          },
          "operator": {
            "type": "string",
            "description": "Comparison operator to apply when checking the current metric value against **matcher[n].value**.",
            "enum": ["EQUALS", "CONTAINS", "STARTS_WITH", "ENDS_WITH", "NOT_EQUALS", "NOT_CONTAINS", "REGEX"]
          },
          "value": {
            "$ref": "#/components/schemas/MatcherHostType"
          }
        },
        "description": "Rules to apply when comparing an host against this alert configuration."
      },
      "HostMatcherField": {
        "title": "Host Matcher Fields",
        "type": "string",
        "description": "Name of the parameter in the target object that MongoDB Cloud checks. The parameter must match all rules for MongoDB Cloud to check for alert configurations.",
        "example": "HOSTNAME",
        "enum": ["TYPE_NAME", "HOSTNAME", "PORT", "HOSTNAME_AND_PORT", "REPLICA_SET_NAME"]
      },
      "HostMetricAlertConfigViewForNdsGroup": {
        "title": "Host Metric Alert Configuration",
        "required": ["eventTypeName", "notifications"],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created the alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled this alert configuration for the specified project.",
            "default": false
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/HostMetricEventTypeViewAlertable"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "matchers": {
            "type": "array",
            "description": "List of rules that determine whether MongoDB Cloud checks an object for the alert configuration. You can filter using the matchers array if the **eventTypeName** specifies an event for a host, replica set, or sharded cluster.",
            "items": {
              "$ref": "#/components/schemas/HostMatcher"
            }
          },
          "metricThreshold": {
            "$ref": "#/components/schemas/HostMetricThreshold"
          },
          "notifications": {
            "type": "array",
            "description": "List that contains the targets that MongoDB Cloud sends notifications.",
            "items": {
              "$ref": "#/components/schemas/AlertsNotificationRootForGroup"
            }
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Host metric alert configuration allows to select which mongod host metrics trigger alerts and how users are notified."
      },
      "HostMetricThreshold": {
        "title": "Host Metric Threshold",
        "required": ["metricName"],
        "type": "object",
        "properties": {
          "metricName": {
            "type": "string",
            "description": "Human-readable label that identifies the metric against which MongoDB Cloud checks the configured **metricThreshold.threshold**."
          },
          "mode": {
            "type": "string",
            "description": "MongoDB Cloud computes the current metric value as an average.",
            "enum": ["AVERAGE"]
          },
          "operator": {
            "$ref": "#/components/schemas/Operator"
          },
          "threshold": {
            "type": "number",
            "description": "Value of metric that, when exceeded, triggers an alert.",
            "format": "double"
          },
          "units": {
            "type": "string",
            "description": "Element used to express the quantity. This can be an element of time, storage capacity, and the like.",
            "enum": [
              "bits",
              "Kbits",
              "Mbits",
              "Gbits",
              "bytes",
              "KB",
              "MB",
              "GB",
              "TB",
              "PB",
              "nsec",
              "msec",
              "sec",
              "min",
              "hours",
              "million minutes",
              "days",
              "requests",
              "1000 requests",
              "GB seconds",
              "GB hours",
              "GB days",
              "RPU",
              "thousand RPU",
              "million RPU",
              "WPU",
              "thousand WPU",
              "million WPU",
              "count",
              "thousand",
              "million",
              "billion",
              "",
              "",
              ""
            ]
          }
        },
        "description": "Threshold for the metric that, when exceeded, triggers an alert. The metric threshold pertains to event types which reflects changes of measurements and metrics about mongod host.",
        "discriminator": {
          "propertyName": "metricName",
          "mapping": {
            "ASSERT_REGULAR": "#/components/schemas/RawMetricThresholdView",
            "ASSERT_WARNING": "#/components/schemas/RawMetricThresholdView",
            "ASSERT_MSG": "#/components/schemas/RawMetricThresholdView",
            "ASSERT_USER": "#/components/schemas/RawMetricThresholdView",
            "OPCOUNTER_CMD": "#/components/schemas/RawMetricThresholdView",
            "OPCOUNTER_QUERY": "#/components/schemas/RawMetricThresholdView",
            "OPCOUNTER_UPDATE": "#/components/schemas/RawMetricThresholdView",
            "OPCOUNTER_DELETE": "#/components/schemas/RawMetricThresholdView",
            "OPCOUNTER_INSERT": "#/components/schemas/RawMetricThresholdView",
            "OPCOUNTER_GETMORE": "#/components/schemas/RawMetricThresholdView",
            "OPCOUNTER_REPL_CMD": "#/components/schemas/RawMetricThresholdView",
            "OPCOUNTER_REPL_UPDATE": "#/components/schemas/RawMetricThresholdView",
            "OPCOUNTER_REPL_DELETE": "#/components/schemas/RawMetricThresholdView",
            "OPCOUNTER_REPL_INSERT": "#/components/schemas/RawMetricThresholdView",
            "FTS_MEMORY_RESIDENT": "#/components/schemas/DataMetricThresholdView",
            "FTS_MEMORY_VIRTUAL": "#/components/schemas/DataMetricThresholdView",
            "FTS_MEMORY_MAPPED": "#/components/schemas/DataMetricThresholdView",
            "FTS_PROCESS_CPU_USER": "#/components/schemas/RawMetricThresholdView",
            "FTS_PROCESS_CPU_KERNEL": "#/components/schemas/RawMetricThresholdView",
            "NORMALIZED_FTS_PROCESS_CPU_USER": "#/components/schemas/RawMetricThresholdView",
            "NORMALIZED_FTS_PROCESS_CPU_KERNEL": "#/components/schemas/RawMetricThresholdView",
            "SYSTEM_MEMORY_PERCENT_USED": "#/components/schemas/RawMetricThresholdView",
            "MEMORY_RESIDENT": "#/components/schemas/DataMetricThresholdView",
            "MEMORY_VIRTUAL": "#/components/schemas/DataMetricThresholdView",
            "MEMORY_MAPPED": "#/components/schemas/DataMetricThresholdView",
            "COMPUTED_MEMORY": "#/components/schemas/DataMetricThresholdView",
            "INDEX_COUNTERS_BTREE_ACCESSES": "#/components/schemas/RawMetricThresholdView",
            "INDEX_COUNTERS_BTREE_HITS": "#/components/schemas/RawMetricThresholdView",
            "INDEX_COUNTERS_BTREE_MISSES": "#/components/schemas/RawMetricThresholdView",
            "INDEX_COUNTERS_BTREE_MISS_RATIO": "#/components/schemas/RawMetricThresholdView",
            "GLOBAL_LOCK_PERCENTAGE": "#/components/schemas/RawMetricThresholdView",
            "BACKGROUND_FLUSH_AVG": "#/components/schemas/TimeMetricThresholdView",
            "CONNECTIONS": "#/components/schemas/RawMetricThresholdView",
            "CONNECTIONS_MAX": "#/components/schemas/RawMetricThresholdView",
            "CONNECTIONS_PERCENT": "#/components/schemas/RawMetricThresholdView",
            "GLOBAL_ACCESSES_NOT_IN_MEMORY": "#/components/schemas/RawMetricThresholdView",
            "GLOBAL_PAGE_FAULT_EXCEPTIONS_THROWN": "#/components/schemas/RawMetricThresholdView",
            "GLOBAL_LOCK_CURRENT_QUEUE_TOTAL": "#/components/schemas/RawMetricThresholdView",
            "GLOBAL_LOCK_CURRENT_QUEUE_READERS": "#/components/schemas/RawMetricThresholdView",
            "GLOBAL_LOCK_CURRENT_QUEUE_WRITERS": "#/components/schemas/RawMetricThresholdView",
            "CURSORS_TOTAL_OPEN": "#/components/schemas/RawMetricThresholdView",
            "CURSORS_TOTAL_TIMED_OUT": "#/components/schemas/RawMetricThresholdView",
            "CURSORS_TOTAL_CLIENT_CURSORS_SIZE": "#/components/schemas/RawMetricThresholdView",
            "NETWORK_BYTES_IN": "#/components/schemas/DataMetricThresholdView",
            "NETWORK_BYTES_OUT": "#/components/schemas/DataMetricThresholdView",
            "NETWORK_NUM_REQUESTS": "#/components/schemas/RawMetricThresholdView",
            "OPLOG_MASTER_TIME": "#/components/schemas/TimeMetricThresholdView",
            "OPLOG_MASTER_TIME_ESTIMATED_TTL": "#/components/schemas/TimeMetricThresholdView",
            "OPLOG_SLAVE_LAG_MASTER_TIME": "#/components/schemas/TimeMetricThresholdView",
            "OPLOG_MASTER_LAG_TIME_DIFF": "#/components/schemas/TimeMetricThresholdView",
            "OPLOG_RATE_GB_PER_HOUR": "#/components/schemas/DataMetricThresholdView",
            "EXTRA_INFO_PAGE_FAULTS": "#/components/schemas/RawMetricThresholdView",
            "DB_STORAGE_TOTAL": "#/components/schemas/DataMetricThresholdView",
            "DB_DATA_SIZE_TOTAL": "#/components/schemas/DataMetricThresholdView",
            "DB_DATA_SIZE_TOTAL_WO_SYSTEM": "#/components/schemas/DataMetricThresholdView",
            "DB_INDEX_SIZE_TOTAL": "#/components/schemas/DataMetricThresholdView",
            "JOURNALING_COMMITS_IN_WRITE_LOCK": "#/components/schemas/RawMetricThresholdView",
            "JOURNALING_MB": "#/components/schemas/DataMetricThresholdView",
            "JOURNALING_WRITE_DATA_FILES_MB": "#/components/schemas/DataMetricThresholdView",
            "TICKETS_AVAILABLE_READS": "#/components/schemas/RawMetricThresholdView",
            "TICKETS_AVAILABLE_WRITES": "#/components/schemas/RawMetricThresholdView",
            "CACHE_USAGE_DIRTY": "#/components/schemas/DataMetricThresholdView",
            "CACHE_USAGE_USED": "#/components/schemas/DataMetricThresholdView",
            "CACHE_BYTES_READ_INTO": "#/components/schemas/DataMetricThresholdView",
            "CACHE_BYTES_WRITTEN_FROM": "#/components/schemas/DataMetricThresholdView",
            "NORMALIZED_SYSTEM_CPU_USER": "#/components/schemas/RawMetricThresholdView",
            "NORMALIZED_SYSTEM_CPU_STEAL": "#/components/schemas/RawMetricThresholdView",
            "DISK_PARTITION_SPACE_USED_DATA": "#/components/schemas/RawMetricThresholdView",
            "DISK_PARTITION_SPACE_USED_INDEX": "#/components/schemas/RawMetricThresholdView",
            "DISK_PARTITION_SPACE_USED_JOURNAL": "#/components/schemas/RawMetricThresholdView",
            "DISK_PARTITION_READ_IOPS_DATA": "#/components/schemas/RawMetricThresholdView",
            "DISK_PARTITION_READ_IOPS_INDEX": "#/components/schemas/RawMetricThresholdView",
            "DISK_PARTITION_READ_IOPS_JOURNAL": "#/components/schemas/RawMetricThresholdView",
            "DISK_PARTITION_WRITE_IOPS_DATA": "#/components/schemas/RawMetricThresholdView",
            "DISK_PARTITION_WRITE_IOPS_INDEX": "#/components/schemas/RawMetricThresholdView",
            "DISK_PARTITION_WRITE_IOPS_JOURNAL": "#/components/schemas/RawMetricThresholdView",
            "DISK_PARTITION_READ_LATENCY_DATA": "#/components/schemas/TimeMetricThresholdView",
            "DISK_PARTITION_READ_LATENCY_INDEX": "#/components/schemas/TimeMetricThresholdView",
            "DISK_PARTITION_READ_LATENCY_JOURNAL": "#/components/schemas/TimeMetricThresholdView",
            "DISK_PARTITION_WRITE_LATENCY_DATA": "#/components/schemas/TimeMetricThresholdView",
            "DISK_PARTITION_WRITE_LATENCY_INDEX": "#/components/schemas/TimeMetricThresholdView",
            "DISK_PARTITION_WRITE_LATENCY_JOURNAL": "#/components/schemas/TimeMetricThresholdView",
            "DISK_PARTITION_QUEUE_DEPTH_DATA": "#/components/schemas/RawMetricThresholdView",
            "DISK_PARTITION_QUEUE_DEPTH_INDEX": "#/components/schemas/RawMetricThresholdView",
            "DISK_PARTITION_QUEUE_DEPTH_JOURNAL": "#/components/schemas/RawMetricThresholdView",
            "FTS_DISK_UTILIZATION": "#/components/schemas/DataMetricThresholdView",
            "MUNIN_CPU_USER": "#/components/schemas/RawMetricThresholdView",
            "MUNIN_CPU_NICE": "#/components/schemas/RawMetricThresholdView",
            "MUNIN_CPU_SYSTEM": "#/components/schemas/RawMetricThresholdView",
            "MUNIN_CPU_IOWAIT": "#/components/schemas/RawMetricThresholdView",
            "MUNIN_CPU_IRQ": "#/components/schemas/RawMetricThresholdView",
            "MUNIN_CPU_SOFTIRQ": "#/components/schemas/RawMetricThresholdView",
            "MUNIN_CPU_STEAL": "#/components/schemas/RawMetricThresholdView",
            "DOCUMENT_RETURNED": "#/components/schemas/RawMetricThresholdView",
            "DOCUMENT_INSERTED": "#/components/schemas/RawMetricThresholdView",
            "DOCUMENT_UPDATED": "#/components/schemas/RawMetricThresholdView",
            "DOCUMENT_DELETED": "#/components/schemas/RawMetricThresholdView",
            "OPERATIONS_SCAN_AND_ORDER": "#/components/schemas/RawMetricThresholdView",
            "QUERY_EXECUTOR_SCANNED": "#/components/schemas/RawMetricThresholdView",
            "QUERY_EXECUTOR_SCANNED_OBJECTS": "#/components/schemas/RawMetricThresholdView",
            "QUERY_TARGETING_SCANNED_PER_RETURNED": "#/components/schemas/RawMetricThresholdView",
            "QUERY_TARGETING_SCANNED_OBJECTS_PER_RETURNED": "#/components/schemas/RawMetricThresholdView",
            "AVG_READ_EXECUTION_TIME": "#/components/schemas/TimeMetricThresholdView",
            "AVG_WRITE_EXECUTION_TIME": "#/components/schemas/TimeMetricThresholdView",
            "AVG_COMMAND_EXECUTION_TIME": "#/components/schemas/TimeMetricThresholdView",
            "LOGICAL_SIZE": "#/components/schemas/DataMetricThresholdView",
            "RESTARTS_IN_LAST_HOUR": "#/components/schemas/RawMetricThresholdView",
            "SYSTEM_MEMORY_USED": "#/components/schemas/DataMetricThresholdView",
            "SYSTEM_MEMORY_AVAILABLE": "#/components/schemas/DataMetricThresholdView",
            "SWAP_USAGE_USED": "#/components/schemas/DataMetricThresholdView",
            "SWAP_USAGE_FREE": "#/components/schemas/DataMetricThresholdView",
            "SYSTEM_NETWORK_IN": "#/components/schemas/DataMetricThresholdView",
            "SYSTEM_NETWORK_OUT": "#/components/schemas/DataMetricThresholdView",
            "MAX_NORMALIZED_SYSTEM_CPU_USER": "#/components/schemas/RawMetricThresholdView",
            "MAX_NORMALIZED_SYSTEM_CPU_STEAL": "#/components/schemas/RawMetricThresholdView",
            "MAX_DISK_PARTITION_SPACE_USED_DATA": "#/components/schemas/RawMetricThresholdView",
            "MAX_DISK_PARTITION_SPACE_USED_INDEX": "#/components/schemas/RawMetricThresholdView",
            "MAX_DISK_PARTITION_SPACE_USED_JOURNAL": "#/components/schemas/RawMetricThresholdView",
            "MAX_DISK_PARTITION_READ_IOPS_DATA": "#/components/schemas/RawMetricThresholdView",
            "MAX_DISK_PARTITION_READ_IOPS_INDEX": "#/components/schemas/RawMetricThresholdView",
            "MAX_DISK_PARTITION_READ_IOPS_JOURNAL": "#/components/schemas/RawMetricThresholdView",
            "MAX_DISK_PARTITION_WRITE_IOPS_DATA": "#/components/schemas/RawMetricThresholdView",
            "MAX_DISK_PARTITION_WRITE_IOPS_INDEX": "#/components/schemas/RawMetricThresholdView",
            "MAX_DISK_PARTITION_WRITE_IOPS_JOURNAL": "#/components/schemas/RawMetricThresholdView",
            "MAX_DISK_PARTITION_READ_LATENCY_DATA": "#/components/schemas/TimeMetricThresholdView",
            "MAX_DISK_PARTITION_READ_LATENCY_INDEX": "#/components/schemas/TimeMetricThresholdView",
            "MAX_DISK_PARTITION_READ_LATENCY_JOURNAL": "#/components/schemas/TimeMetricThresholdView",
            "MAX_DISK_PARTITION_WRITE_LATENCY_DATA": "#/components/schemas/TimeMetricThresholdView",
            "MAX_DISK_PARTITION_WRITE_LATENCY_INDEX": "#/components/schemas/TimeMetricThresholdView",
            "MAX_DISK_PARTITION_WRITE_LATENCY_JOURNAL": "#/components/schemas/TimeMetricThresholdView",
            "MAX_DISK_PARTITION_QUEUE_DEPTH_DATA": "#/components/schemas/RawMetricThresholdView",
            "MAX_DISK_PARTITION_QUEUE_DEPTH_INDEX": "#/components/schemas/RawMetricThresholdView",
            "MAX_DISK_PARTITION_QUEUE_DEPTH_JOURNAL": "#/components/schemas/RawMetricThresholdView",
            "MAX_SYSTEM_MEMORY_PERCENT_USED": "#/components/schemas/RawMetricThresholdView",
            "MAX_SYSTEM_MEMORY_USED": "#/components/schemas/DataMetricThresholdView",
            "MAX_SYSTEM_MEMORY_AVAILABLE": "#/components/schemas/DataMetricThresholdView",
            "MAX_SWAP_USAGE_USED": "#/components/schemas/DataMetricThresholdView",
            "MAX_SWAP_USAGE_FREE": "#/components/schemas/DataMetricThresholdView",
            "MAX_SYSTEM_NETWORK_IN": "#/components/schemas/DataMetricThresholdView",
            "MAX_SYSTEM_NETWORK_OUT": "#/components/schemas/DataMetricThresholdView",
            "SEARCH_INDEX_SIZE": "#/components/schemas/DataMetricThresholdView",
            "SEARCH_NUMBER_OF_FIELDS_IN_INDEX": "#/components/schemas/RawMetricThresholdView",
            "SEARCH_REPLICATION_LAG": "#/components/schemas/TimeMetricThresholdView",
            "SEARCH_MAX_NUMBER_OF_LUCENE_DOCS": "#/components/schemas/NumberMetricThresholdView",
            "SEARCH_OPCOUNTER_INSERT": "#/components/schemas/RawMetricThresholdView",
            "SEARCH_OPCOUNTER_DELETE": "#/components/schemas/RawMetricThresholdView",
            "SEARCH_OPCOUNTER_UPDATE": "#/components/schemas/RawMetricThresholdView",
            "SEARCH_OPCOUNTER_GETMORE": "#/components/schemas/RawMetricThresholdView",
            "SEARCH_NUMBER_OF_QUERIES_TOTAL": "#/components/schemas/RawMetricThresholdView",
            "SEARCH_NUMBER_OF_QUERIES_ERROR": "#/components/schemas/RawMetricThresholdView",
            "SEARCH_NUMBER_OF_QUERIES_SUCCESS": "#/components/schemas/RawMetricThresholdView",
            "FTS_JVM_MAX_MEMORY": "#/components/schemas/DataMetricThresholdView",
            "FTS_JVM_CURRENT_MEMORY": "#/components/schemas/DataMetricThresholdView"
          }
        }
      },
      "LessThanDaysThresholdView": {
        "type": "object",
        "properties": {
          "operator": {
            "type": "string",
            "description": "Comparison operator to apply when checking the current metric value.",
            "enum": ["LESS_THAN"]
          },
          "threshold": {
            "type": "integer",
            "description": "Value of metric that, when exceeded, triggers an alert.",
            "format": "int32"
          },
          "units": {
            "type": "string",
            "description": "Element used to express the quantity. This can be an element of time, storage capacity, and the like.",
            "enum": ["DAYS"]
          }
        },
        "description": "Threshold value that triggers an alert."
      },
      "LessThanTimeThreshold": {
        "title": "Less Than Time Threshold",
        "type": "object",
        "properties": {
          "operator": {
            "type": "string",
            "description": "Comparison operator to apply when checking the current metric value.",
            "enum": ["LESS_THAN"]
          },
          "threshold": {
            "type": "integer",
            "description": "Value of metric that, when exceeded, triggers an alert.",
            "format": "int32"
          },
          "units": {
            "$ref": "#/components/schemas/TimeMetricUnits"
          }
        },
        "description": "A Limit that triggers an alert when less than a time period."
      },
      "LessThanTimeThresholdAlertConfigViewForNdsGroup": {
        "required": ["eventTypeName", "notifications"],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created the alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled this alert configuration for the specified project.",
            "default": false
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/ReplicaSetEventTypeViewForNdsGroupAlertableWithThreshold"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "matchers": {
            "type": "array",
            "description": "List of rules that determine whether MongoDB Cloud checks an object for the alert configuration. You can filter using the matchers array if the **eventTypeName** specifies an event for a host, replica set, or sharded cluster.",
            "items": {
              "$ref": "#/components/schemas/ReplicaSetMatcher"
            }
          },
          "notifications": {
            "type": "array",
            "description": "List that contains the targets that MongoDB Cloud sends notifications.",
            "items": {
              "$ref": "#/components/schemas/AlertsNotificationRootForGroup"
            }
          },
          "threshold": {
            "$ref": "#/components/schemas/LessThanTimeThreshold"
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "MatcherHostType": {
        "title": "Matcher Host Types",
        "type": "string",
        "description": "Value to match or exceed using the specified **matchers.operator**.",
        "example": "STANDALONE",
        "enum": ["STANDALONE", "PRIMARY", "SECONDARY", "ARBITER", "MONGOS", "CONFIG"]
      },
      "MicrosoftTeamsNotification": {
        "title": "Microsoft Teams Notification",
        "required": ["typeName"],
        "type": "object",
        "properties": {
          "delayMin": {
            "type": "integer",
            "description": "Number of minutes that MongoDB Cloud waits after detecting an alert condition before it sends out the first notification.",
            "format": "int32"
          },
          "integrationId": {
            "type": "string",
            "description": "The id of the associated integration, the credentials of which to use for requests.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "intervalMin": {
            "minimum": 5,
            "type": "integer",
            "description": "Number of minutes to wait between successive notifications. MongoDB Cloud sends notifications until someone acknowledges the unacknowledged alert.\n\nPagerDuty, VictorOps, and OpsGenie notifications don't return this element. Configure and manage the notification interval within each of those services.",
            "format": "int32"
          },
          "microsoftTeamsWebhookUrl": {
            "type": "string",
            "description": "Microsoft Teams Webhook Uniform Resource Locator (URL) that MongoDB Cloud needs to send this notification via Microsoft Teams. The resource requires this parameter when `\"notifications.[n].typeName\" : \"MICROSOFT_TEAMS\"`. If the URL later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it.\n\n**NOTE**: When you view or edit the alert for a Microsoft Teams notification, the URL appears partially redacted.",
            "example": "https://webhook.com/****"
          },
          "notifierId": {
            "type": "string",
            "description": "The notifierId is a system-generated unique identifier assigned to each notification method. This is needed when updating third-party notifications without requiring explicit authentication credentials.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "typeName": {
            "type": "string",
            "description": "Human-readable label that displays the alert notification type.",
            "enum": ["MICROSOFT_TEAMS"]
          }
        },
        "description": "Microsoft Teams notification configuration for MongoDB Cloud to send information when an event triggers an alert condition."
      },
      "NDSX509UserAuthenticationAlertConfigViewForNdsGroup": {
        "title": "NDS X509 User Authentication Alert Configuration",
        "required": ["eventTypeName", "notifications"],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created the alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled this alert configuration for the specified project.",
            "default": false
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/NDSX509UserAuthenticationEventTypeViewAlertable"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "matchers": {
            "type": "array",
            "description": "Matching conditions for target resources.",
            "items": {
              "$ref": "#/components/schemas/AlertMatcher"
            }
          },
          "notifications": {
            "type": "array",
            "description": "List that contains the targets that MongoDB Cloud sends notifications.",
            "items": {
              "$ref": "#/components/schemas/AlertsNotificationRootForGroup"
            }
          },
          "threshold": {
            "$ref": "#/components/schemas/LessThanDaysThresholdView"
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "NDS X509 User Authentication alert configuration allows to select thresholds for expiration of client, CA certificates and CRL which trigger alerts and how users are notified."
      },
      "NDSX509UserAuthenticationEventTypeViewAlertable": {
        "title": "NDS x509 User Auth Event Types",
        "type": "string",
        "description": "Event type that triggers an alert.",
        "example": "NDS_X509_USER_AUTHENTICATION_CUSTOMER_CA_EXPIRATION_CHECK",
        "enum": [
          "NDS_X509_USER_AUTHENTICATION_CUSTOMER_CA_EXPIRATION_CHECK",
          "NDS_X509_USER_AUTHENTICATION_CUSTOMER_CRL_EXPIRATION_CHECK",
          "NDS_X509_USER_AUTHENTICATION_MANAGED_USER_CERTS_EXPIRATION_CHECK"
        ]
      },
      "NumberMetricThresholdView": {
        "required": ["metricName"],
        "type": "object",
        "properties": {
          "metricName": {
            "type": "string",
            "description": "Human-readable label that identifies the metric against which MongoDB Cloud checks the configured **metricThreshold.threshold**."
          },
          "mode": {
            "type": "string",
            "description": "MongoDB Cloud computes the current metric value as an average.",
            "enum": ["AVERAGE"]
          },
          "operator": {
            "$ref": "#/components/schemas/Operator"
          },
          "threshold": {
            "type": "number",
            "description": "Value of metric that, when exceeded, triggers an alert.",
            "format": "double"
          },
          "units": {
            "$ref": "#/components/schemas/NumberMetricUnits"
          }
        }
      },
      "Operator": {
        "type": "string",
        "description": "Comparison operator to apply when checking the current metric value.",
        "enum": ["<", ">"]
      },
      "OpsGenieNotification": {
        "title": "OpsGenie Notification",
        "required": ["typeName"],
        "type": "object",
        "properties": {
          "delayMin": {
            "type": "integer",
            "description": "Number of minutes that MongoDB Cloud waits after detecting an alert condition before it sends out the first notification.",
            "format": "int32"
          },
          "integrationId": {
            "type": "string",
            "description": "The id of the associated integration, the credentials of which to use for requests.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "intervalMin": {
            "minimum": 5,
            "type": "integer",
            "description": "Number of minutes to wait between successive notifications. MongoDB Cloud sends notifications until someone acknowledges the unacknowledged alert.\n\nPagerDuty, VictorOps, and OpsGenie notifications don't return this element. Configure and manage the notification interval within each of those services.",
            "format": "int32"
          },
          "notifierId": {
            "type": "string",
            "description": "The notifierId is a system-generated unique identifier assigned to each notification method. This is needed when updating third-party notifications without requiring explicit authentication credentials.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "opsGenieApiKey": {
            "type": "string",
            "description": "API Key that MongoDB Cloud needs to send this notification via Opsgenie. The resource requires this parameter when `\"notifications.[n].typeName\" : \"OPS_GENIE\"`. If the key later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it.\n\n**NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:\n\n* View or edit the alert through the Atlas UI.\n\n* Query the alert for the notification through the Atlas Administration API.",
            "example": "********************************a111"
          },
          "opsGenieRegion": {
            "type": "string",
            "description": "Opsgenie region that indicates which API Uniform Resource Locator (URL) to use.",
            "default": "US",
            "enum": ["US", "EU"]
          },
          "typeName": {
            "type": "string",
            "description": "Human-readable label that displays the alert notification type.",
            "enum": ["OPS_GENIE"]
          }
        },
        "description": "OpsGenie notification configuration for MongoDB Cloud to send information when an event triggers an alert condition."
      },
      "OrgNotification": {
        "title": "Org Notification",
        "required": ["typeName"],
        "type": "object",
        "properties": {
          "delayMin": {
            "type": "integer",
            "description": "Number of minutes that MongoDB Cloud waits after detecting an alert condition before it sends out the first notification.",
            "format": "int32"
          },
          "emailEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud should send email notifications. The resource requires this parameter when one of the following values have been set:\n\n- `\"notifications.[n].typeName\" : \"ORG\"`\n- `\"notifications.[n].typeName\" : \"GROUP\"`\n- `\"notifications.[n].typeName\" : \"USER\"`"
          },
          "intervalMin": {
            "minimum": 5,
            "type": "integer",
            "description": "Number of minutes to wait between successive notifications. MongoDB Cloud sends notifications until someone acknowledges the unacknowledged alert.\n\nPagerDuty, VictorOps, and OpsGenie notifications don't return this element. Configure and manage the notification interval within each of those services.",
            "format": "int32"
          },
          "notifierId": {
            "type": "string",
            "description": "The notifierId is a system-generated unique identifier assigned to each notification method. This is needed when updating third-party notifications without requiring explicit authentication credentials.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "roles": {
            "type": "array",
            "description": "List that contains the one or more [organization](https://dochub.mongodb.org/core/atlas-org-roles) or [project roles](https://dochub.mongodb.org/core/atlas-proj-roles) that receive the configured alert. The resource requires this parameter when `\"notifications.[n].typeName\" : \"GROUP\"` or `\"notifications.[n].typeName\" : \"ORG\"`. If you include this parameter, MongoDB Cloud sends alerts only to users assigned the roles you specify in the array. If you omit this parameter, MongoDB Cloud sends alerts to users assigned any role.",
            "items": {
              "type": "string",
              "description": "One organization or project role that receive the configured alert.",
              "enum": [
                "GROUP_CLUSTER_MANAGER",
                "GROUP_DATA_ACCESS_ADMIN",
                "GROUP_DATA_ACCESS_READ_ONLY",
                "GROUP_DATA_ACCESS_READ_WRITE",
                "GROUP_OWNER",
                "GROUP_READ_WRITE",
                "ORG_OWNER",
                "ORG_MEMBER",
                "ORG_GROUP_CREATOR",
                "ORG_BILLING_ADMIN",
                "ORG_READ_ONLY"
              ]
            }
          },
          "smsEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud should send text message notifications. The resource requires this parameter when one of the following values have been set:\n\n- `\"notifications.[n].typeName\" : \"ORG\"`\n- `\"notifications.[n].typeName\" : \"GROUP\"`\n- `\"notifications.[n].typeName\" : \"USER\"`"
          },
          "typeName": {
            "type": "string",
            "description": "Human-readable label that displays the alert notification type.",
            "enum": ["ORG"]
          }
        },
        "description": "Org notification configuration for MongoDB Cloud to send information when an event triggers an alert condition."
      },
      "PagerDutyNotification": {
        "title": "PagerDuty Notification",
        "required": ["typeName"],
        "type": "object",
        "properties": {
          "delayMin": {
            "type": "integer",
            "description": "Number of minutes that MongoDB Cloud waits after detecting an alert condition before it sends out the first notification.",
            "format": "int32"
          },
          "integrationId": {
            "type": "string",
            "description": "The id of the associated integration, the credentials of which to use for requests.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "intervalMin": {
            "minimum": 5,
            "type": "integer",
            "description": "Number of minutes to wait between successive notifications. MongoDB Cloud sends notifications until someone acknowledges the unacknowledged alert.\n\nPagerDuty, VictorOps, and OpsGenie notifications don't return this element. Configure and manage the notification interval within each of those services.",
            "format": "int32"
          },
          "notifierId": {
            "type": "string",
            "description": "The notifierId is a system-generated unique identifier assigned to each notification method. This is needed when updating third-party notifications without requiring explicit authentication credentials.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "region": {
            "type": "string",
            "description": "PagerDuty region that indicates which API Uniform Resource Locator (URL) to use.",
            "default": "US",
            "enum": ["US", "EU"]
          },
          "serviceKey": {
            "type": "string",
            "description": "PagerDuty service key that MongoDB Cloud needs to send notifications via PagerDuty. The resource requires this parameter when `\"notifications.[n].typeName\" : \"PAGER_DUTY\"`. If the key later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it.\n\n**NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:\n\n* View or edit the alert through the Atlas UI.\n\n* Query the alert for the notification through the Atlas Administration API.",
            "example": "****************************7890"
          },
          "typeName": {
            "type": "string",
            "description": "Human-readable label that displays the alert notification type.",
            "enum": ["PAGER_DUTY"]
          }
        },
        "description": "PagerDuty notification configuration for MongoDB Cloud to send information when an event triggers an alert condition."
      },
      "PaginatedAlertConfigView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/GroupAlertsConfig"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "RPUMetricThresholdView": {
        "required": ["metricName"],
        "type": "object",
        "properties": {
          "metricName": {
            "type": "string",
            "description": "Human-readable label that identifies the metric against which MongoDB Cloud checks the configured **metricThreshold.threshold**."
          },
          "mode": {
            "type": "string",
            "description": "MongoDB Cloud computes the current metric value as an average.",
            "enum": ["AVERAGE"]
          },
          "operator": {
            "$ref": "#/components/schemas/Operator"
          },
          "threshold": {
            "type": "number",
            "description": "Value of metric that, when exceeded, triggers an alert.",
            "format": "double"
          },
          "units": {
            "$ref": "#/components/schemas/ServerlessMetricUnits"
          }
        }
      },
      "RawMetricThresholdView": {
        "required": ["metricName"],
        "type": "object",
        "properties": {
          "metricName": {
            "type": "string",
            "description": "Human-readable label that identifies the metric against which MongoDB Cloud checks the configured **metricThreshold.threshold**."
          },
          "mode": {
            "type": "string",
            "description": "MongoDB Cloud computes the current metric value as an average.",
            "enum": ["AVERAGE"]
          },
          "operator": {
            "$ref": "#/components/schemas/Operator"
          },
          "threshold": {
            "type": "number",
            "description": "Value of metric that, when exceeded, triggers an alert.",
            "format": "double"
          },
          "units": {
            "$ref": "#/components/schemas/RawMetricUnits"
          }
        }
      },
      "ReplicaSetAlertConfigViewForNdsGroup": {
        "title": "Replica Set Alert Configuration",
        "required": ["eventTypeName", "notifications"],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created the alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled this alert configuration for the specified project.",
            "default": false
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/ReplicaSetEventTypeViewForNdsGroupAlertableNoThreshold"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "matchers": {
            "type": "array",
            "description": "List of rules that determine whether MongoDB Cloud checks an object for the alert configuration. You can filter using the matchers array if the **eventTypeName** specifies an event for a host, replica set, or sharded cluster.",
            "items": {
              "$ref": "#/components/schemas/ReplicaSetMatcher"
            }
          },
          "notifications": {
            "type": "array",
            "description": "List that contains the targets that MongoDB Cloud sends notifications.",
            "items": {
              "$ref": "#/components/schemas/AlertsNotificationRootForGroup"
            }
          },
          "threshold": {
            "$ref": "#/components/schemas/AlertsThresholdInteger"
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Replica Set alert configuration allows to select which conditions of mongod replica set trigger alerts and how users are notified."
      },
      "ReplicaSetEventTypeViewForNdsGroupAlertableNoThreshold": {
        "title": "ReplicaSet Event Types",
        "type": "string",
        "description": "Event type that triggers an alert.",
        "example": "NO_PRIMARY",
        "enum": ["NO_PRIMARY", "PRIMARY_ELECTED"]
      },
      "ReplicaSetEventTypeViewForNdsGroupAlertableWithThreshold": {
        "title": "ReplicaSet Event Types",
        "type": "string",
        "description": "Event type that triggers an alert.",
        "example": "TOO_MANY_ELECTIONS",
        "enum": ["TOO_MANY_ELECTIONS", "REPLICATION_OPLOG_WINDOW_RUNNING_OUT"]
      },
      "ReplicaSetMatcher": {
        "title": "Matchers",
        "required": ["fieldName", "operator", "value"],
        "type": "object",
        "properties": {
          "fieldName": {
            "$ref": "#/components/schemas/ReplicaSetMatcherField"
          },
          "operator": {
            "type": "string",
            "description": "Comparison operator to apply when checking the current metric value against **matcher[n].value**.",
            "enum": ["EQUALS", "CONTAINS", "STARTS_WITH", "ENDS_WITH", "NOT_EQUALS", "NOT_CONTAINS", "REGEX"]
          },
          "value": {
            "type": "string",
            "description": "Value to match or exceed using the specified **matchers.operator**.",
            "example": "event-replica-set"
          }
        },
        "description": "Rules to apply when comparing an replica set against this alert configuration."
      },
      "ReplicaSetMatcherField": {
        "title": "Replica Set Matcher Fields",
        "type": "string",
        "description": "Name of the parameter in the target object that MongoDB Cloud checks. The parameter must match all rules for MongoDB Cloud to check for alert configurations.",
        "example": "REPLICA_SET_NAME",
        "enum": ["REPLICA_SET_NAME", "SHARD_NAME", "CLUSTER_NAME"]
      },
      "ReplicaSetThresholdAlertConfigViewForNdsGroup": {
        "title": "Replica Set Threshold Alert Configuration",
        "required": ["eventTypeName", "notifications"],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created the alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled this alert configuration for the specified project.",
            "default": false
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/ReplicaSetEventTypeViewForNdsGroupAlertableWithThreshold"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "matchers": {
            "type": "array",
            "description": "List of rules that determine whether MongoDB Cloud checks an object for the alert configuration. You can filter using the matchers array if the **eventTypeName** specifies an event for a host, replica set, or sharded cluster.",
            "items": {
              "$ref": "#/components/schemas/ReplicaSetMatcher"
            }
          },
          "notifications": {
            "type": "array",
            "description": "List that contains the targets that MongoDB Cloud sends notifications.",
            "items": {
              "$ref": "#/components/schemas/AlertsNotificationRootForGroup"
            }
          },
          "threshold": {
            "$ref": "#/components/schemas/AlertsThresholdInteger"
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Replica Set threshold alert configuration allows to select thresholds for conditions of mongod replica set which trigger alerts and how users are notified.",
        "discriminator": {
          "propertyName": "eventTypeName",
          "mapping": {
            "TOO_MANY_ELECTIONS": "#/components/schemas/GreaterThanRawThresholdAlertConfigViewForNdsGroup",
            "REPLICATION_OPLOG_WINDOW_RUNNING_OUT": "#/components/schemas/LessThanTimeThresholdAlertConfigViewForNdsGroup"
          }
        }
      },
      "SMSNotification": {
        "title": "SMS Notification",
        "required": ["typeName"],
        "type": "object",
        "properties": {
          "delayMin": {
            "type": "integer",
            "description": "Number of minutes that MongoDB Cloud waits after detecting an alert condition before it sends out the first notification.",
            "format": "int32"
          },
          "intervalMin": {
            "minimum": 5,
            "type": "integer",
            "description": "Number of minutes to wait between successive notifications. MongoDB Cloud sends notifications until someone acknowledges the unacknowledged alert.\n\nPagerDuty, VictorOps, and OpsGenie notifications don't return this element. Configure and manage the notification interval within each of those services.",
            "format": "int32"
          },
          "mobileNumber": {
            "type": "string",
            "description": "Mobile phone number to which MongoDB Cloud sends alert notifications. The resource requires this parameter when `\"notifications.[n].typeName\" : \"SMS\"`.",
            "example": "1233337892"
          },
          "notifierId": {
            "type": "string",
            "description": "The notifierId is a system-generated unique identifier assigned to each notification method. This is needed when updating third-party notifications without requiring explicit authentication credentials.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "typeName": {
            "type": "string",
            "description": "Human-readable label that displays the alert notification type.",
            "enum": ["SMS"]
          }
        },
        "description": "SMS notification configuration for MongoDB Cloud to send information when an event triggers an alert condition."
      },
      "ServerlessEventTypeViewAlertable": {
        "title": "Serverless Event Types",
        "type": "string",
        "description": "Event type that triggers an alert.",
        "example": "OUTSIDE_SERVERLESS_METRIC_THRESHOLD",
        "enum": ["OUTSIDE_SERVERLESS_METRIC_THRESHOLD"]
      },
      "ServerlessMetricAlertConfigViewForNdsGroup": {
        "title": "Serverless Alert Configuration",
        "required": ["eventTypeName", "notifications"],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created the alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled this alert configuration for the specified project.",
            "default": false
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/ServerlessEventTypeViewAlertable"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "matchers": {
            "type": "array",
            "description": "Matching conditions for target resources.",
            "items": {
              "$ref": "#/components/schemas/AlertMatcher"
            }
          },
          "metricThreshold": {
            "$ref": "#/components/schemas/ServerlessMetricThreshold"
          },
          "notifications": {
            "type": "array",
            "description": "List that contains the targets that MongoDB Cloud sends notifications.",
            "items": {
              "$ref": "#/components/schemas/AlertsNotificationRootForGroup"
            }
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Serverless metric alert configuration allows to select which serverless database metrics trigger alerts and how users are notified."
      },
      "ServerlessMetricThreshold": {
        "title": "Serverless Metric Threshold",
        "required": ["metricName"],
        "type": "object",
        "properties": {
          "metricName": {
            "type": "string",
            "description": "Human-readable label that identifies the metric against which MongoDB Cloud checks the configured **metricThreshold.threshold**."
          },
          "mode": {
            "type": "string",
            "description": "MongoDB Cloud computes the current metric value as an average.",
            "enum": ["AVERAGE"]
          },
          "operator": {
            "$ref": "#/components/schemas/Operator"
          },
          "threshold": {
            "type": "number",
            "description": "Value of metric that, when exceeded, triggers an alert.",
            "format": "double"
          },
          "units": {
            "type": "string",
            "description": "Element used to express the quantity. This can be an element of time, storage capacity, and the like.",
            "enum": [
              "bits",
              "Kbits",
              "Mbits",
              "Gbits",
              "bytes",
              "KB",
              "MB",
              "GB",
              "TB",
              "PB",
              "nsec",
              "msec",
              "sec",
              "min",
              "hours",
              "million minutes",
              "days",
              "requests",
              "1000 requests",
              "GB seconds",
              "GB hours",
              "GB days",
              "RPU",
              "thousand RPU",
              "million RPU",
              "WPU",
              "thousand WPU",
              "million WPU",
              "count",
              "thousand",
              "million",
              "billion",
              "",
              "",
              ""
            ]
          }
        },
        "description": "Threshold for the metric that, when exceeded, triggers an alert. The metric threshold pertains to event types which reflects changes of measurements and metrics about the serverless database.",
        "discriminator": {
          "propertyName": "metricName",
          "mapping": {
            "SERVERLESS_CONNECTIONS": "#/components/schemas/RawMetricThresholdView",
            "SERVERLESS_CONNECTIONS_PERCENT": "#/components/schemas/RawMetricThresholdView",
            "SERVERLESS_DATA_SIZE_TOTAL": "#/components/schemas/DataMetricThresholdView",
            "SERVERLESS_NETWORK_BYTES_IN": "#/components/schemas/DataMetricThresholdView",
            "SERVERLESS_NETWORK_BYTES_OUT": "#/components/schemas/DataMetricThresholdView",
            "SERVERLESS_NETWORK_NUM_REQUESTS": "#/components/schemas/RawMetricThresholdView",
            "SERVERLESS_OPCOUNTER_CMD": "#/components/schemas/RawMetricThresholdView",
            "SERVERLESS_OPCOUNTER_DELETE": "#/components/schemas/RawMetricThresholdView",
            "SERVERLESS_OPCOUNTER_GETMORE": "#/components/schemas/RawMetricThresholdView",
            "SERVERLESS_OPCOUNTER_INSERT": "#/components/schemas/RawMetricThresholdView",
            "SERVERLESS_OPCOUNTER_QUERY": "#/components/schemas/RawMetricThresholdView",
            "SERVERLESS_OPCOUNTER_UPDATE": "#/components/schemas/RawMetricThresholdView",
            "SERVERLESS_TOTAL_READ_UNITS": "#/components/schemas/RPUMetricThresholdView",
            "SERVERLESS_TOTAL_WRITE_UNITS": "#/components/schemas/RPUMetricThresholdView",
            "SERVERLESS_AVG_READ_EXECUTION_TIME": "#/components/schemas/TimeMetricThresholdView",
            "SERVERLESS_AVG_WRITE_EXECUTION_TIME": "#/components/schemas/TimeMetricThresholdView",
            "SERVERLESS_AVG_COMMAND_EXECUTION_TIME": "#/components/schemas/TimeMetricThresholdView"
          }
        }
      },
      "ServerlessMetricUnits": {
        "title": "Serverless Metric Units",
        "type": "string",
        "description": "Element used to express the quantity. This can be an element of time, storage capacity, and the like.",
        "example": "RPU",
        "enum": ["RPU", "THOUSAND_RPU", "MILLION_RPU", "WPU", "THOUSAND_WPU", "MILLION_WPU"]
      },
      "SlackNotification": {
        "title": "Slack Notification",
        "required": ["typeName"],
        "type": "object",
        "properties": {
          "apiToken": {
            "type": "string",
            "description": "Slack API token or Bot token that MongoDB Cloud needs to send alert notifications via Slack. The resource requires this parameter when `\"notifications.[n].typeName\" : \"SLACK\"`. If the token later becomes invalid, MongoDB Cloud sends an email to the project owners. If the token remains invalid, MongoDB Cloud removes the token. \n\n**NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:\n\n* View or edit the alert through the Atlas UI.\n\n* Query the alert for the notification through the Atlas Administration API.",
            "example": "**********************************************************************abcd"
          },
          "channelName": {
            "type": "string",
            "description": "Name of the Slack channel to which MongoDB Cloud sends alert notifications. The resource requires this parameter when `\"notifications.[n].typeName\" : \"SLACK\"`.",
            "example": "alerts"
          },
          "delayMin": {
            "type": "integer",
            "description": "Number of minutes that MongoDB Cloud waits after detecting an alert condition before it sends out the first notification.",
            "format": "int32"
          },
          "integrationId": {
            "type": "string",
            "description": "The id of the associated integration, the credentials of which to use for requests.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "intervalMin": {
            "minimum": 5,
            "type": "integer",
            "description": "Number of minutes to wait between successive notifications. MongoDB Cloud sends notifications until someone acknowledges the unacknowledged alert.\n\nPagerDuty, VictorOps, and OpsGenie notifications don't return this element. Configure and manage the notification interval within each of those services.",
            "format": "int32"
          },
          "notifierId": {
            "type": "string",
            "description": "The notifierId is a system-generated unique identifier assigned to each notification method. This is needed when updating third-party notifications without requiring explicit authentication credentials.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "typeName": {
            "type": "string",
            "description": "Human-readable label that displays the alert notification type.",
            "enum": ["SLACK"]
          }
        },
        "description": "Slack notification configuration for MongoDB Cloud to send information when an event triggers an alert condition."
      },
      "StreamProcessorAlertConfigViewForNdsGroup": {
        "title": "Stream Processor Alert Configuration",
        "required": ["eventTypeName", "notifications"],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created the alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled this alert configuration for the specified project.",
            "default": false
          },
          "eventTypeName": {
            "$ref": "#/components/schemas/StreamProcessorEventTypeViewAlertable"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "matchers": {
            "type": "array",
            "description": "List of rules that determine whether MongoDB Cloud checks an object for the alert configuration.",
            "items": {
              "$ref": "#/components/schemas/StreamsMatcher"
            }
          },
          "notifications": {
            "type": "array",
            "description": "List that contains the targets that MongoDB Cloud sends notifications.",
            "items": {
              "$ref": "#/components/schemas/AlertsNotificationRootForGroup"
            }
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Host metric alert configuration allows to select which Atlas streams processors trigger alerts and how users are notified."
      },
      "StreamProcessorEventTypeViewAlertable": {
        "title": "Stream Processor Event Types",
        "type": "string",
        "description": "Event type that triggers an alert.",
        "example": "STREAM_PROCESSOR_STATE_IS_FAILED",
        "enum": ["STREAM_PROCESSOR_STATE_IS_FAILED"]
      },
      "StreamsMatcher": {
        "title": "Matchers",
        "required": ["fieldName", "operator", "value"],
        "type": "object",
        "properties": {
          "fieldName": {
            "$ref": "#/components/schemas/StreamsMatcherField"
          },
          "operator": {
            "type": "string",
            "description": "Comparison operator to apply when checking the current metric value against **matcher[n].value**.",
            "enum": ["EQUALS", "CONTAINS", "STARTS_WITH", "ENDS_WITH", "NOT_EQUALS", "NOT_CONTAINS", "REGEX"]
          },
          "value": {
            "type": "string",
            "description": "Value to match or exceed using the specified **matchers.operator**.",
            "example": "event-replica-set"
          }
        },
        "description": "Rules to apply when comparing a stream processing instance or stream processor against this alert configuration."
      },
      "StreamsMatcherField": {
        "title": "Streams Matcher Fields",
        "type": "string",
        "description": "Name of the parameter in the target object that MongoDB Cloud checks. The parameter must match all rules for MongoDB Cloud to check for alert configurations.",
        "example": "INSTANCE_NAME",
        "enum": ["INSTANCE_NAME", "PROCESSOR_NAME"]
      },
      "TeamNotification": {
        "title": "Team Notification",
        "required": ["typeName"],
        "type": "object",
        "properties": {
          "delayMin": {
            "type": "integer",
            "description": "Number of minutes that MongoDB Cloud waits after detecting an alert condition before it sends out the first notification.",
            "format": "int32"
          },
          "emailEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud should send email notifications. The resource requires this parameter when one of the following values have been set:\n\n- `\"notifications.[n].typeName\" : \"ORG\"`\n- `\"notifications.[n].typeName\" : \"GROUP\"`\n- `\"notifications.[n].typeName\" : \"USER\"`"
          },
          "intervalMin": {
            "minimum": 5,
            "type": "integer",
            "description": "Number of minutes to wait between successive notifications. MongoDB Cloud sends notifications until someone acknowledges the unacknowledged alert.\n\nPagerDuty, VictorOps, and OpsGenie notifications don't return this element. Configure and manage the notification interval within each of those services.",
            "format": "int32"
          },
          "notifierId": {
            "type": "string",
            "description": "The notifierId is a system-generated unique identifier assigned to each notification method. This is needed when updating third-party notifications without requiring explicit authentication credentials.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "smsEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud should send text message notifications. The resource requires this parameter when one of the following values have been set:\n\n- `\"notifications.[n].typeName\" : \"ORG\"`\n- `\"notifications.[n].typeName\" : \"GROUP\"`\n- `\"notifications.[n].typeName\" : \"USER\"`"
          },
          "teamId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies one MongoDB Cloud team. The resource requires this parameter when `\"notifications.[n].typeName\" : \"TEAM\"`.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "teamName": {
            "type": "string",
            "description": "Name of the MongoDB Cloud team that receives this notification. The resource requires this parameter when `\"notifications.[n].typeName\" : \"TEAM\"`.",
            "example": "Atlas"
          },
          "typeName": {
            "type": "string",
            "description": "Human-readable label that displays the alert notification type.",
            "enum": ["TEAM"]
          }
        },
        "description": "Team notification configuration for MongoDB Cloud to send information when an event triggers an alert condition."
      },
      "TimeMetricThresholdView": {
        "required": ["metricName"],
        "type": "object",
        "properties": {
          "metricName": {
            "type": "string",
            "description": "Human-readable label that identifies the metric against which MongoDB Cloud checks the configured **metricThreshold.threshold**."
          },
          "mode": {
            "type": "string",
            "description": "MongoDB Cloud computes the current metric value as an average.",
            "enum": ["AVERAGE"]
          },
          "operator": {
            "$ref": "#/components/schemas/Operator"
          },
          "threshold": {
            "type": "number",
            "description": "Value of metric that, when exceeded, triggers an alert.",
            "format": "double"
          },
          "units": {
            "$ref": "#/components/schemas/TimeMetricUnits"
          }
        }
      },
      "UserNotification": {
        "title": "User Notification",
        "required": ["typeName"],
        "type": "object",
        "properties": {
          "delayMin": {
            "type": "integer",
            "description": "Number of minutes that MongoDB Cloud waits after detecting an alert condition before it sends out the first notification.",
            "format": "int32"
          },
          "emailEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud should send email notifications. The resource requires this parameter when one of the following values have been set:\n\n- `\"notifications.[n].typeName\" : \"ORG\"`\n- `\"notifications.[n].typeName\" : \"GROUP\"`\n- `\"notifications.[n].typeName\" : \"USER\"`"
          },
          "intervalMin": {
            "minimum": 5,
            "type": "integer",
            "description": "Number of minutes to wait between successive notifications. MongoDB Cloud sends notifications until someone acknowledges the unacknowledged alert.\n\nPagerDuty, VictorOps, and OpsGenie notifications don't return this element. Configure and manage the notification interval within each of those services.",
            "format": "int32"
          },
          "notifierId": {
            "type": "string",
            "description": "The notifierId is a system-generated unique identifier assigned to each notification method. This is needed when updating third-party notifications without requiring explicit authentication credentials.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "smsEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud should send text message notifications. The resource requires this parameter when one of the following values have been set:\n\n- `\"notifications.[n].typeName\" : \"ORG\"`\n- `\"notifications.[n].typeName\" : \"GROUP\"`\n- `\"notifications.[n].typeName\" : \"USER\"`"
          },
          "typeName": {
            "type": "string",
            "description": "Human-readable label that displays the alert notification type.",
            "enum": ["USER"]
          },
          "username": {
            "type": "string",
            "description": "MongoDB Cloud username of the person to whom MongoDB Cloud sends notifications. Specify only MongoDB Cloud users who belong to the project that owns the alert configuration. The resource requires this parameter when `\"notifications.[n].typeName\" : \"USER\"`.",
            "format": "email"
          }
        },
        "description": "User notification configuration for MongoDB Cloud to send information when an event triggers an alert condition."
      },
      "VictorOpsNotification": {
        "title": "VictorOps Notification",
        "required": ["typeName"],
        "type": "object",
        "properties": {
          "delayMin": {
            "type": "integer",
            "description": "Number of minutes that MongoDB Cloud waits after detecting an alert condition before it sends out the first notification.",
            "format": "int32"
          },
          "integrationId": {
            "type": "string",
            "description": "The id of the associated integration, the credentials of which to use for requests.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "intervalMin": {
            "minimum": 5,
            "type": "integer",
            "description": "Number of minutes to wait between successive notifications. MongoDB Cloud sends notifications until someone acknowledges the unacknowledged alert.\n\nPagerDuty, VictorOps, and OpsGenie notifications don't return this element. Configure and manage the notification interval within each of those services.",
            "format": "int32"
          },
          "notifierId": {
            "type": "string",
            "description": "The notifierId is a system-generated unique identifier assigned to each notification method. This is needed when updating third-party notifications without requiring explicit authentication credentials.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "typeName": {
            "type": "string",
            "description": "Human-readable label that displays the alert notification type.",
            "enum": ["VICTOR_OPS"]
          },
          "victorOpsApiKey": {
            "type": "string",
            "description": "API key that MongoDB Cloud needs to send alert notifications to Splunk On-Call. The resource requires this parameter when `\"notifications.[n].typeName\" : \"VICTOR_OPS\"`. If the key later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it.\n\n**NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:\n\n* View or edit the alert through the Atlas UI.\n\n* Query the alert for the notification through the Atlas Administration API.",
            "example": "********************************9abc"
          },
          "victorOpsRoutingKey": {
            "type": "string",
            "description": "Routing key that MongoDB Cloud needs to send alert notifications to Splunk On-Call. The resource requires this parameter when `\"notifications.[n].typeName\" : \"VICTOR_OPS\"`. If the key later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it.",
            "example": "test routing"
          }
        },
        "description": "VictorOps notification configuration for MongoDB Cloud to send information when an event triggers an alert condition."
      },
      "WebhookNotification": {
        "title": "Webhook Notification",
        "required": ["typeName"],
        "type": "object",
        "properties": {
          "delayMin": {
            "type": "integer",
            "description": "Number of minutes that MongoDB Cloud waits after detecting an alert condition before it sends out the first notification.",
            "format": "int32"
          },
          "integrationId": {
            "type": "string",
            "description": "The id of the associated integration, the credentials of which to use for requests.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "intervalMin": {
            "minimum": 5,
            "type": "integer",
            "description": "Number of minutes to wait between successive notifications. MongoDB Cloud sends notifications until someone acknowledges the unacknowledged alert.\n\nPagerDuty, VictorOps, and OpsGenie notifications don't return this element. Configure and manage the notification interval within each of those services.",
            "format": "int32"
          },
          "notifierId": {
            "type": "string",
            "description": "The notifierId is a system-generated unique identifier assigned to each notification method. This is needed when updating third-party notifications without requiring explicit authentication credentials.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "typeName": {
            "type": "string",
            "description": "Human-readable label that displays the alert notification type.",
            "enum": ["WEBHOOK"]
          },
          "webhookSecret": {
            "type": "string",
            "description": "Authentication secret for a webhook-based alert.\n\nAtlas returns this value if you set `\"notifications.[n].typeName\" :\"WEBHOOK\"` and either:\n* You set `notification.[n].webhookSecret` to a non-empty string\n* You set a default webhookSecret either on the [Integrations](https://www.mongodb.com/docs/atlas/tutorial/third-party-service-integrations/#std-label-third-party-integrations) page, or with the [Integrations API](#tag/Third-Party-Service-Integrations/operation/createIntegration)\n\n**NOTE**: When you view or edit the alert for a webhook notification, the secret appears completely redacted.",
            "example": "******"
          },
          "webhookUrl": {
            "type": "string",
            "description": "Target URL for a webhook-based alert.\n\nAtlas returns this value if you set `\"notifications.[n].typeName\" :\"WEBHOOK\"` and either:\n* You set `notification.[n].webhookURL` to a non-empty string\n* You set a default webhookUrl either on the [Integrations](https://www.mongodb.com/docs/atlas/tutorial/third-party-service-integrations/#std-label-third-party-integrations) page, or with the [Integrations API](#tag/Third-Party-Service-Integrations/operation/createIntegration)\n\n**NOTE**: When you view or edit the alert for a Webhook URL notification, the URL appears partially redacted.",
            "example": "https://webhook.com/****"
          }
        },
        "description": "Webhook notification configuration for MongoDB Cloud to send information when an event triggers an alert condition."
      },
      "MatcherFieldView": {
        "type": "object",
        "oneOf": [
          {
            "title": "App Services Metric Matcher Fields",
            "type": "string",
            "enum": ["APPLICATION_ID"]
          },
          {
            "title": "Cluster Matcher Fields",
            "type": "string",
            "enum": ["CLUSTER_NAME"]
          },
          {
            "title": "Host Matcher Fields",
            "type": "string",
            "enum": ["TYPE_NAME", "HOSTNAME", "PORT", "HOSTNAME_AND_PORT", "REPLICA_SET_NAME"]
          },
          {
            "title": "Replica Set Matcher Fields",
            "type": "string",
            "enum": ["REPLICA_SET_NAME", "SHARD_NAME", "CLUSTER_NAME"]
          },
          {
            "title": "Streams Matcher Fields",
            "type": "string",
            "enum": ["INSTANCE_NAME", "PROCESSOR_NAME"]
          }
        ]
      },
      "AlertConfigView": {
        "title": "Alert Configuration",
        "required": ["notifications"],
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created the alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled this alert configuration for the specified project.",
            "default": false
          },
          "eventTypeName": {
            "type": "string",
            "description": "Event type name."
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "matchers": {
            "type": "array",
            "description": "Matching conditions for target resources.",
            "items": {
              "$ref": "#/components/schemas/AlertMatcher"
            }
          },
          "notifications": {
            "type": "array",
            "description": "List that contains the targets that MongoDB Cloud sends notifications.",
            "items": {
              "$ref": "#/components/schemas/AlertsNotificationBase"
            }
          },
          "updated": {
            "type": "string",
            "description": "Date and time when someone last updated this alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Alert settings allows to select which conditions trigger alerts and how users are notified."
      },
      "AlertsNotificationBase": {
        "type": "object",
        "description": "One target that MongoDB Cloud sends notifications when an alert triggers.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/DatadogNotification"
          },
          {
            "$ref": "#/components/schemas/EmailNotification"
          },
          {
            "$ref": "#/components/schemas/GroupNotification"
          },
          {
            "$ref": "#/components/schemas/HipChatNotification"
          },
          {
            "$ref": "#/components/schemas/MicrosoftTeamsNotification"
          },
          {
            "$ref": "#/components/schemas/NDSNotificationView"
          },
          {
            "$ref": "#/components/schemas/OpsGenieNotification"
          },
          {
            "$ref": "#/components/schemas/OrgNotification"
          },
          {
            "$ref": "#/components/schemas/PagerDutyNotification"
          },
          {
            "$ref": "#/components/schemas/SlackNotification"
          },
          {
            "$ref": "#/components/schemas/SMSNotification"
          },
          {
            "$ref": "#/components/schemas/SummaryNotification"
          },
          {
            "$ref": "#/components/schemas/TeamNotification"
          },
          {
            "$ref": "#/components/schemas/UserNotification"
          },
          {
            "$ref": "#/components/schemas/VictorOpsNotification"
          },
          {
            "$ref": "#/components/schemas/WebhookNotification"
          }
        ]
      },
      "NDSNotificationView": {
        "title": "NDS Notification",
        "required": ["typeName"],
        "type": "object",
        "properties": {
          "delayMin": {
            "type": "integer",
            "description": "Number of minutes that MongoDB Cloud waits after detecting an alert condition before it sends out the first notification.",
            "format": "int32"
          },
          "intervalMin": {
            "minimum": 5,
            "type": "integer",
            "description": "Number of minutes to wait between successive notifications. MongoDB Cloud sends notifications until someone acknowledges the unacknowledged alert.\n\nPagerDuty, VictorOps, and OpsGenie notifications don't return this element. Configure and manage the notification interval within each of those services.",
            "format": "int32"
          },
          "notifierId": {
            "type": "string",
            "description": "The notifierId is a system-generated unique identifier assigned to each notification method. This is needed when updating third-party notifications without requiring explicit authentication credentials.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "severity": {
            "type": "string",
            "description": "Degree of seriousness given to this notification.",
            "enum": ["CRITICAL", "ERROR", "WARNING"]
          },
          "typeName": {
            "type": "string",
            "description": "Human-readable label that displays the alert notification type.",
            "enum": ["NDS"]
          }
        },
        "description": "NDS notification configuration for MongoDB Cloud to send information when an event triggers an alert condition."
      },
      "SummaryNotification": {
        "title": "Summary Notification",
        "required": ["typeName"],
        "type": "object",
        "properties": {
          "delayMin": {
            "type": "integer",
            "description": "Number of minutes that MongoDB Cloud waits after detecting an alert condition before it sends out the first notification.",
            "format": "int32"
          },
          "emailAddress": {
            "type": "string",
            "description": "Email address to which MongoDB Cloud sends alert notifications. The resource requires this parameter when `\"notifications.[n].typeName\" : \"EMAIL\"`. You don't need to set this value to send emails to individual or groups of MongoDB Cloud users including:\n\n- specific MongoDB Cloud users (`\"notifications.[n].typeName\" : \"USER\"`)\n- MongoDB Cloud users with specific project roles (`\"notifications.[n].typeName\" : \"GROUP\"`)\n- MongoDB Cloud users with specific organization roles (`\"notifications.[n].typeName\" : \"ORG\"`)\n- MongoDB Cloud teams (`\"notifications.[n].typeName\" : \"TEAM\"`)\n\nTo send emails to one MongoDB Cloud user or grouping of users, set the **notifications.[n].emailEnabled** parameter.",
            "format": "email"
          },
          "intervalMin": {
            "minimum": 5,
            "type": "integer",
            "description": "Number of minutes to wait between successive notifications. MongoDB Cloud sends notifications until someone acknowledges the unacknowledged alert.\n\nPagerDuty, VictorOps, and OpsGenie notifications don't return this element. Configure and manage the notification interval within each of those services.",
            "format": "int32"
          },
          "notifierId": {
            "type": "string",
            "description": "The notifierId is a system-generated unique identifier assigned to each notification method. This is needed when updating third-party notifications without requiring explicit authentication credentials.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "typeName": {
            "type": "string",
            "description": "Human-readable label that displays the alert notification type.",
            "enum": ["SUMMARY"]
          }
        },
        "description": "Summary notification configuration for MongoDB Cloud to send information when an event triggers an alert condition."
      },
      "AlertsToggle": {
        "title": "Toggle Request",
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether to enable or disable the specified alert configuration in the specified project."
          }
        },
        "description": "Enables or disables the specified alert configuration in the specified project."
      },
      "GroupServiceAccountRoleAssignment": {
        "type": "object",
        "properties": {
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "description": "Group access roles.",
            "items": {
              "type": "string",
              "description": "Project roles associated with the service account.",
              "enum": [
                "GROUP_AUTOMATION_ADMIN",
                "GROUP_BACKUP_ADMIN",
                "GROUP_MONITORING_ADMIN",
                "GROUP_OWNER",
                "GROUP_READ_ONLY",
                "GROUP_USER_ADMIN",
                "GROUP_DATA_ACCESS_ADMIN",
                "GROUP_DATA_ACCESS_READ_ONLY",
                "GROUP_DATA_ACCESS_READ_WRITE",
                "GROUP_CLUSTER_MANAGER",
                "GROUP_SEARCH_INDEX_EDITOR",
                "GROUP_STREAM_PROCESSING_OWNER"
              ]
            }
          }
        }
      },
      "GroupServiceAccount": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "Service account creation time.",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "Description of the service account."
          },
          "id": {
            "pattern": "^mdb_sa_id_[a-fA-F\\d]{24}$",
            "type": "string",
            "description": "ID for the service account."
          },
          "name": {
            "type": "string",
            "description": "Name for service account."
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "description": "Roles assigned to the Service Account group.",
            "items": {
              "type": "string",
              "description": "Project roles associated with the service account.",
              "enum": [
                "GROUP_AUTOMATION_ADMIN",
                "GROUP_BACKUP_ADMIN",
                "GROUP_MONITORING_ADMIN",
                "GROUP_OWNER",
                "GROUP_READ_ONLY",
                "GROUP_USER_ADMIN",
                "GROUP_DATA_ACCESS_ADMIN",
                "GROUP_DATA_ACCESS_READ_ONLY",
                "GROUP_DATA_ACCESS_READ_WRITE",
                "GROUP_CLUSTER_MANAGER",
                "GROUP_SEARCH_INDEX_EDITOR",
                "GROUP_STREAM_PROCESSING_OWNER"
              ]
            }
          },
          "secrets": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of secrets.",
            "items": {
              "$ref": "#/components/schemas/ServiceAccountSecret"
            }
          }
        }
      },
      "ServiceAccountSecret": {
        "required": ["createdAt", "expiresAt", "id"],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "Timestamp representing creation time.",
            "format": "date-time",
            "readOnly": true
          },
          "expiresAt": {
            "type": "string",
            "description": "Timestamp representing secret expiration time.",
            "format": "date-time",
            "readOnly": true
          },
          "id": {
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the secret.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "lastUsedAt": {
            "type": "string",
            "description": "Timestamp representing last secret usage.",
            "format": "date-time",
            "readOnly": true
          },
          "maskedSecretValue": {
            "type": "string",
            "description": "Service Account secret with masked values of the first 20 characters.",
            "readOnly": true,
            "example": "mdb_ic_sk_xxxxxxxx-xxxx-xxxx-xxxxxxxx12ce"
          },
          "secret": {
            "pattern": "^mdb_sa_sk_[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$",
            "type": "string",
            "description": "Secret for the service account. It will be returned only the first time after service account creation.",
            "readOnly": true
          }
        }
      },
      "GroupServiceAccountRequest": {
        "required": ["description", "name", "secretExpiresAfterHours"],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 250,
            "minLength": 1,
            "pattern": "^[\\p{L}\\p{N}\\-_.,' ]*$",
            "type": "string",
            "description": "Human readable description for the service account."
          },
          "name": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[\\p{L}\\p{N}\\-_.,' ]*$",
            "type": "string",
            "description": "Human-readable name for the service account. The name is modifiable and does not have to be unique."
          },
          "roles": {
            "type": "array",
            "description": "Project roles associated with the service account.",
            "items": {
              "type": "string",
              "description": "Project roles associated with the service account.",
              "enum": [
                "GROUP_AUTOMATION_ADMIN",
                "GROUP_BACKUP_ADMIN",
                "GROUP_MONITORING_ADMIN",
                "GROUP_OWNER",
                "GROUP_READ_ONLY",
                "GROUP_USER_ADMIN",
                "GROUP_DATA_ACCESS_ADMIN",
                "GROUP_DATA_ACCESS_READ_ONLY",
                "GROUP_DATA_ACCESS_READ_WRITE",
                "GROUP_CLUSTER_MANAGER",
                "GROUP_SEARCH_INDEX_EDITOR",
                "GROUP_STREAM_PROCESSING_OWNER"
              ]
            }
          },
          "secretExpiresAfterHours": {
            "type": "integer",
            "description": "Secret expiration time.",
            "format": "int32"
          }
        }
      },
      "PaginatedGroupServiceAccounts": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/GroupServiceAccount"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        },
        "description": "List of Service Accounts"
      },
      "GroupServiceAccountUpdateRequest": {
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 250,
            "minLength": 1,
            "pattern": "^[\\p{L}\\p{N}\\-_.,' ]*$",
            "type": "string",
            "description": "Human readable description for the service account."
          },
          "name": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[\\p{L}\\p{N}\\-_.,' ]*$",
            "type": "string",
            "description": "Human-readable name for the service account. The name is modifiable and does not have to be unique."
          },
          "roles": {
            "type": "array",
            "description": "Project roles associated with the service account.",
            "items": {
              "type": "string",
              "description": "Project roles associated with the service account.",
              "enum": [
                "GROUP_AUTOMATION_ADMIN",
                "GROUP_BACKUP_ADMIN",
                "GROUP_MONITORING_ADMIN",
                "GROUP_OWNER",
                "GROUP_READ_ONLY",
                "GROUP_USER_ADMIN",
                "GROUP_DATA_ACCESS_ADMIN",
                "GROUP_DATA_ACCESS_READ_ONLY",
                "GROUP_DATA_ACCESS_READ_WRITE",
                "GROUP_CLUSTER_MANAGER",
                "GROUP_SEARCH_INDEX_EDITOR",
                "GROUP_STREAM_PROCESSING_OWNER"
              ]
            }
          }
        }
      },
      "ServiceAccountSecretRequest": {
        "required": ["secretExpiresAfterHours"],
        "type": "object",
        "properties": {
          "secretExpiresAfterHours": {
            "type": "integer",
            "description": "Number of hours representing validity duration for secret.",
            "format": "int32"
          }
        }
      },
      "OrgServiceAccount": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "Service account creation time.",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "Description of the service account."
          },
          "id": {
            "pattern": "^mdb_sa_id_[a-fA-F\\d]{24}$",
            "type": "string",
            "description": "ID for the service account."
          },
          "name": {
            "type": "string",
            "description": "Name for service account."
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "description": "Organization roles assigned to the Service Account.",
            "items": {
              "type": "string",
              "description": "Organization roles associated with the service account.",
              "enum": [
                "ORG_MEMBER",
                "ORG_READ_ONLY",
                "ORG_BILLING_ADMIN",
                "ORG_BILLING_READ_ONLY",
                "ORG_GROUP_CREATOR",
                "ORG_OWNER"
              ]
            }
          },
          "secrets": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of secrets.",
            "items": {
              "$ref": "#/components/schemas/ServiceAccountSecret"
            }
          }
        }
      },
      "OrgServiceAccountRequest": {
        "required": ["description", "name", "secretExpiresAfterHours"],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 250,
            "minLength": 1,
            "pattern": "^[\\p{L}\\p{N}\\-_.,' ]*$",
            "type": "string",
            "description": "Human readable description for the service account."
          },
          "name": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[\\p{L}\\p{N}\\-_.,' ]*$",
            "type": "string",
            "description": "Human-readable name for the service account. The name is modifiable and does not have to be unique."
          },
          "roles": {
            "type": "array",
            "description": "Organization roles associated with the service account.",
            "items": {
              "type": "string",
              "description": "Organization roles associated with the service account.",
              "enum": [
                "ORG_MEMBER",
                "ORG_READ_ONLY",
                "ORG_BILLING_ADMIN",
                "ORG_BILLING_READ_ONLY",
                "ORG_GROUP_CREATOR",
                "ORG_OWNER"
              ]
            }
          },
          "secretExpiresAfterHours": {
            "type": "integer",
            "description": "Secret expiration time.",
            "format": "int32"
          }
        }
      },
      "PaginatedServiceAccountGroup": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ServiceAccountGroup"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        },
        "description": "List of Service Account projects."
      },
      "ServiceAccountGroup": {
        "type": "object",
        "properties": {
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          }
        }
      },
      "PaginatedOrgServiceAccounts": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/OrgServiceAccount"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        },
        "description": "List of Service Accounts"
      },
      "OrgServiceAccountUpdateRequest": {
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 250,
            "minLength": 1,
            "pattern": "^[\\p{L}\\p{N}\\-_.,' ]*$",
            "type": "string",
            "description": "Human readable description for the service account."
          },
          "name": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[\\p{L}\\p{N}\\-_.,' ]*$",
            "type": "string",
            "description": "Human-readable name for the service account. The name is modifiable and does not have to be unique."
          },
          "roles": {
            "type": "array",
            "description": "Organization roles associated with the Service account.",
            "items": {
              "type": "string",
              "description": "Organization roles associated with the service account.",
              "enum": [
                "ORG_MEMBER",
                "ORG_READ_ONLY",
                "ORG_BILLING_ADMIN",
                "ORG_BILLING_READ_ONLY",
                "ORG_GROUP_CREATOR",
                "ORG_OWNER"
              ]
            }
          }
        }
      },
      "CostExplorerFilterResponseView": {
        "type": "object",
        "properties": {
          "token": {
            "maxLength": 64,
            "minLength": 64,
            "type": "string",
            "description": "The token used to identify the created Cost Explorer query.",
            "example": "d9ab638a801efe182f98ae3e18ea4bb47b9fda808a28a8c7de205bb0e94f7d71"
          }
        },
        "description": "Response object to give information about created query."
      },
      "CostExplorerFilterRequestBody": {
        "required": ["endDate", "startDate"],
        "type": "object",
        "properties": {
          "clusters": {
            "type": "array",
            "description": "The list of projects to be included in the Cost Explorer Query.",
            "example": ["5feeac500000000000000000", "61cfdfd00000000000000000"],
            "items": {
              "type": "string"
            }
          },
          "endDate": {
            "type": "string",
            "description": "The exclusive ending date for the Cost Explorer query. The date must be the start of a month.",
            "format": "date",
            "example": "2022-02-01"
          },
          "groupBy": {
            "type": "string",
            "description": "The dimension to group the returned usage results by. At least one filter value needs to be provided for a dimension to be used.",
            "enum": ["organizations", "projects", "clusters", "services"]
          },
          "includePartialMatches": {
            "type": "boolean",
            "description": "Flag to control whether usage that matches the filter criteria, but does not have values for all filter criteria is included in response. Default is false, which excludes the partially matching data."
          },
          "organizations": {
            "type": "array",
            "description": "The list of organizations to be included in the Cost Explorer Query.",
            "example": ["5feeac500000000000000000", "61cfdfd00000000000000000"],
            "items": {
              "type": "string"
            }
          },
          "projects": {
            "type": "array",
            "description": "The list of projects to be included in the Cost Explorer Query.",
            "example": ["5feeac500000000000000000", "61cfdfd00000000000000000"],
            "items": {
              "type": "string"
            }
          },
          "services": {
            "type": "array",
            "description": "The list of projects to be included in the Cost Explorer Query.",
            "example": ["Data Transfer", "Atlas Data Federation"],
            "items": {
              "type": "string",
              "enum": [
                "Atlas",
                "Clusters",
                "Storage",
                "Serverless Instances",
                "Backup",
                "Data Transfer",
                "BI Connector",
                "Premium Features",
                "Atlas Data Federation",
                "Atlas Stream Processing",
                "App Services",
                "Charts",
                "Cloud Manager",
                "Cloud Manager Standard/Premium",
                "Legacy Backup",
                "Flex Consulting",
                "Support",
                "Credits"
              ]
            }
          },
          "startDate": {
            "type": "string",
            "description": "The inclusive starting date for the Cost Explorer query. The date must be the start of a month.",
            "format": "date",
            "example": "2022-02-01"
          }
        },
        "description": "Request body for a cost explorer query."
      },
      "CostExplorerQueryResult": {
        "type": "object"
      },
      "CloudCluster": {
        "type": "object",
        "properties": {
          "alertCount": {
            "type": "integer",
            "description": "Whole number that indicates the quantity of alerts open on the cluster.",
            "format": "int32",
            "readOnly": true
          },
          "authEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether authentication is required to access the nodes in this cluster.",
            "readOnly": true
          },
          "availability": {
            "type": "string",
            "description": "Term that expresses how many nodes of the cluster can be accessed when MongoDB Cloud receives this request. This parameter returns `available` when all nodes are accessible, `warning` only when some nodes in the cluster can be accessed, `unavailable` when the cluster can't be accessed, or `dead` when the cluster has been deactivated.",
            "readOnly": true,
            "enum": ["available", "dead", "unavailable", "warning"]
          },
          "backupEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the cluster can perform backups. If set to `true`, the cluster can perform backups. You must set this value to `true` for NVMe clusters. Backup uses Cloud Backups for dedicated clusters and Shared Cluster Backups for tenant clusters. If set to `false`, the cluster doesn't use MongoDB Cloud backups.",
            "readOnly": true
          },
          "clusterId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the cluster. Each ``clusterId`` is used only once across all MongoDB Cloud deployments.",
            "readOnly": true
          },
          "dataSizeBytes": {
            "type": "integer",
            "description": "Total size of the data stored on each node in the cluster. The resource expresses this value in bytes.",
            "format": "int64",
            "readOnly": true
          },
          "name": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the cluster.",
            "readOnly": true
          },
          "nodeCount": {
            "type": "integer",
            "description": "Whole number that indicates the quantity of nodes that comprise the cluster.",
            "format": "int32",
            "readOnly": true
          },
          "sslEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether TLS authentication is required to access the nodes in this cluster.",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that indicates the cluster type.",
            "readOnly": true,
            "enum": ["REPLICA_SET", "SHARDED_CLUSTER"]
          },
          "versions": {
            "uniqueItems": true,
            "type": "array",
            "description": "List that contains the versions of MongoDB that each node in the cluster runs.",
            "readOnly": true,
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Settings that describe the clusters in each project that the API key is authorized to view.",
        "readOnly": true
      },
      "OrgGroup": {
        "type": "object",
        "properties": {
          "clusters": {
            "type": "array",
            "description": "Settings that describe the clusters in each project that the API key is authorized to view.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/CloudCluster"
            }
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the project.",
            "readOnly": true
          },
          "groupName": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[\\p{L}\\p{N}\\-_.(),:&@+']{1,64}$",
            "type": "string",
            "description": "Human-readable label that identifies the project."
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the organization that contains the project.",
            "readOnly": true
          },
          "orgName": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[\\p{L}\\p{N}\\-_.(),:&@+']{1,64}$",
            "type": "string",
            "description": "Human-readable label that identifies the organization that contains the project."
          },
          "planType": {
            "type": "string",
            "description": "Human-readable label that indicates the plan type.",
            "readOnly": true
          },
          "tags": {
            "type": "array",
            "description": "List of human-readable labels that categorize the specified project. MongoDB Cloud returns an empty array.",
            "readOnly": true,
            "items": {
              "type": "string",
              "readOnly": true
            }
          }
        }
      },
      "PaginatedOrgGroupView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/OrgGroup"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "ExampleResourceResponse20230201": {
        "required": ["description"],
        "type": "object",
        "properties": {
          "additionalInfo": {
            "type": "string",
            "description": "Dummy additional field added to the response."
          },
          "data": {
            "type": "array",
            "description": "Array that contains the dummy metadata.",
            "items": {
              "type": "string",
              "description": "Dummy data added as response."
            }
          },
          "description": {
            "type": "string",
            "description": "Dummy description added as response."
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "ExampleResourceResponse20230101": {
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "description": "Dummy data added as response."
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "AuthFederationRoleMapping": {
        "title": "Federated Authentication Role Mapping",
        "required": ["externalGroupName"],
        "type": "object",
        "properties": {
          "externalGroupName": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Unique human-readable label that identifies the identity provider group to which this role mapping applies."
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this role mapping.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "roleAssignments": {
            "uniqueItems": true,
            "type": "array",
            "description": "Atlas roles and the unique identifiers of the groups and organizations associated with each role. The array must include at least one element with an Organization role and its respective **orgId**. Each element in the array can have a value for **orgId** or **groupId**, but not both.",
            "items": {
              "$ref": "#/components/schemas/RoleAssignment"
            }
          }
        },
        "description": "Mapping settings that link one IdP and MongoDB Cloud."
      },
      "RoleAssignment": {
        "type": "object",
        "properties": {
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project to which this role belongs. Each element within **roleAssignments** can have a value for **groupId** or **orgId**, but not both.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which this role belongs. Each element within **roleAssignments** can have a value for **orgId** or **groupId**, but not both.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "role": {
            "type": "string",
            "description": "Human-readable label that identifies the collection of privileges that MongoDB Cloud grants a specific API key, MongoDB Cloud user, or MongoDB Cloud team. These roles include organization- and project-level roles.\n\nOrganization Roles\n\n* ORG_OWNER\n* ORG_MEMBER\n* ORG_GROUP_CREATOR\n* ORG_BILLING_ADMIN\n* ORG_READ_ONLY\n\nProject Roles\n\n* GROUP_CLUSTER_MANAGER\n* GROUP_DATA_ACCESS_ADMIN\n* GROUP_DATA_ACCESS_READ_ONLY\n* GROUP_DATA_ACCESS_READ_WRITE\n* GROUP_OWNER\n* GROUP_READ_ONLY\n* GROUP_SEARCH_INDEX_EDITOR\n* GROUP_STREAM_PROCESSING_OWNER\n\n",
            "enum": [
              "ORG_OWNER",
              "ORG_MEMBER",
              "ORG_GROUP_CREATOR",
              "ORG_BILLING_ADMIN",
              "ORG_READ_ONLY",
              "GROUP_CLUSTER_MANAGER",
              "GROUP_DATA_ACCESS_ADMIN",
              "GROUP_DATA_ACCESS_READ_ONLY",
              "GROUP_DATA_ACCESS_READ_WRITE",
              "GROUP_OWNER",
              "GROUP_READ_ONLY",
              "GROUP_SEARCH_INDEX_EDITOR",
              "GROUP_STREAM_PROCESSING_OWNER"
            ]
          }
        }
      },
      "ConnectedOrgConfig": {
        "required": ["domainRestrictionEnabled", "orgId"],
        "type": "object",
        "properties": {
          "dataAccessIdentityProviderIds": {
            "uniqueItems": true,
            "type": "array",
            "description": "The collection of unique ids representing the identity providers that can be used for data access in this organization.",
            "items": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "description": "Unique 24-hexadecimal digit string that represents the id of the identity providers that can be used for data access in this organization.",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          },
          "domainAllowList": {
            "uniqueItems": true,
            "type": "array",
            "description": "Approved domains that restrict users who can join the organization based on their email address.",
            "items": {
              "type": "string"
            }
          },
          "domainRestrictionEnabled": {
            "type": "boolean",
            "description": "Value that indicates whether domain restriction is enabled for this connected org."
          },
          "identityProviderId": {
            "maxLength": 20,
            "minLength": 20,
            "pattern": "^([a-f0-9]{20})$",
            "type": "string",
            "description": "Legacy 20-hexadecimal digit string that identifies the UI access identity provider that this connected org config is associated with. This id can be found within the Federation Management Console > Identity Providers tab by clicking the info icon in the IdP ID row of a configured identity provider."
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the connected organization configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "postAuthRoleGrants": {
            "uniqueItems": true,
            "type": "array",
            "description": "Atlas roles that are granted to a user in this organization after authenticating. Roles are a human-readable label that identifies the collection of privileges that MongoDB Cloud grants a specific MongoDB Cloud user. These roles can only be organization specific roles.",
            "items": {
              "type": "string",
              "enum": [
                "ORG_OWNER",
                "ORG_MEMBER",
                "ORG_GROUP_CREATOR",
                "ORG_BILLING_ADMIN",
                "ORG_BILLING_READ_ONLY",
                "ORG_READ_ONLY"
              ]
            }
          },
          "roleMappings": {
            "uniqueItems": true,
            "type": "array",
            "description": "Role mappings that are configured in this organization.",
            "items": {
              "$ref": "#/components/schemas/AuthFederationRoleMapping"
            }
          },
          "userConflicts": {
            "type": "array",
            "description": "List that contains the users who have an email address that doesn't match any domain on the allowed list.",
            "items": {
              "$ref": "#/components/schemas/FederatedUser"
            }
          }
        }
      },
      "FederatedUser": {
        "title": "Federated User",
        "required": ["emailAddress", "federationSettingsId", "firstName", "lastName"],
        "type": "object",
        "properties": {
          "emailAddress": {
            "type": "string",
            "description": "Email address of the MongoDB Cloud user linked to the federated organization.",
            "format": "email"
          },
          "federationSettingsId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the federation to which this MongoDB Cloud user belongs.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "firstName": {
            "type": "string",
            "description": "First or given name that belongs to the MongoDB Cloud user."
          },
          "lastName": {
            "type": "string",
            "description": "Last name, family name, or surname that belongs to the MongoDB Cloud user."
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this user.",
            "readOnly": true
          }
        },
        "description": "MongoDB Cloud user linked to this federated authentication."
      },
      "PaginatedConnectedOrgConfigsView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ConnectedOrgConfig"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "PaginatedRoleMappingView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/AuthFederationRoleMapping"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        },
        "description": "List role mappings from the specified organization in the specified federation."
      },
      "FederationIdentityProvider": {
        "required": ["id", "oktaIdpId"],
        "type": "object",
        "properties": {
          "associatedOrgs": {
            "uniqueItems": true,
            "type": "array",
            "description": "List that contains the connected organization configurations associated with the identity provider.",
            "items": {
              "$ref": "#/components/schemas/ConnectedOrgConfig"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Date that the identity provider was created on.",
            "format": "date-time",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "The description of the identity provider."
          },
          "displayName": {
            "type": "string",
            "description": "Human-readable label that identifies the identity provider."
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the identity provider.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "idpType": {
            "type": "string",
            "description": "String enum that indicates the type of the identity provider. Default is WORKFORCE.",
            "enum": ["WORKFORCE", "WORKLOAD"]
          },
          "issuerUri": {
            "type": "string",
            "description": "Unique string that identifies the issuer of the SAML Assertion or OIDC metadata/discovery document URL."
          },
          "oktaIdpId": {
            "maxLength": 20,
            "minLength": 20,
            "pattern": "^([a-f0-9]{20})$",
            "type": "string",
            "description": "Legacy 20-hexadecimal digit string that identifies the identity provider."
          },
          "protocol": {
            "type": "string",
            "description": "String enum that indicates the protocol of the identity provider. Either SAML or OIDC.",
            "enum": ["SAML", "OIDC"]
          },
          "updatedAt": {
            "type": "string",
            "description": "Date that the identity provider was last updated on.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/FederationSamlIdentityProvider"
          },
          {
            "$ref": "#/components/schemas/FederationOidcWorkforceIdentityProvider"
          },
          {
            "$ref": "#/components/schemas/FederationOidcWorkloadIdentityProvider"
          }
        ]
      },
      "FederationOidcWorkforceIdentityProvider": {
        "title": "OIDC WORKFORCE",
        "required": ["id", "oktaIdpId"],
        "type": "object",
        "properties": {
          "associatedDomains": {
            "uniqueItems": true,
            "type": "array",
            "description": "List that contains the domains associated with the identity provider.",
            "items": {
              "type": "string"
            }
          },
          "associatedOrgs": {
            "uniqueItems": true,
            "type": "array",
            "description": "List that contains the connected organization configurations associated with the identity provider.",
            "items": {
              "$ref": "#/components/schemas/ConnectedOrgConfig"
            }
          },
          "audience": {
            "type": "string",
            "description": "Identifier of the intended recipient of the token."
          },
          "authorizationType": {
            "type": "string",
            "description": "Indicates whether authorization is granted based on group membership or user ID.",
            "enum": ["GROUP", "USER"]
          },
          "clientId": {
            "type": "string",
            "description": "Client identifier that is assigned to an application by the Identity Provider."
          },
          "createdAt": {
            "type": "string",
            "description": "Date that the identity provider was created on.",
            "format": "date-time",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "The description of the identity provider."
          },
          "displayName": {
            "type": "string",
            "description": "Human-readable label that identifies the identity provider."
          },
          "groupsClaim": {
            "type": "string",
            "description": "Identifier of the claim which contains IdP Group IDs in the token."
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the identity provider.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "idpType": {
            "type": "string",
            "description": "String enum that indicates the type of the identity provider. Default is WORKFORCE.",
            "enum": ["WORKFORCE", "WORKLOAD"]
          },
          "issuerUri": {
            "type": "string",
            "description": "Unique string that identifies the issuer of the SAML Assertion or OIDC metadata/discovery document URL."
          },
          "oktaIdpId": {
            "maxLength": 20,
            "minLength": 20,
            "pattern": "^([a-f0-9]{20})$",
            "type": "string",
            "description": "Legacy 20-hexadecimal digit string that identifies the identity provider."
          },
          "protocol": {
            "type": "string",
            "description": "String enum that indicates the protocol of the identity provider. Either SAML or OIDC.",
            "enum": ["SAML", "OIDC"]
          },
          "requestedScopes": {
            "type": "array",
            "description": "Scopes that MongoDB applications will request from the authorization endpoint.",
            "items": {
              "type": "string"
            }
          },
          "updatedAt": {
            "type": "string",
            "description": "Date that the identity provider was last updated on.",
            "format": "date-time",
            "readOnly": true
          },
          "userClaim": {
            "type": "string",
            "description": "Identifier of the claim which contains the user ID in the token."
          }
        }
      },
      "FederationOidcWorkloadIdentityProvider": {
        "title": "OIDC WORKLOAD",
        "required": ["id", "oktaIdpId"],
        "type": "object",
        "properties": {
          "associatedOrgs": {
            "uniqueItems": true,
            "type": "array",
            "description": "List that contains the connected organization configurations associated with the identity provider.",
            "items": {
              "$ref": "#/components/schemas/ConnectedOrgConfig"
            }
          },
          "audience": {
            "type": "string",
            "description": "Identifier of the intended recipient of the token."
          },
          "authorizationType": {
            "type": "string",
            "description": "Indicates whether authorization is granted based on group membership or user ID.",
            "enum": ["GROUP", "USER"]
          },
          "createdAt": {
            "type": "string",
            "description": "Date that the identity provider was created on.",
            "format": "date-time",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "The description of the identity provider."
          },
          "displayName": {
            "type": "string",
            "description": "Human-readable label that identifies the identity provider."
          },
          "groupsClaim": {
            "type": "string",
            "description": "Identifier of the claim which contains IdP Group IDs in the token."
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the identity provider.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "idpType": {
            "type": "string",
            "description": "String enum that indicates the type of the identity provider. Default is WORKFORCE.",
            "enum": ["WORKFORCE", "WORKLOAD"]
          },
          "issuerUri": {
            "type": "string",
            "description": "Unique string that identifies the issuer of the SAML Assertion or OIDC metadata/discovery document URL."
          },
          "oktaIdpId": {
            "maxLength": 20,
            "minLength": 20,
            "pattern": "^([a-f0-9]{20})$",
            "type": "string",
            "description": "Legacy 20-hexadecimal digit string that identifies the identity provider."
          },
          "protocol": {
            "type": "string",
            "description": "String enum that indicates the protocol of the identity provider. Either SAML or OIDC.",
            "enum": ["SAML", "OIDC"]
          },
          "updatedAt": {
            "type": "string",
            "description": "Date that the identity provider was last updated on.",
            "format": "date-time",
            "readOnly": true
          },
          "userClaim": {
            "type": "string",
            "description": "Identifier of the claim which contains the user ID in the token."
          }
        }
      },
      "FederationSamlIdentityProvider": {
        "title": "SAML",
        "required": ["id", "oktaIdpId"],
        "type": "object",
        "properties": {
          "acsUrl": {
            "type": "string",
            "description": "URL that points to where to send the SAML response."
          },
          "associatedDomains": {
            "uniqueItems": true,
            "type": "array",
            "description": "List that contains the domains associated with the identity provider.",
            "items": {
              "type": "string"
            }
          },
          "associatedOrgs": {
            "uniqueItems": true,
            "type": "array",
            "description": "List that contains the connected organization configurations associated with the identity provider.",
            "items": {
              "$ref": "#/components/schemas/ConnectedOrgConfig"
            }
          },
          "audienceUri": {
            "type": "string",
            "description": "Unique string that identifies the intended audience of the SAML assertion."
          },
          "createdAt": {
            "type": "string",
            "description": "Date that the identity provider was created on.",
            "format": "date-time",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "The description of the identity provider."
          },
          "displayName": {
            "type": "string",
            "description": "Human-readable label that identifies the identity provider."
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the identity provider.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "idpType": {
            "type": "string",
            "description": "String enum that indicates the type of the identity provider. Default is WORKFORCE.",
            "enum": ["WORKFORCE", "WORKLOAD"]
          },
          "issuerUri": {
            "type": "string",
            "description": "Unique string that identifies the issuer of the SAML Assertion or OIDC metadata/discovery document URL."
          },
          "oktaIdpId": {
            "maxLength": 20,
            "minLength": 20,
            "pattern": "^([a-f0-9]{20})$",
            "type": "string",
            "description": "Legacy 20-hexadecimal digit string that identifies the identity provider."
          },
          "pemFileInfo": {
            "$ref": "#/components/schemas/PemFileInfo"
          },
          "protocol": {
            "type": "string",
            "description": "String enum that indicates the protocol of the identity provider. Either SAML or OIDC.",
            "enum": ["SAML", "OIDC"]
          },
          "requestBinding": {
            "type": "string",
            "description": "SAML Authentication Request Protocol HTTP method binding (POST or REDIRECT) that Federated Authentication uses to send the authentication request.",
            "enum": ["HTTP-POST", "HTTP-REDIRECT"]
          },
          "responseSignatureAlgorithm": {
            "type": "string",
            "description": "Signature algorithm that Federated Authentication uses to encrypt the identity provider signature.",
            "enum": ["SHA-1", "SHA-256"]
          },
          "slug": {
            "type": "string",
            "description": "Custom SSO Url for the identity provider."
          },
          "ssoDebugEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the identity provider has SSO debug enabled."
          },
          "ssoUrl": {
            "type": "string",
            "description": "URL that points to the receiver of the SAML authentication request."
          },
          "status": {
            "type": "string",
            "description": "String enum that indicates whether the identity provider is active.",
            "enum": ["ACTIVE", "INACTIVE"]
          },
          "updatedAt": {
            "type": "string",
            "description": "Date that the identity provider was last updated on.",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "PaginatedFederationIdentityProvider": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/FederationIdentityProvider"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "PemFileInfo": {
        "type": "object",
        "properties": {
          "certificates": {
            "type": "array",
            "description": "List of certificates in the file.",
            "items": {
              "$ref": "#/components/schemas/X509Certificate"
            }
          },
          "fileName": {
            "type": "string",
            "description": "Human-readable label given to the file."
          }
        },
        "description": "PEM file information for the identity provider's current certificates."
      },
      "X509Certificate": {
        "type": "object",
        "properties": {
          "notAfter": {
            "type": "string",
            "description": "Latest date that the certificate is valid.",
            "format": "date-time"
          },
          "notBefore": {
            "type": "string",
            "description": "Earliest date that the certificate is valid.",
            "format": "date-time"
          }
        }
      },
      "FederationOidcIdentityProvider": {
        "required": ["id", "oktaIdpId"],
        "type": "object",
        "properties": {
          "associatedOrgs": {
            "uniqueItems": true,
            "type": "array",
            "description": "List that contains the connected organization configurations associated with the identity provider.",
            "items": {
              "$ref": "#/components/schemas/ConnectedOrgConfig"
            }
          },
          "audience": {
            "type": "string",
            "description": "Identifier of the intended recipient of the token."
          },
          "authorizationType": {
            "type": "string",
            "description": "Indicates whether authorization is granted based on group membership or user ID.",
            "enum": ["GROUP", "USER"]
          },
          "createdAt": {
            "type": "string",
            "description": "Date that the identity provider was created on.",
            "format": "date-time",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "The description of the identity provider."
          },
          "displayName": {
            "type": "string",
            "description": "Human-readable label that identifies the identity provider."
          },
          "groupsClaim": {
            "type": "string",
            "description": "Identifier of the claim which contains IdP Group IDs in the token."
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the identity provider.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "idpType": {
            "type": "string",
            "description": "String enum that indicates the type of the identity provider. Default is WORKFORCE.",
            "enum": ["WORKFORCE", "WORKLOAD"]
          },
          "issuerUri": {
            "type": "string",
            "description": "Unique string that identifies the issuer of the SAML Assertion or OIDC metadata/discovery document URL."
          },
          "oktaIdpId": {
            "maxLength": 20,
            "minLength": 20,
            "pattern": "^([a-f0-9]{20})$",
            "type": "string",
            "description": "Legacy 20-hexadecimal digit string that identifies the identity provider."
          },
          "protocol": {
            "type": "string",
            "description": "String enum that indicates the protocol of the identity provider. Either SAML or OIDC.",
            "enum": ["SAML", "OIDC"]
          },
          "updatedAt": {
            "type": "string",
            "description": "Date that the identity provider was last updated on.",
            "format": "date-time",
            "readOnly": true
          },
          "userClaim": {
            "type": "string",
            "description": "Identifier of the claim which contains the user ID in the token."
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/FederationOidcWorkforceIdentityProvider"
          },
          {
            "$ref": "#/components/schemas/FederationOidcWorkloadIdentityProvider"
          }
        ]
      },
      "FederationOidcIdentityProviderUpdate": {
        "type": "object",
        "properties": {
          "audience": {
            "type": "string",
            "description": "Identifier of the intended recipient of the token."
          },
          "authorizationType": {
            "type": "string",
            "description": "Indicates whether authorization is granted based on group membership or user ID.",
            "enum": ["GROUP", "USER"]
          },
          "description": {
            "type": "string",
            "description": "The description of the identity provider."
          },
          "displayName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Human-readable label that identifies the identity provider."
          },
          "groupsClaim": {
            "type": "string",
            "description": "Identifier of the claim which contains IdP Group IDs in the token."
          },
          "idpType": {
            "type": "string",
            "description": "String enum that indicates the type of the identity provider. Default is WORKFORCE.",
            "enum": ["WORKFORCE", "WORKLOAD"]
          },
          "issuerUri": {
            "type": "string",
            "description": "Unique string that identifies the issuer of the SAML Assertion or OIDC metadata/discovery document URL.",
            "example": "urn:idp:default"
          },
          "protocol": {
            "type": "string",
            "description": "String enum that indicates the protocol of the identity provider. Either SAML or OIDC.",
            "enum": ["SAML", "OIDC"]
          },
          "userClaim": {
            "type": "string",
            "description": "Identifier of the claim which contains the user ID in the token."
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/FederationOidcWorkforceIdentityProviderUpdate"
          },
          {
            "$ref": "#/components/schemas/FederationOidcWorkloadIdentityProviderUpdate"
          }
        ]
      },
      "FederationOidcWorkforceIdentityProviderUpdate": {
        "title": "OIDC WORKFORCE",
        "type": "object",
        "properties": {
          "associatedDomains": {
            "uniqueItems": true,
            "type": "array",
            "description": "List that contains the domains associated with the identity provider.",
            "items": {
              "type": "string"
            }
          },
          "audience": {
            "type": "string",
            "description": "Identifier of the intended recipient of the token."
          },
          "authorizationType": {
            "type": "string",
            "description": "Indicates whether authorization is granted based on group membership or user ID.",
            "enum": ["GROUP", "USER"]
          },
          "clientId": {
            "type": "string",
            "description": "Client identifier that is assigned to an application by the Identity Provider."
          },
          "description": {
            "type": "string",
            "description": "The description of the identity provider."
          },
          "displayName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Human-readable label that identifies the identity provider."
          },
          "groupsClaim": {
            "type": "string",
            "description": "Identifier of the claim which contains IdP Group IDs in the token."
          },
          "idpType": {
            "type": "string",
            "description": "String enum that indicates the type of the identity provider. Default is WORKFORCE.",
            "enum": ["WORKFORCE", "WORKLOAD"]
          },
          "issuerUri": {
            "type": "string",
            "description": "Unique string that identifies the issuer of the SAML Assertion or OIDC metadata/discovery document URL.",
            "example": "urn:idp:default"
          },
          "protocol": {
            "type": "string",
            "description": "String enum that indicates the protocol of the identity provider. Either SAML or OIDC.",
            "enum": ["SAML", "OIDC"]
          },
          "requestedScopes": {
            "type": "array",
            "description": "Scopes that MongoDB applications will request from the authorization endpoint.",
            "items": {
              "type": "string"
            }
          },
          "userClaim": {
            "type": "string",
            "description": "Identifier of the claim which contains the user ID in the token."
          }
        }
      },
      "FederationOidcWorkloadIdentityProviderUpdate": {
        "title": "OIDC WORKLOAD",
        "type": "object",
        "properties": {
          "audience": {
            "type": "string",
            "description": "Identifier of the intended recipient of the token."
          },
          "authorizationType": {
            "type": "string",
            "description": "Indicates whether authorization is granted based on group membership or user ID.",
            "enum": ["GROUP", "USER"]
          },
          "description": {
            "type": "string",
            "description": "The description of the identity provider."
          },
          "displayName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Human-readable label that identifies the identity provider."
          },
          "groupsClaim": {
            "type": "string",
            "description": "Identifier of the claim which contains IdP Group IDs in the token."
          },
          "idpType": {
            "type": "string",
            "description": "String enum that indicates the type of the identity provider. Default is WORKFORCE.",
            "enum": ["WORKFORCE", "WORKLOAD"]
          },
          "issuerUri": {
            "type": "string",
            "description": "Unique string that identifies the issuer of the SAML Assertion or OIDC metadata/discovery document URL.",
            "example": "urn:idp:default"
          },
          "protocol": {
            "type": "string",
            "description": "String enum that indicates the protocol of the identity provider. Either SAML or OIDC.",
            "enum": ["SAML", "OIDC"]
          },
          "userClaim": {
            "type": "string",
            "description": "Identifier of the claim which contains the user ID in the token."
          }
        }
      },
      "FederationIdentityProviderUpdate": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "The description of the identity provider."
          },
          "displayName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Human-readable label that identifies the identity provider."
          },
          "idpType": {
            "type": "string",
            "description": "String enum that indicates the type of the identity provider. Default is WORKFORCE.",
            "enum": ["WORKFORCE", "WORKLOAD"]
          },
          "issuerUri": {
            "type": "string",
            "description": "Unique string that identifies the issuer of the SAML Assertion or OIDC metadata/discovery document URL.",
            "example": "urn:idp:default"
          },
          "protocol": {
            "type": "string",
            "description": "String enum that indicates the protocol of the identity provider. Either SAML or OIDC.",
            "enum": ["SAML", "OIDC"]
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/FederationSamlIdentityProviderUpdate"
          },
          {
            "$ref": "#/components/schemas/FederationOidcWorkforceIdentityProviderUpdate"
          },
          {
            "$ref": "#/components/schemas/FederationOidcWorkloadIdentityProviderUpdate"
          }
        ]
      },
      "FederationSamlIdentityProviderUpdate": {
        "title": "SAML",
        "required": ["ssoDebugEnabled"],
        "type": "object",
        "properties": {
          "associatedDomains": {
            "uniqueItems": true,
            "type": "array",
            "description": "List that contains the domains associated with the identity provider.",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string",
            "description": "The description of the identity provider."
          },
          "displayName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Human-readable label that identifies the identity provider."
          },
          "idpType": {
            "type": "string",
            "description": "String enum that indicates the type of the identity provider. Default is WORKFORCE.",
            "enum": ["WORKFORCE", "WORKLOAD"]
          },
          "issuerUri": {
            "type": "string",
            "description": "Unique string that identifies the issuer of the SAML Assertion or OIDC metadata/discovery document URL.",
            "example": "urn:idp:default"
          },
          "pemFileInfo": {
            "$ref": "#/components/schemas/PemFileInfoUpdate"
          },
          "protocol": {
            "type": "string",
            "description": "String enum that indicates the protocol of the identity provider. Either SAML or OIDC.",
            "enum": ["SAML", "OIDC"]
          },
          "requestBinding": {
            "type": "string",
            "description": "SAML Authentication Request Protocol HTTP method binding (POST or REDIRECT) that Federated Authentication uses to send the authentication request.",
            "enum": ["HTTP-POST", "HTTP-REDIRECT"]
          },
          "responseSignatureAlgorithm": {
            "type": "string",
            "description": "Signature algorithm that Federated Authentication uses to encrypt the identity provider signature.",
            "enum": ["SHA-1", "SHA-256"]
          },
          "slug": {
            "type": "string",
            "description": "Custom SSO Url for the identity provider."
          },
          "ssoDebugEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the identity provider has SSO debug enabled."
          },
          "ssoUrl": {
            "type": "string",
            "description": "URL that points to the receiver of the SAML authentication request.",
            "example": "https://example.com"
          },
          "status": {
            "type": "string",
            "description": "String enum that indicates whether the identity provider is active.",
            "enum": ["ACTIVE", "INACTIVE"]
          }
        }
      },
      "PemFileInfoUpdate": {
        "type": "object",
        "properties": {
          "certificates": {
            "type": "array",
            "description": "List of certificates in the file.",
            "items": {
              "$ref": "#/components/schemas/X509CertificateUpdate"
            }
          },
          "fileName": {
            "type": "string",
            "description": "Human-readable label given to the file."
          }
        },
        "description": "PEM file information for the identity provider's current certificates."
      },
      "X509CertificateUpdate": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Certificate content."
          },
          "notAfter": {
            "type": "string",
            "description": "Latest date that the certificate is valid.",
            "format": "date-time"
          },
          "notBefore": {
            "type": "string",
            "description": "Earliest date that the certificate is valid.",
            "format": "date-time"
          }
        }
      },
      "AuditLog": {
        "type": "object",
        "properties": {
          "auditAuthorizationSuccess": {
            "type": "boolean",
            "description": "Flag that indicates whether someone set auditing to track successful authentications. This only applies to the `\"atype\" : \"authCheck\"` audit filter. Setting this parameter to `true` degrades cluster performance.",
            "externalDocs": {
              "description": "System Auditing Messages",
              "url": "https://docs.mongodb.com/manual/reference/audit-message/#audit-event-actions-details-and-results"
            },
            "default": false
          },
          "auditFilter": {
            "type": "string",
            "description": "JSON document that specifies which events to record. Escape any characters that may prevent parsing, such as single or double quotes, using a backslash (`\\`).",
            "externalDocs": {
              "description": "Custom Auditing Filter",
              "url": "https://docs.atlas.mongodb.com/tutorial/auditing-custom-filter/"
            }
          },
          "configurationType": {
            "type": "string",
            "description": "Human-readable label that displays how to configure the audit filter.",
            "readOnly": true,
            "enum": ["NONE", "FILTER_BUILDER", "FILTER_JSON"]
          },
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled database auditing for the specified project.",
            "default": false
          }
        }
      },
      "Group": {
        "required": ["clusterCount", "created", "name", "orgId"],
        "type": "object",
        "properties": {
          "clusterCount": {
            "type": "integer",
            "description": "Quantity of MongoDB Cloud clusters deployed in this project.",
            "format": "int64",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created this project. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud project.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "name": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[\\p{L}\\p{N}\\-_.(),:&@+']{1,64}$",
            "type": "string",
            "description": "Human-readable label that identifies the project included in the MongoDB Cloud organization."
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud organization to which the project belongs.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "regionUsageRestrictions": {
            "type": "string",
            "description": "Applies to Atlas for Government only.\n\nIn Commercial Atlas, this field will be rejected in requests and missing in responses.\n\nThis field sets restrictions on available regions in the project.\n\n| Value                             | Available Regions |\n|-----------------------------------|------------|\n| `COMMERCIAL_FEDRAMP_REGIONS_ONLY` | Only allows deployments in FedRAMP Moderate regions.|\n| `GOV_REGIONS_ONLY`                | Only allows deployments in GovCloud regions.|",
            "externalDocs": {
              "url": "https://www.mongodb.com/docs/atlas/government/overview/supported-regions/#supported-cloud-providers-and-regions"
            },
            "default": "COMMERCIAL_FEDRAMP_REGIONS_ONLY",
            "enum": ["COMMERCIAL_FEDRAMP_REGIONS_ONLY", "GOV_REGIONS_ONLY"]
          },
          "tags": {
            "type": "array",
            "description": "List that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the project.",
            "externalDocs": {
              "description": "Resource Tags",
              "url": "https://www.mongodb.com/docs/atlas/tags"
            },
            "items": {
              "$ref": "#/components/schemas/ResourceTag"
            }
          },
          "withDefaultAlertsSettings": {
            "type": "boolean",
            "description": "Flag that indicates whether to create the project with default alert settings.",
            "writeOnly": true
          }
        }
      },
      "ResourceTag": {
        "title": "Resource Tag",
        "required": ["key", "value"],
        "type": "object",
        "properties": {
          "key": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Constant that defines the set of the tag. For example, `environment` in the `environment : production` tag."
          },
          "value": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Variable that belongs to the set of the tag. For example, `production` in the `environment : production` tag."
          }
        },
        "description": "Key-value pair that tags and categorizes a MongoDB Cloud organization, project, or cluster. For example, `environment : production`."
      },
      "PaginatedAtlasGroupView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/Group"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "DataFederationLimit": {
        "title": "Limits",
        "required": ["name", "value"],
        "type": "object",
        "properties": {
          "currentUsage": {
            "type": "integer",
            "description": "Amount that indicates the current usage of the limit.",
            "format": "int64",
            "readOnly": true
          },
          "defaultLimit": {
            "type": "integer",
            "description": "Default value of the limit.",
            "format": "int64",
            "readOnly": true
          },
          "maximumLimit": {
            "type": "integer",
            "description": "Maximum value of the limit.",
            "format": "int64",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the user-managed limit to modify.",
            "readOnly": true
          },
          "value": {
            "type": "integer",
            "description": "Amount to set the limit to.",
            "format": "int64"
          }
        },
        "description": "Details of user managed limits.",
        "discriminator": {
          "propertyName": "name",
          "mapping": {
            "atlas.project.security.databaseAccess.users": "#/components/schemas/DefaultLimit",
            "atlas.project.security.databaseAccess.customRoles": "#/components/schemas/DefaultLimit",
            "atlas.project.security.networkAccess.entries": "#/components/schemas/DefaultLimit",
            "atlas.project.security.networkAccess.crossRegionEntries": "#/components/schemas/DefaultLimit",
            "atlas.project.deployment.clusters": "#/components/schemas/DefaultLimit",
            "atlas.project.deployment.serverlessMTMs": "#/components/schemas/DefaultLimit",
            "atlas.project.deployment.nodesPerPrivateLinkRegion": "#/components/schemas/DefaultLimit",
            "dataFederation.bytesProcessed.query": "#/components/schemas/DataFederationQueryLimit",
            "dataFederation.bytesProcessed.daily": "#/components/schemas/DataFederationQueryLimit",
            "dataFederation.bytesProcessed.weekly": "#/components/schemas/DataFederationQueryLimit",
            "dataFederation.bytesProcessed.monthly": "#/components/schemas/DataFederationQueryLimit"
          }
        }
      },
      "DataFederationQueryLimit": {
        "title": "Data Federation Query Limit",
        "required": ["name", "value"],
        "type": "object",
        "properties": {
          "currentUsage": {
            "type": "integer",
            "description": "Amount that indicates the current usage of the limit.",
            "format": "int64",
            "readOnly": true
          },
          "defaultLimit": {
            "type": "integer",
            "description": "Default value of the limit.",
            "format": "int64",
            "readOnly": true
          },
          "lastModifiedDate": {
            "type": "string",
            "description": "Only used for Data Federation limits. Timestamp that indicates when this usage limit was last modified. This field uses the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "maximumLimit": {
            "type": "integer",
            "description": "Maximum value of the limit.",
            "format": "int64",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the user-managed limit to modify.",
            "readOnly": true
          },
          "overrunPolicy": {
            "type": "string",
            "description": "Only used for Data Federation limits. Action to take when the usage limit is exceeded. If limit span is set to QUERY, this is ignored because MongoDB Cloud stops the query when it exceeds the usage limit.",
            "enum": ["BLOCK", "BLOCK_AND_KILL"]
          },
          "value": {
            "type": "integer",
            "description": "Amount to set the limit to.",
            "format": "int64"
          }
        },
        "description": "Details of a query limit for Data Federation. Query limit is the limit on the amount of usage during a time period based on cost."
      },
      "DefaultLimit": {
        "title": "Default Limit",
        "required": ["name", "value"],
        "type": "object",
        "properties": {
          "currentUsage": {
            "type": "integer",
            "description": "Amount that indicates the current usage of the limit.",
            "format": "int64",
            "readOnly": true
          },
          "defaultLimit": {
            "type": "integer",
            "description": "Default value of the limit.",
            "format": "int64",
            "readOnly": true
          },
          "maximumLimit": {
            "type": "integer",
            "description": "Maximum value of the limit.",
            "format": "int64",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the user-managed limit to modify.",
            "readOnly": true
          },
          "value": {
            "type": "integer",
            "description": "Amount to set the limit to.",
            "format": "int64"
          }
        },
        "description": "Details of user managed limits"
      },
      "GroupSettings": {
        "type": "object",
        "properties": {
          "isCollectDatabaseSpecificsStatisticsEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether to collect database-specific metrics  for the specified project."
          },
          "isDataExplorerEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether to enable the Data Explorer for the specified project."
          },
          "isExtendedStorageSizesEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether to enable extended storage sizes  for the specified project."
          },
          "isPerformanceAdvisorEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether to enable the Performance Advisor and Profiler  for the specified project."
          },
          "isRealtimePerformancePanelEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether to enable the Real Time Performance Panel for the specified project."
          },
          "isSchemaAdvisorEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether to enable the Schema Advisor for the specified project."
          }
        },
        "description": "Collection of settings that configures the project."
      },
      "CloudAccessRoleAssignment": {
        "title": "Role Assignment",
        "type": "object",
        "properties": {
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project to which this role belongs. You can set a value for this parameter or **orgId** but not both in the same request.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which this role belongs. You can set a value for this parameter or **groupId** but not both in the same request.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "roleName": {
            "type": "string",
            "description": "Human-readable label that identifies the collection of privileges that MongoDB Cloud grants a specific API key, MongoDB Cloud user, or MongoDB Cloud team. These roles include organization- and project-level roles.\n\nOrganization Roles\n\n* ORG_OWNER\n* ORG_MEMBER\n* ORG_GROUP_CREATOR\n* ORG_BILLING_ADMIN\n* ORG_READ_ONLY\n\nProject Roles\n\n* GROUP_CLUSTER_MANAGER\n* GROUP_DATA_ACCESS_ADMIN\n* GROUP_DATA_ACCESS_READ_ONLY\n* GROUP_DATA_ACCESS_READ_WRITE\n* GROUP_OWNER\n* GROUP_READ_ONLY\n* GROUP_SEARCH_INDEX_EDITOR\n* GROUP_STREAM_PROCESSING_OWNER\n\n",
            "enum": [
              "ORG_OWNER",
              "ORG_MEMBER",
              "ORG_GROUP_CREATOR",
              "ORG_BILLING_ADMIN",
              "ORG_READ_ONLY",
              "GROUP_CLUSTER_MANAGER",
              "GROUP_DATA_ACCESS_ADMIN",
              "GROUP_DATA_ACCESS_READ_ONLY",
              "GROUP_DATA_ACCESS_READ_WRITE",
              "GROUP_OWNER",
              "GROUP_READ_ONLY",
              "GROUP_SEARCH_INDEX_EDITOR",
              "GROUP_STREAM_PROCESSING_OWNER"
            ]
          }
        },
        "description": "MongoDB Cloud user's roles and the corresponding organization or project to which that role applies. Each role can apply to one organization or one project but not both."
      },
      "CloudAppUser": {
        "required": ["country", "emailAddress", "firstName", "lastName", "mobileNumber", "password", "username"],
        "type": "object",
        "properties": {
          "country": {
            "pattern": "^([A-Z]{2})$",
            "type": "string",
            "description": "Two alphabet characters that identifies MongoDB Cloud user's geographic location. This parameter uses the ISO 3166-1a2 code format."
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time when the current account is created. This value is in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "emailAddress": {
            "type": "string",
            "description": "Email address that belongs to the MongoDB Cloud user.",
            "format": "email",
            "readOnly": true,
            "deprecated": true
          },
          "firstName": {
            "type": "string",
            "description": "First or given name that belongs to the MongoDB Cloud user."
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud user.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "lastAuth": {
            "type": "string",
            "description": "Date and time when the current account last authenticated. This value is in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "lastName": {
            "type": "string",
            "description": "Last name, family name, or surname that belongs to the MongoDB Cloud user."
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "mobileNumber": {
            "pattern": "(?:(?:\\\\+?1\\\\s*(?:[.-]\\\\s*)?)?(?:(\\\\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\\\\s*)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\\\\s*(?:[.-]\\\\s*)?)([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2})\\\\s*(?:[.-]\\\\s*)?([0-9]{4})$",
            "type": "string",
            "description": "Mobile phone number that belongs to the MongoDB Cloud user."
          },
          "password": {
            "minLength": 8,
            "type": "string",
            "description": "Password applied with the username to log in to MongoDB Cloud. MongoDB Cloud does not return this parameter except in response to creating a new MongoDB Cloud user. Only the MongoDB Cloud user can update their password after it has been set from the MongoDB Cloud console."
          },
          "roles": {
            "type": "array",
            "description": "List of objects that display the MongoDB Cloud user's roles and the corresponding organization or project to which that role applies. A role can apply to one organization or one project but not both.",
            "items": {
              "$ref": "#/components/schemas/CloudAccessRoleAssignment"
            }
          },
          "teamIds": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of unique 24-hexadecimal digit strings that identifies the teams to which this MongoDB Cloud user belongs.",
            "readOnly": true,
            "items": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "description": "Unique 24-hexadecimal digit string that identifies the team to which this MongoDB Cloud user belongs.",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          },
          "username": {
            "type": "string",
            "description": "Email address that represents the username of the MongoDB Cloud user.",
            "format": "email"
          }
        }
      },
      "PaginatedAppUserView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/CloudAppUser"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "ClusterIPAddresses": {
        "title": "Cluster IP Addresses",
        "type": "object",
        "properties": {
          "clusterName": {
            "type": "string",
            "description": "Human-readable label that identifies the cluster.",
            "readOnly": true
          },
          "inbound": {
            "type": "array",
            "description": "List of inbound IP addresses associated with the cluster. If your network allows outbound HTTP requests only to specific IP addresses, you must allow access to the following IP addresses so that your application can connect to your Atlas cluster.",
            "readOnly": true,
            "items": {
              "type": "string"
            }
          },
          "outbound": {
            "type": "array",
            "description": "List of outbound IP addresses associated with the cluster. If your network allows inbound HTTP requests only from specific IP addresses, you must allow access from the following IP addresses so that your Atlas cluster can communicate with your webhooks and KMS.",
            "readOnly": true,
            "items": {
              "type": "string"
            }
          }
        },
        "description": "List of IP addresses in a cluster."
      },
      "GroupIPAddresses": {
        "title": "Group IP Address",
        "type": "object",
        "properties": {
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud project.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "services": {
            "$ref": "#/components/schemas/GroupService"
          }
        },
        "description": "List of IP addresses in a project."
      },
      "GroupService": {
        "title": "Group Service IP Addresses",
        "type": "object",
        "properties": {
          "clusters": {
            "type": "array",
            "description": "IP addresses of clusters.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ClusterIPAddresses"
            }
          }
        },
        "description": "List of IP addresses in a project categorized by services.",
        "readOnly": true
      },
      "GroupUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the project included in the MongoDB Cloud organization."
          },
          "tags": {
            "type": "array",
            "description": "List that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the project.",
            "externalDocs": {
              "description": "Resource Tags",
              "url": "https://www.mongodb.com/docs/atlas/tags"
            },
            "items": {
              "$ref": "#/components/schemas/ResourceTag"
            }
          }
        },
        "description": "Request view to update the group."
      },
      "UpdateGroupRolesForUser": {
        "type": "object",
        "properties": {
          "groupRoles": {
            "uniqueItems": true,
            "type": "array",
            "description": "One or more project level roles to assign to the MongoDB Cloud user.",
            "items": {
              "type": "string",
              "enum": [
                "GROUP_CLUSTER_MANAGER",
                "GROUP_DATA_ACCESS_ADMIN",
                "GROUP_DATA_ACCESS_READ_ONLY",
                "GROUP_DATA_ACCESS_READ_WRITE",
                "GROUP_OWNER",
                "GROUP_READ_ONLY",
                "GROUP_SEARCH_INDEX_EDITOR",
                "GROUP_STREAM_PROCESSING_OWNER"
              ]
            }
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "Datadog": {
        "title": "DATADOG",
        "required": ["apiKey"],
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "Key that allows MongoDB Cloud to access your Datadog account.\n\n**NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:\n\n* View or edit the alert through the Atlas UI.\n\n* Query the alert for the notification through the Atlas Administration API.",
            "example": "****************************a23c"
          },
          "id": {
            "type": "string",
            "description": "Integration id.",
            "nullable": true
          },
          "region": {
            "type": "string",
            "description": "Two-letter code that indicates which regional URL MongoDB uses to access the Datadog API.\n\nTo learn more about Datadog's regions, see <a href=\"https://docs.datadoghq.com/getting_started/site/\" target=\"_blank\" rel=\"noopener noreferrer\">Datadog Sites</a>.",
            "enum": ["US", "EU", "US3", "US5", "AP1"]
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies the service to which you want to integrate with MongoDB Cloud. The value must match the third-party service integration type.",
            "enum": ["DATADOG"]
          }
        },
        "description": "Details to integrate one Datadog account with one MongoDB Cloud project."
      },
      "MicrosoftTeams": {
        "title": "MICROSOFT_TEAMS",
        "required": ["microsoftTeamsWebhookUrl"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Integration id.",
            "nullable": true
          },
          "microsoftTeamsWebhookUrl": {
            "type": "string",
            "description": "Endpoint web address of the Microsoft Teams webhook to which MongoDB Cloud sends notifications.\n\n**NOTE**: When you view or edit the alert for a Microsoft Teams notification, the URL appears partially redacted.",
            "example": "https://webhook.com/****"
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies the service to which you want to integrate with MongoDB Cloud. The value must match the third-party service integration type.",
            "enum": ["MICROSOFT_TEAMS"]
          }
        },
        "description": "Details to integrate one Microsoft Teams account with one MongoDB Cloud project."
      },
      "NewRelic": {
        "title": "NEW_RELIC",
        "required": ["accountId", "licenseKey", "readToken", "writeToken"],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 40,
            "minLength": 40,
            "pattern": "^([0-9a-f]){40}$",
            "type": "string",
            "description": "Unique 40-hexadecimal digit string that identifies your New Relic account.",
            "example": "bcc3c81b344a6030a3935c2527e2216535af7718"
          },
          "id": {
            "type": "string",
            "description": "Integration id.",
            "nullable": true
          },
          "licenseKey": {
            "maxLength": 40,
            "minLength": 40,
            "pattern": "^([0-9a-f]){40}$",
            "type": "string",
            "description": "Unique 40-hexadecimal digit string that identifies your New Relic license.\n\n**IMPORTANT**: Effective Wednesday, June 16th, 2021, New Relic no longer supports the plugin-based integration with MongoDB. We do not recommend that you sign up for the plugin-based integration.\nTo learn more, see the <a href=\"https://discuss.newrelic.com/t/new-relic-plugin-eol-wednesday-june-16th-2021/127267\" target=\"_blank\">New Relic Plugin EOL Statement</a> Consider configuring an alternative monitoring integration before June 16th to maintain visibility into your MongoDB deployments.",
            "example": "bc3768f44193c282b2688ab39e00f8e4fc8d75ea"
          },
          "readToken": {
            "type": "string",
            "description": "Query key used to access your New Relic account.",
            "example": "193c96aee4a3ac640b98634562e2631f17ae0a69"
          },
          "writeToken": {
            "type": "string",
            "description": "Insert key associated with your New Relic account.",
            "example": "a67b10e5cd7f8fb6a34b501136c409f373edc218"
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies the service to which you want to integrate with MongoDB Cloud. The value must match the third-party service integration type.",
            "enum": ["NEW_RELIC"]
          }
        },
        "description": "Details to integrate one New Relic account with one MongoDB Cloud project.\n\n***IMPORTANT**: Effective Wednesday, June 16th, 2021, New Relic no longer supports the plugin-based integration with MongoDB. We do not recommend that you sign up for the plugin-based integration.\n\nTo learn more, see the <a href=\"https://discuss.newrelic.com/t/new-relic-plugin-eol-wednesday-june-16th-2021/127267\" target=\"_blank\">New Relic Plugin EOL Statement</a>. Consider configuring an alternative monitoring integration before June 16th to maintain visibility into your MongoDB deployments."
      },
      "OpsGenie": {
        "title": "OPS_GENIE",
        "required": ["apiKey"],
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "Key that allows MongoDB Cloud to access your Opsgenie account.\n\n**NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:\n\n* View or edit the alert through the Atlas UI.\n\n* Query the alert for the notification through the Atlas Administration API.",
            "example": "********************************a111"
          },
          "id": {
            "type": "string",
            "description": "Integration id.",
            "nullable": true
          },
          "region": {
            "type": "string",
            "description": "Two-letter code that indicates which regional URL MongoDB uses to access the Opsgenie API.",
            "default": "US",
            "enum": ["US", "EU"]
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies the service to which you want to integrate with MongoDB Cloud. The value must match the third-party service integration type.",
            "enum": ["OPS_GENIE"]
          }
        },
        "description": "Details to integrate one Opsgenie account with one MongoDB Cloud project."
      },
      "PagerDuty": {
        "title": "PAGER_DUTY",
        "required": ["serviceKey"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Integration id.",
            "nullable": true
          },
          "region": {
            "type": "string",
            "description": "PagerDuty region that indicates the API Uniform Resource Locator (URL) to use.",
            "enum": ["US", "EU"]
          },
          "serviceKey": {
            "type": "string",
            "description": "Service key associated with your PagerDuty account.\n\n**NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:\n\n* View or edit the alert through the Atlas UI.\n\n* Query the alert for the notification through the Atlas Administration API.",
            "example": "****************************7890"
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies the service to which you want to integrate with MongoDB Cloud. The value must match the third-party service integration type.",
            "enum": ["PAGER_DUTY"]
          }
        },
        "description": "Details to integrate one PagerDuty account with one MongoDB Cloud project."
      },
      "PaginatedIntegrationView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ThirdPartyIntegration"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "Prometheus": {
        "title": "PROMETHEUS",
        "required": ["enabled", "serviceDiscovery", "username"],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone has activated the Prometheus integration."
          },
          "id": {
            "type": "string",
            "description": "Integration id.",
            "nullable": true
          },
          "serviceDiscovery": {
            "type": "string",
            "description": "Desired method to discover the Prometheus service.",
            "enum": ["http", "file"]
          },
          "username": {
            "type": "string",
            "description": "Human-readable label that identifies your Prometheus incoming webhook.",
            "example": "prom_user_618d48e05277a606ed2496fe"
          },
          "password": {
            "type": "string",
            "description": "Password needed to allow MongoDB Cloud to access your Prometheus account.",
            "writeOnly": true
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies the service to which you want to integrate with MongoDB Cloud. The value must match the third-party service integration type.",
            "enum": ["PROMETHEUS"]
          }
        },
        "description": "Details to integrate one Prometheus account with one MongoDB Cloud project."
      },
      "Slack": {
        "title": "SLACK",
        "required": ["apiToken", "channelName"],
        "type": "object",
        "properties": {
          "apiToken": {
            "type": "string",
            "description": "Key that allows MongoDB Cloud to access your Slack account.\n\n**NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:\n\n* View or edit the alert through the Atlas UI.\n\n* Query the alert for the notification through the Atlas Administration API.\n\n**IMPORTANT**: Slack integrations now use the OAuth2 verification method and must  be initially configured, or updated from a legacy integration, through the Atlas  third-party service integrations page. Legacy tokens will soon no longer be  supported.",
            "example": "**********************************************************************abcd"
          },
          "channelName": {
            "maxLength": 80,
            "minLength": 1,
            "type": "string",
            "description": "Name of the Slack channel to which MongoDB Cloud sends alert notifications.",
            "nullable": true,
            "example": "alerts"
          },
          "id": {
            "type": "string",
            "description": "Integration id.",
            "nullable": true
          },
          "teamName": {
            "type": "string",
            "description": "Human-readable label that identifies your Slack team. Set this parameter when you configure a legacy Slack integration.",
            "example": "MongoDB"
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies the service to which you want to integrate with MongoDB Cloud. The value must match the third-party service integration type.",
            "enum": ["SLACK"]
          }
        },
        "description": "Details to integrate one Slack account with one MongoDB Cloud project."
      },
      "ThirdPartyIntegration": {
        "title": "Third-Party Integration",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Integration id.",
            "nullable": true
          },
          "type": {
            "title": "Integration Type",
            "type": "string",
            "description": "Integration type",
            "enum": [
              "PAGER_DUTY",
              "SLACK",
              "DATADOG",
              "NEW_RELIC",
              "OPS_GENIE",
              "VICTOR_OPS",
              "WEBHOOK",
              "HIP_CHAT",
              "PROMETHEUS",
              "MICROSOFT_TEAMS"
            ]
          }
        },
        "description": "Collection of settings that describe third-party integrations.",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "PAGER_DUTY": "#/components/schemas/PagerDuty",
            "SLACK": "#/components/schemas/Slack",
            "DATADOG": "#/components/schemas/Datadog",
            "NEW_RELIC": "#/components/schemas/NewRelic",
            "OPS_GENIE": "#/components/schemas/OpsGenie",
            "VICTOR_OPS": "#/components/schemas/VictorOps",
            "WEBHOOK": "#/components/schemas/Webhook",
            "PROMETHEUS": "#/components/schemas/Prometheus",
            "MICROSOFT_TEAMS": "#/components/schemas/MicrosoftTeams"
          }
        }
      },
      "VictorOps": {
        "title": "VICTOR_OPS",
        "required": ["apiKey"],
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "Key that allows MongoDB Cloud to access your VictorOps account.\n\n**NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:\n\n* View or edit the alert through the Atlas UI.\n\n* Query the alert for the notification through the Atlas Administration API.",
            "example": "********************************9abc"
          },
          "id": {
            "type": "string",
            "description": "Integration id.",
            "nullable": true
          },
          "routingKey": {
            "type": "string",
            "description": "Routing key associated with your Splunk On-Call account.",
            "example": "test routing"
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies the service to which you want to integrate with MongoDB Cloud. The value must match the third-party service integration type.",
            "enum": ["VICTOR_OPS"]
          }
        },
        "description": "Details to integrate one Splunk On-Call account with one MongoDB Cloud project."
      },
      "Webhook": {
        "title": "WEBHOOK",
        "required": ["url"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Integration id.",
            "nullable": true
          },
          "secret": {
            "type": "string",
            "description": "An optional field returned if your webhook is configured with a secret.\n\n**NOTE**: When you view or edit the alert for a webhook notification, the secret appears completely redacted.",
            "example": "******"
          },
          "url": {
            "type": "string",
            "description": "Endpoint web address to which MongoDB Cloud sends notifications.\n\n**NOTE**: When you view or edit the alert for a webhook notification, the URL appears partially redacted.",
            "example": "https://webhook.com/****"
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies the service to which you want to integrate with MongoDB Cloud. The value must match the third-party service integration type.",
            "enum": ["WEBHOOK"]
          }
        },
        "description": "Details to integrate one webhook with one MongoDB Cloud project."
      },
      "GroupInvitation": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud sent the invitation. This parameter expresses its value in ISO 8601 format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "expiresAt": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud expires the invitation. This parameter expresses its value in ISO 8601 format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the project.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "groupName": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[\\p{L}\\p{N}\\-_.(),:&@+']{1,64}$",
            "type": "string",
            "description": "Human-readable label that identifies the project to which you invited the MongoDB Cloud user.",
            "readOnly": true
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the invitation.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "inviterUsername": {
            "type": "string",
            "description": "Email address of the MongoDB Cloud user who sent the invitation.",
            "format": "email",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "description": "One or more organization or project level roles to assign to the MongoDB Cloud user.",
            "items": {
              "type": "string",
              "enum": [
                "GROUP_CLUSTER_MANAGER",
                "GROUP_DATA_ACCESS_ADMIN",
                "GROUP_DATA_ACCESS_READ_ONLY",
                "GROUP_DATA_ACCESS_READ_WRITE",
                "GROUP_OWNER",
                "GROUP_READ_ONLY"
              ]
            }
          },
          "username": {
            "type": "string",
            "description": "Email address of the MongoDB Cloud user invited to join the project.",
            "format": "email",
            "readOnly": true
          }
        }
      },
      "GroupInvitationRequest": {
        "type": "object",
        "properties": {
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "description": "One or more project level roles to assign to the MongoDB Cloud user.",
            "items": {
              "type": "string",
              "enum": [
                "GROUP_CLUSTER_MANAGER",
                "GROUP_DATA_ACCESS_ADMIN",
                "GROUP_DATA_ACCESS_READ_ONLY",
                "GROUP_DATA_ACCESS_READ_WRITE",
                "GROUP_OWNER",
                "GROUP_READ_ONLY"
              ]
            }
          },
          "username": {
            "type": "string",
            "description": "Email address of the MongoDB Cloud user invited to the specified project.",
            "format": "email"
          }
        }
      },
      "GroupInvitationUpdateRequest": {
        "type": "object",
        "properties": {
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "description": "One or more organization or project level roles to assign to the MongoDB Cloud user.",
            "items": {
              "type": "string",
              "enum": [
                "GROUP_CLUSTER_MANAGER",
                "GROUP_DATA_ACCESS_ADMIN",
                "GROUP_DATA_ACCESS_READ_ONLY",
                "GROUP_DATA_ACCESS_READ_WRITE",
                "GROUP_OWNER",
                "GROUP_READ_ONLY"
              ]
            }
          }
        }
      },
      "PaginatedTeamRoleView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/TeamRole"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "TeamRole": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "roleNames": {
            "uniqueItems": true,
            "type": "array",
            "description": "One or more organization- or project-level roles to assign to the MongoDB Cloud user.",
            "items": {
              "type": "string",
              "enum": [
                "GROUP_CLUSTER_MANAGER",
                "GROUP_DATA_ACCESS_ADMIN",
                "GROUP_DATA_ACCESS_READ_ONLY",
                "GROUP_DATA_ACCESS_READ_WRITE",
                "GROUP_OWNER",
                "GROUP_READ_ONLY"
              ]
            }
          },
          "teamId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the team.",
            "example": "32b6e34b3d91647abb20e7b8"
          }
        }
      },
      "UserAccessRoleAssignment": {
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "description": "List of roles to grant this API key. If you provide this list, provide a minimum of one role and ensure each role applies to this project.",
            "items": {
              "type": "string",
              "enum": [
                "GROUP_CLUSTER_MANAGER",
                "GROUP_DATA_ACCESS_ADMIN",
                "GROUP_DATA_ACCESS_READ_ONLY",
                "GROUP_DATA_ACCESS_READ_WRITE",
                "GROUP_SEARCH_INDEX_EDITOR",
                "GROUP_STREAM_PROCESSING_OWNER",
                "GROUP_OWNER",
                "GROUP_READ_ONLY"
              ]
            }
          },
          "userId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization API key.",
            "readOnly": true
          }
        }
      },
      "ApiKeyUserDetails": {
        "type": "object",
        "properties": {
          "desc": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "Purpose or explanation provided when someone created this organization API key."
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this organization API key assigned to this project.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "privateKey": {
            "type": "string",
            "description": "Redacted private key returned for this organization API key. This key displays unredacted when first created.",
            "readOnly": true,
            "example": "55c3bbb6-b4bb-0be1-e66d20841f3e"
          },
          "publicKey": {
            "maxLength": 8,
            "minLength": 8,
            "type": "string",
            "description": "Public API key value set for the specified organization API key.",
            "readOnly": true,
            "example": "zmmrboas"
          },
          "roles": {
            "type": "array",
            "description": "List that contains the roles that the API key needs to have. All roles you provide must be valid for the specified project or organization. Each request must include a minimum of one valid role. The resource returns all project and organization roles assigned to the API key.",
            "items": {
              "$ref": "#/components/schemas/CloudAccessRoleAssignment"
            }
          }
        },
        "description": "Details of the Programmatic API Keys."
      },
      "CreateAtlasProjectApiKey": {
        "required": ["desc", "roles"],
        "type": "object",
        "properties": {
          "desc": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "Purpose or explanation provided when someone created this project API key."
          },
          "roles": {
            "minItems": 1,
            "type": "array",
            "description": "List of roles to grant this API key. If you provide this list, provide a minimum of one role and ensure each role applies to this project.",
            "items": {
              "type": "string",
              "enum": [
                "ORG_OWNER",
                "ORG_MEMBER",
                "ORG_GROUP_CREATOR",
                "ORG_BILLING_ADMIN",
                "ORG_READ_ONLY",
                "ORG_TEAM_MEMBERS_ADMIN",
                "GROUP_ATLAS_ADMIN",
                "GROUP_AUTOMATION_ADMIN",
                "GROUP_BACKUP_ADMIN",
                "GROUP_MONITORING_ADMIN",
                "GROUP_OWNER",
                "GROUP_READ_ONLY",
                "GROUP_USER_ADMIN",
                "GROUP_BILLING_ADMIN",
                "GROUP_DATA_ACCESS_ADMIN",
                "GROUP_DATA_ACCESS_READ_ONLY",
                "GROUP_DATA_ACCESS_READ_WRITE",
                "GROUP_CHARTS_ADMIN",
                "GROUP_CLUSTER_MANAGER",
                "GROUP_SEARCH_INDEX_EDITOR",
                "GROUP_STREAM_PROCESSING_OWNER"
              ]
            }
          }
        }
      },
      "PaginatedApiApiUserView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ApiKeyUserDetails"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "UpdateAtlasProjectApiKey": {
        "type": "object",
        "properties": {
          "desc": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "Purpose or explanation provided when someone creates this project API key."
          },
          "roles": {
            "type": "array",
            "description": "List of roles to grant this API key. If you provide this list, provide a minimum of one role and ensure each role applies to this project.",
            "items": {
              "type": "string",
              "enum": [
                "ORG_OWNER",
                "ORG_MEMBER",
                "ORG_GROUP_CREATOR",
                "ORG_BILLING_ADMIN",
                "ORG_READ_ONLY",
                "ORG_TEAM_MEMBERS_ADMIN",
                "GROUP_ATLAS_ADMIN",
                "GROUP_AUTOMATION_ADMIN",
                "GROUP_BACKUP_ADMIN",
                "GROUP_MONITORING_ADMIN",
                "GROUP_OWNER",
                "GROUP_READ_ONLY",
                "GROUP_USER_ADMIN",
                "GROUP_BILLING_ADMIN",
                "GROUP_DATA_ACCESS_ADMIN",
                "GROUP_DATA_ACCESS_READ_ONLY",
                "GROUP_DATA_ACCESS_READ_WRITE",
                "GROUP_CHARTS_ADMIN",
                "GROUP_CLUSTER_MANAGER",
                "GROUP_SEARCH_INDEX_EDITOR",
                "GROUP_STREAM_PROCESSING_OWNER"
              ]
            }
          }
        }
      },
      "GroupRole": {
        "type": "object",
        "properties": {
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project to which this role belongs.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "groupRole": {
            "type": "string",
            "description": "Human-readable label that identifies the collection of privileges that MongoDB Cloud grants a specific API key, MongoDB Cloud user, or MongoDB Cloud team. These roles include project-level roles.\n\nProject Roles\n\n* GROUP_CLUSTER_MANAGER\n* GROUP_DATA_ACCESS_ADMIN\n* GROUP_DATA_ACCESS_READ_ONLY\n* GROUP_DATA_ACCESS_READ_WRITE\n* GROUP_OWNER\n* GROUP_READ_ONLY\n* GROUP_SEARCH_INDEX_EDITOR\n* GROUP_STREAM_PROCESSING_OWNER\n\n",
            "enum": [
              "GROUP_CLUSTER_MANAGER",
              "GROUP_DATA_ACCESS_ADMIN",
              "GROUP_DATA_ACCESS_READ_ONLY",
              "GROUP_DATA_ACCESS_READ_WRITE",
              "GROUP_OWNER",
              "GROUP_READ_ONLY",
              "GROUP_SEARCH_INDEX_EDITOR",
              "GROUP_STREAM_PROCESSING_OWNER"
            ]
          }
        }
      },
      "OrganizationInvitation": {
        "required": ["orgName"],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud sent the invitation. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "expiresAt": {
            "type": "string",
            "description": "Date and time when the invitation from MongoDB Cloud expires. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "groupRoleAssignments": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of projects that the user will be added to when they accept their invitation to the organization.",
            "items": {
              "$ref": "#/components/schemas/GroupRole"
            }
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this invitation.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "inviterUsername": {
            "type": "string",
            "description": "Email address of the MongoDB Cloud user who sent the invitation to join the organization.",
            "format": "email",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "orgName": {
            "pattern": "^[\\p{L}\\p{N}\\-_.(),:&@+']{1,64}$",
            "type": "string",
            "description": "Human-readable label that identifies this organization."
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "description": "One or more organization level roles to assign to the MongoDB Cloud user.",
            "items": {
              "type": "string",
              "enum": [
                "ORG_OWNER",
                "ORG_MEMBER",
                "ORG_GROUP_CREATOR",
                "ORG_BILLING_ADMIN",
                "ORG_READ_ONLY",
                "GROUP_CLUSTER_MANAGER",
                "GROUP_DATA_ACCESS_ADMIN",
                "GROUP_DATA_ACCESS_READ_ONLY",
                "GROUP_DATA_ACCESS_READ_WRITE",
                "GROUP_OWNER",
                "GROUP_READ_ONLY"
              ]
            }
          },
          "teamIds": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of unique 24-hexadecimal digit strings that identifies each team.",
            "readOnly": true,
            "items": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "description": "Unique 24-hexadecimal digit string that identifies the team.",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          },
          "username": {
            "type": "string",
            "description": "Email address of the MongoDB Cloud user invited to join the organization.",
            "format": "email"
          }
        }
      },
      "GroupMigrationRequest": {
        "type": "object",
        "properties": {
          "destinationOrgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to move the specified project to.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "destinationOrgPrivateApiKey": {
            "type": "string",
            "description": "Unique string that identifies the private part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) used to verify access to the destination organization. This parameter is required only when you authenticate with Programmatic API Keys.",
            "readOnly": true,
            "example": "55c3bbb6-b4bb-0be1-e66d20841f3e"
          },
          "destinationOrgPublicApiKey": {
            "maxLength": 8,
            "minLength": 8,
            "type": "string",
            "description": "Unique string that identifies the public part of the [API Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) used to verify access to the destination organization. This parameter is required only when you authenticate with Programmatic API Keys.",
            "readOnly": true,
            "example": "zmmrboas"
          }
        }
      },
      "OrganizationInvitationGroupRoleAssignmentsRequest": {
        "type": "object",
        "properties": {
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project to which these roles belong.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "description": "One or more project level roles to assign to the MongoDB Cloud user.",
            "items": {
              "type": "string",
              "enum": [
                "GROUP_CLUSTER_MANAGER",
                "GROUP_DATA_ACCESS_ADMIN",
                "GROUP_DATA_ACCESS_READ_ONLY",
                "GROUP_DATA_ACCESS_READ_WRITE",
                "GROUP_OWNER",
                "GROUP_READ_ONLY"
              ]
            }
          }
        }
      },
      "OrganizationInvitationRequest": {
        "type": "object",
        "properties": {
          "groupRoleAssignments": {
            "type": "array",
            "description": "List of projects that the user will be added to when they accept their invitation to the organization.",
            "items": {
              "$ref": "#/components/schemas/OrganizationInvitationGroupRoleAssignmentsRequest"
            }
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "description": "One or more organization level roles to assign to the MongoDB Cloud user.",
            "items": {
              "type": "string",
              "enum": ["ORG_OWNER", "ORG_MEMBER", "ORG_GROUP_CREATOR", "ORG_BILLING_ADMIN", "ORG_READ_ONLY"]
            }
          },
          "teamIds": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of teams to which you want to invite the desired MongoDB Cloud user.",
            "items": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "description": "Unique 24-hexadecimal digit string that identifies the team.",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          },
          "username": {
            "type": "string",
            "description": "Email address that belongs to the desired MongoDB Cloud user.",
            "format": "email"
          }
        }
      },
      "OrganizationInvitationUpdateRequest": {
        "type": "object",
        "properties": {
          "groupRoleAssignments": {
            "type": "array",
            "description": "List of projects that the user will be added to when they accept their invitation to the organization.",
            "items": {
              "$ref": "#/components/schemas/OrganizationInvitationGroupRoleAssignmentsRequest"
            }
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "description": "One or more organization level roles to assign to the MongoDB Cloud user.",
            "items": {
              "type": "string",
              "enum": ["ORG_OWNER", "ORG_MEMBER", "ORG_GROUP_CREATOR", "ORG_BILLING_ADMIN", "ORG_READ_ONLY"]
            }
          },
          "teamIds": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of teams to which you want to invite the desired MongoDB Cloud user.",
            "items": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "description": "Unique 24-hexadecimal digit string that identifies the team.",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          }
        }
      },
      "ApiAtlasCheckpointView": {
        "type": "object",
        "properties": {
          "clusterId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the cluster that contains the checkpoint.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "completed": {
            "type": "string",
            "description": "Date and time when the checkpoint completed and the balancer restarted. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns the checkpoints.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies checkpoint.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "parts": {
            "type": "array",
            "description": "Metadata that describes the complete snapshot.\n\n- For a replica set, this array contains a single document.\n- For a sharded cluster, this array contains one document for each shard plus one document for the config host.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ApiCheckpointPartView"
            }
          },
          "restorable": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud can use the checkpoint for a restore.",
            "readOnly": true
          },
          "started": {
            "type": "string",
            "description": "Date and time when the balancer stopped and began the checkpoint. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "description": "Date and time to which the checkpoint restores. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "ApiBSONTimestampView": {
        "title": "BSON Timestamp",
        "type": "object",
        "properties": {
          "increment": {
            "minimum": 1199145600,
            "type": "integer",
            "description": "Order of the database operation that the oplog recorded at specific date and time.",
            "format": "int32",
            "readOnly": true,
            "example": 1199145600
          },
          "date": {
            "type": "string",
            "description": "Date and time when the oplog recorded this database operation. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "BSON timestamp that indicates when the checkpoint token entry in the oplog occurred.",
        "readOnly": true
      },
      "ApiCheckpointPartView": {
        "type": "object",
        "properties": {
          "replicaSetName": {
            "type": "string",
            "description": "Human-readable label that identifies the replica set to which this checkpoint applies.",
            "readOnly": true
          },
          "shardName": {
            "type": "string",
            "description": "Human-readable label that identifies the shard to which this checkpoint applies.",
            "readOnly": true
          },
          "tokenDiscovered": {
            "type": "boolean",
            "description": "Flag that indicates whether the token exists.",
            "readOnly": true
          },
          "tokenTimestamp": {
            "$ref": "#/components/schemas/ApiBSONTimestampView"
          },
          "typeName": {
            "type": "string",
            "description": "Human-readable label that identifies the type of host that the part represents.",
            "readOnly": true,
            "enum": ["REPLICA_SET", "CONFIG_SERVER", "CONFIG_SERVER_REPLICA_SET"]
          }
        },
        "description": "Metadata contained in one document that describes the complete snapshot taken for this node.",
        "readOnly": true
      },
      "PaginatedApiAtlasCheckpointView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ApiAtlasCheckpointView"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "BackupLabel": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Key for the metadata file that MongoDB Cloud uploads to the bucket when the export job finishes."
          },
          "value": {
            "type": "string",
            "description": "Value for the key to include in file that MongoDB Cloud uploads to the bucket when the export job finishes."
          }
        },
        "description": "Collection of key-value pairs that represent custom data to add to the metadata file that MongoDB Cloud uploads to the bucket when the export job finishes."
      },
      "DiskBackupExportJob": {
        "required": ["exportBucketId"],
        "type": "object",
        "properties": {
          "components": {
            "type": "array",
            "description": "Information on the export job for each replica set in the sharded cluster.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/DiskBackupExportMember"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time when someone created this export job. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "customData": {
            "type": "array",
            "description": "Collection of key-value pairs that represent custom data for the metadata file that MongoDB Cloud uploads to the bucket when the export job finishes.",
            "items": {
              "$ref": "#/components/schemas/BackupLabel"
            }
          },
          "deliveryUrl": {
            "type": "array",
            "description": "One or more Uniform Resource Locators (URLs) that point to the compressed snapshot files for manual download. MongoDB Cloud returns this parameter when `\"deliveryType\" : \"download\"`.",
            "readOnly": true,
            "items": {
              "type": "string",
              "description": "One Uniform Resource Locator that point to the compressed snapshot files for manual download."
            }
          },
          "exportBucketId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the Export Bucket to export to.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "exportStatus": {
            "$ref": "#/components/schemas/ExportStatus"
          },
          "finishedAt": {
            "type": "string",
            "description": "Date and time when this export job completed. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the restore job.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "prefix": {
            "pattern": "/exported_snapshots/\\{ORG-NAME\\}/\\{PROJECT-NAME\\}/\\{CLUSTER-NAME\\}/\\{SNAPSHOT-INITIATION-DATE\\}/\\{TIMESTAMP\\}",
            "type": "string",
            "description": "Full path on the cloud provider bucket to the folder where the snapshot is exported.",
            "readOnly": true
          },
          "snapshotId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the snapshot.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "state": {
            "type": "string",
            "description": "State of the export job.",
            "readOnly": true,
            "enum": ["Cancelled", "Failed", "InProgress", "Queued", "Successful"]
          }
        }
      },
      "DiskBackupExportMember": {
        "type": "object",
        "properties": {
          "exportId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the the Cloud Backup snapshot export job for each shard in a sharded cluster.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "replicaSetName": {
            "type": "string",
            "description": "Human-readable label that identifies the replica set on the sharded cluster.",
            "readOnly": true
          }
        }
      },
      "ExportStatus": {
        "type": "object",
        "properties": {
          "exportedCollections": {
            "type": "integer",
            "description": "Number of collections on the replica set that MongoDB Cloud exported.",
            "format": "int32",
            "readOnly": true
          },
          "totalCollections": {
            "type": "integer",
            "description": "Total number of collections on the replica set to export.",
            "format": "int32",
            "readOnly": true
          }
        },
        "description": "State of the export job for the collections on the replica set only."
      },
      "DiskBackupExportJobRequest": {
        "required": ["exportBucketId", "snapshotId"],
        "type": "object",
        "properties": {
          "customData": {
            "type": "array",
            "description": "Collection of key-value pairs that represent custom data to add to the metadata file that MongoDB Cloud uploads to the bucket when the export job finishes.",
            "items": {
              "$ref": "#/components/schemas/BackupLabel"
            }
          },
          "exportBucketId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the Export Bucket to export to.",
            "writeOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "snapshotId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the Cloud Backup Snapshot to export.",
            "writeOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          }
        }
      },
      "PaginatedApiAtlasDiskBackupExportJobView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/DiskBackupExportJob"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "DiskBackupRestoreMember": {
        "type": "object",
        "properties": {
          "downloadUrl": {
            "type": "string",
            "description": "One Uniform Resource Locator that point to the compressed snapshot files for manual download. MongoDB Cloud returns this parameter when `\"deliveryType\" : \"download\"`.",
            "readOnly": true
          },
          "replicaSetName": {
            "type": "string",
            "description": "Human-readable label that identifies the replica set on the sharded cluster.",
            "readOnly": true
          }
        }
      },
      "DiskBackupSnapshotRestoreJob": {
        "required": ["deliveryType"],
        "type": "object",
        "properties": {
          "cancelled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone canceled this restore job.",
            "readOnly": true
          },
          "components": {
            "type": "array",
            "description": "Information on the restore job for each replica set in the sharded cluster.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/DiskBackupRestoreMember"
            }
          },
          "deliveryType": {
            "type": "string",
            "description": "Human-readable label that categorizes the restore job to create.",
            "enum": ["automated", "download", "pointInTime"]
          },
          "deliveryUrl": {
            "type": "array",
            "description": "One or more Uniform Resource Locators (URLs) that point to the compressed snapshot files for manual download. MongoDB Cloud returns this parameter when `\"deliveryType\" : \"download\"`.",
            "readOnly": true,
            "items": {
              "type": "string",
              "description": "One Uniform Resource Locator that point to the compressed snapshot files for manual download."
            }
          },
          "desiredTimestamp": {
            "$ref": "#/components/schemas/ApiBSONTimestampView"
          },
          "expired": {
            "type": "boolean",
            "description": "Flag that indicates whether the restore job expired.",
            "readOnly": true
          },
          "expiresAt": {
            "type": "string",
            "description": "Date and time when the restore job expires. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "failed": {
            "type": "boolean",
            "description": "Flag that indicates whether the restore job failed.",
            "readOnly": true
          },
          "finishedAt": {
            "type": "string",
            "description": "Date and time when the restore job completed. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the restore job.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "oplogInc": {
            "minimum": 1,
            "type": "integer",
            "description": "Oplog operation number from which you want to restore this snapshot. This number represents the second part of an Oplog timestamp. The resource returns this parameter when `\"deliveryType\" : \"pointInTime\"` and **oplogTs** exceeds `0`.",
            "format": "int32",
            "example": 1
          },
          "oplogTs": {
            "minimum": 1199145600,
            "type": "integer",
            "description": "Date and time from which you want to restore this snapshot. This parameter expresses this timestamp in the number of seconds that have elapsed since the UNIX epoch. This number represents the first part of an Oplog timestamp. The resource returns this parameter when `\"deliveryType\" : \"pointInTime\"` and **oplogTs** exceeds `0`.",
            "format": "int32"
          },
          "pointInTimeUTCSeconds": {
            "minimum": 1199145600,
            "type": "integer",
            "description": "Date and time from which MongoDB Cloud restored this snapshot. This parameter expresses this timestamp in the number of seconds that have elapsed since the UNIX epoch. The resource returns this parameter when `\"deliveryType\" : \"pointInTime\"` and **pointInTimeUTCSeconds** exceeds `0`.",
            "format": "int32"
          },
          "snapshotId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the snapshot.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "targetClusterName": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the target cluster to which the restore job restores the snapshot. The resource returns this parameter when `\"deliveryType\":` `\"automated\"`. Required for `automated` and `pointInTime` restore types."
          },
          "targetGroupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the target project for the specified **targetClusterName**. Required for `automated` and `pointInTime` restore types.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "timestamp": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud took the snapshot associated with **snapshotId**. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "PaginatedCloudBackupRestoreJobView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/DiskBackupSnapshotRestoreJob"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "DiskBackupShardedClusterSnapshot": {
        "title": "Sharded Cluster Snapshot",
        "type": "object",
        "properties": {
          "configServerType": {
            "type": "string",
            "description": "Human-readable label that identifies the config server type for this snapshot.",
            "readOnly": true,
            "enum": ["EMBEDDED", "DEDICATED"]
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud took the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Human-readable phrase or sentence that explains the purpose of the snapshot. The resource returns this parameter when `\"status\": \"onDemand\"`.",
            "readOnly": true
          },
          "expiresAt": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud deletes the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "frequencyType": {
            "type": "string",
            "description": "Human-readable label that identifies how often this snapshot triggers.",
            "readOnly": true,
            "enum": ["hourly", "daily", "weekly", "monthly", "yearly"]
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the snapshot.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "masterKeyUUID": {
            "type": "string",
            "description": "Unique string that identifies the Amazon Web Services (AWS) Key Management Service (KMS) Customer Master Key (CMK) used to encrypt the snapshot. The resource returns this value when `\"encryptionEnabled\" : true`.",
            "format": "uuid",
            "readOnly": true
          },
          "members": {
            "type": "array",
            "description": "List that includes the snapshots and the cloud provider that stores the snapshots. The resource returns this parameter when `\"type\" : \"SHARDED_CLUSTER\"`.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/DiskBackupShardedClusterSnapshotMember"
            }
          },
          "mongodVersion": {
            "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)",
            "type": "string",
            "description": "Version of the MongoDB host that this snapshot backs up.",
            "readOnly": true
          },
          "policyItems": {
            "type": "array",
            "description": "List that contains unique identifiers for the policy items.",
            "readOnly": true,
            "items": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "description": "Unique 24-hexadecimal digit string that identifies one policy item.",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          },
          "snapshotIds": {
            "type": "array",
            "description": "List that contains the unique identifiers of the snapshots created for the shards and config host for a sharded cluster. The resource returns this parameter when `\"type\": \"SHARDED_CLUSTER\"`. These identifiers should match the ones specified in the **members[n].id** parameters. This allows you to map a snapshot to its shard or config host name.",
            "readOnly": true,
            "items": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "description": "Unique 24-hexadecimal digit string that identifies the snapshot for part of the sharded cluster.",
              "readOnly": true,
              "example": "32b6e34b3d91647abb20e7b8"
            }
          },
          "snapshotType": {
            "type": "string",
            "description": "Human-readable label that identifies when this snapshot triggers.",
            "readOnly": true,
            "enum": ["onDemand", "scheduled"]
          },
          "status": {
            "type": "string",
            "description": "Human-readable label that indicates the stage of the backup process for this snapshot.",
            "readOnly": true,
            "enum": ["queued", "inProgress", "completed", "failed"]
          },
          "storageSizeBytes": {
            "type": "integer",
            "description": "Number of bytes taken to store the backup at time of snapshot.",
            "format": "int64",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that categorizes the cluster as a replica set or sharded cluster.",
            "readOnly": true,
            "enum": ["replicaSet", "shardedCluster"]
          }
        },
        "description": "Details of the sharded cluster snapshot that MongoDB Cloud created."
      },
      "DiskBackupShardedClusterSnapshotMember": {
        "required": ["cloudProvider", "id", "replicaSetName"],
        "type": "object",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Human-readable label that identifies the cloud provider that stores this snapshot. The resource returns this parameter when `\"type\": \"replicaSet\"`.",
            "readOnly": true,
            "enum": ["AWS", "AZURE", "GCP"]
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the snapshot.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "replicaSetName": {
            "type": "string",
            "description": "Human-readable label that identifies the shard or config host from which MongoDB Cloud took this snapshot.",
            "readOnly": true
          }
        }
      },
      "PaginatedCloudBackupShardedClusterSnapshotView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/DiskBackupShardedClusterSnapshot"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "DiskBackupReplicaSet": {
        "title": "Replica Set Snapshot",
        "type": "object",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Human-readable label that identifies the cloud provider that stores this snapshot. The resource returns this parameter when `\"type\": \"replicaSet\"`.",
            "readOnly": true,
            "enum": ["AWS", "AZURE", "GCP"]
          },
          "copyRegions": {
            "type": "array",
            "description": "List that identifies the regions to which MongoDB Cloud copies the snapshot.",
            "readOnly": true,
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud took the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Human-readable phrase or sentence that explains the purpose of the snapshot. The resource returns this parameter when `\"status\": \"onDemand\"`.",
            "readOnly": true
          },
          "expiresAt": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud deletes the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "frequencyType": {
            "type": "string",
            "description": "Human-readable label that identifies how often this snapshot triggers.",
            "readOnly": true,
            "enum": ["hourly", "daily", "weekly", "monthly", "yearly"]
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the snapshot.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "masterKeyUUID": {
            "type": "string",
            "description": "Unique string that identifies the Amazon Web Services (AWS) Key Management Service (KMS) Customer Master Key (CMK) used to encrypt the snapshot. The resource returns this value when `\"encryptionEnabled\" : true`.",
            "format": "uuid",
            "readOnly": true
          },
          "mongodVersion": {
            "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)",
            "type": "string",
            "description": "Version of the MongoDB host that this snapshot backs up.",
            "readOnly": true
          },
          "policyItems": {
            "type": "array",
            "description": "List that contains unique identifiers for the policy items.",
            "readOnly": true,
            "items": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "description": "Unique 24-hexadecimal digit string that identifies one policy item.",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          },
          "replicaSetName": {
            "type": "string",
            "description": "Human-readable label that identifies the replica set from which MongoDB Cloud took this snapshot. The resource returns this parameter when `\"type\": \"replicaSet\"`.",
            "readOnly": true
          },
          "snapshotType": {
            "type": "string",
            "description": "Human-readable label that identifies when this snapshot triggers.",
            "readOnly": true,
            "enum": ["onDemand", "scheduled"]
          },
          "status": {
            "type": "string",
            "description": "Human-readable label that indicates the stage of the backup process for this snapshot.",
            "readOnly": true,
            "enum": ["queued", "inProgress", "completed", "failed"]
          },
          "storageSizeBytes": {
            "type": "integer",
            "description": "Number of bytes taken to store the backup at time of snapshot.",
            "format": "int64",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that categorizes the cluster as a replica set or sharded cluster.",
            "readOnly": true,
            "enum": ["replicaSet", "shardedCluster"]
          }
        },
        "description": "Details of the replica set snapshot that MongoDB Cloud created."
      },
      "PaginatedCloudBackupReplicaSetView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/DiskBackupReplicaSet"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "DiskBackupSnapshot": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud took the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Human-readable phrase or sentence that explains the purpose of the snapshot. The resource returns this parameter when `\"status\": \"onDemand\"`.",
            "readOnly": true
          },
          "expiresAt": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud deletes the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "frequencyType": {
            "type": "string",
            "description": "Human-readable label that identifies how often this snapshot triggers.",
            "readOnly": true,
            "enum": ["hourly", "daily", "weekly", "monthly", "yearly"]
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the snapshot.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "masterKeyUUID": {
            "type": "string",
            "description": "Unique string that identifies the Amazon Web Services (AWS) Key Management Service (KMS) Customer Master Key (CMK) used to encrypt the snapshot. The resource returns this value when `\"encryptionEnabled\" : true`.",
            "format": "uuid",
            "readOnly": true
          },
          "mongodVersion": {
            "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)",
            "type": "string",
            "description": "Version of the MongoDB host that this snapshot backs up.",
            "readOnly": true
          },
          "policyItems": {
            "type": "array",
            "description": "List that contains unique identifiers for the policy items.",
            "readOnly": true,
            "items": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "description": "Unique 24-hexadecimal digit string that identifies one policy item.",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          },
          "snapshotType": {
            "type": "string",
            "description": "Human-readable label that identifies when this snapshot triggers.",
            "readOnly": true,
            "enum": ["onDemand", "scheduled"]
          },
          "status": {
            "type": "string",
            "description": "Human-readable label that indicates the stage of the backup process for this snapshot.",
            "readOnly": true,
            "enum": ["queued", "inProgress", "completed", "failed"]
          },
          "storageSizeBytes": {
            "type": "integer",
            "description": "Number of bytes taken to store the backup at time of snapshot.",
            "format": "int64",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that categorizes the cluster as a replica set or sharded cluster.",
            "readOnly": true,
            "enum": ["replicaSet", "shardedCluster"]
          }
        },
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "replicaSet": "#/components/schemas/DiskBackupReplicaSet",
            "shardedCluster": "#/components/schemas/DiskBackupShardedClusterSnapshot"
          }
        }
      },
      "DiskBackupOnDemandSnapshotRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Human-readable phrase or sentence that explains the purpose of the snapshot. The resource returns this parameter when `\"status\" : \"onDemand\"`."
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "retentionInDays": {
            "minimum": 1,
            "type": "integer",
            "description": "Number of days that MongoDB Cloud should retain the on-demand snapshot. Must be at least **1**.",
            "format": "int32"
          }
        }
      },
      "BackupSnapshotRetention": {
        "required": ["retentionUnit", "retentionValue"],
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "retentionUnit": {
            "type": "string",
            "description": "Quantity of time in which MongoDB Cloud measures snapshot retention.",
            "enum": ["DAYS", "WEEKS", "MONTHS", "YEARS"]
          },
          "retentionValue": {
            "type": "integer",
            "description": "Number that indicates the amount of days, weeks, months, or years that MongoDB Cloud retains the snapshot. For less frequent policy items, MongoDB Cloud requires that you specify a value greater than or equal to the value specified for more frequent policy items. If the hourly policy item specifies a retention of two days, specify two days or greater for the retention of the weekly policy item.",
            "format": "int32",
            "example": 5
          }
        }
      },
      "BackupRestoreJob": {
        "required": ["delivery"],
        "type": "object",
        "properties": {
          "batchId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the batch to which this restore job belongs. This parameter exists only for a sharded cluster restore.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "checkpointId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the sharded cluster checkpoint. The checkpoint represents the point in time back to which you want to restore you data. This parameter applies when `\"delivery.methodName\" : \"AUTOMATED_RESTORE\"`. Use this parameter with sharded clusters only.\n\n- If you set **checkpointId**, you can't set **oplogInc**, **oplogTs**, **snapshotId**, or **pointInTimeUTCMillis**.\n- If you provide this parameter, this endpoint restores all data up to this checkpoint to the database you specify in the **delivery** object.",
            "writeOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "clusterId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the cluster with the snapshot you want to return. This parameter returns for restore clusters.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "clusterName": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the cluster containing the snapshots you want to retrieve.",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "description": "Date and time when someone requested this restore job. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "delivery": {
            "$ref": "#/components/schemas/BackupRestoreJobDelivery"
          },
          "encryptionEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone encrypted the data in the restored snapshot.",
            "readOnly": true
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns the snapshots.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "hashes": {
            "type": "array",
            "description": "List that contains documents mapping each restore file to a hashed checksum. This parameter applies after you download the corresponding **delivery.url**. If `\"methodName\" : \"HTTP\"`, this list contains one object that represents the hash of the **.tar.gz** file.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/RestoreJobFileHash"
            }
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the restore job.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "masterKeyUUID": {
            "type": "string",
            "description": "Universally Unique Identifier (UUID) that identifies the Key Management Interoperability (KMIP) master key used to encrypt the snapshot data. This parameter applies only when `\"encryptionEnabled\" : \"true\"`.",
            "format": "uuid",
            "readOnly": true
          },
          "oplogInc": {
            "minimum": 1,
            "type": "integer",
            "description": "Thirty-two-bit incrementing ordinal that represents operations within a given second. When paired with **oplogTs**, this represents the point in time to which MongoDB Cloud restores your data. This parameter applies when `\"delivery.methodName\" : \"AUTOMATED_RESTORE\"`.\n\n- If you set **oplogInc**, you must set **oplogTs**, and can't set **checkpointId**, **snapshotId**, or **pointInTimeUTCMillis**.\n- If you provide this parameter, this endpoint restores all data up to and including this Oplog timestamp to the database you specified in the **delivery** object.",
            "format": "int32",
            "writeOnly": true
          },
          "oplogTs": {
            "pattern": "^(?:[1-9]\\\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d(?:\\\\.\\\\d{1,9})?(?:Z|[+-][01]\\\\d:[0-5]\\\\d)$",
            "type": "string",
            "description": "Date and time from which you want to restore this snapshot. This parameter expresses its value in ISO 8601 format in UTC. This represents the first part of an Oplog timestamp. When paired with **oplogInc**, they represent the last database operation to which you want to restore your data. This parameter applies when `\"delivery.methodName\" : \"AUTOMATED_RESTORE\"`. Run a query against **local.oplog.rs** on your replica set to find the desired timestamp.\n\n- If you set **oplogTs**, you must set **oplogInc**, and you can't set **checkpointId**, **snapshotId**, or **pointInTimeUTCMillis**.\n- If you provide this parameter, this endpoint restores all data up to and including this Oplog timestamp to the database you specified in the **delivery** object.",
            "writeOnly": true
          },
          "pointInTimeUTCMillis": {
            "minimum": 1199145600000,
            "type": "integer",
            "description": "Timestamp from which you want to restore this snapshot. This parameter expresses its value in the number of milliseconds elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time). This timestamp must fall within the last 24 hours of the current time. This parameter applies when `\"delivery.methodName\" : \"AUTOMATED_RESTORE\"`.\n\n- If you provide this parameter, this endpoint restores all data up to this point in time to the database you specified in the **delivery** object.\n- If you set **pointInTimeUTCMillis**, you can't set **oplogInc**, **oplogTs**, **snapshotId**, or **checkpointId**.",
            "format": "int64",
            "writeOnly": true
          },
          "snapshotId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the snapshot to restore. If you set **snapshotId**, you can't set **oplogInc**, **oplogTs**, **pointInTimeUTCMillis**, or **checkpointId**.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "statusName": {
            "type": "string",
            "description": "Human-readable label that identifies the status of the downloadable file at the time of the request.",
            "readOnly": true,
            "enum": ["IN_PROGRESS", "BROKEN", "KILLED", "FINISHED"]
          },
          "timestamp": {
            "$ref": "#/components/schemas/ApiBSONTimestampView"
          }
        }
      },
      "BackupRestoreJobDelivery": {
        "title": "Restore Snapshot Delivery Metadata",
        "required": ["methodName"],
        "type": "object",
        "properties": {
          "authHeader": {
            "type": "string",
            "description": "Header name to use when downloading the restore, used with `\"delivery.methodName\" : \"HTTP\"`.",
            "readOnly": true
          },
          "authValue": {
            "type": "string",
            "description": "Header value to use when downloading the restore, used with `\"delivery.methodName\" : \"HTTP\"`.",
            "readOnly": true
          },
          "expirationHours": {
            "minimum": 1,
            "type": "integer",
            "description": "Number of hours after the restore job completes that indicates when the Uniform Resource Locator (URL) for the snapshot download file expires. The resource returns this parameter when `\"delivery.methodName\" : \"HTTP\"`.",
            "format": "int32"
          },
          "expires": {
            "type": "string",
            "description": "Date and time when the Uniform Resource Locator (URL) for the snapshot download file expires. This parameter expresses its value in the ISO 8601 timestamp format in UTC. The resource returns this parameter when `\"delivery.methodName\" : \"HTTP\"`.",
            "format": "date-time",
            "readOnly": true
          },
          "maxDownloads": {
            "minimum": 1,
            "type": "integer",
            "description": "Positive integer that indicates how many times you can use the Uniform Resource Locator (URL) for the snapshot download file. The resource returns this parameter when `\"delivery.methodName\" : \"HTTP\"`.",
            "format": "int32"
          },
          "methodName": {
            "type": "string",
            "description": "Human-readable label that identifies the means for delivering the data. If you set `\"delivery.methodName\" : \"AUTOMATED_RESTORE\"`, you must also set: **delivery.targetGroupId** and **delivery.targetClusterName** or **delivery.targetClusterId**. The response returns `\"delivery.methodName\" : \"HTTP\"` as an automated restore uses HyperText Transport Protocol (HTTP) to deliver the restore job to the target host.",
            "enum": [
              "CLIENT_PIT_HTTP",
              "QUERY",
              "AUTOMATED_RESTORE",
              "HTTP",
              "THIRD_PARTY_COPY",
              "CLIENT_PIT_SCP",
              "SCP"
            ]
          },
          "statusName": {
            "type": "string",
            "description": "State of the downloadable snapshot file when MongoDB Cloud received this request.",
            "readOnly": true,
            "enum": [
              "NOT_STARTED",
              "IN_PROGRESS",
              "READY",
              "FAILED",
              "INTERRUPTED",
              "EXPIRED",
              "MAX_DOWNLOADS_EXCEEDED",
              "PENDING"
            ]
          },
          "targetClusterId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the target cluster. Use the **clusterId** returned in the response body of the **Get All Snapshots** and **Get a Snapshot** endpoints. This parameter applies when `\"delivery.methodName\" : \"AUTOMATED_RESTORE\"`.\n\n If the target cluster doesn't have backup enabled, two resources return parameters with empty values:\n\n- **Get All Snapshots** endpoint returns an empty results array without **clusterId** elements\n- **Get a Snapshot** endpoint doesn't return a **clusterId** parameter.\n\nTo return a response with the **clusterId** parameter, either use the **delivery.targetClusterName** parameter or enable backup on the target cluster.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "targetClusterName": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the target cluster. Use the **clusterName** returned in the response body of the **Get All Snapshots** and **Get a Snapshot** endpoints.  This parameter applies when `\"delivery.methodName\" : \"AUTOMATED_RESTORE\"`.\n\nIf the target cluster doesn't have backup enabled, two resources return parameters with empty values:\n\n- **Get All Snapshots** endpoint returns an empty results array without **clusterId** elements\n- **Get a Snapshot** endpoint doesn't return a **clusterId** parameter.\n\nTo return a response with the **clusterId** parameter, either use the **delivery.targetClusterName** parameter or enable backup on the target cluster."
          },
          "targetGroupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that contains the destination cluster for the restore job. The resource returns this parameter when `\"delivery.methodName\" : \"AUTOMATED_RESTORE\"`.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "url": {
            "type": "string",
            "description": "Uniform Resource Locator (URL) from which you can download the restored snapshot data. Url includes the verification key. The resource returns this parameter when `\"delivery.methodName\" : \"HTTP\"`.",
            "readOnly": true,
            "deprecated": true
          },
          "urlV2": {
            "type": "string",
            "description": "Uniform Resource Locator (URL) from which you can download the restored snapshot data. This should be preferred over **url**. The verification key must be sent as an HTTP header. The resource returns this parameter when `\"delivery.methodName\" : \"HTTP\"`.",
            "readOnly": true
          }
        },
        "description": "Method and details that indicate how to deliver the restored snapshot data."
      },
      "PaginatedRestoreJobView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/BackupRestoreJob"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "RestoreJobFileHash": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "description": "Human-readable label that identifies the hashed file.",
            "readOnly": true
          },
          "hash": {
            "type": "string",
            "description": "Hashed checksum that maps to the restore file.",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "typeName": {
            "type": "string",
            "description": "Human-readable label that identifies the hashing algorithm used to compute the hash value.",
            "readOnly": true,
            "enum": ["SHA1"]
          }
        },
        "description": "Key and value pair that map one restore file to one hashed checksum. This parameter applies after you download the corresponding **delivery.url**.",
        "readOnly": true
      },
      "ServerlessBackupRestoreJob": {
        "required": ["deliveryType", "targetClusterName", "targetGroupId"],
        "type": "object",
        "properties": {
          "cancelled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone canceled this restore job.",
            "readOnly": true
          },
          "deliveryType": {
            "type": "string",
            "description": "Human-readable label that categorizes the restore job to create.",
            "enum": ["automated", "download", "pointInTime"]
          },
          "deliveryUrl": {
            "type": "array",
            "description": "One or more Uniform Resource Locators (URLs) that point to the compressed snapshot files for manual download. MongoDB Cloud returns this parameter when `\"deliveryType\" : \"download\"`.",
            "readOnly": true,
            "items": {
              "type": "string",
              "description": "One Uniform Resource Locator that point to the compressed snapshot files for manual download."
            }
          },
          "desiredTimestamp": {
            "$ref": "#/components/schemas/ApiBSONTimestampView"
          },
          "expired": {
            "type": "boolean",
            "description": "Flag that indicates whether the restore job expired.",
            "readOnly": true
          },
          "expiresAt": {
            "type": "string",
            "description": "Date and time when the restore job expires. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "failed": {
            "type": "boolean",
            "description": "Flag that indicates whether the restore job failed.",
            "readOnly": true
          },
          "finishedAt": {
            "type": "string",
            "description": "Date and time when the restore job completed. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the restore job.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "oplogInc": {
            "minimum": 1,
            "type": "integer",
            "description": "Oplog operation number from which you want to restore this snapshot. This number represents the second part of an Oplog timestamp. The resource returns this parameter when `\"deliveryType\" : \"pointInTime\"` and **oplogTs** exceeds `0`.",
            "format": "int32",
            "example": 1
          },
          "oplogTs": {
            "minimum": 1199145600,
            "type": "integer",
            "description": "Date and time from which you want to restore this snapshot. This parameter expresses this timestamp in the number of seconds that have elapsed since the UNIX epoch. This number represents the first part of an Oplog timestamp. The resource returns this parameter when `\"deliveryType\" : \"pointInTime\"` and **oplogTs** exceeds `0`.",
            "format": "int32"
          },
          "pointInTimeUTCSeconds": {
            "minimum": 1199145600,
            "type": "integer",
            "description": "Date and time from which MongoDB Cloud restored this snapshot. This parameter expresses this timestamp in the number of seconds that have elapsed since the UNIX epoch. The resource returns this parameter when `\"deliveryType\" : \"pointInTime\"` and **pointInTimeUTCSeconds** exceeds `0`.",
            "format": "int32"
          },
          "snapshotId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the snapshot.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "targetClusterName": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the target cluster to which the restore job restores the snapshot. The resource returns this parameter when `\"deliveryType\":` `\"automated\"`."
          },
          "targetGroupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the target project for the specified **targetClusterName**.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "timestamp": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud took the snapshot associated with **snapshotId**. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "PaginatedApiAtlasServerlessBackupRestoreJobView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ServerlessBackupRestoreJob"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "ServerlessBackupSnapshot": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud took the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "expiresAt": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud deletes the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "frequencyType": {
            "type": "string",
            "description": "Human-readable label that identifies how often this snapshot triggers.",
            "readOnly": true,
            "enum": ["hourly", "daily", "weekly", "monthly"]
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the snapshot.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "mongodVersion": {
            "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)",
            "type": "string",
            "description": "Version of the MongoDB host that this snapshot backs up.",
            "readOnly": true
          },
          "serverlessInstanceName": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label given to the serverless instance from which MongoDB Cloud took this snapshot.",
            "readOnly": true
          },
          "snapshotType": {
            "type": "string",
            "description": "Human-readable label that identifies when this snapshot triggers.",
            "readOnly": true,
            "enum": ["onDemand", "scheduled"]
          },
          "status": {
            "type": "string",
            "description": "Human-readable label that indicates the stage of the backup process for this snapshot.",
            "readOnly": true,
            "enum": ["queued", "inProgress", "completed", "failed"]
          },
          "storageSizeBytes": {
            "type": "integer",
            "description": "Number of bytes taken to store the backup snapshot.",
            "format": "int64",
            "readOnly": true
          }
        }
      },
      "PaginatedApiAtlasServerlessBackupSnapshotView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ServerlessBackupSnapshot"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "ApiAtlasSnapshotScheduleView": {
        "required": [
          "clusterCheckpointIntervalMin",
          "clusterId",
          "dailySnapshotRetentionDays",
          "groupId",
          "monthlySnapshotRetentionMonths",
          "pointInTimeWindowHours",
          "snapshotIntervalHours",
          "snapshotRetentionDays",
          "weeklySnapshotRetentionWeeks"
        ],
        "type": "object",
        "properties": {
          "clusterCheckpointIntervalMin": {
            "type": "integer",
            "description": "Quantity of time expressed in minutes between successive cluster checkpoints. This parameter applies only to sharded clusters. This number determines the granularity of continuous cloud backups for sharded clusters.",
            "format": "int32",
            "enum": [15, 30, 60]
          },
          "clusterId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the cluster with the snapshot you want to return.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "dailySnapshotRetentionDays": {
            "type": "integer",
            "description": "Quantity of time to keep daily snapshots. MongoDB Cloud expresses this value in days. Set this value to `0` to disable daily snapshot retention.",
            "format": "int32",
            "enum": [0, 3, 4, 5, 6, 7, 15, 30, 60, 90, 120, 180, 360]
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that contains the cluster.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "monthlySnapshotRetentionMonths": {
            "type": "integer",
            "description": "Number of months that MongoDB Cloud must keep monthly snapshots. Set this value to `0` to disable monthly snapshot retention.",
            "format": "int32",
            "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 24, 36]
          },
          "pointInTimeWindowHours": {
            "type": "integer",
            "description": "Number of hours before the current time from which MongoDB Cloud can create a Continuous Cloud Backup snapshot.",
            "format": "int32"
          },
          "snapshotIntervalHours": {
            "type": "integer",
            "description": "Number of hours that must elapse before taking another snapshot.",
            "format": "int32",
            "enum": [6, 8, 12, 24]
          },
          "snapshotRetentionDays": {
            "type": "integer",
            "description": "Number of days that MongoDB Cloud must keep recent snapshots.",
            "format": "int32",
            "enum": [2, 3, 4, 5]
          },
          "weeklySnapshotRetentionWeeks": {
            "type": "integer",
            "description": "Number of weeks that MongoDB Cloud must keep weekly snapshots. Set this value to `0` to disable weekly snapshot retention.",
            "format": "int32",
            "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 20, 24, 52]
          }
        }
      },
      "BackupSnapshot": {
        "type": "object",
        "properties": {
          "clusterId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the cluster with the snapshots you want to return.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "complete": {
            "type": "boolean",
            "description": "Flag that indicates whether the snapshot exists. This flag returns `false` while MongoDB Cloud creates the snapshot.",
            "readOnly": true
          },
          "created": {
            "$ref": "#/components/schemas/ApiBSONTimestampView"
          },
          "doNotDelete": {
            "type": "boolean",
            "description": "Flag that indicates whether someone can delete this snapshot. You can't set `\"doNotDelete\" : true` and set a timestamp for **expires** in the same request."
          },
          "expires": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud deletes the snapshot. If `\"doNotDelete\" : true`, MongoDB Cloud removes any value set for this parameter.",
            "format": "date-time"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns the snapshots.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the snapshot.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "incremental": {
            "type": "boolean",
            "description": "Flag indicating if this is an incremental or a full snapshot.",
            "readOnly": true
          },
          "lastOplogAppliedTimestamp": {
            "$ref": "#/components/schemas/ApiBSONTimestampView"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "parts": {
            "type": "array",
            "description": "Metadata that describes the complete snapshot.\n\n- For a replica set, this array contains a single document.\n- For a sharded cluster, this array contains one document for each shard plus one document for the config host.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/BackupSnapshotPart"
            }
          }
        }
      },
      "BackupSnapshotPart": {
        "title": "Snapshot Components",
        "type": "object",
        "properties": {
          "clusterId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the cluster with the snapshots you want to return.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "compressionSetting": {
            "type": "string",
            "description": "Human-readable label that identifies the method of compression for the snapshot.",
            "readOnly": true,
            "enum": ["NONE", "GZIP"]
          },
          "dataSizeBytes": {
            "type": "integer",
            "description": "Total size of the data stored on each node in the cluster. This parameter expresses its value in bytes.",
            "format": "int64",
            "readOnly": true
          },
          "encryptionEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone encrypted this snapshot.",
            "readOnly": true
          },
          "fileSizeBytes": {
            "type": "integer",
            "description": "Number that indicates the total size of the data files in bytes.",
            "format": "int64",
            "readOnly": true
          },
          "masterKeyUUID": {
            "type": "string",
            "description": "Unique string that identifies the Key Management Interoperability (KMIP) master key used to encrypt the snapshot data. The resource returns this parameter when `\"parts.encryptionEnabled\" : true`.",
            "format": "uuid",
            "readOnly": true
          },
          "mongodVersion": {
            "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)",
            "type": "string",
            "description": "Number that indicates the version of MongoDB that the replica set primary ran when MongoDB Cloud created the snapshot.",
            "readOnly": true
          },
          "replicaSetName": {
            "type": "string",
            "description": "Human-readable label that identifies the replica set.",
            "readOnly": true
          },
          "storageSizeBytes": {
            "type": "integer",
            "description": "Number that indicates the total size of space allocated for document storage.",
            "format": "int64",
            "readOnly": true
          },
          "typeName": {
            "type": "string",
            "description": "Human-readable label that identifies the type of server from which MongoDB Cloud took this snapshot.",
            "readOnly": true,
            "enum": ["REPLICA_SET", "CONFIG_SERVER", "CONFIG_SERVER_REPLICA_SET", "CONFIG_SHARD_REPLICA_SET"]
          }
        },
        "description": "Characteristics that identify this snapshot.",
        "readOnly": true
      },
      "PaginatedSnapshotView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/BackupSnapshot"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "BackupComplianceOnDemandPolicyItem": {
        "required": ["frequencyInterval", "frequencyType", "retentionUnit", "retentionValue"],
        "type": "object",
        "properties": {
          "frequencyInterval": {
            "type": "integer",
            "description": "Number that indicates the frequency interval for a set of snapshots. MongoDB Cloud ignores this setting for non-hourly policy items in Backup Compliance Policy settings.",
            "format": "int32",
            "enum": [
              0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
              40
            ]
          },
          "frequencyType": {
            "type": "string",
            "description": "Human-readable label that identifies the frequency type associated with the backup policy.",
            "enum": ["ondemand"]
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this backup policy item.",
            "readOnly": true
          },
          "retentionUnit": {
            "type": "string",
            "description": "Unit of time in which MongoDB Cloud measures snapshot retention.",
            "enum": ["days", "weeks", "months", "years"]
          },
          "retentionValue": {
            "type": "integer",
            "description": "Duration in days, weeks, months, or years that MongoDB Cloud retains the snapshot. For less frequent policy items, MongoDB Cloud requires that you specify a value greater than or equal to the value specified for more frequent policy items.\n\nFor example: If the hourly policy item specifies a retention of two days, you must specify two days or greater for the retention of the weekly policy item.",
            "format": "int32"
          }
        },
        "description": "Specifications for on-demand policy."
      },
      "BackupComplianceScheduledPolicyItem": {
        "required": ["frequencyInterval", "frequencyType", "retentionUnit", "retentionValue"],
        "type": "object",
        "properties": {
          "frequencyInterval": {
            "type": "integer",
            "description": "Number that indicates the frequency interval for a set of snapshots. A value of `1` specifies the first instance of the corresponding `frequencyType`.\n\n- In a yearly policy item, `1` indicates that the yearly snapshot occurs on the first day of January and `12` indicates the first day of December.\n\n- In a monthly policy item, `1` indicates that the monthly snapshot occurs on the first day of the month and `40` indicates the last day of the month.\n\n- In a weekly policy item, `1` indicates that the weekly snapshot occurs on Monday and `7` indicates Sunday.\n\n- In an hourly policy item, you can set the frequency interval to `1`, `2`, `4`, `6`, `8`, or `12`. For hourly policy items for NVMe clusters, MongoDB Cloud accepts only `12` as the frequency interval value.\n\n MongoDB Cloud ignores this setting for non-hourly policy items in Backup Compliance Policy settings.",
            "format": "int32",
            "enum": [
              1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 40
            ]
          },
          "frequencyType": {
            "type": "string",
            "description": "Human-readable label that identifies the frequency type associated with the backup policy.",
            "enum": ["daily", "hourly", "weekly", "monthly", "yearly"]
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this backup policy item.",
            "readOnly": true
          },
          "retentionUnit": {
            "type": "string",
            "description": "Unit of time in which MongoDB Cloud measures snapshot retention.",
            "enum": ["days", "weeks", "months", "years"]
          },
          "retentionValue": {
            "type": "integer",
            "description": "Duration in days, weeks, months, or years that MongoDB Cloud retains the snapshot. For less frequent policy items, MongoDB Cloud requires that you specify a value greater than or equal to the value specified for more frequent policy items.\n\nFor example: If the hourly policy item specifies a retention of two days, you must specify two days or greater for the retention of the weekly policy item.",
            "format": "int32"
          }
        },
        "description": "Specifications for scheduled policy."
      },
      "DataProtectionSettings20231001": {
        "required": ["authorizedEmail", "authorizedUserFirstName", "authorizedUserLastName"],
        "type": "object",
        "properties": {
          "authorizedEmail": {
            "type": "string",
            "description": "Email address of the user who authorized to update the Backup Compliance Policy  settings.",
            "format": "email"
          },
          "authorizedUserFirstName": {
            "type": "string",
            "description": "First name of the user who authorized to updated the Backup Compliance Policy  settings."
          },
          "authorizedUserLastName": {
            "type": "string",
            "description": "Last name of the user who authorized to updated the Backup Compliance Policy  settings."
          },
          "copyProtectionEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether to prevent cluster users from deleting backups copied to other regions, even if those additional snapshot regions are removed. If unspecified, this value defaults to false.",
            "default": false
          },
          "encryptionAtRestEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether Encryption at Rest using Customer Key  Management is required for all clusters with a Backup Compliance Policy. If unspecified, this value defaults to false.",
            "externalDocs": {
              "description": "Encryption at Rest using Customer Key Management",
              "url": "https://www.mongodb.com/docs/atlas/security-kms-encryption/"
            },
            "default": false
          },
          "onDemandPolicyItem": {
            "$ref": "#/components/schemas/BackupComplianceOnDemandPolicyItem"
          },
          "pitEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the cluster uses Continuous Cloud Backups with a Backup Compliance Policy. If unspecified, this value defaults to false.",
            "externalDocs": {
              "description": "Continuous Cloud Backups",
              "url": "https://docs.atlas.mongodb.com/backup/cloud-backup/overview/"
            },
            "default": false
          },
          "projectId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project for the Backup Compliance Policy.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "restoreWindowDays": {
            "type": "integer",
            "description": "Number of previous days that you can restore back to with Continuous Cloud Backup with a Backup Compliance Policy. You must specify a positive, non-zero integer, and the maximum retention window can't exceed the hourly retention time. This parameter applies only to Continuous Cloud Backups with a Backup Compliance Policy.",
            "format": "int32"
          },
          "scheduledPolicyItems": {
            "type": "array",
            "description": "List that contains the specifications for one scheduled policy.",
            "items": {
              "$ref": "#/components/schemas/BackupComplianceScheduledPolicyItem"
            }
          },
          "state": {
            "type": "string",
            "description": "Label that indicates the state of the Backup Compliance Policy settings. MongoDB Cloud ignores this setting when you enable or update the Backup Compliance Policy settings.",
            "readOnly": true,
            "enum": ["ACTIVE", "ENABLING", "UPDATING", "DISABLING"]
          },
          "updatedDate": {
            "type": "string",
            "description": "ISO 8601 timestamp format in UTC that indicates when the user updated the Data Protection Policy settings. MongoDB Cloud ignores this setting when you enable or update the Backup Compliance Policy settings.",
            "format": "date-time",
            "readOnly": true
          },
          "updatedUser": {
            "type": "string",
            "description": "Email address that identifies the user who updated the Backup Compliance Policy settings. MongoDB Cloud ignores this email setting when you enable or update the Backup Compliance Policy settings.",
            "format": "email",
            "readOnly": true
          }
        }
      },
      "DataProtectionSettings": {
        "required": ["authorizedEmail"],
        "type": "object",
        "properties": {
          "authorizedEmail": {
            "type": "string",
            "description": "Email address of the user who authorized to update the Backup Compliance Policy  settings.",
            "format": "email"
          },
          "authorizedUserFirstName": {
            "type": "string",
            "description": "First name of the user who authorized to update the Backup Compliance Policy  settings."
          },
          "authorizedUserLastName": {
            "type": "string",
            "description": "Last name of the user who authorized to update the Backup Compliance Policy  settings."
          },
          "copyProtectionEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether to prevent cluster users from deleting backups copied to other regions, even if those additional snapshot regions are removed. If unspecified, this value defaults to false.",
            "default": false
          },
          "encryptionAtRestEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether Encryption at Rest using Customer Key  Management is required for all clusters with a Backup Compliance Policy. If unspecified, this value defaults to false.",
            "externalDocs": {
              "description": "Encryption at Rest using Customer Key Management",
              "url": "https://www.mongodb.com/docs/atlas/security-kms-encryption/"
            },
            "default": false
          },
          "onDemandPolicyItem": {
            "$ref": "#/components/schemas/BackupComplianceOnDemandPolicyItem"
          },
          "pitEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the cluster uses Continuous Cloud Backups with a Backup Compliance Policy. If unspecified, this value defaults to false.",
            "externalDocs": {
              "description": "Continuous Cloud Backups",
              "url": "https://docs.atlas.mongodb.com/backup/cloud-backup/overview/"
            },
            "default": false
          },
          "projectId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project for the Backup Compliance Policy.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "restoreWindowDays": {
            "type": "integer",
            "description": "Number of previous days that you can restore back to with Continuous Cloud Backup with a Backup Compliance Policy. You must specify a positive, non-zero integer, and the maximum retention window can't exceed the hourly retention time. This parameter applies only to Continuous Cloud Backups with a Backup Compliance Policy.",
            "format": "int32"
          },
          "scheduledPolicyItems": {
            "type": "array",
            "description": "List that contains the specifications for one scheduled policy.",
            "items": {
              "$ref": "#/components/schemas/BackupComplianceScheduledPolicyItem"
            }
          },
          "state": {
            "type": "string",
            "description": "Label that indicates the state of the Backup Compliance Policy settings. MongoDB Cloud ignores this setting when you enable or update the Backup Compliance Policy settings.",
            "readOnly": true,
            "enum": ["ACTIVE", "ENABLING", "UPDATING", "DISABLING"]
          },
          "updatedDate": {
            "type": "string",
            "description": "ISO 8601 timestamp format in UTC that indicates when the user updated the Data Protection Policy settings. MongoDB Cloud ignores this setting when you enable or update the Backup Compliance Policy settings.",
            "format": "date-time",
            "readOnly": true
          },
          "updatedUser": {
            "type": "string",
            "description": "Email address that identifies the user who updated the Backup Compliance Policy settings. MongoDB Cloud ignores this email setting when you enable or update the Backup Compliance Policy settings.",
            "format": "email",
            "readOnly": true
          }
        }
      },
      "DiskBackupSnapshotAWSExportBucket": {
        "required": ["bucketName", "cloudProvider", "iamRoleId"],
        "type": "object",
        "properties": {
          "_id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the Export Bucket.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "bucketName": {
            "type": "string",
            "description": "Human-readable label that identifies the AWS S3 Bucket or Azure Storage Container that the role is authorized to export to.",
            "example": "export-bucket"
          },
          "cloudProvider": {
            "type": "string",
            "description": "Human-readable label that identifies the cloud provider that Snapshots will be exported to.",
            "enum": ["AWS", "AZURE"]
          },
          "iamRoleId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the <a href='https://www.mongodb.com/docs/atlas/security/set-up-unified-aws-access/' target='_blank'>Unified AWS Access role ID</a>  that MongoDB Cloud uses to access the AWS S3 bucket.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "DiskBackupSnapshotAzureExportBucket": {
        "required": ["bucketName", "cloudProvider", "roleId", "serviceUrl", "tenantId"],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/DiskBackupSnapshotExportBucket"
          },
          {
            "type": "object",
            "properties": {
              "roleId": {
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^([a-f0-9]{24})$",
                "type": "string",
                "description": "Unique 24-hexadecimal digit string that identifies the Azure Service Principal that MongoDB Cloud uses to access the Azure Blob Storage Container.",
                "example": "32b6e34b3d91647abb20e7b8"
              },
              "serviceUrl": {
                "maxLength": 128,
                "minLength": 1,
                "type": "string",
                "description": "URL that identifies the blob Endpoint of the Azure Blob Storage Account.",
                "example": "https://examplestorageaccount.blob.core.windows.net"
              },
              "tenantId": {
                "maxLength": 36,
                "minLength": 36,
                "pattern": "^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$",
                "type": "string",
                "description": "UUID that identifies the Azure Active Directory Tenant ID.",
                "example": "4297fc77-1592-4de8-a6d5-a8c32401df87"
              }
            }
          }
        ]
      },
      "DiskBackupSnapshotExportBucket": {
        "required": ["bucketName", "cloudProvider"],
        "type": "object",
        "properties": {
          "_id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the Export Bucket.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "bucketName": {
            "type": "string",
            "description": "Human-readable label that identifies the AWS S3 Bucket or Azure Storage Container that the role is authorized to export to.",
            "example": "export-bucket"
          },
          "cloudProvider": {
            "type": "string",
            "description": "Human-readable label that identifies the cloud provider that Snapshots will be exported to.",
            "enum": ["AWS", "AZURE"]
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        },
        "description": "Disk backup snapshot Export Bucket.",
        "discriminator": {
          "propertyName": "cloudProvider",
          "mapping": {
            "AWS": "#/components/schemas/DiskBackupSnapshotAWSExportBucket",
            "AZURE": "#/components/schemas/DiskBackupSnapshotAzureExportBucket"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/DiskBackupSnapshotAWSExportBucket"
          },
          {
            "$ref": "#/components/schemas/DiskBackupSnapshotAzureExportBucket"
          }
        ]
      },
      "PaginatedBackupSnapshotExportBucketsView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/DiskBackupSnapshotExportBucket"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "PaginatedBackupSnapshotExportBucketView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/DiskBackupSnapshotAWSExportBucket"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "AdvancedDiskBackupSnapshotSchedulePolicy": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this backup policy."
          },
          "policyItems": {
            "type": "array",
            "description": "List that contains the specifications for one policy.",
            "items": {
              "$ref": "#/components/schemas/DiskBackupApiPolicyItem"
            }
          }
        },
        "description": "List that contains a document for each backup policy item in the desired backup policy."
      },
      "AutoExportPolicyView": {
        "title": "export",
        "type": "object",
        "properties": {
          "exportBucketId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the Export Bucket.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "frequencyType": {
            "type": "string",
            "description": "Human-readable label that indicates the rate at which the export policy item occurs.",
            "enum": ["monthly", "yearly"]
          }
        },
        "description": "Policy for automatically exporting Cloud Backup Snapshots."
      },
      "DeleteCopiedBackups20250101": {
        "type": "object",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Human-readable label that identifies the cloud provider for the deleted copy setting whose backup copies you want to delete.",
            "writeOnly": true,
            "enum": ["AWS", "AZURE", "GCP"]
          },
          "regionName": {
            "type": "string",
            "description": "Target region for the deleted copy setting whose backup copies you want to delete. Please supply the 'Atlas Region' which can be found under [Cloud Providers](https://www.mongodb.com/docs/atlas/reference/cloud-providers/) 'regions' link.",
            "writeOnly": true
          },
          "zoneId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the zone in a cluster. For global clusters, there can be multiple zones to choose from. For sharded clusters and replica set clusters, there is only one zone in the cluster. To find the Zone Id, do a GET request to Return One Cluster from One Project and consult the replicationSpecs array [Return One Cluster from One Project](#operation/getCluster).",
            "writeOnly": true
          }
        },
        "description": "Deleted copy setting whose backup copies need to also be deleted.",
        "writeOnly": true
      },
      "DiskBackupApiPolicyItem": {
        "required": ["frequencyInterval", "frequencyType", "retentionUnit", "retentionValue"],
        "type": "object",
        "properties": {
          "frequencyInterval": {
            "type": "integer",
            "description": "Number that indicates the frequency interval for a set of Snapshots. A value of `1` specifies the first instance of the corresponding `frequencyType`.\n\n- In a yearly policy item, `1` indicates that the yearly Snapshot occurs on the first day of January and `12` indicates the first day of December.\n\n- In a monthly policy item, `1` indicates that the monthly Snapshot occurs on the first day of the month and `40` indicates the last day of the month.\n\n- In a weekly policy item, `1` indicates that the weekly Snapshot occurs on Monday and `7` indicates Sunday.\n\n- In an hourly policy item, you can set the frequency interval to `1`, `2`, `4`, `6`, `8`, or `12`. For hourly policy items for NVMe clusters, MongoDB Cloud accepts only `12` as the frequency interval value.\n\n MongoDB Cloud ignores this setting for non-hourly policy items in Backup Compliance Policy settings.",
            "format": "int32",
            "enum": [
              1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 40
            ]
          },
          "frequencyType": {
            "type": "string",
            "description": "Human-readable label that identifies the frequency type associated with the backup policy.",
            "enum": ["daily", "hourly", "weekly", "monthly", "yearly", "ondemand"]
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this backup policy item.",
            "readOnly": true
          },
          "retentionUnit": {
            "type": "string",
            "description": "Unit of time in which MongoDB Cloud measures Snapshot retention.",
            "enum": ["days", "weeks", "months", "years"]
          },
          "retentionValue": {
            "type": "integer",
            "description": "Duration in days, weeks, months, or years that MongoDB Cloud retains the Snapshot. For less frequent policy items, MongoDB Cloud requires that you specify a value greater than or equal to the value specified for more frequent policy items.\n\nFor example: If the hourly policy item specifies a retention of two days, you must specify two days or greater for the retention of the weekly policy item.",
            "format": "int32"
          }
        },
        "description": "Specifications for one policy."
      },
      "DiskBackupCopySetting20250101": {
        "required": ["zoneId"],
        "type": "object",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Human-readable label that identifies the cloud provider that stores the snapshot copy.",
            "enum": ["AWS", "AZURE", "GCP"]
          },
          "frequencies": {
            "type": "array",
            "description": "List that describes which types of snapshots to copy.",
            "items": {
              "type": "string",
              "enum": ["HOURLY", "DAILY", "WEEKLY", "MONTHLY", "YEARLY", "ON_DEMAND"]
            }
          },
          "regionName": {
            "type": "string",
            "description": "Target region to copy snapshots belonging to zoneId. Please supply the 'Atlas Region' which can be found under [Cloud Providers](https://www.mongodb.com/docs/atlas/reference/cloud-providers/) 'regions' link."
          },
          "shouldCopyOplogs": {
            "type": "boolean",
            "description": "Flag that indicates whether to copy the oplogs to the target region. You can use the oplogs to perform point-in-time restores."
          },
          "zoneId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the zone in a cluster. For global clusters, there can be multiple zones to choose from. For sharded clusters and replica set clusters, there is only one zone in the cluster. To find the Zone Id, do a GET request to Return One Cluster from One Project and consult the replicationSpecs array [Return One Cluster From One Project](#operation/getCluster)."
          }
        },
        "description": "Copy setting item in the desired backup policy."
      },
      "DiskBackupSnapshotSchedule20250101": {
        "type": "object",
        "properties": {
          "autoExportEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud automatically exports Cloud Backup Snapshots to the Export Bucket."
          },
          "clusterId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the cluster with the Snapshot you want to return.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "clusterName": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the cluster with the Snapshot you want to return.",
            "readOnly": true
          },
          "copySettings": {
            "type": "array",
            "description": "List that contains a document for each copy setting item in the desired backup policy.",
            "items": {
              "$ref": "#/components/schemas/DiskBackupCopySetting20250101"
            }
          },
          "deleteCopiedBackups": {
            "type": "array",
            "description": "List that contains a document for each deleted copy setting whose backup copies you want to delete.",
            "writeOnly": true,
            "items": {
              "$ref": "#/components/schemas/DeleteCopiedBackups20250101"
            }
          },
          "export": {
            "$ref": "#/components/schemas/AutoExportPolicyView"
          },
          "extraRetentionSettings": {
            "type": "array",
            "description": "List that contains a document for each extra retention setting item in the desired backup policy.",
            "items": {
              "$ref": "#/components/schemas/ExtraRetentionSetting"
            }
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "nextSnapshot": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud takes the next Snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "policies": {
            "maxItems": 1,
            "type": "array",
            "description": "Rules set for this backup schedule.",
            "items": {
              "$ref": "#/components/schemas/AdvancedDiskBackupSnapshotSchedulePolicy"
            }
          },
          "referenceHourOfDay": {
            "type": "integer",
            "description": "Hour of day in Coordinated Universal Time (UTC) that represents when MongoDB Cloud takes the Snapshot.",
            "format": "int32"
          },
          "referenceMinuteOfHour": {
            "type": "integer",
            "description": "Minute of the **referenceHourOfDay** that represents when MongoDB Cloud takes the Snapshot.",
            "format": "int32"
          },
          "restoreWindowDays": {
            "type": "integer",
            "description": "Number of previous days that you can restore back to with Continuous Cloud Backup accuracy. You must specify a positive, non-zero integer. This parameter applies to continuous Cloud Backups only.",
            "format": "int32"
          },
          "updateSnapshots": {
            "type": "boolean",
            "description": "Flag that indicates whether to apply the retention changes in the updated backup policy to Snapshots that MongoDB Cloud took previously.",
            "writeOnly": true
          },
          "useOrgAndGroupNamesInExportPrefix": {
            "type": "boolean",
            "description": "Flag that indicates whether to use organization and project names instead of organization and project UUIDs in the path to the metadata files that MongoDB Cloud uploads to your Export Bucket."
          }
        }
      },
      "ExtraRetentionSetting": {
        "type": "object",
        "properties": {
          "frequencyType": {
            "type": "string",
            "description": "The frequency type for the extra retention settings for the cluster.",
            "enum": ["HOURLY", "DAILY", "WEEKLY", "MONTHLY", "YEARLY", "ON_DEMAND"]
          },
          "retentionDays": {
            "type": "integer",
            "description": "The number of extra retention days for the cluster.",
            "format": "int32"
          }
        },
        "description": "extra retention setting item in the desired backup policy."
      },
      "DeleteCopiedBackups": {
        "type": "object",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Human-readable label that identifies the cloud provider for the deleted copy setting whose backup copies you want to delete.",
            "writeOnly": true,
            "enum": ["AWS", "AZURE", "GCP"]
          },
          "regionName": {
            "type": "string",
            "description": "Target region for the deleted copy setting whose backup copies you want to delete. Please supply the 'Atlas Region' which can be found under [Cloud Providers](https://www.mongodb.com/docs/atlas/reference/cloud-providers/) 'regions' link.",
            "writeOnly": true
          },
          "replicationSpecId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the replication object for a zone in a cluster. For global clusters, there can be multiple zones to choose from. For sharded clusters and replica setclusters, there is only one zone in the cluster. To find the Replication Spec Id, do a GET request to Return One Cluster in One Project and consult the replicationSpecs array [Return One Cluster in One Project](#operation/getLegacyCluster).",
            "writeOnly": true
          },
          "zoneId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the zone in a cluster. For global clusters, there can be multiple zones to choose from. For sharded clusters and replica set clusters, there is only one zone in the cluster. To find the Zone Id, do a GET request to Return One Cluster from One Project and consult the replicationSpecs array [Return One Cluster from One Project](#operation/getCluster).",
            "writeOnly": true
          }
        },
        "description": "Deleted copy setting whose backup copies need to also be deleted.",
        "writeOnly": true
      },
      "DiskBackupCopySetting": {
        "type": "object",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Human-readable label that identifies the cloud provider that stores the snapshot copy.",
            "enum": ["AWS", "AZURE", "GCP"]
          },
          "frequencies": {
            "type": "array",
            "description": "List that describes which types of snapshots to copy.",
            "items": {
              "type": "string",
              "enum": ["HOURLY", "DAILY", "WEEKLY", "MONTHLY", "YEARLY", "ON_DEMAND"]
            }
          },
          "regionName": {
            "type": "string",
            "description": "Target region to copy snapshots belonging to replicationSpecId to. Please supply the 'Atlas Region' which can be found under [Cloud Providers](https://www.mongodb.com/docs/atlas/reference/cloud-providers/) 'regions' link."
          },
          "replicationSpecId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the replication object for a zone in a cluster. For global clusters, there can be multiple zones to choose from. For sharded clusters and replica set clusters, there is only one zone in the cluster. To find the Replication Spec Id, do a GET request to Return One Cluster in One Project and consult the replicationSpecs array [Return One Cluster in One Project](#operation/getLegacyCluster)."
          },
          "shouldCopyOplogs": {
            "type": "boolean",
            "description": "Flag that indicates whether to copy the oplogs to the target region. You can use the oplogs to perform point-in-time restores."
          }
        },
        "description": "Copy setting item in the desired backup policy."
      },
      "DiskBackupSnapshotSchedule": {
        "type": "object",
        "properties": {
          "autoExportEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud automatically exports Cloud Backup Snapshots to the Export Bucket."
          },
          "clusterId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the cluster with the Snapshot you want to return.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "clusterName": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the cluster with the Snapshot you want to return.",
            "readOnly": true
          },
          "copySettings": {
            "type": "array",
            "description": "List that contains a document for each copy setting item in the desired backup policy.",
            "items": {
              "$ref": "#/components/schemas/DiskBackupCopySetting"
            }
          },
          "deleteCopiedBackups": {
            "type": "array",
            "description": "List that contains a document for each deleted copy setting whose backup copies you want to delete.",
            "writeOnly": true,
            "items": {
              "$ref": "#/components/schemas/DeleteCopiedBackups"
            }
          },
          "export": {
            "$ref": "#/components/schemas/AutoExportPolicyView"
          },
          "extraRetentionSettings": {
            "type": "array",
            "description": "List that contains a document for each extra retention setting item in the desired backup policy.",
            "items": {
              "$ref": "#/components/schemas/ExtraRetentionSetting"
            }
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "nextSnapshot": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud takes the next Snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "policies": {
            "maxItems": 1,
            "type": "array",
            "description": "Rules set for this backup schedule.",
            "items": {
              "$ref": "#/components/schemas/AdvancedDiskBackupSnapshotSchedulePolicy"
            }
          },
          "referenceHourOfDay": {
            "type": "integer",
            "description": "Hour of day in Coordinated Universal Time (UTC) that represents when MongoDB Cloud takes the Snapshot.",
            "format": "int32"
          },
          "referenceMinuteOfHour": {
            "type": "integer",
            "description": "Minute of the **referenceHourOfDay** that represents when MongoDB Cloud takes the Snapshot.",
            "format": "int32"
          },
          "restoreWindowDays": {
            "type": "integer",
            "description": "Number of previous days that you can restore back to with Continuous Cloud Backup accuracy. You must specify a positive, non-zero integer. This parameter applies to continuous Cloud Backups only.",
            "format": "int32"
          },
          "updateSnapshots": {
            "type": "boolean",
            "description": "Flag that indicates whether to apply the retention changes in the updated backup policy to Snapshots that MongoDB Cloud took previously.",
            "writeOnly": true
          },
          "useOrgAndGroupNamesInExportPrefix": {
            "type": "boolean",
            "description": "Flag that indicates whether to use organization and project names instead of organization and project UUIDs in the path to the metadata files that MongoDB Cloud uploads to your Export Bucket."
          }
        }
      },
      "ApiAtlasCloudProviderAccessFeatureUsageFeatureIdView": {
        "type": "object",
        "description": "Object that contains the identifying characteristics of the Amazon Web Services (AWS) Key Management Service (KMS). This field always returns a null value.",
        "nullable": true
      },
      "CloudProviderAccessAWSIAMRole": {
        "required": ["providerName"],
        "type": "object",
        "description": "Details that describe the features linked to the Amazon Web Services (AWS) Identity and Access Management (IAM) role.",
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudProviderAccessRole"
          },
          {
            "type": "object",
            "properties": {
              "atlasAWSAccountArn": {
                "maxLength": 2048,
                "minLength": 20,
                "type": "string",
                "description": "Amazon Resource Name that identifies the Amazon Web Services (AWS) user account that MongoDB Cloud uses when it assumes the Identity and Access Management (IAM) role.",
                "readOnly": true,
                "example": "arn:aws:iam::772401394250:role/my-test-aws-role"
              },
              "atlasAssumedRoleExternalId": {
                "type": "string",
                "description": "Unique external ID that MongoDB Cloud uses when it assumes the IAM role in your Amazon Web Services (AWS) account.",
                "format": "uuid",
                "readOnly": true
              },
              "authorizedDate": {
                "type": "string",
                "description": "Date and time when someone authorized this role for the specified cloud service provider. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
                "format": "date-time",
                "readOnly": true
              },
              "createdDate": {
                "type": "string",
                "description": "Date and time when someone created this role for the specified cloud service provider. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
                "format": "date-time",
                "readOnly": true
              },
              "featureUsages": {
                "type": "array",
                "description": "List that contains application features associated with this Amazon Web Services (AWS) Identity and Access Management (IAM) role.",
                "readOnly": true,
                "items": {
                  "$ref": "#/components/schemas/CloudProviderAccessFeatureUsage"
                }
              },
              "iamAssumedRoleArn": {
                "maxLength": 2048,
                "minLength": 20,
                "type": "string",
                "description": "Amazon Resource Name (ARN) that identifies the Amazon Web Services (AWS) Identity and Access Management (IAM) role that MongoDB Cloud assumes when it accesses resources in your AWS account.",
                "example": "arn:aws:iam::123456789012:root"
              },
              "roleId": {
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^([a-f0-9]{24})$",
                "type": "string",
                "description": "Unique 24-hexadecimal digit string that identifies the role.",
                "readOnly": true,
                "example": "32b6e34b3d91647abb20e7b8"
              }
            }
          }
        ]
      },
      "CloudProviderAccessAzureServicePrincipal": {
        "required": ["providerName"],
        "type": "object",
        "description": "Details that describe the features linked to the Azure Service Principal.",
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudProviderAccessRole"
          },
          {
            "type": "object",
            "properties": {
              "_id": {
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^([a-f0-9]{24})$",
                "type": "string",
                "description": "Unique 24-hexadecimal digit string that identifies the Azure Service Principal in Atlas.",
                "readOnly": true,
                "example": "32b6e34b3d91647abb20e7b8"
              },
              "atlasAzureAppId": {
                "maxLength": 36,
                "minLength": 32,
                "pattern": "^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$",
                "type": "string",
                "description": "Azure Active Directory Application ID of Atlas."
              },
              "createdDate": {
                "type": "string",
                "description": "Date and time when this Azure Service Principal was created. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
                "format": "date-time",
                "readOnly": true
              },
              "featureUsages": {
                "type": "array",
                "description": "List that contains application features associated with this Azure Service Principal.",
                "readOnly": true,
                "items": {
                  "$ref": "#/components/schemas/CloudProviderAccessFeatureUsage"
                }
              },
              "lastUpdatedDate": {
                "type": "string",
                "description": "Date and time when this Azure Service Principal was last updated. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
                "format": "date-time",
                "readOnly": true
              },
              "servicePrincipalId": {
                "maxLength": 36,
                "minLength": 32,
                "pattern": "^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$",
                "type": "string",
                "description": "UUID string that identifies the Azure Service Principal."
              },
              "tenantId": {
                "maxLength": 36,
                "minLength": 32,
                "pattern": "^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$",
                "type": "string",
                "description": "UUID String that identifies the Azure Active Directory Tenant ID."
              }
            }
          }
        ]
      },
      "CloudProviderAccessDataLakeFeatureUsage": {
        "type": "object",
        "description": "Details that describe the Atlas Data Lakes linked to this Amazon Web Services (AWS) Identity and Access Management (IAM) role.",
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudProviderAccessFeatureUsage"
          },
          {
            "type": "object",
            "properties": {
              "featureId": {
                "$ref": "#/components/schemas/CloudProviderAccessFeatureUsageDataLakeFeatureId"
              }
            }
          }
        ]
      },
      "CloudProviderAccessEncryptionAtRestFeatureUsage": {
        "type": "object",
        "description": "Details that describe the Key Management Service (KMS) linked to this Amazon Web Services (AWS) Identity and Access Management (IAM) role.",
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudProviderAccessFeatureUsage"
          },
          {
            "type": "object",
            "properties": {
              "featureId": {
                "$ref": "#/components/schemas/ApiAtlasCloudProviderAccessFeatureUsageFeatureIdView"
              }
            }
          }
        ]
      },
      "CloudProviderAccessExportSnapshotFeatureUsage": {
        "type": "object",
        "description": "Details that describe the Amazon Web Services (AWS) Simple Storage Service (S3) export buckets linked to this AWS Identity and Access Management (IAM) role.",
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudProviderAccessFeatureUsage"
          },
          {
            "type": "object",
            "properties": {
              "featureId": {
                "$ref": "#/components/schemas/CloudProviderAccessFeatureUsageExportSnapshotFeatureId"
              }
            }
          }
        ]
      },
      "CloudProviderAccessFeatureUsage": {
        "type": "object",
        "properties": {
          "featureType": {
            "type": "string",
            "description": "Human-readable label that describes one MongoDB Cloud feature linked to this Amazon Web Services (AWS) Identity and Access Management (IAM) role.",
            "readOnly": true,
            "enum": ["ATLAS_DATA_LAKE", "ENCRYPTION_AT_REST", "EXPORT_SNAPSHOT", "PUSH_BASED_LOG_EXPORT"]
          }
        },
        "description": "MongoDB Cloud features associated with this Amazon Web Services (AWS) Identity and Access Management (IAM) role.",
        "discriminator": {
          "propertyName": "featureType",
          "mapping": {
            "ATLAS_DATA_LAKE": "#/components/schemas/CloudProviderAccessDataLakeFeatureUsage",
            "ENCRYPTION_AT_REST": "#/components/schemas/CloudProviderAccessEncryptionAtRestFeatureUsage",
            "EXPORT_SNAPSHOT": "#/components/schemas/CloudProviderAccessExportSnapshotFeatureUsage",
            "PUSH_BASED_LOG_EXPORT": "#/components/schemas/CloudProviderAccessPushBasedLogExportFeatureUsage"
          }
        }
      },
      "CloudProviderAccessFeatureUsageDataLakeFeatureId": {
        "type": "object",
        "properties": {
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies your project.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the data lake."
          }
        },
        "description": "Identifying characteristics about the data lake linked to this Amazon Web Services (AWS) Identity and Access Management (IAM) role."
      },
      "CloudProviderAccessFeatureUsageExportSnapshotFeatureId": {
        "type": "object",
        "properties": {
          "exportBucketId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the AWS S3 bucket to which you export your snapshots.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies your project.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          }
        },
        "description": "Identifying characteristics about the Amazon Web Services (AWS) Simple Storage Service (S3) export bucket linked to this AWS Identity and Access Management (IAM) role."
      },
      "CloudProviderAccessFeatureUsagePushBasedLogExportFeatureId": {
        "type": "object",
        "properties": {
          "bucketName": {
            "type": "string",
            "description": "Name of the AWS S3 bucket to which your logs will be exported to.",
            "readOnly": true
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies your project.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          }
        },
        "description": "Identifying characteristics about the Amazon Web Services (AWS) Simple Storage Service (S3) export bucket linked to this AWS Identity and Access Management (IAM) role."
      },
      "CloudProviderAccessPushBasedLogExportFeatureUsage": {
        "type": "object",
        "description": "Details that describe the Amazon Web Services (AWS) Simple Storage Service (S3) export buckets linked to this AWS Identity and Access Management (IAM) role.",
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudProviderAccessFeatureUsage"
          },
          {
            "type": "object",
            "properties": {
              "featureId": {
                "$ref": "#/components/schemas/CloudProviderAccessFeatureUsagePushBasedLogExportFeatureId"
              }
            }
          }
        ]
      },
      "CloudProviderAccessRole": {
        "required": ["providerName"],
        "type": "object",
        "properties": {
          "providerName": {
            "type": "string",
            "description": "Human-readable label that identifies the cloud provider of the role.",
            "enum": ["AWS", "AZURE"]
          }
        },
        "description": "Cloud provider access role.",
        "discriminator": {
          "propertyName": "providerName",
          "mapping": {
            "AWS": "#/components/schemas/CloudProviderAccessAWSIAMRole",
            "AZURE": "#/components/schemas/CloudProviderAccessAzureServicePrincipal"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/CloudProviderAccessAWSIAMRole"
          },
          {
            "$ref": "#/components/schemas/CloudProviderAccessAzureServicePrincipal"
          }
        ]
      },
      "CloudProviderAccessRoles": {
        "type": "object",
        "properties": {
          "awsIamRoles": {
            "type": "array",
            "description": "List that contains the Amazon Web Services (AWS) IAM roles registered and authorized with MongoDB Cloud.",
            "items": {
              "$ref": "#/components/schemas/CloudProviderAccessAWSIAMRole"
            }
          }
        }
      },
      "AvailableCloudProviderRegion": {
        "type": "object",
        "properties": {
          "default": {
            "type": "boolean",
            "description": "Flag that indicates whether the cloud provider sets this region as its default. AWS defaults to US_EAST_1, GCP defaults to CENTRAL_US, and AZURE defaults to US_WEST_2.",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the supported region.",
            "readOnly": true
          }
        }
      },
      "CloudProviderRegions": {
        "type": "object",
        "properties": {
          "instanceSizes": {
            "type": "array",
            "description": "List of instances sizes that this cloud provider supports.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ClusterCloudProviderInstanceSize"
            }
          },
          "provider": {
            "type": "string",
            "description": "Human-readable label that identifies the Cloud provider.",
            "enum": ["AWS", "GCP", "AZURE"]
          }
        }
      },
      "ClusterCloudProviderInstanceSize": {
        "type": "object",
        "properties": {
          "availableRegions": {
            "type": "array",
            "description": "List of regions that this cloud provider supports for this instance size.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/AvailableCloudProviderRegion"
            }
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the instance size or cluster tier.",
            "readOnly": true
          }
        }
      },
      "PaginatedApiAtlasProviderRegionsView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/CloudProviderRegions"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "AWSKMSConfiguration": {
        "type": "object",
        "properties": {
          "accessKeyID": {
            "maxLength": 128,
            "minLength": 16,
            "type": "string",
            "description": "Unique alphanumeric string that identifies an Identity and Access Management (IAM) access key with permissions required to access your Amazon Web Services (AWS) Customer Master Key (CMK).",
            "example": "019dd98d94b4bb778e7552e4"
          },
          "customerMasterKeyID": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Unique alphanumeric string that identifies the Amazon Web Services (AWS) Customer Master Key (CMK) you used to encrypt and decrypt the MongoDB master keys."
          },
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled encryption at rest for the specified project through Amazon Web Services (AWS) Key Management Service (KMS). To disable encryption at rest using customer key management and remove the configuration details, pass only this parameter with a value of `false`."
          },
          "region": {
            "title": "AWS Regions",
            "type": "string",
            "description": "Physical location where MongoDB Cloud deploys your AWS-hosted MongoDB cluster nodes. The region you choose can affect network latency for clients accessing your databases. When MongoDB Cloud deploys a dedicated cluster, it checks if a VPC or VPC connection exists for that provider and region. If not, MongoDB Cloud creates them as part of the deployment. MongoDB Cloud assigns the VPC a CIDR block. To limit a new VPC peering connection to one CIDR block and region, create the connection first. Deploy the cluster after the connection starts.",
            "enum": [
              "US_GOV_WEST_1",
              "US_GOV_EAST_1",
              "US_EAST_1",
              "US_EAST_2",
              "US_WEST_1",
              "US_WEST_2",
              "CA_CENTRAL_1",
              "EU_NORTH_1",
              "EU_WEST_1",
              "EU_WEST_2",
              "EU_WEST_3",
              "EU_CENTRAL_1",
              "EU_CENTRAL_2",
              "AP_EAST_1",
              "AP_NORTHEAST_1",
              "AP_NORTHEAST_2",
              "AP_NORTHEAST_3",
              "AP_SOUTHEAST_1",
              "AP_SOUTHEAST_2",
              "AP_SOUTHEAST_3",
              "AP_SOUTHEAST_4",
              "AP_SOUTH_1",
              "AP_SOUTH_2",
              "SA_EAST_1",
              "CN_NORTH_1",
              "CN_NORTHWEST_1",
              "ME_SOUTH_1",
              "ME_CENTRAL_1",
              "AF_SOUTH_1",
              "EU_SOUTH_1",
              "EU_SOUTH_2",
              "IL_CENTRAL_1",
              "CA_WEST_1",
              "GLOBAL"
            ]
          },
          "roleId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies an Amazon Web Services (AWS) Identity and Access Management (IAM) role. This IAM role has the permissions required to manage your AWS customer master key.",
            "writeOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "secretAccessKey": {
            "type": "string",
            "description": "Human-readable label of the Identity and Access Management (IAM) secret access key with permissions required to access your Amazon Web Services (AWS) customer master key.",
            "writeOnly": true
          },
          "valid": {
            "type": "boolean",
            "description": "Flag that indicates whether the Amazon Web Services (AWS) Key Management Service (KMS) encryption key can encrypt and decrypt data.",
            "readOnly": true
          }
        },
        "description": "Amazon Web Services (AWS) KMS configuration details and encryption at rest configuration set for the specified project.",
        "externalDocs": {
          "description": "Amazon Web Services Key Management Service",
          "url": "https://www.mongodb.com/docs/atlas/security-aws-kms/"
        }
      },
      "AzureKeyVault": {
        "type": "object",
        "properties": {
          "azureEnvironment": {
            "type": "string",
            "description": "Azure environment in which your account credentials reside.",
            "enum": ["AZURE", "AZURE_CHINA", "AZURE_GERMANY"]
          },
          "clientID": {
            "type": "string",
            "description": "Unique 36-hexadecimal character string that identifies an Azure application associated with your Azure Active Directory tenant.",
            "format": "uuid"
          },
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled encryption at rest for the specified  project. To disable encryption at rest using customer key management and remove the configuration details, pass only this parameter with a value of `false`."
          },
          "keyIdentifier": {
            "type": "string",
            "description": "Web address with a unique key that identifies for your Azure Key Vault.",
            "example": "https://EXAMPLEKeyVault.vault.azure.net/keys/EXAMPLEKey/d891821e3d364e9eb88fbd3d11807b86"
          },
          "keyVaultName": {
            "type": "string",
            "description": "Unique string that identifies the Azure Key Vault that contains your key."
          },
          "requirePrivateNetworking": {
            "type": "boolean",
            "description": "Enable connection to your Azure Key Vault over private networking."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "Name of the Azure resource group that contains your Azure Key Vault."
          },
          "secret": {
            "type": "string",
            "description": "Private data that you need secured and that belongs to the specified Azure Key Vault (AKV) tenant (**azureKeyVault.tenantID**). This data can include any type of sensitive data such as passwords, database connection strings, API keys, and the like. AKV stores this information as encrypted binary data.",
            "writeOnly": true,
            "externalDocs": {
              "description": "Azure Key Vault Secrets",
              "url": "https://docs.microsoft.com/en-us/azure/key-vault/secrets/about-secrets"
            }
          },
          "subscriptionID": {
            "type": "string",
            "description": "Unique 36-hexadecimal character string that identifies your Azure subscription.",
            "format": "uuid"
          },
          "tenantID": {
            "type": "string",
            "description": "Unique 36-hexadecimal character string that identifies the Azure Active Directory tenant within your Azure subscription.",
            "format": "uuid"
          },
          "valid": {
            "type": "boolean",
            "description": "Flag that indicates whether the Azure encryption key can encrypt and decrypt data.",
            "readOnly": true
          }
        },
        "description": "Details that define the configuration of Encryption at Rest using Azure Key Vault (AKV).",
        "externalDocs": {
          "description": "Azure Key Vault",
          "url": "https://www.mongodb.com/docs/atlas/security-azure-kms/"
        }
      },
      "EncryptionAtRest": {
        "type": "object",
        "properties": {
          "awsKms": {
            "$ref": "#/components/schemas/AWSKMSConfiguration"
          },
          "azureKeyVault": {
            "$ref": "#/components/schemas/AzureKeyVault"
          },
          "googleCloudKms": {
            "$ref": "#/components/schemas/GoogleCloudKMS"
          }
        }
      },
      "GoogleCloudKMS": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled encryption at rest for the specified  project. To disable encryption at rest using customer key management and remove the configuration details, pass only this parameter with a value of `false`."
          },
          "keyVersionResourceID": {
            "type": "string",
            "description": "Resource path that displays the key version resource ID for your Google Cloud KMS.",
            "example": "projects/my-project-common-0/locations/us-east4/keyRings/my-key-ring-0/cryptoKeys/my-key-0/cryptoKeyVersions/1"
          },
          "serviceAccountKey": {
            "type": "string",
            "description": "JavaScript Object Notation (JSON) object that contains the Google Cloud Key Management Service (KMS). Format the JSON as a string and not as an object.",
            "writeOnly": true,
            "externalDocs": {
              "description": "Google Cloud Authentication",
              "url": "https://cloud.google.com/docs/authentication/getting-started"
            }
          },
          "valid": {
            "type": "boolean",
            "description": "Flag that indicates whether the Google Cloud Key Management Service (KMS) encryption key can encrypt and decrypt data.",
            "readOnly": true
          }
        },
        "description": "Details that define the configuration of Encryption at Rest using Google Cloud Key Management Service (KMS).",
        "externalDocs": {
          "description": "Google Cloud Key Management Service",
          "url": "https://www.mongodb.com/docs/atlas/security-gcp-kms/"
        }
      },
      "TenantRestore": {
        "required": ["snapshotId", "targetDeploymentItemName"],
        "type": "object",
        "properties": {
          "clusterName": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the source cluster.",
            "readOnly": true
          },
          "deliveryType": {
            "type": "string",
            "description": "Means by which this resource returns the snapshot to the requesting MongoDB Cloud user.",
            "readOnly": true,
            "enum": ["RESTORE", "DOWNLOAD"]
          },
          "expirationDate": {
            "type": "string",
            "description": "Date and time when the download link no longer works. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the restore job.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "projectId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project from which the restore job originated.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "restoreFinishedDate": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud completed writing this snapshot. MongoDB Cloud changes the status of the restore job to `CLOSED`. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "restoreScheduledDate": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud will restore this snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "snapshotFinishedDate": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud completed writing this snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "snapshotId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the snapshot to restore.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "snapshotUrl": {
            "type": "string",
            "description": "Internet address from which you can download the compressed snapshot files. The resource returns this parameter when  `\"deliveryType\" : \"DOWNLOAD\"`.",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "Phase of the restore workflow for this job at the time this resource made this request.",
            "readOnly": true,
            "enum": ["PENDING", "QUEUED", "RUNNING", "FAILED", "COMPLETED"]
          },
          "targetDeploymentItemName": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[\\p{L}\\p{N}\\-_.(),:&@+']{1,64}$",
            "type": "string",
            "description": "Human-readable label that identifies the cluster on the target project to which you want to restore the snapshot. You can restore the snapshot to a cluster tier *M2* or greater."
          },
          "targetProjectId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that contains the cluster to which you want to restore the snapshot.",
            "example": "32b6e34b3d91647abb20e7b8"
          }
        }
      },
      "PaginatedTenantRestoreView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/TenantRestore"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "BackupTenantSnapshot": {
        "type": "object",
        "properties": {
          "expiration": {
            "type": "string",
            "description": "Date and time when the download link no longer works. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "finishTime": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud completed writing this snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the restore job.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "mongoDBVersion": {
            "type": "string",
            "description": "MongoDB host version that the snapshot runs.",
            "readOnly": true
          },
          "scheduledTime": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud will take the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "startTime": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud began taking the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "Phase of the workflow for this snapshot at the time this resource made this request.",
            "readOnly": true,
            "enum": ["PENDING", "QUEUED", "RUNNING", "FAILED", "COMPLETED"]
          }
        }
      },
      "PaginatedTenantSnapshotView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/BackupTenantSnapshot"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "ApiAtlasDataLakeAWSRegionView": {
        "type": "string",
        "description": "Atlas Data Federation AWS Regions.",
        "enum": [
          "SYDNEY_AUS",
          "MUMBAI_IND",
          "FRANKFURT_DEU",
          "DUBLIN_IRL",
          "LONDON_GBR",
          "VIRGINIA_USA",
          "OREGON_USA",
          "SAOPAULO_BRA",
          "MONTREAL_CAN",
          "TOKYO_JPN",
          "SINGAPORE_SGP"
        ]
      },
      "AtlasDataFederationAzureRegion": {
        "type": "string",
        "description": "Atlas Data Federation Azure Regions.",
        "enum": ["VIRGINIA_USA", "AMSTERDAM_NLD"]
      },
      "BaseAtlasDataLakeRegion": {
        "type": "object",
        "description": "Name of the region to which the data lake routes client connections.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/ApiAtlasDataLakeAWSRegionView"
          },
          {
            "$ref": "#/components/schemas/AtlasDataFederationAzureRegion"
          }
        ]
      },
      "DataFederationAzureCloudProviderConfig": {
        "required": ["roleId"],
        "type": "object",
        "properties": {
          "atlasAppId": {
            "type": "string",
            "description": "The App ID generated by Atlas for the Service Principal's access policy.",
            "readOnly": true
          },
          "roleId": {
            "type": "string",
            "description": "Unique identifier of the role that Data Federation can use to access the data stores.Required if specifying cloudProviderConfig."
          },
          "servicePrincipalId": {
            "type": "string",
            "description": "The ID of the Service Principal for which there is an access policyfor Atlas to access Azure resources.",
            "readOnly": true
          },
          "tenantId": {
            "type": "string",
            "description": "The Azure Active Directory / Entra ID tenant ID associated with the Service Principal.",
            "readOnly": true
          }
        },
        "description": "Configuration for running Data Federation in Azure."
      },
      "DataLakeAWSCloudProviderConfig": {
        "required": ["roleId", "testS3Bucket"],
        "type": "object",
        "properties": {
          "testS3Bucket": {
            "type": "string",
            "description": "Name of the S3 data bucket that the provided role ID is authorized to access.Required if specifying cloudProviderConfig.",
            "writeOnly": true
          },
          "externalId": {
            "type": "string",
            "description": "Unique identifier associated with the Identity and Access Management (IAM) role that the data lake assumes when accessing the data stores.",
            "readOnly": true
          },
          "iamAssumedRoleARN": {
            "maxLength": 2048,
            "minLength": 20,
            "type": "string",
            "description": "Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that the data lake assumes when accessing data stores.",
            "readOnly": true,
            "example": "arn:aws:iam::123456789012:root"
          },
          "iamUserARN": {
            "type": "string",
            "description": "Amazon Resource Name (ARN) of the user that the data lake assumes when accessing data stores.",
            "readOnly": true
          },
          "roleId": {
            "type": "string",
            "description": "Unique identifier of the role that the data lake can use to access the data stores.Required if specifying cloudProviderConfig."
          }
        },
        "description": "Configuration for running Data Federation in AWS."
      },
      "DataLakeApiBase": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the view, which corresponds to an aggregation pipeline on a collection."
          },
          "pipeline": {
            "type": "string",
            "description": "Aggregation pipeline stages to apply to the source collection.",
            "externalDocs": {
              "description": "Aggregation Pipelines",
              "url": "https://docs.mongodb.com/manual/core/aggregation-pipeline/"
            }
          },
          "source": {
            "type": "string",
            "description": "Human-readable label that identifies the source collection for the view."
          }
        },
        "description": "An aggregation pipeline that applies to the collection."
      },
      "DataLakeAtlasStoreInstance": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/DataLakeStoreSettings"
          },
          {
            "type": "object",
            "properties": {
              "clusterName": {
                "type": "string",
                "description": "Human-readable label of the MongoDB Cloud cluster on which the store is based."
              },
              "projectId": {
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^([a-f0-9]{24})$",
                "type": "string",
                "description": "Unique 24-hexadecimal digit string that identifies the project.",
                "readOnly": true
              },
              "readConcern": {
                "$ref": "#/components/schemas/DataLakeAtlasStoreReadConcern"
              },
              "readPreference": {
                "$ref": "#/components/schemas/DataLakeAtlasStoreReadPreference"
              }
            }
          }
        ]
      },
      "DataLakeAtlasStoreReadConcern": {
        "type": "object",
        "properties": {
          "level": {
            "type": "string",
            "description": "Read Concern level that specifies the consistency and availability of the data read.",
            "externalDocs": {
              "description": "Read Concern Level",
              "url": "https://www.mongodb.com/docs/manual/reference/read-concern/#read-concern-levels"
            },
            "enum": ["LOCAL", "MAJORITY", "LINEARIZABLE", "SNAPSHOT", "AVAILABLE"]
          }
        },
        "description": "MongoDB Cloud cluster read concern, which determines the consistency and isolation properties of the data read from an Atlas cluster."
      },
      "DataLakeAtlasStoreReadPreference": {
        "type": "object",
        "properties": {
          "maxStalenessSeconds": {
            "type": "integer",
            "description": "Maximum replication lag, or **staleness**, for reads from secondaries.",
            "format": "int32"
          },
          "mode": {
            "type": "string",
            "description": "Read preference mode that specifies to which replica set member to route the read requests.",
            "externalDocs": {
              "description": "Read Preference Modes",
              "url": "https://docs.mongodb.com/manual/core/read-preference/#read-preference-modes"
            },
            "enum": ["primary", "primaryPreferred", "secondary", "secondaryPreferred", "nearest"]
          },
          "tagSets": {
            "type": "array",
            "description": "List that contains tag sets or tag specification documents. If specified, Atlas Data Lake routes read requests to replica set member or members that are associated with the specified tags.",
            "externalDocs": {
              "description": "Read Preference Tag Set Lists",
              "url": "https://docs.mongodb.com/manual/core/read-preference-tags/"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DataLakeAtlasStoreReadPreferenceTag"
              }
            }
          }
        },
        "description": "MongoDB Cloud cluster read preference, which describes how to route read requests to the cluster."
      },
      "DataLakeAtlasStoreReadPreferenceTag": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Human-readable label of the tag."
          },
          "value": {
            "type": "string",
            "description": "Value of the tag."
          }
        }
      },
      "DataLakeAzureBlobStore": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/DataLakeStoreSettings"
          },
          {
            "type": "object",
            "properties": {
              "containerName": {
                "type": "string",
                "description": "Human-readable label that identifies the name of the container."
              },
              "delimiter": {
                "type": "string",
                "description": "Delimiter."
              },
              "prefix": {
                "type": "string",
                "description": "Prefix."
              },
              "public": {
                "type": "boolean",
                "description": "Flag that indicates whether the blob store is public. If set to `true`, MongoDB Cloud doesn't use the configured Azure service principal to access the blob store. If set to `false`, the configured Azure service principal must include permissions to access the blob store.",
                "default": false
              },
              "region": {
                "title": "Azure Regions",
                "type": "string",
                "description": "Microsoft Azure Regions.",
                "enum": [
                  "US_CENTRAL",
                  "US_EAST",
                  "US_EAST_2",
                  "US_NORTH_CENTRAL",
                  "US_WEST",
                  "US_SOUTH_CENTRAL",
                  "EUROPE_NORTH",
                  "EUROPE_WEST",
                  "US_WEST_CENTRAL",
                  "US_WEST_2",
                  "US_WEST_3",
                  "CANADA_EAST",
                  "CANADA_CENTRAL",
                  "BRAZIL_SOUTH",
                  "BRAZIL_SOUTHEAST",
                  "AUSTRALIA_CENTRAL",
                  "AUSTRALIA_CENTRAL_2",
                  "AUSTRALIA_EAST",
                  "AUSTRALIA_SOUTH_EAST",
                  "GERMANY_CENTRAL",
                  "GERMANY_NORTH_EAST",
                  "GERMANY_WEST_CENTRAL",
                  "GERMANY_NORTH",
                  "SWEDEN_CENTRAL",
                  "SWEDEN_SOUTH",
                  "SWITZERLAND_NORTH",
                  "SWITZERLAND_WEST",
                  "UK_SOUTH",
                  "UK_WEST",
                  "NORWAY_EAST",
                  "NORWAY_WEST",
                  "INDIA_CENTRAL",
                  "INDIA_SOUTH",
                  "INDIA_WEST",
                  "CHINA_EAST",
                  "CHINA_NORTH",
                  "ASIA_EAST",
                  "JAPAN_EAST",
                  "JAPAN_WEST",
                  "ASIA_SOUTH_EAST",
                  "KOREA_CENTRAL",
                  "KOREA_SOUTH",
                  "FRANCE_CENTRAL",
                  "FRANCE_SOUTH",
                  "SOUTH_AFRICA_NORTH",
                  "SOUTH_AFRICA_WEST",
                  "UAE_CENTRAL",
                  "UAE_NORTH",
                  "QATAR_CENTRAL"
                ]
              },
              "replacementDelimiter": {
                "type": "string",
                "description": "Replacement Delimiter."
              },
              "serviceURL": {
                "type": "string",
                "description": "Service URL."
              }
            }
          }
        ]
      },
      "DataLakeCloudProviderConfig": {
        "title": "Data Lake Cloud Provider",
        "type": "object",
        "properties": {
          "aws": {
            "$ref": "#/components/schemas/DataLakeAWSCloudProviderConfig"
          },
          "azure": {
            "$ref": "#/components/schemas/DataFederationAzureCloudProviderConfig"
          }
        },
        "description": "Cloud provider where this Federated Database Instance is hosted."
      },
      "DataLakeDLSAWSStore": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/DataLakeStoreSettings"
          },
          {
            "type": "object",
            "properties": {
              "region": {
                "title": "AWS Regions",
                "type": "string",
                "description": "Physical location where MongoDB Cloud deploys your AWS-hosted MongoDB cluster nodes. The region you choose can affect network latency for clients accessing your databases. When MongoDB Cloud deploys a dedicated cluster, it checks if a VPC or VPC connection exists for that provider and region. If not, MongoDB Cloud creates them as part of the deployment. MongoDB Cloud assigns the VPC a CIDR block. To limit a new VPC peering connection to one CIDR block and region, create the connection first. Deploy the cluster after the connection starts.",
                "enum": [
                  "US_GOV_WEST_1",
                  "US_GOV_EAST_1",
                  "US_EAST_1",
                  "US_EAST_2",
                  "US_WEST_1",
                  "US_WEST_2",
                  "CA_CENTRAL_1",
                  "EU_NORTH_1",
                  "EU_WEST_1",
                  "EU_WEST_2",
                  "EU_WEST_3",
                  "EU_CENTRAL_1",
                  "EU_CENTRAL_2",
                  "AP_EAST_1",
                  "AP_NORTHEAST_1",
                  "AP_NORTHEAST_2",
                  "AP_NORTHEAST_3",
                  "AP_SOUTHEAST_1",
                  "AP_SOUTHEAST_2",
                  "AP_SOUTHEAST_3",
                  "AP_SOUTHEAST_4",
                  "AP_SOUTH_1",
                  "AP_SOUTH_2",
                  "SA_EAST_1",
                  "CN_NORTH_1",
                  "CN_NORTHWEST_1",
                  "ME_SOUTH_1",
                  "ME_CENTRAL_1",
                  "AF_SOUTH_1",
                  "EU_SOUTH_1",
                  "EU_SOUTH_2",
                  "IL_CENTRAL_1",
                  "CA_WEST_1",
                  "GLOBAL"
                ]
              }
            }
          }
        ]
      },
      "DataLakeDLSAzureStore": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/DataLakeStoreSettings"
          },
          {
            "type": "object",
            "properties": {
              "region": {
                "title": "Azure Regions",
                "type": "string",
                "description": "Microsoft Azure Regions.",
                "enum": [
                  "US_CENTRAL",
                  "US_EAST",
                  "US_EAST_2",
                  "US_NORTH_CENTRAL",
                  "US_WEST",
                  "US_SOUTH_CENTRAL",
                  "EUROPE_NORTH",
                  "EUROPE_WEST",
                  "US_WEST_CENTRAL",
                  "US_WEST_2",
                  "US_WEST_3",
                  "CANADA_EAST",
                  "CANADA_CENTRAL",
                  "BRAZIL_SOUTH",
                  "BRAZIL_SOUTHEAST",
                  "AUSTRALIA_CENTRAL",
                  "AUSTRALIA_CENTRAL_2",
                  "AUSTRALIA_EAST",
                  "AUSTRALIA_SOUTH_EAST",
                  "GERMANY_CENTRAL",
                  "GERMANY_NORTH_EAST",
                  "GERMANY_WEST_CENTRAL",
                  "GERMANY_NORTH",
                  "SWEDEN_CENTRAL",
                  "SWEDEN_SOUTH",
                  "SWITZERLAND_NORTH",
                  "SWITZERLAND_WEST",
                  "UK_SOUTH",
                  "UK_WEST",
                  "NORWAY_EAST",
                  "NORWAY_WEST",
                  "INDIA_CENTRAL",
                  "INDIA_SOUTH",
                  "INDIA_WEST",
                  "CHINA_EAST",
                  "CHINA_NORTH",
                  "ASIA_EAST",
                  "JAPAN_EAST",
                  "JAPAN_WEST",
                  "ASIA_SOUTH_EAST",
                  "KOREA_CENTRAL",
                  "KOREA_SOUTH",
                  "FRANCE_CENTRAL",
                  "FRANCE_SOUTH",
                  "SOUTH_AFRICA_NORTH",
                  "SOUTH_AFRICA_WEST",
                  "UAE_CENTRAL",
                  "UAE_NORTH",
                  "QATAR_CENTRAL"
                ]
              }
            }
          }
        ]
      },
      "DataLakeDataProcessRegion": {
        "required": ["cloudProvider", "region"],
        "type": "object",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Name of the cloud service that hosts the Federated Database Instance's infrastructure.",
            "enum": ["AWS", "AZURE"]
          },
          "region": {
            "$ref": "#/components/schemas/BaseAtlasDataLakeRegion"
          }
        },
        "description": "Information about the cloud provider region to which the Federated Database Instance routes client connections."
      },
      "DataLakeDatabaseCollection": {
        "type": "object",
        "properties": {
          "dataSources": {
            "type": "array",
            "description": "Array that contains the data stores that map to a collection for this data lake.",
            "items": {
              "$ref": "#/components/schemas/DataLakeDatabaseDataSourceSettings"
            }
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the collection to which MongoDB Cloud maps the data in the data stores."
          }
        },
        "description": "A collection and data sources that map to a ``stores`` data store."
      },
      "DataLakeDatabaseDataSourceSettings": {
        "type": "object",
        "properties": {
          "allowInsecure": {
            "type": "boolean",
            "description": "Flag that validates the scheme in the specified URLs. If `true`, allows insecure `HTTP` scheme, doesn't verify the server's certificate chain and hostname, and accepts any certificate with any hostname presented by the server. If `false`, allows secure `HTTPS` scheme only.",
            "default": false
          },
          "collection": {
            "type": "string",
            "description": "Human-readable label that identifies the collection in the database. For creating a wildcard (`*`) collection, you must omit this parameter."
          },
          "collectionRegex": {
            "type": "string",
            "description": "Regex pattern to use for creating the wildcard (*) collection. To learn more about the regex syntax, see [Go programming language](https://pkg.go.dev/regexp)."
          },
          "database": {
            "type": "string",
            "description": "Human-readable label that identifies the database, which contains the collection in the cluster. You must omit this parameter to generate wildcard (`*`) collections for dynamically generated databases."
          },
          "databaseRegex": {
            "type": "string",
            "description": "Regex pattern to use for creating the wildcard (*) database. To learn more about the regex syntax, see [Go programming language](https://pkg.go.dev/regexp)."
          },
          "datasetName": {
            "type": "string",
            "description": "Human-readable label that identifies the dataset that Atlas generates for an ingestion pipeline run or Online Archive.",
            "example": "v1$atlas$snapshot$Cluster0$myDatabase$myCollection$19700101T000000Z"
          },
          "datasetPrefix": {
            "type": "string",
            "description": "Human-readable label that matches against the dataset names for ingestion pipeline runs or Online Archives."
          },
          "defaultFormat": {
            "type": "string",
            "description": "File format that MongoDB Cloud uses if it encounters a file without a file extension while searching **storeName**.",
            "enum": [
              ".avro",
              ".avro.bz2",
              ".avro.gz",
              ".bson",
              ".bson.bz2",
              ".bson.gz",
              ".bsonx",
              ".csv",
              ".csv.bz2",
              ".csv.gz",
              ".json",
              ".json.bz2",
              ".json.gz",
              ".orc",
              ".parquet",
              ".tsv",
              ".tsv.bz2",
              ".tsv.gz"
            ]
          },
          "path": {
            "type": "string",
            "description": "File path that controls how MongoDB Cloud searches for and parses files in the **storeName** before mapping them to a collection.Specify ``/`` to capture all files and folders from the ``prefix`` path."
          },
          "provenanceFieldName": {
            "type": "string",
            "description": "Name for the field that includes the provenance of the documents in the results. MongoDB Cloud returns different fields in the results for each supported provider."
          },
          "storeName": {
            "type": "string",
            "description": "Human-readable label that identifies the data store that MongoDB Cloud maps to the collection."
          },
          "trimLevel": {
            "type": "integer",
            "description": "Unsigned integer that specifies how many fields of the dataset name to trim from the left of the dataset name before mapping the remaining fields to a wildcard collection name.",
            "format": "int32"
          },
          "urls": {
            "type": "array",
            "description": "URLs of the publicly accessible data files. You can't specify URLs that require authentication. Atlas Data Lake creates a partition for each URL. If empty or omitted, Data Lake uses the URLs from the store specified in the **dataSources.storeName** parameter.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Data store that maps to a collection for this data lake."
      },
      "DataLakeDatabaseInstance": {
        "type": "object",
        "properties": {
          "collections": {
            "type": "array",
            "description": "Array of collections and data sources that map to a ``stores`` data store.",
            "items": {
              "$ref": "#/components/schemas/DataLakeDatabaseCollection"
            }
          },
          "maxWildcardCollections": {
            "maximum": 1000,
            "minimum": 1,
            "type": "integer",
            "description": "Maximum number of wildcard collections in the database. This only applies to S3 data sources.",
            "format": "int32",
            "default": 100
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the database to which the data lake maps data."
          },
          "views": {
            "type": "array",
            "description": "Array of aggregation pipelines that apply to the collection. This only applies to S3 data sources.",
            "items": {
              "$ref": "#/components/schemas/DataLakeApiBase"
            }
          }
        },
        "description": "Database associated with this data lake. Databases contain collections and views."
      },
      "DataLakeHTTPStore": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/DataLakeStoreSettings"
          },
          {
            "type": "object",
            "properties": {
              "allowInsecure": {
                "type": "boolean",
                "description": "Flag that validates the scheme in the specified URLs. If `true`, allows insecure `HTTP` scheme, doesn't verify the server's certificate chain and hostname, and accepts any certificate with any hostname presented by the server. If `false`, allows secure `HTTPS` scheme only.",
                "default": false
              },
              "defaultFormat": {
                "type": "string",
                "description": "Default format that Data Lake assumes if it encounters a file without an extension while searching the `storeName`. If omitted, Data Lake attempts to detect the file type by processing a few bytes of the file. The specified format only applies to the URLs specified in the **databases.[n].collections.[n].dataSources** object."
              },
              "urls": {
                "type": "array",
                "description": "Comma-separated list of publicly accessible HTTP URLs where data is stored. You can't specify URLs that require authentication.",
                "items": {
                  "type": "string",
                  "description": "Comma-separated list of publicly accessible HTTP URLs where data is stored. You can't specify URLs that require authentication."
                }
              }
            }
          }
        ]
      },
      "DataLakeS3StoreSettings": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/DataLakeStoreSettings"
          },
          {
            "type": "object",
            "properties": {
              "additionalStorageClasses": {
                "type": "array",
                "description": "Collection of AWS S3 [storage classes](https://aws.amazon.com/s3/storage-classes/). Atlas Data Lake includes the files in these storage classes in the query results.",
                "items": {
                  "type": "string",
                  "description": "AWS S3 [storage class](https://aws.amazon.com/s3/storage-classes/) where the files to include in the results are stored.",
                  "enum": ["STANDARD", "INTELLIGENT_TIERING", "STANDARD_IA"]
                }
              },
              "bucket": {
                "type": "string",
                "description": "Human-readable label that identifies the AWS S3 bucket. This label must exactly match the name of an S3 bucket that the data lake can access with the configured AWS Identity and Access Management (IAM) credentials."
              },
              "delimiter": {
                "type": "string",
                "description": "The delimiter that separates **databases.[n].collections.[n].dataSources.[n].path** segments in the data store. MongoDB Cloud uses the delimiter to efficiently traverse S3 buckets with a hierarchical directory structure. You can specify any character supported by the S3 object keys as the delimiter. For example, you can specify an underscore (_) or a plus sign (+) or multiple characters, such as double underscores (__) as the delimiter. If omitted, defaults to `/`."
              },
              "includeTags": {
                "type": "boolean",
                "description": "Flag that indicates whether to use S3 tags on the files in the given path as additional partition attributes. If set to `true`, data lake adds the S3 tags as additional partition attributes and adds new top-level BSON elements associating each tag to each document.",
                "default": false
              },
              "prefix": {
                "type": "string",
                "description": "Prefix that MongoDB Cloud applies when searching for files in the S3 bucket. The data store prepends the value of prefix to the **databases.[n].collections.[n].dataSources.[n].path** to create the full path for files to ingest. If omitted, MongoDB Cloud searches all files from the root of the S3 bucket."
              },
              "public": {
                "type": "boolean",
                "description": "Flag that indicates whether the bucket is public. If set to `true`, MongoDB Cloud doesn't use the configured AWS Identity and Access Management (IAM) role to access the S3 bucket. If set to `false`, the configured AWS IAM role must include permissions to access the S3 bucket.",
                "default": false
              },
              "region": {
                "title": "AWS Regions",
                "type": "string",
                "description": "Physical location where MongoDB Cloud deploys your AWS-hosted MongoDB cluster nodes. The region you choose can affect network latency for clients accessing your databases. When MongoDB Cloud deploys a dedicated cluster, it checks if a VPC or VPC connection exists for that provider and region. If not, MongoDB Cloud creates them as part of the deployment. MongoDB Cloud assigns the VPC a CIDR block. To limit a new VPC peering connection to one CIDR block and region, create the connection first. Deploy the cluster after the connection starts.",
                "enum": [
                  "US_GOV_WEST_1",
                  "US_GOV_EAST_1",
                  "US_EAST_1",
                  "US_EAST_2",
                  "US_WEST_1",
                  "US_WEST_2",
                  "CA_CENTRAL_1",
                  "EU_NORTH_1",
                  "EU_WEST_1",
                  "EU_WEST_2",
                  "EU_WEST_3",
                  "EU_CENTRAL_1",
                  "EU_CENTRAL_2",
                  "AP_EAST_1",
                  "AP_NORTHEAST_1",
                  "AP_NORTHEAST_2",
                  "AP_NORTHEAST_3",
                  "AP_SOUTHEAST_1",
                  "AP_SOUTHEAST_2",
                  "AP_SOUTHEAST_3",
                  "AP_SOUTHEAST_4",
                  "AP_SOUTH_1",
                  "AP_SOUTH_2",
                  "SA_EAST_1",
                  "CN_NORTH_1",
                  "CN_NORTHWEST_1",
                  "ME_SOUTH_1",
                  "ME_CENTRAL_1",
                  "AF_SOUTH_1",
                  "EU_SOUTH_1",
                  "EU_SOUTH_2",
                  "IL_CENTRAL_1",
                  "CA_WEST_1",
                  "GLOBAL"
                ]
              }
            }
          }
        ]
      },
      "DataLakeStorage": {
        "type": "object",
        "properties": {
          "databases": {
            "type": "array",
            "description": "Array that contains the queryable databases and collections for this data lake.",
            "items": {
              "$ref": "#/components/schemas/DataLakeDatabaseInstance"
            }
          },
          "stores": {
            "type": "array",
            "description": "Array that contains the data stores for the data lake.",
            "items": {
              "$ref": "#/components/schemas/DataLakeStoreSettings"
            }
          }
        },
        "description": "Configuration information for each data store and its mapping to MongoDB Cloud databases."
      },
      "DataLakeStoreSettings": {
        "required": ["provider"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the data store. The **databases.[n].collections.[n].dataSources.[n].storeName** field references this values as part of the mapping configuration. To use MongoDB Cloud as a data store, the data lake requires a serverless instance or an `M10` or higher cluster."
          },
          "provider": {
            "type": "string"
          }
        },
        "description": "Group of settings that define where the data is stored.",
        "discriminator": {
          "propertyName": "provider",
          "mapping": {
            "s3": "#/components/schemas/DataLakeS3StoreSettings",
            "dls:aws": "#/components/schemas/DataLakeDLSAWSStore",
            "dls:azure": "#/components/schemas/DataLakeDLSAzureStore",
            "atlas": "#/components/schemas/DataLakeAtlasStoreInstance",
            "http": "#/components/schemas/DataLakeHTTPStore"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/DataLakeS3StoreSettings"
          },
          {
            "$ref": "#/components/schemas/DataLakeDLSAWSStore"
          },
          {
            "$ref": "#/components/schemas/DataLakeDLSAzureStore"
          },
          {
            "$ref": "#/components/schemas/DataLakeAtlasStoreInstance"
          },
          {
            "$ref": "#/components/schemas/DataLakeHTTPStore"
          }
        ]
      },
      "DataLakeTenant": {
        "type": "object",
        "properties": {
          "cloudProviderConfig": {
            "$ref": "#/components/schemas/DataLakeCloudProviderConfig"
          },
          "dataProcessRegion": {
            "$ref": "#/components/schemas/DataLakeDataProcessRegion"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the project.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "hostnames": {
            "type": "array",
            "description": "List that contains the hostnames assigned to the Federated Database Instance.",
            "readOnly": true,
            "items": {
              "type": "string",
              "description": "Unique hostname assigned to the Federated Database Instance.",
              "readOnly": true
            }
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the Federated Database Instance."
          },
          "privateEndpointHostnames": {
            "type": "array",
            "description": "List that contains the sets of private endpoints and hostnames.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/PrivateEndpointHostname"
            }
          },
          "state": {
            "type": "string",
            "description": "Label that indicates the status of the Federated Database Instance.",
            "readOnly": true,
            "enum": ["UNVERIFIED", "ACTIVE", "DELETED"]
          },
          "storage": {
            "$ref": "#/components/schemas/DataLakeStorage"
          }
        }
      },
      "PrivateEndpointHostname": {
        "type": "object",
        "properties": {
          "hostname": {
            "type": "string",
            "description": "Human-readable label that identifies the hostname.",
            "readOnly": true
          },
          "privateEndpoint": {
            "type": "string",
            "description": "Human-readable label that identifies private endpoint.",
            "readOnly": true
          }
        },
        "description": "Set of Private endpoint and hostnames.",
        "readOnly": true
      },
      "DataFederationTenantQueryLimit": {
        "title": "Data Federation Tenant-Level Query Limit",
        "required": ["name", "value"],
        "type": "object",
        "properties": {
          "currentUsage": {
            "type": "integer",
            "description": "Amount that indicates the current usage of the limit.",
            "format": "int64",
            "readOnly": true
          },
          "defaultLimit": {
            "type": "integer",
            "description": "Default value of the limit.",
            "format": "int64",
            "readOnly": true
          },
          "lastModifiedDate": {
            "type": "string",
            "description": "Only used for Data Federation limits. Timestamp that indicates when this usage limit was last modified. This field uses the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "maximumLimit": {
            "type": "integer",
            "description": "Maximum value of the limit.",
            "format": "int64",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the user-managed limit to modify.",
            "readOnly": true
          },
          "overrunPolicy": {
            "type": "string",
            "description": "Only used for Data Federation limits. Action to take when the usage limit is exceeded. If limit span is set to QUERY, this is ignored because MongoDB Cloud stops the query when it exceeds the usage limit.",
            "enum": ["BLOCK", "BLOCK_AND_KILL"]
          },
          "tenantName": {
            "type": "string",
            "description": "Human-readable label that identifies the Federated Database Instance. If specified, the usage limit is for the specified federated database instance only. If omitted, the usage limit is for all federated database instances in the project.",
            "readOnly": true
          },
          "value": {
            "type": "integer",
            "description": "Amount to set the limit to.",
            "format": "int64"
          }
        },
        "description": "Details of a tenant-level query limit for Data Federation. Query limit is the limit on the amount of usage during a time period based on cost."
      },
      "DLSIngestionSink": {
        "title": "DLS Ingestion Destination",
        "type": "object",
        "description": "Atlas Data Lake Storage as the destination for a Data Lake Pipeline.",
        "allOf": [
          {
            "$ref": "#/components/schemas/IngestionSink"
          },
          {
            "type": "object",
            "properties": {
              "metadataProvider": {
                "type": "string",
                "description": "Target cloud provider for this Data Lake Pipeline.",
                "enum": ["AWS"]
              },
              "metadataRegion": {
                "type": "string",
                "description": "Target cloud provider region for this Data Lake Pipeline.",
                "externalDocs": {
                  "description": "Supported cloud provider regions",
                  "url": "https://www.mongodb.com/docs/datalake/limitations"
                }
              },
              "partitionFields": {
                "type": "array",
                "description": "Ordered fields used to physically organize data in the destination.",
                "items": {
                  "$ref": "#/components/schemas/DataLakePipelinesPartitionField"
                }
              }
            }
          }
        ]
      },
      "DataLakeIngestionPipeline": {
        "title": "Data Lake Pipeline",
        "type": "object",
        "properties": {
          "_id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the Data Lake Pipeline.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "createdDate": {
            "type": "string",
            "description": "Timestamp that indicates when the Data Lake Pipeline was created.",
            "format": "date-time",
            "readOnly": true
          },
          "datasetRetentionPolicy": {
            "$ref": "#/components/schemas/DatasetRetentionPolicy"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the group.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "lastUpdatedDate": {
            "type": "string",
            "description": "Timestamp that indicates the last time that the Data Lake Pipeline was updated.",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of this Data Lake Pipeline."
          },
          "sink": {
            "$ref": "#/components/schemas/IngestionSink"
          },
          "source": {
            "$ref": "#/components/schemas/IngestionSource"
          },
          "state": {
            "type": "string",
            "description": "State of this Data Lake Pipeline.",
            "readOnly": true,
            "enum": ["ACTIVE", "PAUSED"]
          },
          "transformations": {
            "type": "array",
            "description": "Fields to be excluded for this Data Lake Pipeline.",
            "items": {
              "$ref": "#/components/schemas/FieldTransformation"
            }
          }
        },
        "description": "Details of a Data Lake Pipeline."
      },
      "DataLakePipelinesPartitionField": {
        "title": "Partition Field",
        "required": ["fieldName", "order"],
        "type": "object",
        "properties": {
          "fieldName": {
            "maxLength": 700,
            "type": "string",
            "description": "Human-readable label that identifies the field name used to partition data."
          },
          "order": {
            "type": "integer",
            "description": "Sequence in which MongoDB Cloud slices the collection data to create partitions. The resource expresses this sequence starting with zero.",
            "format": "int32",
            "default": 0
          }
        },
        "description": "Partition Field in the Data Lake Storage provider for a Data Lake Pipeline."
      },
      "DatasetRetentionPolicy": {
        "title": "Dataset Retention Policy",
        "required": ["units", "value"],
        "type": "object",
        "properties": {
          "lastModifiedDate": {
            "type": "string",
            "description": "Date when retention policy was last modified.",
            "format": "date-time",
            "readOnly": true
          },
          "units": {
            "type": "string",
            "description": "Quantity of time in which the Data Lake Pipeline measures dataset retention.",
            "enum": ["DAYS", "WEEKS", "MONTHS"]
          },
          "value": {
            "minimum": 1,
            "type": "integer",
            "description": "Number that indicates the amount of days, weeks, or months that the Data Lake Pipeline will retain datasets.",
            "format": "int32"
          }
        },
        "description": "Dataset Retention Policy for a Scheduled Data Lake Pipeline."
      },
      "FieldTransformation": {
        "title": "Field Transformation",
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": "Key in the document."
          },
          "type": {
            "type": "string",
            "description": "Type of transformation applied during the export of the namespace in a Data Lake Pipeline.",
            "enum": ["EXCLUDE"]
          }
        },
        "description": "Field Transformations during ingestion of a Data Lake Pipeline."
      },
      "IngestionSink": {
        "title": "Ingestion Destination",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of ingestion destination of this Data Lake Pipeline.",
            "readOnly": true,
            "enum": ["DLS"]
          }
        },
        "description": "Ingestion destination of a Data Lake Pipeline.",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "DLS": "#/components/schemas/DLSIngestionSink"
          }
        }
      },
      "IngestionSource": {
        "title": "Ingestion Source",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of ingestion source of this Data Lake Pipeline.",
            "enum": ["PERIODIC_CPS", "ON_DEMAND_CPS"]
          }
        },
        "description": "Ingestion Source of a Data Lake Pipeline.",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "ON_DEMAND_CPS": "#/components/schemas/OnDemandCpsSnapshotSource",
            "PERIODIC_CPS": "#/components/schemas/PeriodicCpsSnapshotSource"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/OnDemandCpsSnapshotSource"
          },
          {
            "$ref": "#/components/schemas/PeriodicCpsSnapshotSource"
          }
        ]
      },
      "OnDemandCpsSnapshotSource": {
        "title": "On-Demand Cloud Provider Snapshot Source",
        "type": "object",
        "description": "On-Demand Cloud Provider Snapshots as Source for a Data Lake Pipeline.",
        "allOf": [
          {
            "$ref": "#/components/schemas/IngestionSource"
          },
          {
            "type": "object",
            "properties": {
              "clusterName": {
                "type": "string",
                "description": "Human-readable name that identifies the cluster."
              },
              "collectionName": {
                "type": "string",
                "description": "Human-readable name that identifies the collection."
              },
              "databaseName": {
                "type": "string",
                "description": "Human-readable name that identifies the database."
              },
              "groupId": {
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^([a-f0-9]{24})$",
                "type": "string",
                "description": "Unique 24-hexadecimal character string that identifies the project.",
                "readOnly": true,
                "example": "32b6e34b3d91647abb20e7b8"
              }
            }
          }
        ]
      },
      "PeriodicCpsSnapshotSource": {
        "title": "Periodic Cloud Provider Snapshot Source",
        "type": "object",
        "description": "Scheduled Cloud Provider Snapshot as Source for a Data Lake Pipeline.",
        "allOf": [
          {
            "$ref": "#/components/schemas/IngestionSource"
          },
          {
            "type": "object",
            "properties": {
              "clusterName": {
                "type": "string",
                "description": "Human-readable name that identifies the cluster."
              },
              "collectionName": {
                "type": "string",
                "description": "Human-readable name that identifies the collection."
              },
              "databaseName": {
                "type": "string",
                "description": "Human-readable name that identifies the database."
              },
              "groupId": {
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^([a-f0-9]{24})$",
                "type": "string",
                "description": "Unique 24-hexadecimal character string that identifies the project.",
                "readOnly": true,
                "example": "32b6e34b3d91647abb20e7b8"
              },
              "policyItemId": {
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^([a-f0-9]{24})$",
                "type": "string",
                "description": "Unique 24-hexadecimal character string that identifies a policy item.",
                "example": "32b6e34b3d91647abb20e7b8"
              }
            }
          }
        ]
      },
      "PaginatedBackupSnapshotView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/DiskBackupSnapshot"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "IngestionPipelineRun": {
        "title": "Data Lake Pipeline Run",
        "type": "object",
        "properties": {
          "_id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies a Data Lake Pipeline run.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "backupFrequencyType": {
            "type": "string",
            "description": "Backup schedule interval of the Data Lake Pipeline.",
            "readOnly": true,
            "enum": ["HOURLY", "DAILY", "WEEKLY", "MONTHLY", "YEARLY", "ON_DEMAND"]
          },
          "createdDate": {
            "type": "string",
            "description": "Timestamp that indicates when the pipeline run was created.",
            "format": "date-time",
            "readOnly": true
          },
          "datasetName": {
            "type": "string",
            "description": "Human-readable label that identifies the dataset that Atlas generates during this pipeline run. You can use this dataset as a `dataSource` in a Federated Database collection.",
            "readOnly": true,
            "example": "v1$atlas$snapshot$Cluster0$myDatabase$myCollection$19700101T000000Z"
          },
          "datasetRetentionPolicy": {
            "$ref": "#/components/schemas/DatasetRetentionPolicy"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the project.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "lastUpdatedDate": {
            "type": "string",
            "description": "Timestamp that indicates the last time that the pipeline run was updated.",
            "format": "date-time",
            "readOnly": true
          },
          "phase": {
            "type": "string",
            "description": "Processing phase of the Data Lake Pipeline.",
            "readOnly": true,
            "enum": ["SNAPSHOT", "EXPORT", "INGESTION"]
          },
          "pipelineId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies a Data Lake Pipeline.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "scheduledDeletionDate": {
            "type": "string",
            "description": "Timestamp that indicates when the pipeline run will expire and its dataset will be deleted.",
            "format": "date-time",
            "readOnly": true
          },
          "snapshotId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the snapshot of a cluster.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "state": {
            "type": "string",
            "description": "State of the pipeline run.",
            "readOnly": true,
            "enum": ["PENDING", "IN_PROGRESS", "DONE", "FAILED", "DATASET_DELETED"]
          },
          "stats": {
            "$ref": "#/components/schemas/PipelineRunStats"
          }
        },
        "description": "Run details of a Data Lake Pipeline."
      },
      "PaginatedPipelineRunView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/IngestionPipelineRun"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "PipelineRunStats": {
        "title": "Data Lake Pipeline Run Statistics",
        "type": "object",
        "properties": {
          "bytesExported": {
            "type": "integer",
            "description": "Total data size in bytes exported for this pipeline run.",
            "format": "int64",
            "readOnly": true
          },
          "numDocs": {
            "type": "integer",
            "description": "Number of docs ingested for a this pipeline run.",
            "format": "int64",
            "readOnly": true
          }
        },
        "description": "Runtime statistics for this Data Lake Pipeline run.",
        "readOnly": true
      },
      "TriggerIngestionPipelineRequest": {
        "required": ["snapshotId"],
        "type": "object",
        "properties": {
          "datasetRetentionPolicy": {
            "$ref": "#/components/schemas/DatasetRetentionPolicy"
          },
          "snapshotId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the snapshot.",
            "writeOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          }
        }
      },
      "BasicDBObject": {
        "type": "object",
        "additionalProperties": {
          "type": "object"
        }
      },
      "ClusterSearchIndex": {
        "required": ["collectionName", "database", "name"],
        "type": "object",
        "properties": {
          "collectionName": {
            "type": "string",
            "description": "Human-readable label that identifies the collection that contains one or more Atlas Search indexes."
          },
          "database": {
            "type": "string",
            "description": "Human-readable label that identifies the database that contains the collection with one or more Atlas Search indexes."
          },
          "indexID": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this Atlas Search index.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies this index. Within each namespace, names of all indexes in the namespace must be unique."
          },
          "status": {
            "type": "string",
            "description": "Condition of the search index when you made this request.\n\n| Status | Index Condition |\n |---|---|\n | IN_PROGRESS | Atlas is building or re-building the index after an edit. |\n | STEADY | You can use this search index. |\n | FAILED | Atlas could not build the index. |\n | MIGRATING | Atlas is upgrading the underlying cluster tier and migrating indexes. |\n | PAUSED | The cluster is paused. |\n",
            "readOnly": true,
            "enum": ["IN_PROGRESS", "STEADY", "FAILED", "MIGRATING", "STALE", "PAUSED"]
          },
          "type": {
            "type": "string",
            "description": "Type of the index. Default type is search.",
            "enum": ["search", "vectorSearch"]
          }
        },
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "search": "#/components/schemas/SearchIndex",
            "vectorSearch": "#/components/schemas/VectorSearchIndex"
          }
        }
      },
      "SearchIndex": {
        "required": ["collectionName", "database", "name"],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ClusterSearchIndex"
          },
          {
            "type": "object",
            "properties": {
              "analyzer": {
                "type": "string",
                "description": "Specific pre-defined method chosen to convert database field text into searchable words. This conversion reduces the text of fields into the smallest units of text. These units are called a **term** or **token**. This process, known as tokenization, involves a variety of changes made to the text in fields:\n\n- extracting words\n- removing punctuation\n- removing accents\n- changing to lowercase\n- removing common words\n- reducing words to their root form (stemming)\n- changing words to their base form (lemmatization)\n MongoDB Cloud uses the selected process to build the Atlas Search index.",
                "externalDocs": {
                  "description": "Atlas Search Analyzers",
                  "url": "https://dochub.mongodb.org/core/analyzers--fts"
                },
                "default": "lucene.standard",
                "enum": [
                  "lucene.standard",
                  "lucene.simple",
                  "lucene.whitespace",
                  "lucene.keyword",
                  "lucene.arabic",
                  "lucene.armenian",
                  "lucene.basque",
                  "lucene.bengali",
                  "lucene.brazilian",
                  "lucene.bulgarian",
                  "lucene.catalan",
                  "lucene.chinese",
                  "lucene.cjk",
                  "lucene.czech",
                  "lucene.danish",
                  "lucene.dutch",
                  "lucene.english",
                  "lucene.finnish",
                  "lucene.french",
                  "lucene.galician",
                  "lucene.german",
                  "lucene.greek",
                  "lucene.hindi",
                  "lucene.hungarian",
                  "lucene.indonesian",
                  "lucene.irish",
                  "lucene.italian",
                  "lucene.japanese",
                  "lucene.korean",
                  "lucene.kuromoji",
                  "lucene.latvian",
                  "lucene.lithuanian",
                  "lucene.morfologik",
                  "lucene.nori",
                  "lucene.norwegian",
                  "lucene.persian",
                  "lucene.portuguese",
                  "lucene.romanian",
                  "lucene.russian",
                  "lucene.smartcn",
                  "lucene.sorani",
                  "lucene.spanish",
                  "lucene.swedish",
                  "lucene.thai",
                  "lucene.turkish",
                  "lucene.ukrainian"
                ]
              },
              "analyzers": {
                "type": "array",
                "description": "List of user-defined methods to convert database field text into searchable words.",
                "externalDocs": {
                  "description": "Custom Atlas Search Analyzers",
                  "url": "https://dochub.mongodb.org/core/custom-fts"
                },
                "items": {
                  "$ref": "#/components/schemas/ApiAtlasFTSAnalyzersViewManual"
                }
              },
              "mappings": {
                "$ref": "#/components/schemas/ApiAtlasFTSMappingsViewManual"
              },
              "searchAnalyzer": {
                "type": "string",
                "description": "Method applied to identify words when searching this index.",
                "default": "lucene.standard",
                "enum": [
                  "lucene.standard",
                  "lucene.simple",
                  "lucene.whitespace",
                  "lucene.keyword",
                  "lucene.arabic",
                  "lucene.armenian",
                  "lucene.basque",
                  "lucene.bengali",
                  "lucene.brazilian",
                  "lucene.bulgarian",
                  "lucene.catalan",
                  "lucene.chinese",
                  "lucene.cjk",
                  "lucene.czech",
                  "lucene.danish",
                  "lucene.dutch",
                  "lucene.english",
                  "lucene.finnish",
                  "lucene.french",
                  "lucene.galician",
                  "lucene.german",
                  "lucene.greek",
                  "lucene.hindi",
                  "lucene.hungarian",
                  "lucene.indonesian",
                  "lucene.irish",
                  "lucene.italian",
                  "lucene.japanese",
                  "lucene.korean",
                  "lucene.kuromoji",
                  "lucene.latvian",
                  "lucene.lithuanian",
                  "lucene.morfologik",
                  "lucene.nori",
                  "lucene.norwegian",
                  "lucene.persian",
                  "lucene.portuguese",
                  "lucene.romanian",
                  "lucene.russian",
                  "lucene.smartcn",
                  "lucene.sorani",
                  "lucene.spanish",
                  "lucene.swedish",
                  "lucene.thai",
                  "lucene.turkish",
                  "lucene.ukrainian"
                ]
              },
              "storedSource": {
                "type": "object",
                "description": "Flag that indicates whether to store all fields (true) on Atlas Search. By default, Atlas doesn't store (false) the fields on Atlas Search.  Alternatively, you can specify an object that only contains the list of fields to store (include) or not store (exclude) on Atlas Search. To learn more, see documentation.",
                "example": {
                  "include | exclude": ["field1", "field2"]
                },
                "externalDocs": {
                  "description": "Stored Source Fields",
                  "url": "https://dochub.mongodb.org/core/atlas-search-stored-source"
                }
              },
              "synonyms": {
                "type": "array",
                "description": "Rule sets that map words to their synonyms in this index.",
                "externalDocs": {
                  "description": "Synonym Mapping",
                  "url": "https://dochub.mongodb.org/core/fts-synonym-mappings"
                },
                "items": {
                  "$ref": "#/components/schemas/SearchSynonymMappingDefinition"
                }
              }
            }
          }
        ]
      },
      "SearchSynonymMappingDefinition": {
        "title": "Synonym Mapping Definition",
        "required": ["analyzer", "name", "source"],
        "type": "object",
        "properties": {
          "analyzer": {
            "type": "string",
            "description": "Specific pre-defined method chosen to apply to the synonyms to be searched.",
            "enum": [
              "lucene.standard",
              "lucene.simple",
              "lucene.whitespace",
              "lucene.keyword",
              "lucene.arabic",
              "lucene.armenian",
              "lucene.basque",
              "lucene.bengali",
              "lucene.brazilian",
              "lucene.bulgarian",
              "lucene.catalan",
              "lucene.chinese",
              "lucene.cjk",
              "lucene.czech",
              "lucene.danish",
              "lucene.dutch",
              "lucene.english",
              "lucene.finnish",
              "lucene.french",
              "lucene.galician",
              "lucene.german",
              "lucene.greek",
              "lucene.hindi",
              "lucene.hungarian",
              "lucene.indonesian",
              "lucene.irish",
              "lucene.italian",
              "lucene.japanese",
              "lucene.korean",
              "lucene.kuromoji",
              "lucene.latvian",
              "lucene.lithuanian",
              "lucene.morfologik",
              "lucene.nori",
              "lucene.norwegian",
              "lucene.persian",
              "lucene.portuguese",
              "lucene.romanian",
              "lucene.russian",
              "lucene.smartcn",
              "lucene.sorani",
              "lucene.spanish",
              "lucene.swedish",
              "lucene.thai",
              "lucene.turkish",
              "lucene.ukrainian"
            ]
          },
          "name": {
            "type": "string",
            "description": "Label that identifies the synonym definition. Each **synonym.name** must be unique within the same index definition."
          },
          "source": {
            "$ref": "#/components/schemas/SynonymSource"
          }
        },
        "description": "Synonyms used for this full text index."
      },
      "SynonymSource": {
        "required": ["collection"],
        "type": "object",
        "properties": {
          "collection": {
            "type": "string",
            "description": "Label that identifies the MongoDB collection that stores words and their applicable synonyms."
          }
        },
        "description": "Data set that stores words and their applicable synonyms."
      },
      "VectorSearchIndex": {
        "required": ["collectionName", "database", "name"],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ClusterSearchIndex"
          },
          {
            "type": "object",
            "properties": {
              "fields": {
                "type": "array",
                "description": "Settings that configure the fields, one per object, to index. You must define at least one \"vector\" type field. You can optionally define \"filter\" type fields also.",
                "externalDocs": {
                  "description": "Vector Search Fields",
                  "url": "https://dochub.mongodb.org/core/avs-vector-type"
                },
                "items": {
                  "$ref": "#/components/schemas/BasicDBObject"
                }
              }
            }
          }
        ]
      },
      "ApiSearchDeploymentResponseView": {
        "type": "object",
        "properties": {
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the project.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the search deployment.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "specs": {
            "type": "array",
            "description": "List of settings that configure the Search Nodes for your cluster.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ApiSearchDeploymentSpecView"
            }
          },
          "stateName": {
            "type": "string",
            "description": "Human-readable label that indicates the current operating condition of this search deployment.",
            "readOnly": true,
            "enum": ["IDLE", "PAUSED", "UPDATING"]
          }
        }
      },
      "ApiSearchDeploymentSpecView": {
        "required": ["instanceSize", "nodeCount"],
        "type": "object",
        "properties": {
          "instanceSize": {
            "type": "string",
            "description": "Hardware specification for the Search Node instance sizes.",
            "enum": [
              "S20_HIGHCPU_NVME",
              "S30_HIGHCPU_NVME",
              "S40_HIGHCPU_NVME",
              "S50_HIGHCPU_NVME",
              "S60_HIGHCPU_NVME",
              "S70_HIGHCPU_NVME",
              "S80_HIGHCPU_NVME",
              "S30_LOWCPU_NVME",
              "S40_LOWCPU_NVME",
              "S50_LOWCPU_NVME",
              "S60_LOWCPU_NVME",
              "S70_LOWCPU_NVME",
              "S80_LOWCPU_NVME",
              "S90_LOWCPU_NVME",
              "S100_LOWCPU_NVME",
              "S110_LOWCPU_NVME",
              "S120_LOWCPU_NVME",
              "S130_LOWCPU_NVME",
              "S135_LOWCPU_NVME",
              "S140_LOWCPU_NVME"
            ]
          },
          "nodeCount": {
            "maximum": 32,
            "minimum": 2,
            "type": "integer",
            "description": "Number of Search Nodes in the cluster.",
            "format": "int32",
            "example": 2
          }
        }
      },
      "ApiSearchDeploymentRequestView": {
        "required": ["specs"],
        "type": "object",
        "properties": {
          "specs": {
            "maxItems": 1,
            "minItems": 1,
            "type": "array",
            "description": "List of settings that configure the Search Nodes for your cluster.",
            "items": {
              "$ref": "#/components/schemas/ApiSearchDeploymentSpecView"
            }
          }
        }
      },
      "AtlasSearchAnalyzer": {
        "title": "Atlas Search Analyzer",
        "required": ["name", "tokenizer"],
        "type": "object",
        "properties": {
          "charFilters": {
            "type": "array",
            "description": "Filters that examine text one character at a time and perform filtering operations.",
            "items": {
              "$ref": "#/components/schemas/BasicDBObject"
            }
          },
          "name": {
            "type": "string",
            "description": "Name that identifies the custom analyzer. Names must be unique within an index, and must not start with any of the following strings:\n- `lucene.`\n- `builtin.`\n- `mongodb.`"
          },
          "tokenFilters": {
            "type": "array",
            "description": "Filter that performs operations such as:\n\n- Stemming, which reduces related words, such as \"talking\", \"talked\", and \"talks\" to their root word \"talk\".\n\n- Redaction, which is the removal of sensitive information from public documents.",
            "items": {
              "$ref": "#/components/schemas/BasicDBObject"
            }
          },
          "tokenizer": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Tokenizer that you want to use to create tokens. Tokens determine how Atlas Search splits up text into discrete chunks for indexing."
            },
            "description": "Tokenizer that you want to use to create tokens. Tokens determine how Atlas Search splits up text into discrete chunks for indexing."
          }
        }
      },
      "SearchHostStatusDetail": {
        "title": "Search Host Status Detail",
        "type": "object",
        "properties": {
          "hostname": {
            "type": "string",
            "description": "Hostname that corresponds to the status detail."
          },
          "mainIndex": {
            "$ref": "#/components/schemas/SearchMainIndexStatusDetail"
          },
          "queryable": {
            "type": "boolean",
            "description": "Flag that indicates whether the index is queryable on the host."
          },
          "stagedIndex": {
            "$ref": "#/components/schemas/SearchStagedIndexStatusDetail"
          },
          "status": {
            "type": "string",
            "description": "Condition of the search index when you made this request.\n\n | Status | Index Condition |\n |---|---|\n | DELETING | The index is being deleted. |\n | FAILED | The index build failed. Indexes can enter the FAILED state due to an invalid index definition. |\n | STALE | The index is queryable but has stopped replicating data from the indexed collection. Searches on the index may return out-of-date data. |\n | PENDING | Atlas has not yet started building the index. |\n | BUILDING | Atlas is building or re-building the index after an edit. |\n | READY | The index is ready and can support queries. |\n",
            "enum": ["DELETING", "FAILED", "STALE", "PENDING", "BUILDING", "READY", "DOES_NOT_EXIST"]
          }
        }
      },
      "SearchIndexDefinition": {
        "title": "Search Index Definition",
        "type": "object",
        "description": "The search index definition set by the user."
      },
      "SearchIndexDefinitionVersion": {
        "title": "Search Index Definition Version",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "The time at which this index definition was created.",
            "format": "date-time"
          },
          "version": {
            "type": "integer",
            "description": "The version number associated with this index definition when it was created.",
            "format": "int64"
          }
        },
        "description": "Object which includes the version number of the index definition and the time that the index definition was created."
      },
      "SearchIndexResponse": {
        "title": "Search Index Response",
        "type": "object",
        "properties": {
          "collectionName": {
            "type": "string",
            "description": "Label that identifies the collection that contains one or more Atlas Search indexes."
          },
          "database": {
            "type": "string",
            "description": "Label that identifies the database that contains the collection with one or more Atlas Search indexes."
          },
          "indexID": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this Atlas Search index.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "latestDefinition": {
            "$ref": "#/components/schemas/SearchIndexDefinition"
          },
          "latestDefinitionVersion": {
            "$ref": "#/components/schemas/SearchIndexDefinitionVersion"
          },
          "name": {
            "type": "string",
            "description": "Label that identifies this index. Within each namespace, the names of all indexes must be unique."
          },
          "queryable": {
            "type": "boolean",
            "description": "Flag that indicates whether the index is queryable on all hosts."
          },
          "status": {
            "type": "string",
            "description": "Condition of the search index when you made this request.\n\n | Status | Index Condition |\n |---|---|\n | DELETING | The index is being deleted. |\n | FAILED | The index build failed. Indexes can enter the FAILED state due to an invalid index definition. |\n | STALE | The index is queryable but has stopped replicating data from the indexed collection. Searches on the index may return out-of-date data. |\n | PENDING | Atlas has not yet started building the index. |\n | BUILDING | Atlas is building or re-building the index after an edit. |\n | READY | The index is ready and can support queries. |\n",
            "enum": ["DELETING", "FAILED", "STALE", "PENDING", "BUILDING", "READY", "DOES_NOT_EXIST"]
          },
          "statusDetail": {
            "type": "array",
            "description": "List of documents detailing index status on each host.",
            "items": {
              "$ref": "#/components/schemas/SearchHostStatusDetail"
            }
          },
          "type": {
            "type": "string",
            "description": "Type of the index. The default type is search.",
            "enum": ["search", "vectorSearch"]
          }
        },
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "search": "#/components/schemas/TextSearchIndexResponse",
            "vectorSearch": "#/components/schemas/VectorSearchIndexResponse"
          }
        }
      },
      "SearchMainIndexStatusDetail": {
        "title": "Search Main Index Status Detail",
        "type": "object",
        "properties": {
          "definition": {
            "$ref": "#/components/schemas/SearchIndexDefinition"
          },
          "definitionVersion": {
            "$ref": "#/components/schemas/SearchIndexDefinitionVersion"
          },
          "message": {
            "type": "string",
            "description": "Optional message describing an error."
          },
          "queryable": {
            "type": "boolean",
            "description": "Flag that indicates whether the index generation is queryable on the host."
          },
          "status": {
            "type": "string",
            "description": "Condition of the search index when you made this request.\n\n | Status | Index Condition |\n |---|---|\n | DELETING | The index is being deleted. |\n | FAILED | The index build failed. Indexes can enter the FAILED state due to an invalid index definition. |\n | STALE | The index is queryable but has stopped replicating data from the indexed collection. Searches on the index may return out-of-date data. |\n | PENDING | Atlas has not yet started building the index. |\n | BUILDING | Atlas is building or re-building the index after an edit. |\n | READY | The index is ready and can support queries. |\n",
            "enum": ["DELETING", "FAILED", "STALE", "PENDING", "BUILDING", "READY", "DOES_NOT_EXIST"]
          }
        },
        "description": "Contains status information about the active index."
      },
      "SearchMappings": {
        "title": "Mappings",
        "type": "object",
        "properties": {
          "dynamic": {
            "type": "boolean",
            "description": "Flag that indicates whether the index uses dynamic or static mappings. Required if **mappings.fields** is omitted.",
            "externalDocs": {
              "description": "Dynamic or Static Mappings",
              "url": "https://dochub.mongodb.org/core/field-mapping-definition-fts#static-and-dynamic-mappings"
            }
          },
          "fields": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "One or more field specifications for the Atlas Search index. Required if **mappings.dynamic** is omitted or set to **false**.",
              "externalDocs": {
                "description": "Atlas Search Index",
                "url": "https://dochub.mongodb.org/core/index-definitions-fts"
              },
              "x-additionalPropertiesName": "Field Name"
            },
            "description": "One or more field specifications for the Atlas Search index. Required if **mappings.dynamic** is omitted or set to **false**.",
            "externalDocs": {
              "description": "Atlas Search Index",
              "url": "https://dochub.mongodb.org/core/index-definitions-fts"
            },
            "x-additionalPropertiesName": "Field Name"
          }
        },
        "description": "Index specifications for the collection's fields."
      },
      "SearchStagedIndexStatusDetail": {
        "title": "Search Staged Index Status Detail",
        "type": "object",
        "properties": {
          "definition": {
            "$ref": "#/components/schemas/SearchIndexDefinition"
          },
          "definitionVersion": {
            "$ref": "#/components/schemas/SearchIndexDefinitionVersion"
          },
          "message": {
            "type": "string",
            "description": "Optional message describing an error."
          },
          "queryable": {
            "type": "boolean",
            "description": "Flag that indicates whether the index generation is queryable on the host."
          },
          "status": {
            "type": "string",
            "description": "Condition of the search index when you made this request.\n\n | Status | Index Condition |\n |---|---|\n | DELETING | The index is being deleted. |\n | FAILED | The index build failed. Indexes can enter the FAILED state due to an invalid index definition. |\n | STALE | The index is queryable but has stopped replicating data from the indexed collection. Searches on the index may return out-of-date data. |\n | PENDING | Atlas has not yet started building the index. |\n | BUILDING | Atlas is building or re-building the index after an edit. |\n | READY | The index is ready and can support queries. |\n",
            "enum": ["DELETING", "FAILED", "STALE", "PENDING", "BUILDING", "READY", "DOES_NOT_EXIST"]
          }
        },
        "description": "Contains status information about an index building in the background."
      },
      "SynonymMappingStatusDetail": {
        "title": "Synonym Mapping Status Detail",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Optional message describing an error."
          },
          "queryable": {
            "type": "boolean",
            "description": "Flag that indicates whether the synonym mapping is queryable on a host."
          },
          "status": {
            "type": "string",
            "description": "Status that describes this index's synonym mappings. This status appears only if the index has synonyms defined.",
            "enum": ["FAILED", "BUILDING", "READY"]
          }
        },
        "description": "Contains the status of the index's synonym mappings on each search host. This field (and its subfields) only appear if the index has synonyms defined."
      },
      "SynonymMappingStatusDetailMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/SynonymMappingStatusDetail"
        },
        "x-additionalPropertiesName": "Synonym Mapping Name"
      },
      "TextSearchHostStatusDetail": {
        "title": "Text Search Host Status Detail",
        "type": "object",
        "properties": {
          "hostname": {
            "type": "string",
            "description": "Hostname that corresponds to the status detail."
          },
          "mainIndex": {
            "$ref": "#/components/schemas/TextSearchIndexStatusDetail"
          },
          "queryable": {
            "type": "boolean",
            "description": "Flag that indicates whether the index is queryable on the host."
          },
          "stagedIndex": {
            "$ref": "#/components/schemas/TextSearchIndexStatusDetail"
          },
          "status": {
            "type": "string",
            "description": "Condition of the search index when you made this request.\n\n | Status | Index Condition |\n |---|---|\n | DELETING | The index is being deleted. |\n | FAILED | The index build failed. Indexes can enter the FAILED state due to an invalid index definition. |\n | STALE | The index is queryable but has stopped replicating data from the indexed collection. Searches on the index may return out-of-date data. |\n | PENDING | Atlas has not yet started building the index. |\n | BUILDING | Atlas is building or re-building the index after an edit. |\n | READY | The index is ready and can support queries. |\n",
            "enum": ["DELETING", "FAILED", "STALE", "PENDING", "BUILDING", "READY", "DOES_NOT_EXIST"]
          }
        }
      },
      "TextSearchIndexDefinition": {
        "title": "Text Search Index Definition",
        "required": ["mappings"],
        "type": "object",
        "properties": {
          "analyzer": {
            "type": "string",
            "description": "Specific pre-defined method chosen to convert database field text into searchable words. This conversion reduces the text of fields into the smallest units of text. These units are called a **term** or **token**. This process, known as tokenization, involves making the following changes to the text in fields:\n\n- extracting words\n- removing punctuation\n- removing accents\n- changing to lowercase\n- removing common words\n- reducing words to their root form (stemming)\n- changing words to their base form (lemmatization)\n MongoDB Cloud uses the process you select to build the Atlas Search index.",
            "externalDocs": {
              "description": "Atlas Search Analyzers",
              "url": "https://dochub.mongodb.org/core/analyzers--fts"
            },
            "default": "lucene.standard",
            "enum": [
              "lucene.standard",
              "lucene.simple",
              "lucene.whitespace",
              "lucene.keyword",
              "lucene.arabic",
              "lucene.armenian",
              "lucene.basque",
              "lucene.bengali",
              "lucene.brazilian",
              "lucene.bulgarian",
              "lucene.catalan",
              "lucene.chinese",
              "lucene.cjk",
              "lucene.czech",
              "lucene.danish",
              "lucene.dutch",
              "lucene.english",
              "lucene.finnish",
              "lucene.french",
              "lucene.galician",
              "lucene.german",
              "lucene.greek",
              "lucene.hindi",
              "lucene.hungarian",
              "lucene.indonesian",
              "lucene.irish",
              "lucene.italian",
              "lucene.japanese",
              "lucene.korean",
              "lucene.kuromoji",
              "lucene.latvian",
              "lucene.lithuanian",
              "lucene.morfologik",
              "lucene.nori",
              "lucene.norwegian",
              "lucene.persian",
              "lucene.portuguese",
              "lucene.romanian",
              "lucene.russian",
              "lucene.smartcn",
              "lucene.sorani",
              "lucene.spanish",
              "lucene.swedish",
              "lucene.thai",
              "lucene.turkish",
              "lucene.ukrainian"
            ]
          },
          "analyzers": {
            "type": "array",
            "description": "List of user-defined methods to convert database field text into searchable words.",
            "externalDocs": {
              "description": "Custom Atlas Search Analyzers",
              "url": "https://dochub.mongodb.org/core/custom-fts"
            },
            "items": {
              "$ref": "#/components/schemas/AtlasSearchAnalyzer"
            }
          },
          "mappings": {
            "$ref": "#/components/schemas/SearchMappings"
          },
          "searchAnalyzer": {
            "type": "string",
            "description": "Method applied to identify words when searching this index.",
            "default": "lucene.standard",
            "enum": [
              "lucene.standard",
              "lucene.simple",
              "lucene.whitespace",
              "lucene.keyword",
              "lucene.arabic",
              "lucene.armenian",
              "lucene.basque",
              "lucene.bengali",
              "lucene.brazilian",
              "lucene.bulgarian",
              "lucene.catalan",
              "lucene.chinese",
              "lucene.cjk",
              "lucene.czech",
              "lucene.danish",
              "lucene.dutch",
              "lucene.english",
              "lucene.finnish",
              "lucene.french",
              "lucene.galician",
              "lucene.german",
              "lucene.greek",
              "lucene.hindi",
              "lucene.hungarian",
              "lucene.indonesian",
              "lucene.irish",
              "lucene.italian",
              "lucene.japanese",
              "lucene.korean",
              "lucene.kuromoji",
              "lucene.latvian",
              "lucene.lithuanian",
              "lucene.morfologik",
              "lucene.nori",
              "lucene.norwegian",
              "lucene.persian",
              "lucene.portuguese",
              "lucene.romanian",
              "lucene.russian",
              "lucene.smartcn",
              "lucene.sorani",
              "lucene.spanish",
              "lucene.swedish",
              "lucene.thai",
              "lucene.turkish",
              "lucene.ukrainian"
            ]
          },
          "storedSource": {
            "type": "object",
            "description": "Flag that indicates whether to store all fields (true) on Atlas Search. By default, Atlas doesn't store (false) the fields on Atlas Search.  Alternatively, you can specify an object that only contains the list of fields to store (include) or not store (exclude) on Atlas Search. To learn more, see Stored Source Fields.",
            "example": {
              "include | exclude": ["field1", "field2"]
            },
            "externalDocs": {
              "description": "Stored Source Fields",
              "url": "https://dochub.mongodb.org/core/atlas-search-stored-source"
            }
          },
          "synonyms": {
            "type": "array",
            "description": "Rule sets that map words to their synonyms in this index.",
            "externalDocs": {
              "description": "Synonym Mapping",
              "url": "https://dochub.mongodb.org/core/fts-synonym-mappings"
            },
            "items": {
              "$ref": "#/components/schemas/SearchSynonymMappingDefinition"
            }
          }
        },
        "description": "The text search index definition set by the user."
      },
      "TextSearchIndexResponse": {
        "title": "Text Search Index Response",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SearchIndexResponse"
          },
          {
            "type": "object",
            "properties": {
              "latestDefinition": {
                "$ref": "#/components/schemas/TextSearchIndexDefinition"
              },
              "statusDetail": {
                "type": "array",
                "description": "List of documents detailing index status on each host.",
                "items": {
                  "$ref": "#/components/schemas/TextSearchHostStatusDetail"
                }
              },
              "synonymMappingStatus": {
                "type": "string",
                "description": "Status that describes this index's synonym mappings. This status appears only if the index has synonyms defined.",
                "enum": ["FAILED", "BUILDING", "READY"]
              },
              "synonymMappingStatusDetail": {
                "type": "array",
                "description": "A list of documents describing the status of the index's synonym mappings on each search host. Only appears if the index has synonyms defined.",
                "items": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/SynonymMappingStatusDetail"
                  }
                }
              }
            }
          }
        ]
      },
      "TextSearchIndexStatusDetail": {
        "title": "Text Search Index Status Detail",
        "type": "object",
        "properties": {
          "definition": {
            "$ref": "#/components/schemas/TextSearchIndexDefinition"
          },
          "definitionVersion": {
            "$ref": "#/components/schemas/SearchIndexDefinitionVersion"
          },
          "message": {
            "type": "string",
            "description": "Optional message describing an error."
          },
          "queryable": {
            "type": "boolean",
            "description": "Flag that indicates whether the index generation is queryable on the host."
          },
          "status": {
            "type": "string",
            "description": "Condition of the search index when you made this request.\n\n | Status | Index Condition |\n |---|---|\n | DELETING | The index is being deleted. |\n | FAILED | The index build failed. Indexes can enter the FAILED state due to an invalid index definition. |\n | STALE | The index is queryable but has stopped replicating data from the indexed collection. Searches on the index may return out-of-date data. |\n | PENDING | Atlas has not yet started building the index. |\n | BUILDING | Atlas is building or re-building the index after an edit. |\n | READY | The index is ready and can support queries. |\n",
            "enum": ["DELETING", "FAILED", "STALE", "PENDING", "BUILDING", "READY", "DOES_NOT_EXIST"]
          },
          "synonymMappingStatus": {
            "type": "string",
            "description": "Status that describes this index's synonym mappings. This status appears only if the index has synonyms defined.",
            "enum": ["FAILED", "BUILDING", "READY"]
          },
          "synonymMappingStatusDetail": {
            "type": "array",
            "description": "List of synonym statuses by mapping.",
            "items": {
              "$ref": "#/components/schemas/SynonymMappingStatusDetailMap"
            }
          }
        },
        "description": "Contains status information about a text search index."
      },
      "VectorSearchHostStatusDetail": {
        "title": "Vector Search Host Status Detail",
        "type": "object",
        "properties": {
          "hostname": {
            "type": "string",
            "description": "Hostname that corresponds to the status detail."
          },
          "mainIndex": {
            "$ref": "#/components/schemas/VectorSearchIndexStatusDetail"
          },
          "queryable": {
            "type": "boolean",
            "description": "Flag that indicates whether the index is queryable on the host."
          },
          "stagedIndex": {
            "$ref": "#/components/schemas/VectorSearchIndexStatusDetail"
          },
          "status": {
            "type": "string",
            "description": "Condition of the search index when you made this request.\n\n | Status | Index Condition |\n |---|---|\n | DELETING | The index is being deleted. |\n | FAILED | The index build failed. Indexes can enter the FAILED state due to an invalid index definition. |\n | STALE | The index is queryable but has stopped replicating data from the indexed collection. Searches on the index may return out-of-date data. |\n | PENDING | Atlas has not yet started building the index. |\n | BUILDING | Atlas is building or re-building the index after an edit. |\n | READY | The index is ready and can support queries. |\n",
            "enum": ["DELETING", "FAILED", "STALE", "PENDING", "BUILDING", "READY", "DOES_NOT_EXIST"]
          }
        }
      },
      "VectorSearchIndexDefinition": {
        "title": "Vector Search Index Definition",
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "description": "Settings that configure the fields, one per object, to index. You must define at least one \"vector\" type field. You can optionally define \"filter\" type fields also.",
            "externalDocs": {
              "description": "Vector Search Fields",
              "url": "https://dochub.mongodb.org/core/avs-vector-type"
            },
            "items": {
              "$ref": "#/components/schemas/BasicDBObject"
            }
          }
        },
        "description": "The vector search index definition set by the user."
      },
      "VectorSearchIndexResponse": {
        "title": "Vector Search Index Response",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SearchIndexResponse"
          },
          {
            "type": "object",
            "properties": {
              "latestDefinition": {
                "$ref": "#/components/schemas/VectorSearchIndexDefinition"
              },
              "statusDetail": {
                "type": "array",
                "description": "List of documents detailing index status on each host.",
                "items": {
                  "$ref": "#/components/schemas/VectorSearchHostStatusDetail"
                }
              }
            }
          }
        ]
      },
      "VectorSearchIndexStatusDetail": {
        "title": "Vector Search Index Status Detail",
        "type": "object",
        "properties": {
          "definition": {
            "$ref": "#/components/schemas/VectorSearchIndexDefinition"
          },
          "definitionVersion": {
            "$ref": "#/components/schemas/SearchIndexDefinitionVersion"
          },
          "message": {
            "type": "string",
            "description": "Optional message describing an error."
          },
          "queryable": {
            "type": "boolean",
            "description": "Flag that indicates whether the index generation is queryable on the host."
          },
          "status": {
            "type": "string",
            "description": "Condition of the search index when you made this request.\n\n | Status | Index Condition |\n |---|---|\n | DELETING | The index is being deleted. |\n | FAILED | The index build failed. Indexes can enter the FAILED state due to an invalid index definition. |\n | STALE | The index is queryable but has stopped replicating data from the indexed collection. Searches on the index may return out-of-date data. |\n | PENDING | Atlas has not yet started building the index. |\n | BUILDING | Atlas is building or re-building the index after an edit. |\n | READY | The index is ready and can support queries. |\n",
            "enum": ["DELETING", "FAILED", "STALE", "PENDING", "BUILDING", "READY", "DOES_NOT_EXIST"]
          }
        },
        "description": "Contains status information about a vector search index."
      },
      "SearchIndexCreateRequest": {
        "required": ["collectionName", "database", "name"],
        "type": "object",
        "properties": {
          "collectionName": {
            "type": "string",
            "description": "Label that identifies the collection to create an Atlas Search index in."
          },
          "database": {
            "type": "string",
            "description": "Label that identifies the database that contains the collection to create an Atlas Search index in."
          },
          "name": {
            "type": "string",
            "description": "Label that identifies this index. Within each namespace, names of all indexes in the namespace must be unique."
          },
          "type": {
            "type": "string",
            "description": "Type of the index. The default type is search.",
            "enum": ["search", "vectorSearch"]
          }
        },
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "search": "#/components/schemas/TextSearchIndexCreateRequest",
            "vectorSearch": "#/components/schemas/VectorSearchIndexCreateRequest"
          }
        }
      },
      "TextSearchIndexCreateRequest": {
        "required": ["collectionName", "database", "definition", "name"],
        "type": "object",
        "description": "Text Search Index Create Request",
        "allOf": [
          {
            "$ref": "#/components/schemas/SearchIndexCreateRequest"
          },
          {
            "type": "object",
            "properties": {
              "definition": {
                "$ref": "#/components/schemas/TextSearchIndexDefinition"
              }
            }
          }
        ]
      },
      "VectorSearchIndexCreateRequest": {
        "required": ["collectionName", "database", "definition", "name"],
        "type": "object",
        "description": "Vector Search Index Create Request",
        "allOf": [
          {
            "$ref": "#/components/schemas/SearchIndexCreateRequest"
          },
          {
            "type": "object",
            "properties": {
              "definition": {
                "$ref": "#/components/schemas/VectorSearchIndexDefinition"
              }
            }
          }
        ]
      },
      "ApiError": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string",
            "description": "Describes the specific conditions or reasons that cause each type of error."
          },
          "error": {
            "type": "integer",
            "description": "HTTP status code returned with this error.",
            "format": "int32",
            "externalDocs": {
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status"
            }
          },
          "errorCode": {
            "type": "string",
            "description": "Application error code returned with this error."
          },
          "parameters": {
            "type": "array",
            "description": "Parameters used to give more information about the error.",
            "items": {
              "type": "object"
            }
          },
          "reason": {
            "type": "string",
            "description": "Application error message returned with this error."
          }
        }
      },
      "SearchIndexUpdateRequest": {
        "title": "Search Index Update Request",
        "required": ["definition"],
        "type": "object",
        "properties": {
          "definition": {
            "type": "object",
            "description": "The index definition to update the search index to.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/TextSearchIndexDefinition"
              },
              {
                "$ref": "#/components/schemas/VectorSearchIndexDefinition"
              }
            ]
          }
        }
      },
      "Collation": {
        "required": ["locale"],
        "type": "object",
        "properties": {
          "alternate": {
            "type": "string",
            "description": "Method to handle whitespace and punctuation as base characters for purposes of comparison.\n\n| Value | Evaluate Whitespace and Punctuation as Base Characters |\n|---|---|\n| `\"non-ignorable\"` | Yes |\n| `\"shifted\"` | No. MongoDB Cloud distinguishes these characters when `\"strength\" > 3`. |\n",
            "default": "non-ignorable",
            "enum": ["non-ignorable", "shifted"]
          },
          "backwards": {
            "type": "boolean",
            "description": "Flag that indicates whether strings with diacritics sort from back of the string. Some French dictionary orders strings in this way.\n\n| Value | String Comparison Method |\n |---|---|\n| `true` | Compare from back to front. |\n| `false` | Compare from front to back. |\n",
            "default": false
          },
          "caseFirst": {
            "type": "string",
            "description": "Method to handle sort order of case differences during tertiary level comparisons.\n\n| Value | Sort Order Method |\n |---|---|\n | `\"upper\"` | Uppercase sorts before lowercase. |\n | `\"lower\"` | Lowercase sorts before uppercase. |\n | `\"off\"` | Similar to \"lower\" with slight differences. |\n",
            "default": "off",
            "enum": ["lower", "off", "upper"]
          },
          "caseLevel": {
            "type": "boolean",
            "description": "Flag that indicates whether to include case comparison when `\"strength\" : 1` or `\"strength\" : 2`.\n\n| Value | Compare case at level 1 or 2? | Strength Level | Comparisons Include |\n |---|---|---|---|\n | true | Yes | 1 | Base characters and case. |\n |  |  | 2 | Base characters, diacritics (and possible other secondary differences),   and case. |\n | false | No |  |  |\n",
            "default": false
          },
          "locale": {
            "type": "string",
            "description": "International Components for Unicode (ICU) code that represents a localized language. To specify simple binary comparison, set `\"locale\" : \"simple\"`.",
            "enum": [
              "af",
              "sq",
              "am",
              "ar",
              "hy",
              "as",
              "az",
              "bn",
              "be",
              "bs",
              "bs_Cyrl",
              "bg",
              "my",
              "ca",
              "chr",
              "zh",
              "zh_Hant",
              "hr",
              "cs",
              "da",
              "nl",
              "dz",
              "en",
              "en_US",
              "en_US_POSIX",
              "eo",
              "et",
              "ee",
              "fo",
              "fil",
              "fi_FI",
              "fr",
              "fr_CA",
              "gl",
              "ka",
              "de",
              "de_AT",
              "el",
              "gu",
              "ha",
              "haw",
              "he",
              "hi",
              "hu",
              "is",
              "ig",
              "smn",
              "id",
              "ga",
              "it",
              "ja",
              "kl",
              "kn",
              "kk",
              "km",
              "kok",
              "ko",
              "ky",
              "lk",
              "lo",
              "lv",
              "li",
              "lt",
              "dsb",
              "lb",
              "mk",
              "ms",
              "ml",
              "mt",
              "mr",
              "mn",
              "ne",
              "se",
              "nb",
              "nn",
              "or",
              "om",
              "ps",
              "fa",
              "fa_AF",
              "pl",
              "pt",
              "pa",
              "ro",
              "ru",
              "sr",
              "sr_Latn",
              "si",
              "sk",
              "sl",
              "es",
              "sw",
              "sv",
              "ta",
              "te",
              "th",
              "bo",
              "to",
              "tr",
              "uk",
              "hsb",
              "ur",
              "ug",
              "vi",
              "wae",
              "cy",
              "yi",
              "yo",
              "zu",
              "simple"
            ]
          },
          "maxVariable": {
            "type": "string",
            "description": "Field that indicates which characters can be ignored when `\"alternate\" : \"shifted\"`. This has no affect if `\"alternate\" : \"non-ignorable\"`.\n\n| Value | Ignore |\n |---|---|\n| `\"punct\"` | Both whitespace and punctuation |\n| `\"space\"` | Whitespace |\n",
            "enum": ["punct", "space"]
          },
          "normalization": {
            "type": "boolean",
            "description": "Flag that indicates whether to check if the text requires normalization and then perform it. Most text doesn't require this normalization processing.\n\n| Value | Normalization Method |\n |---|---|\n| `true` | Yes, check if fully normalized and perform normalization to compare text. |\n| `false` | No, don't check. |\n",
            "default": false
          },
          "numericOrdering": {
            "type": "boolean",
            "description": "Flag that indicates whether to compare sequences of digits as numbers or as strings.\n\n| Value | Comparison Method |\n |---|---|\n| `true` | Compare as numbers. This results in `10 > 2`. |\n| `false` | Compare as strings. This results in `\"10\" < \"2\"`. |\n",
            "default": false
          },
          "strength": {
            "maximum": 5,
            "minimum": 1,
            "type": "integer",
            "description": "Degree of comparison to perform when sorting words. MongoDB Cloud accepts the following values:\n\n| Value | Comparison Level | Comparison Method |\n|---|---|---|\n| 1 | Primary | Compares the base characters only, ignoring other differences such as diacritics and case. |\n| 2 | Secondary | Compares base characters (primary) and diacritics (secondary). Primary differences take precedence over secondary differences. |\n| 3 | Tertiary | Compares base characters (primary), diacritics (secondary), and case and variants (tertiary). Differences between base characters takes precedence over secondary differences which take precedence over tertiary differences. |\n| 4 | Quaternary | Compares for the specific use case to consider punctuation when levels 1 through 3 ignore punctuation or for processing Japanese text. |\n| 5 | Identical | Compares for the specific use case of tie breaker. |\n",
            "format": "int32",
            "default": 3
          }
        },
        "description": "One or more settings that specify language-specific rules to compare strings within this index.",
        "writeOnly": true,
        "externalDocs": {
          "description": "Collation Options",
          "url": "https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/#options"
        }
      },
      "DatabaseRollingIndexRequest": {
        "required": ["collection", "db"],
        "type": "object",
        "properties": {
          "collation": {
            "$ref": "#/components/schemas/Collation"
          },
          "collection": {
            "type": "string",
            "description": "Human-readable label of the collection for which MongoDB Cloud creates an index.",
            "writeOnly": true
          },
          "db": {
            "type": "string",
            "description": "Human-readable label of the database that holds the collection on which MongoDB Cloud creates an index.",
            "writeOnly": true
          },
          "keys": {
            "type": "array",
            "description": "List that contains one or more objects that describe the parameters that you want to index.",
            "writeOnly": true,
            "items": {
              "maxProperties": 1,
              "minProperties": 1,
              "type": "object",
              "additionalProperties": {
                "maxProperties": 1,
                "minProperties": 1,
                "type": "string",
                "description": "Key-value pair that sets the parameter to index as the key and the type of index as its value. To create a [multikey index](https://docs.mongodb.com/manual/core/index-multikey/), list each parameter in its own object within this array.",
                "writeOnly": true,
                "externalDocs": {
                  "description": "Index Types",
                  "url": "https://docs.mongodb.com/manual/indexes/#index-types"
                }
              },
              "description": "Key-value pair that sets the parameter to index as the key and the type of index as its value. To create a [multikey index](https://docs.mongodb.com/manual/core/index-multikey/), list each parameter in its own object within this array.",
              "writeOnly": true,
              "externalDocs": {
                "description": "Index Types",
                "url": "https://docs.mongodb.com/manual/indexes/#index-types"
              }
            }
          },
          "options": {
            "$ref": "#/components/schemas/IndexOptions"
          }
        }
      },
      "IndexOptions": {
        "type": "object",
        "properties": {
          "2dsphereIndexVersion": {
            "type": "integer",
            "description": "Index version number applied to the 2dsphere index. MongoDB 3.2 and later use version 3. Use this option to override the default version number. This option applies to the **2dsphere** index type only.",
            "format": "int32",
            "default": 3
          },
          "background": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB should build the index in the background. This applies to MongoDB databases running feature compatibility version 4.0 or earlier. MongoDB databases running FCV 4.2 or later build indexes using an optimized build process. This process holds the exclusive lock only at the beginning and end of the build process. The rest of the build process yields to interleaving read and write operations. MongoDB databases running FCV 4.2 or later ignore this option. This option applies to all index types.",
            "default": false
          },
          "bits": {
            "type": "integer",
            "description": "Number of precision applied to the stored geohash value of the location data. This option applies to the **2d** index type only.",
            "format": "int32",
            "default": 26
          },
          "bucketSize": {
            "type": "integer",
            "description": "Number of units within which to group the location values. You could group in the same bucket those location values within the specified number of units to each other. This option applies to the geoHaystack index type only.\n\nMongoDB 5.0 removed geoHaystack Indexes and the `geoSearch` command.",
            "format": "int32"
          },
          "columnstoreProjection": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "description": "The columnstoreProjection document allows to include or exclude subschemas schema. One cannot combine inclusion and exclusion statements. Accordingly, the <value> can be either of the following:\n1 or true to include the field and recursively all fields it is a prefix of in the index\n0 or false to exclude the field and recursively all fields it is a prefix of from the index.",
              "format": "int32"
            },
            "description": "The columnstoreProjection document allows to include or exclude subschemas schema. One cannot combine inclusion and exclusion statements. Accordingly, the <value> can be either of the following:\n1 or true to include the field and recursively all fields it is a prefix of in the index\n0 or false to exclude the field and recursively all fields it is a prefix of from the index."
          },
          "default_language": {
            "type": "string",
            "description": "Human language that determines the list of stop words and the rules for the stemmer and tokenizer. This option accepts the supported languages using its name in lowercase english or the ISO 639-2 code. If you set this parameter to `\"none\"`, then the text search uses simple tokenization with no list of stop words and no stemming. This option applies to the **text** index type only.",
            "default": "english"
          },
          "expireAfterSeconds": {
            "type": "integer",
            "description": "Number of seconds that MongoDB retains documents in a Time To Live (TTL) index.",
            "format": "int32"
          },
          "hidden": {
            "type": "boolean",
            "description": "Flag that determines whether the index is hidden from the query planner. A hidden index is not evaluated as part of the query plan selection.",
            "default": false
          },
          "language_override": {
            "type": "string",
            "description": "Human-readable label that identifies the document parameter that contains the override language for the document. This option applies to the **text** index type only.",
            "default": "language"
          },
          "max": {
            "type": "integer",
            "description": "Upper inclusive boundary to limit the longitude and latitude values. This option applies to the 2d index type only.",
            "format": "int32",
            "default": 180
          },
          "min": {
            "type": "integer",
            "description": "Lower inclusive boundary to limit the longitude and latitude values. This option applies to the 2d index type only.",
            "format": "int32",
            "default": -180
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies this index. This option applies to all index types."
          },
          "partialFilterExpression": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Rules that limit the documents that the index references to a filter expression. All MongoDB index types accept a **partialFilterExpression** option. **partialFilterExpression** can include following expressions:\n\n- equality (`\"parameter\" : \"value\"` or using the `$eq` operator)\n- `\"$exists\": true`\n, maximum: `$gt`, `$gte`, `$lt`, `$lte` comparisons\n- `$type`\n- `$and` (top-level only)\n This option applies to all index types."
            },
            "description": "Rules that limit the documents that the index references to a filter expression. All MongoDB index types accept a **partialFilterExpression** option. **partialFilterExpression** can include following expressions:\n\n- equality (`\"parameter\" : \"value\"` or using the `$eq` operator)\n- `\"$exists\": true`\n, maximum: `$gt`, `$gte`, `$lt`, `$lte` comparisons\n- `$type`\n- `$and` (top-level only)\n This option applies to all index types."
          },
          "sparse": {
            "type": "boolean",
            "description": "Flag that indicates whether the index references documents that only have the specified parameter. These indexes use less space but behave differently in some situations like when sorting. The following index types default to sparse and ignore this option: `2dsphere`, `2d`, `geoHaystack`, `text`.\n\nCompound indexes that includes one or more indexes with `2dsphere` keys alongside other key types, only the `2dsphere` index parameters determine which documents the index references. If you run MongoDB 3.2 or later, use partial indexes. This option applies to all index types.",
            "default": false
          },
          "storageEngine": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Storage engine set for the specific index. This value can be set only at creation. This option uses the following format: `\"storageEngine\" : { \"<storage-engine-name>\" : \"<options>\" }` MongoDB validates storage engine configuration options when creating indexes. To support replica sets with members with different storage engines, MongoDB logs these options to the oplog during replication. This option applies to all index types.",
              "externalDocs": {
                "description": "MongoDB Server Storage Engines",
                "url": "https://docs.mongodb.com/manual/core/storage-engines/"
              }
            },
            "description": "Storage engine set for the specific index. This value can be set only at creation. This option uses the following format: `\"storageEngine\" : { \"<storage-engine-name>\" : \"<options>\" }` MongoDB validates storage engine configuration options when creating indexes. To support replica sets with members with different storage engines, MongoDB logs these options to the oplog during replication. This option applies to all index types.",
            "externalDocs": {
              "description": "MongoDB Server Storage Engines",
              "url": "https://docs.mongodb.com/manual/core/storage-engines/"
            }
          },
          "textIndexVersion": {
            "type": "integer",
            "description": "Version applied to this text index. MongoDB 3.2 and later use version `3`. Use this option to override the default version number. This option applies to the **text** index type only.",
            "format": "int32",
            "default": 3
          },
          "weights": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Relative importance to place upon provided index parameters. This object expresses this as key/value pairs of index parameter and weight to apply to that parameter. You can specify weights for some or all the indexed parameters. The weight must be an integer between 1 and 99,999. MongoDB 5.0 and later can apply **weights** to **text** indexes only."
            },
            "description": "Relative importance to place upon provided index parameters. This object expresses this as key/value pairs of index parameter and weight to apply to that parameter. You can specify weights for some or all the indexed parameters. The weight must be an integer between 1 and 99,999. MongoDB 5.0 and later can apply **weights** to **text** indexes only."
          }
        },
        "description": "One or more settings that determine how the MongoDB Cloud creates this MongoDB index.",
        "writeOnly": true,
        "externalDocs": {
          "description": "Index Options",
          "url": "https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/#options"
        }
      },
      "PartialFilter": {
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "description": "Rules that limit the documents that the index references to a filter expression. All MongoDB index types accept a **partialFilterExpression** option. **partialFilterExpression** can include following expressions:\n\n- equality (`\"parameter\" : \"value\"` or using the `$eq` operator)\n- `\"$exists\": true`\n, maximum: `$gt`, `$gte`, `$lt`, `$lte` comparisons\n- `$type`\n- `$and` (top-level only)\n This option applies to all index types."
        },
        "description": "Rules that limit the documents that the index references to a filter expression. All MongoDB index types accept a **partialFilterExpression** option. **partialFilterExpression** can include following expressions:\n\n- equality (`\"parameter\" : \"value\"` or using the `$eq` operator)\n- `\"$exists\": true`\n, maximum: `$gt`, `$gte`, `$lt`, `$lte` comparisons\n- `$type`\n- `$and` (top-level only)\n This option applies to all index types."
      },
      "StorageEngine": {
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "description": "Storage engine set for the specific index. This value can be set only at creation. This option uses the following format: `\"storageEngine\" : { \"<storage-engine-name>\" : \"<options>\" }` MongoDB validates storage engine configuration options when creating indexes. To support replica sets with members with different storage engines, MongoDB logs these options to the oplog during replication. This option applies to all index types.",
          "externalDocs": {
            "description": "MongoDB Server Storage Engines",
            "url": "https://docs.mongodb.com/manual/core/storage-engines/"
          }
        },
        "description": "Storage engine set for the specific index. This value can be set only at creation. This option uses the following format: `\"storageEngine\" : { \"<storage-engine-name>\" : \"<options>\" }` MongoDB validates storage engine configuration options when creating indexes. To support replica sets with members with different storage engines, MongoDB logs these options to the oplog during replication. This option applies to all index types.",
        "externalDocs": {
          "description": "MongoDB Server Storage Engines",
          "url": "https://docs.mongodb.com/manual/core/storage-engines/"
        }
      },
      "Weights": {
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "description": "Relative importance to place upon provided index parameters. This object expresses this as key/value pairs of index parameter and weight to apply to that parameter. You can specify weights for some or all the indexed parameters. The weight must be an integer between 1 and 99,999. MongoDB 5.0 and later can apply **weights** to **text** indexes only."
        },
        "description": "Relative importance to place upon provided index parameters. This object expresses this as key/value pairs of index parameter and weight to apply to that parameter. You can specify weights for some or all the indexed parameters. The weight must be an integer between 1 and 99,999. MongoDB 5.0 and later can apply **weights** to **text** indexes only."
      },
      "MeasurementsIndexes": {
        "type": "object",
        "properties": {
          "collectionName": {
            "type": "string",
            "description": "Human-readable label that identifies the collection.",
            "readOnly": true
          },
          "databaseName": {
            "type": "string",
            "description": "Human-readable label that identifies the database that the specified MongoDB process serves.",
            "readOnly": true
          },
          "end": {
            "type": "string",
            "description": "Date and time that specifies when to stop retrieving measurements. If you set **end**, you must set **start**. You can't set this parameter and **period** in the same request. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "granularity": {
            "type": "string",
            "description": "Duration that specifies the interval between measurement data points. The parameter expresses its value in ISO 8601 timestamp format in UTC. If you set this parameter, you must set either **period** or **start** and **end**.",
            "readOnly": true,
            "enum": ["PT1M", "PT5M", "PT1H", "P1D"]
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project. The project contains MongoDB processes that you want to return. The MongoDB process can be either the `mongod` or `mongos`.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "indexIds": {
            "type": "array",
            "description": "List that contains the Atlas Search index identifiers.",
            "readOnly": true,
            "items": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "description": "Unique 24-hexadecimal digit string that identifies the index.",
              "example": "32b6e34b3d91647abb20e7b8"
            }
          },
          "indexStatsMeasurements": {
            "type": "array",
            "description": "List that contains the Atlas Search index stats measurements.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/MetricsMeasurement"
            }
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "processId": {
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
            "type": "string",
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "readOnly": true,
            "example": "mongodb.example.com:27017"
          },
          "start": {
            "type": "string",
            "description": "Date and time that specifies when to start retrieving measurements. If you set **start**, you must set **end**. You can't set this parameter and **period** in the same request. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "MetricDataPoint": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "description": "Date and time when this data point occurred. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "value": {
            "type": "number",
            "description": "Value that comprises this data point.",
            "readOnly": true
          }
        },
        "description": "value of, and metadata provided for, one data point generated at a particular moment in time. If no data point exists for a particular moment in time, the `value` parameter returns `null`.",
        "readOnly": true
      },
      "MetricsMeasurement": {
        "type": "object",
        "properties": {
          "dataPoints": {
            "type": "array",
            "description": "List that contains the value of, and metadata provided for, one data point generated at a particular moment in time. If no data point exists for a particular moment in time, the `value` parameter returns `null`.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/MetricDataPoint"
            }
          },
          "name": {
            "type": "string",
            "description": "Human-readable label of the measurement that this data point covers.",
            "readOnly": true
          },
          "units": {
            "type": "string",
            "description": "Element used to quantify the measurement. The resource returns units of throughput, storage, and time.",
            "readOnly": true,
            "enum": [
              "BYTES",
              "BYTES_PER_SECOND",
              "GIGABYTES",
              "GIGABYTES_PER_HOUR",
              "MEGABYTES_PER_SECOND",
              "MICROSECONDS",
              "MILLISECONDS",
              "PERCENT",
              "SCALAR",
              "SCALAR_PER_SECOND"
            ]
          }
        }
      },
      "CloudSearchMetrics": {
        "required": ["groupId", "processId"],
        "type": "object",
        "properties": {
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "hardwareMetrics": {
            "type": "array",
            "description": "List that contains all host compute, memory, and storage utilization dedicated to Atlas Search when MongoDB Atlas received this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/FTSMetric"
            }
          },
          "indexMetrics": {
            "type": "array",
            "description": "List that contains all performance and utilization measurements that Atlas Search index performed by the time MongoDB Atlas received this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/FTSMetric"
            }
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "processId": {
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
            "type": "string",
            "description": "Hostname and port that identifies the process.",
            "readOnly": true,
            "example": "mongodb.example.com:27017"
          },
          "statusMetrics": {
            "type": "array",
            "description": "List that contains all available Atlas Search status metrics when MongoDB Atlas received this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/FTSMetric"
            }
          }
        }
      },
      "FTSMetric": {
        "required": ["metricName", "units"],
        "type": "object",
        "properties": {
          "metricName": {
            "type": "string",
            "description": "Human-readable label that identifies this Atlas Search hardware, status, or index measurement.",
            "readOnly": true,
            "enum": [
              "INDEX_SIZE_ON_DISK",
              "NUMBER_OF_DELETES",
              "NUMBER_OF_ERROR_QUERIES",
              "NUMBER_OF_GETMORE_COMMANDS",
              "NUMBER_OF_INDEX_FIELDS",
              "NUMBER_OF_INSERTS",
              "NUMBER_OF_SUCCESS_QUERIES",
              "NUMBER_OF_UPDATES",
              "REPLICATION_LAG",
              "TOTAL_NUMBER_OF_QUERIES",
              "FTS_DISK_USAGE",
              "FTS_PROCESS_CPU_KERNEL",
              "FTS_PROCESS_CPU_USER",
              "FTS_PROCESS_NORMALIZED_CPU_KERNEL",
              "FTS_PROCESS_NORMALIZED_CPU_USER",
              "FTS_PROCESS_RESIDENT_MEMORY",
              "FTS_PROCESS_SHARED_MEMORY",
              "FTS_PROCESS_VIRTUAL_MEMORY",
              "JVM_CURRENT_MEMORY",
              "JVM_MAX_MEMORY",
              "PAGE_FAULTS"
            ]
          },
          "units": {
            "type": "string",
            "description": "Unit of measurement that applies to this Atlas Search metric.",
            "readOnly": true,
            "enum": [
              "BYTES",
              "BYTES_PER_SECOND",
              "GIGABYTES",
              "GIGABYTES_PER_HOUR",
              "KILOBYTES",
              "MEGABYTES",
              "MEGABYTES_PER_SECOND",
              "MILLISECONDS",
              "MILLISECONDS_LOGSCALE",
              "PERCENT",
              "SCALAR",
              "SCALAR_PER_SECOND",
              "SECONDS"
            ]
          }
        },
        "description": "Measurement of one Atlas Search status when MongoDB Atlas received this request.",
        "readOnly": true
      },
      "MeasurementsNonIndex": {
        "type": "object",
        "properties": {
          "end": {
            "type": "string",
            "description": "Date and time that specifies when to stop retrieving measurements. If you set **end**, you must set **start**. You can't set this parameter and **period** in the same request. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "granularity": {
            "type": "string",
            "description": "Duration that specifies the interval between measurement data points. The parameter expresses its value in ISO 8601 timestamp format in UTC. If you set this parameter, you must set either **period** or **start** and **end**.",
            "readOnly": true,
            "enum": ["PT1M", "PT5M", "PT1H", "P1D"]
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project. The project contains MongoDB processes that you want to return. The MongoDB process can be either the `mongod` or `mongos`.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "hardwareMeasurements": {
            "type": "array",
            "description": "List that contains the Atlas Search hardware measurements.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/MetricsMeasurement"
            }
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "processId": {
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
            "type": "string",
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "readOnly": true,
            "example": "mongodb.example.com:27017"
          },
          "start": {
            "type": "string",
            "description": "Date and time that specifies when to start retrieving measurements. If you set **start**, you must set **end**. You can't set this parameter and **period** in the same request. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "statusMeasurements": {
            "type": "array",
            "description": "List that contains the Atlas Search status measurements.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/MetricsMeasurement"
            }
          }
        }
      },
      "MongoDBAccessLogs": {
        "type": "object",
        "properties": {
          "authResult": {
            "type": "boolean",
            "description": "Flag that indicates whether the response should return successful authentication attempts only."
          },
          "authSource": {
            "type": "string",
            "description": "Database against which someone attempted to authenticate.",
            "readOnly": true
          },
          "failureReason": {
            "type": "string",
            "description": "Reason that the authentication failed. Null if authentication succeeded.",
            "readOnly": true
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the project.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "hostname": {
            "type": "string",
            "description": "Human-readable label that identifies the hostname of the target node that received the authentication attempt.",
            "readOnly": true
          },
          "ipAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "Internet Protocol address that attempted to authenticate with the database.",
            "readOnly": true
          },
          "logLine": {
            "type": "string",
            "description": "Text of the host log concerning the authentication attempt.",
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "description": "Date and time when someone made this authentication attempt. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.",
            "readOnly": true
          },
          "username": {
            "type": "string",
            "description": "Username used to authenticate against the database.",
            "readOnly": true
          }
        },
        "description": "Authentication attempt, one per object, made against the cluster."
      },
      "MongoDBAccessLogsList": {
        "type": "object",
        "properties": {
          "accessLogs": {
            "type": "array",
            "description": "Authentication attempt, one per object, made against the cluster.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/MongoDBAccessLogs"
            }
          }
        }
      },
      "NamespaceObj": {
        "type": "object",
        "properties": {
          "namespace": {
            "type": "string",
            "description": "Human-readable label that identifies the namespace on the specified host. The resource expresses this parameter value as `<database>.<collection>`.",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies the type of namespace.",
            "readOnly": true,
            "default": "collection",
            "enum": ["collection"]
          }
        },
        "description": "Human-readable label that identifies the namespace on the specified host. The resource expresses this parameter value as `<database>.<collection>`.",
        "readOnly": true
      },
      "Namespaces": {
        "type": "object",
        "properties": {
          "namespaces": {
            "uniqueItems": true,
            "type": "array",
            "description": "List that contains each combination of database, collection, and type on the specified host.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/NamespaceObj"
            }
          }
        }
      },
      "PerformanceAdvisorSlowQuery": {
        "type": "object",
        "properties": {
          "line": {
            "type": "string",
            "description": "Text of the MongoDB log related to this slow query.",
            "readOnly": true
          },
          "namespace": {
            "type": "string",
            "description": "Human-readable label that identifies the namespace on the specified host. The resource expresses this parameter value as `<database>.<collection>`.",
            "readOnly": true
          }
        },
        "description": "Details of one slow query that the Performance Advisor detected.",
        "readOnly": true
      },
      "PerformanceAdvisorSlowQueryList": {
        "type": "object",
        "properties": {
          "slowQueries": {
            "type": "array",
            "description": "List of operations that the Performance Advisor detected that took longer to execute than a specified threshold.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/PerformanceAdvisorSlowQuery"
            }
          }
        }
      },
      "BasicBSONList": {
        "type": "array",
        "description": "List that contains the search criteria that the query uses. To use the values in key-value pairs in these predicates requires **Project Data Access Read Only** permissions or greater. Otherwise, MongoDB Cloud redacts these values.",
        "readOnly": true,
        "items": {
          "type": "object",
          "description": "List that contains the search criteria that the query uses. To use the values in key-value pairs in these predicates requires **Project Data Access Read Only** permissions or greater. Otherwise, MongoDB Cloud redacts these values.",
          "readOnly": true
        }
      },
      "PerformanceAdvisorIndex": {
        "type": "object",
        "properties": {
          "avgObjSize": {
            "type": "number",
            "description": "The average size of an object in the collection of this index.",
            "format": "double",
            "readOnly": true
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this index.",
            "readOnly": true
          },
          "impact": {
            "type": "array",
            "description": "List that contains unique 24-hexadecimal character string that identifies the query shapes in this response that the Performance Advisor suggests.",
            "readOnly": true,
            "items": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "description": "One unique 24-hexadecimal character string that identifies one query shape."
            }
          },
          "index": {
            "type": "array",
            "description": "List that contains documents that specify a key in the index and its sort order.",
            "readOnly": true,
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "description": "One index key paired with its sort order. A value of `1` indicates an ascending sort order. A value of `-1` indicates a descending sort order. Keys in indexes with multiple keys appear in the same order that they appear in the index.",
                "format": "int32",
                "enum": [1, -1]
              },
              "description": "One index key paired with its sort order. A value of `1` indicates an ascending sort order. A value of `-1` indicates a descending sort order. Keys in indexes with multiple keys appear in the same order that they appear in the index."
            }
          },
          "namespace": {
            "type": "string",
            "description": "Human-readable label that identifies the namespace on the specified host. The resource expresses this parameter value as `<database>.<collection>`.",
            "readOnly": true
          },
          "weight": {
            "type": "number",
            "description": "Estimated performance improvement that the suggested index provides. This value corresponds to **Impact** in the Performance Advisor user interface.",
            "format": "double",
            "readOnly": true
          }
        }
      },
      "PerformanceAdvisorOpStats": {
        "type": "object",
        "properties": {
          "ms": {
            "type": "integer",
            "description": "Length of time expressed during which the query finds suggested indexes among the managed namespaces in the cluster. This parameter expresses its value in milliseconds. This parameter relates to the **duration** query parameter.",
            "format": "int64",
            "readOnly": true
          },
          "nReturned": {
            "type": "integer",
            "description": "Number of results that the query returns.",
            "format": "int64",
            "readOnly": true
          },
          "nScanned": {
            "type": "integer",
            "description": "Number of documents that the query read.",
            "format": "int64",
            "readOnly": true
          },
          "ts": {
            "type": "integer",
            "description": "Date and time from which the query retrieves the suggested indexes. This parameter expresses its value in the number of seconds that have elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time). This parameter relates to the **since** query parameter.",
            "format": "int64",
            "readOnly": true
          }
        },
        "description": "Details that this resource returned about the specified query.",
        "readOnly": true
      },
      "PerformanceAdvisorOperationView": {
        "type": "object",
        "properties": {
          "predicates": {
            "type": "array",
            "description": "List that contains the search criteria that the query uses. To use the values in key-value pairs in these predicates requires **Project Data Access Read Only** permissions or greater. Otherwise, MongoDB Cloud redacts these values.",
            "readOnly": true,
            "items": {
              "type": "object",
              "description": "List that contains the search criteria that the query uses. To use the values in key-value pairs in these predicates requires **Project Data Access Read Only** permissions or greater. Otherwise, MongoDB Cloud redacts these values.",
              "readOnly": true
            }
          },
          "stats": {
            "$ref": "#/components/schemas/PerformanceAdvisorOpStats"
          }
        }
      },
      "PerformanceAdvisorResponse": {
        "type": "object",
        "properties": {
          "shapes": {
            "type": "array",
            "description": "List of query predicates, sorts, and projections that the Performance Advisor suggests.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/PerformanceAdvisorShape"
            }
          },
          "suggestedIndexes": {
            "type": "array",
            "description": "List that contains the documents with information about the indexes that the Performance Advisor suggests.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/PerformanceAdvisorIndex"
            }
          }
        }
      },
      "PerformanceAdvisorShape": {
        "type": "object",
        "properties": {
          "avgMs": {
            "type": "integer",
            "description": "Average duration in milliseconds for the queries examined that match this shape.",
            "format": "int64",
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "description": "Number of queries examined that match this shape.",
            "format": "int64",
            "readOnly": true
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this shape. This string exists only for the duration of this API request.",
            "readOnly": true
          },
          "inefficiencyScore": {
            "type": "integer",
            "description": "Average number of documents read for every document that the query returns.",
            "format": "int64",
            "readOnly": true,
            "externalDocs": {
              "description": "Understanding the Query Inefficiency Score",
              "url": "https://www.mongodb.com/docs/atlas/performance-advisor/#std-label-query-inefficiency-score"
            }
          },
          "namespace": {
            "type": "string",
            "description": "Human-readable label that identifies the namespace on the specified host. The resource expresses this parameter value as `<database>.<collection>`.",
            "readOnly": true
          },
          "operations": {
            "type": "array",
            "description": "List that contains specific about individual queries.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/PerformanceAdvisorOperationView"
            }
          }
        }
      },
      "MesurementsDatabase": {
        "type": "object",
        "properties": {
          "databaseName": {
            "type": "string",
            "description": "Human-readable label that identifies the database that the specified MongoDB process serves."
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "PaginatedDatabaseView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/MesurementsDatabase"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "MeasurementDiskPartition": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "partitionName": {
            "type": "string",
            "description": "Human-readable label of the disk or partition to which the measurements apply.",
            "readOnly": true
          }
        }
      },
      "PaginatedDiskPartitionView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/MeasurementDiskPartition"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "ApiMeasurementsGeneralView_Atlas": {
        "type": "object",
        "properties": {
          "databaseName": {
            "type": "string",
            "description": "Human-readable label that identifies the database that the specified MongoDB process serves.",
            "readOnly": true
          },
          "end": {
            "type": "string",
            "description": "Date and time that specifies when to stop retrieving measurements. If you set **end**, you must set **start**. You can't set this parameter and **period** in the same request. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "granularity": {
            "type": "string",
            "description": "Duration that specifies the interval between measurement data points. The parameter expresses its value in ISO 8601 timestamp format in UTC. If you set this parameter, you must set either **period** or **start** and **end**.",
            "readOnly": true,
            "enum": ["PT1M", "PT5M", "PT1H", "P1D"]
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project. The project contains MongoDB processes that you want to return. The MongoDB process can be either the `mongod` or `mongos`.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "hostId": {
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
            "type": "string",
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "readOnly": true,
            "example": "mongodb.example.com:27017"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link_Atlas"
            }
          },
          "measurements": {
            "type": "array",
            "description": "List that contains measurements and their data points.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/MetricsMeasurement_Atlas"
            }
          },
          "partitionName": {
            "type": "string",
            "description": "Human-readable label of the disk or partition to which the measurements apply.",
            "readOnly": true
          },
          "processId": {
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
            "type": "string",
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "readOnly": true,
            "example": "mongodb.example.com:27017"
          },
          "start": {
            "type": "string",
            "description": "Date and time that specifies when to start retrieving measurements. If you set **start**, you must set **end**. You can't set this parameter and **period** in the same request. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "Link_Atlas": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "description": "Uniform Resource Locator (URL) that points another API resource to which this response has some relationship. This URL often begins with `https://cloud.mongodb.com/api/atlas`.",
            "example": "https://cloud.mongodb.com/api/atlas"
          },
          "rel": {
            "type": "string",
            "description": "Uniform Resource Locator (URL) that defines the semantic relationship between this resource and another API resource. This URL often begins with `https://cloud.mongodb.com/api/atlas`.",
            "example": "self"
          }
        }
      },
      "MetricDataPoint_Atlas": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "description": "Date and time when this data point occurred. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "value": {
            "type": "number",
            "description": "Value that comprises this data point.",
            "readOnly": true
          }
        },
        "description": "value of, and metadata provided for, one data point generated at a particular moment in time. If no data point exists for a particular moment in time, the `value` parameter returns `null`.",
        "readOnly": true
      },
      "MetricsMeasurement_Atlas": {
        "type": "object",
        "properties": {
          "dataPoints": {
            "type": "array",
            "description": "List that contains the value of, and metadata provided for, one data point generated at a particular moment in time. If no data point exists for a particular moment in time, the `value` parameter returns `null`.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/MetricDataPoint_Atlas"
            }
          },
          "name": {
            "type": "string",
            "description": "Human-readable label of the measurement that this data point covers.",
            "readOnly": true
          },
          "units": {
            "type": "string",
            "description": "Element used to quantify the measurement. The resource returns units of throughput, storage, and time.",
            "readOnly": true,
            "enum": [
              "BYTES",
              "BYTES_PER_SECOND",
              "GIGABYTES",
              "GIGABYTES_PER_HOUR",
              "MEGABYTES_PER_SECOND",
              "MICROSECONDS",
              "MILLISECONDS",
              "PERCENT",
              "SCALAR",
              "SCALAR_PER_SECOND"
            ]
          }
        }
      },
      "ApiHostView_Atlas": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created this MongoDB process. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project. The project contains MongoDB processes that you want to return. The MongoDB process can be either the `mongod` or `mongos`.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "hostname": {
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?$",
            "type": "string",
            "description": "Hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`).",
            "readOnly": true
          },
          "id": {
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
            "type": "string",
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "readOnly": true
          },
          "lastPing": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud received the last ping for this MongoDB process. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link_Atlas"
            }
          },
          "port": {
            "type": "integer",
            "description": "Internet Assigned Numbers Authority (IANA) port on which the MongoDB process listens for requests.",
            "format": "int32",
            "readOnly": true
          },
          "replicaSetName": {
            "type": "string",
            "description": "Human-readable label that identifies the replica set that contains this process. This resource returns this parameter if this process belongs to a replica set.",
            "readOnly": true
          },
          "shardName": {
            "type": "string",
            "description": "Human-readable label that identifies the shard that contains this process. This resource returns this value only if this process belongs to a sharded cluster.",
            "readOnly": true
          },
          "typeName": {
            "type": "string",
            "description": "Type of MongoDB process that MongoDB Cloud tracks. MongoDB Cloud returns new processes as **NO_DATA** until MongoDB Cloud completes deploying the process.",
            "readOnly": true,
            "enum": [
              "REPLICA_PRIMARY",
              "REPLICA_SECONDARY",
              "RECOVERING",
              "SHARD_MONGOS",
              "SHARD_CONFIG",
              "SHARD_STANDALONE",
              "SHARD_PRIMARY",
              "SHARD_SECONDARY",
              "NO_DATA"
            ]
          },
          "userAlias": {
            "type": "string",
            "description": "Human-readable label that identifies the cluster node. MongoDB Cloud sets this hostname usually to the standard hostname for the cluster node. It appears in the connection string for a cluster instead of the value of the hostname parameter.",
            "readOnly": true
          },
          "version": {
            "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)",
            "type": "string",
            "description": "Version of MongoDB that this process runs.",
            "readOnly": true
          }
        }
      },
      "PaginatedHostView_Atlas": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link_Atlas"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ApiHostView_Atlas"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "MeasurementsCollStatsLatencyCluster": {
        "type": "object",
        "properties": {
          "clusterId": {
            "type": "string",
            "description": "Unique identifier for Clusters.",
            "readOnly": true
          },
          "clusterView": {
            "type": "string",
            "description": "Cluster topology view.",
            "readOnly": true
          },
          "collectionName": {
            "type": "string",
            "description": "Human-readable label that identifies the collection.",
            "readOnly": true
          },
          "databaseName": {
            "type": "string",
            "description": "Human-readable label that identifies the database that the specified MongoDB process serves.",
            "readOnly": true
          },
          "end": {
            "type": "string",
            "description": "Date and time that specifies when to stop retrieving measurements. If you set **end**, you must set **start**. You can't set this parameter and **period** in the same request. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "granularity": {
            "type": "string",
            "description": "Duration that specifies the interval between measurement data points. The parameter expresses its value in ISO 8601 timestamp format in UTC. If you set this parameter, you must set either **period** or **start** and **end**.",
            "readOnly": true,
            "enum": ["PT1M", "PT5M", "PT1H", "P1D"]
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project. The project contains MongoDB processes that you want to return. The MongoDB process can be either the `mongod` or `mongos`.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "measurements": {
            "type": "array",
            "description": "List that contains measurements and their data points.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/MetricsMeasurement"
            }
          },
          "processId": {
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
            "type": "string",
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "readOnly": true,
            "example": "mongodb.example.com:27017"
          },
          "start": {
            "type": "string",
            "description": "Date and time that specifies when to start retrieving measurements. If you set **start**, you must set **end**. You can't set this parameter and **period** in the same request. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "CollStatsRankedNamespacesView": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the request project.",
            "readOnly": true
          },
          "identifierId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the request process.",
            "readOnly": true
          },
          "rankedNamespaces": {
            "type": "array",
            "description": "Ordered list of the hottest namespaces, highest value first.",
            "readOnly": true,
            "items": {
              "type": "string",
              "description": "A single namespace.",
              "readOnly": true
            }
          }
        }
      },
      "PinnedNamespaces": {
        "type": "object",
        "properties": {
          "clusterId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the request cluster.",
            "readOnly": true
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the request project.",
            "readOnly": true
          },
          "pinnedNamespaces": {
            "type": "array",
            "description": "List of all pinned namespaces.",
            "readOnly": true,
            "items": {
              "type": "string",
              "description": "A single pinned namespace.",
              "readOnly": true
            }
          }
        },
        "description": "Pinned namespaces view for cluster"
      },
      "NamespacesRequest": {
        "type": "object",
        "properties": {
          "namespaces": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of namespace strings (combination of database and collection) on the specified host or cluster.",
            "writeOnly": true,
            "items": {
              "type": "string",
              "description": "Human-readable label that identifies the namespace on the specified host or cluster. The resource expresses this parameter value as `<database>.<collection>`.",
              "writeOnly": true
            }
          }
        }
      },
      "MeasurementsCollStatsLatencyHost": {
        "type": "object",
        "properties": {
          "collectionName": {
            "type": "string",
            "description": "Human-readable label that identifies the collection.",
            "readOnly": true
          },
          "databaseName": {
            "type": "string",
            "description": "Human-readable label that identifies the database that the specified MongoDB process serves.",
            "readOnly": true
          },
          "end": {
            "type": "string",
            "description": "Date and time that specifies when to stop retrieving measurements. If you set **end**, you must set **start**. You can't set this parameter and **period** in the same request. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "granularity": {
            "type": "string",
            "description": "Duration that specifies the interval between measurement data points. The parameter expresses its value in ISO 8601 timestamp format in UTC. If you set this parameter, you must set either **period** or **start** and **end**.",
            "readOnly": true,
            "enum": ["PT1M", "PT5M", "PT1H", "P1D"]
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project. The project contains MongoDB processes that you want to return. The MongoDB process can be either the `mongod` or `mongos`.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "measurements": {
            "type": "array",
            "description": "List that contains measurements and their data points.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/MetricsMeasurement"
            }
          },
          "processId": {
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
            "type": "string",
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "readOnly": true,
            "example": "mongodb.example.com:27017"
          },
          "start": {
            "type": "string",
            "description": "Date and time that specifies when to start retrieving measurements. If you set **start**, you must set **end**. You can't set this parameter and **period** in the same request. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "AWSDataProcessRegionView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/DataProcessRegionView"
          },
          {
            "type": "object",
            "properties": {
              "region": {
                "type": "string",
                "description": "Human-readable label that identifies the geographic location of the region where you store your archived data.",
                "readOnly": true,
                "enum": [
                  "US_EAST_1",
                  "US_WEST_2",
                  "SA_EAST_1",
                  "EU_WEST_1",
                  "EU_WEST_2",
                  "EU_CENTRAL_1",
                  "AP_SOUTH_1",
                  "AP_SOUTHEAST_1",
                  "AP_SOUTHEAST_2"
                ]
              }
            }
          }
        ]
      },
      "AzureDataProcessRegionView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/DataProcessRegionView"
          },
          {
            "type": "object",
            "properties": {
              "region": {
                "type": "string",
                "description": "Human-readable label that identifies the geographic location of the region where you store your archived data.",
                "readOnly": true,
                "enum": ["US_EAST_2", "EUROPE_WEST"]
              }
            }
          }
        ]
      },
      "BackupOnlineArchive": {
        "type": "object",
        "properties": {
          "_id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the online archive.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "clusterName": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the cluster that contains the collection for which you want to create an online archive.",
            "readOnly": true
          },
          "collName": {
            "type": "string",
            "description": "Human-readable label that identifies the collection for which you created the online archive.",
            "readOnly": true
          },
          "collectionType": {
            "type": "string",
            "description": "Classification of MongoDB database collection that you want to return.\n\nIf you set this parameter to `TIMESERIES`, set `\"criteria.type\" : \"date\"` and `\"criteria.dateFormat\" : \"ISODATE\"`.",
            "readOnly": true,
            "default": "STANDARD",
            "enum": ["TIMESERIES", "STANDARD"]
          },
          "criteria": {
            "$ref": "#/components/schemas/CriteriaView"
          },
          "dataExpirationRule": {
            "$ref": "#/components/schemas/DataExpirationRuleView"
          },
          "dataProcessRegion": {
            "$ref": "#/components/schemas/DataProcessRegionView"
          },
          "dataSetName": {
            "type": "string",
            "description": "Human-readable label that identifies the dataset that Atlas generates for this online archive.",
            "readOnly": true
          },
          "dbName": {
            "type": "string",
            "description": "Human-readable label of the database that contains the collection that contains the online archive.",
            "readOnly": true
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that contains the specified cluster. The specified cluster contains the collection for which to create the online archive.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "partitionFields": {
            "minItems": 1,
            "type": "array",
            "description": "List that contains document parameters to use to logically divide data within a collection. Partitions provide a coarse level of filtering of the underlying collection data. To divide your data, specify parameters that you frequently query. If you \"specified :criteria.type\": \"DATE\" in the CREATE ONE ONLINE ARCHIVE endpoint, then you can specify up to three parameters by which to query. One of these parameters must be the DATE value, which is required in this case. If you \"specified :criteria.type\": \"CUSTOM\" in the CREATE ONE ONLINE ARCHIVE endpoint, then you can specify up to two parameters by which to query. Queries that don't use \":criteria.type\": \"DATE\" or \":criteria.type\": \"CUSTOM\" parameters cause MongoDB to scan a full collection of all archived documents. This takes more time and increases your costs.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/PartitionFieldView"
            }
          },
          "paused": {
            "type": "boolean",
            "description": "Flag that indicates whether this online archive exists in the paused state. A request to resume fails if the collection has another active online archive. To pause an active online archive or resume a paused online archive, you must include this parameter. To pause an active archive, set this to **true**. To resume a paused archive, set this to **false**."
          },
          "schedule": {
            "$ref": "#/components/schemas/OnlineArchiveSchedule"
          },
          "state": {
            "type": "string",
            "description": "Phase of the process to create this online archive when you made this request.\n\n| State       | Indication |\n|-------------|------------|\n| `PENDING`   | MongoDB Cloud has queued documents for archive. Archiving hasn't started. |\n| `ARCHIVING` | MongoDB Cloud started archiving documents that meet the archival criteria. |\n| `IDLE`      | MongoDB Cloud waits to start the next archival job. |\n| `PAUSING`   | Someone chose to stop archiving. MongoDB Cloud finishes the running archival job then changes the state to `PAUSED` when that job completes. |\n| `PAUSED`    | MongoDB Cloud has stopped archiving. Archived documents can be queried. The specified archiving operation on the active cluster cannot archive additional documents. You can resume archiving for paused archives at any time. |\n| `ORPHANED`  | Someone has deleted the collection associated with an active or paused archive. MongoDB Cloud doesn't delete the archived data. You must manually delete the online archives associated with the deleted collection. |\n| `DELETED`   | Someone has deleted the archive was deleted. When someone deletes an online archive, MongoDB Cloud removes all associated archived documents from the cloud object storage. |",
            "readOnly": true,
            "enum": ["PENDING", "ACTIVE", "PAUSING", "PAUSED", "DELETED", "ORPHANED"]
          }
        }
      },
      "CriteriaView": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Means by which MongoDB Cloud selects data to archive. Data can be chosen using the age of the data or a MongoDB query.\n**DATE** selects documents to archive based on a date.\n**CUSTOM** selects documents to archive based on a custom JSON query. MongoDB Cloud doesn't support **CUSTOM** when `\"collectionType\": \"TIMESERIES\"`.",
            "enum": ["DATE", "CUSTOM"]
          }
        },
        "description": "Rules by which MongoDB Cloud archives data.\n\nUse the **criteria.type** field to choose how MongoDB Cloud selects data to archive. Choose data using the age of the data or a MongoDB query.\n**\"criteria.type\": \"DATE\"** selects documents to archive based on a date.\n**\"criteria.type\": \"CUSTOM\"** selects documents to archive based on a custom JSON query. MongoDB Cloud doesn't support **\"criteria.type\": \"CUSTOM\"** when **\"collectionType\": \"TIMESERIES\"**.",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "DATE": "#/components/schemas/DateCriteriaView",
            "CUSTOM": "#/components/schemas/CustomCriteriaView"
          }
        }
      },
      "CustomCriteriaView": {
        "title": "Archival Criteria",
        "required": ["query"],
        "type": "object",
        "description": "**CUSTOM criteria.type**.",
        "allOf": [
          {
            "$ref": "#/components/schemas/CriteriaView"
          },
          {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "MongoDB find query that selects documents to archive. The specified query follows the syntax of the `db.collection.find(query)` command. This query can't use the empty document (`{}`) to return all documents. Set this parameter when **\"criteria.type\" : \"CUSTOM\"**."
              }
            }
          }
        ]
      },
      "DailyScheduleView": {
        "required": ["type"],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/OnlineArchiveSchedule"
          },
          {
            "type": "object",
            "properties": {
              "endHour": {
                "maximum": 23,
                "minimum": 0,
                "type": "integer",
                "description": "Hour of the day when the scheduled window to run one online archive ends.",
                "format": "int32"
              },
              "endMinute": {
                "maximum": 59,
                "minimum": 0,
                "type": "integer",
                "description": "Minute of the hour when the scheduled window to run one online archive ends.",
                "format": "int32"
              },
              "startHour": {
                "maximum": 23,
                "minimum": 0,
                "type": "integer",
                "description": "Hour of the day when the when the scheduled window to run one online archive starts.",
                "format": "int32"
              },
              "startMinute": {
                "maximum": 59,
                "minimum": 0,
                "type": "integer",
                "description": "Minute of the hour when the scheduled window to run one online archive starts.",
                "format": "int32"
              }
            }
          }
        ]
      },
      "DataExpirationRuleView": {
        "type": "object",
        "properties": {
          "expireAfterDays": {
            "maximum": 9215,
            "minimum": 7,
            "type": "integer",
            "description": "Number of days used in the date criteria for nominating documents for deletion.",
            "format": "int32"
          }
        },
        "description": "Rule for specifying when data should be deleted from the archive."
      },
      "DataProcessRegionView": {
        "type": "object",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Human-readable label that identifies the Cloud service provider where you store your archived data.",
            "readOnly": true,
            "enum": ["AWS", "AZURE"]
          }
        },
        "description": "Settings to configure the region where you wish to store your archived data.",
        "readOnly": true,
        "discriminator": {
          "propertyName": "cloudProvider",
          "mapping": {
            "AWS": "#/components/schemas/AWSDataProcessRegionView",
            "AZURE": "#/components/schemas/AzureDataProcessRegionView"
          }
        }
      },
      "DateCriteriaView": {
        "title": "Archival Criteria",
        "type": "object",
        "description": "**DATE criteria.type**.",
        "allOf": [
          {
            "$ref": "#/components/schemas/CriteriaView"
          },
          {
            "type": "object",
            "properties": {
              "dateField": {
                "type": "string",
                "description": "Indexed database parameter that stores the date that determines when data moves to the online archive. MongoDB Cloud archives the data when the current date exceeds the date in this database parameter plus the number of days specified through the **expireAfterDays** parameter. Set this parameter when you set `\"criteria.type\" : \"DATE\"`."
              },
              "dateFormat": {
                "type": "string",
                "description": "Syntax used to write the date after which data moves to the online archive. Date can be expressed as ISO 8601 or Epoch timestamps. The Epoch timestamp can be expressed as nanoseconds, milliseconds, or seconds. Set this parameter when **\"criteria.type\" : \"DATE\"**.\nYou must set **\"criteria.type\" : \"DATE\"** if **\"collectionType\": \"TIMESERIES\"**.",
                "default": "ISODATE",
                "enum": ["ISODATE", "EPOCH_SECONDS", "EPOCH_MILLIS", "EPOCH_NANOSECONDS"]
              },
              "expireAfterDays": {
                "type": "integer",
                "description": "Number of days after the value in the **criteria.dateField** when MongoDB Cloud archives data in the specified cluster. Set this parameter when you set **\"criteria.type\" : \"DATE\"**.",
                "format": "int32"
              }
            }
          }
        ]
      },
      "DefaultScheduleView": {
        "required": ["type"],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/OnlineArchiveSchedule"
          }
        ]
      },
      "MonthlyScheduleView": {
        "required": ["type"],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/OnlineArchiveSchedule"
          },
          {
            "type": "object",
            "properties": {
              "dayOfMonth": {
                "maximum": 31,
                "minimum": 1,
                "type": "integer",
                "description": "Day of the month when the scheduled archive starts.",
                "format": "int32"
              },
              "endHour": {
                "maximum": 23,
                "minimum": 0,
                "type": "integer",
                "description": "Hour of the day when the scheduled window to run one online archive ends.",
                "format": "int32"
              },
              "endMinute": {
                "maximum": 59,
                "minimum": 0,
                "type": "integer",
                "description": "Minute of the hour when the scheduled window to run one online archive ends.",
                "format": "int32"
              },
              "startHour": {
                "maximum": 23,
                "minimum": 0,
                "type": "integer",
                "description": "Hour of the day when the when the scheduled window to run one online archive starts.",
                "format": "int32"
              },
              "startMinute": {
                "maximum": 59,
                "minimum": 0,
                "type": "integer",
                "description": "Minute of the hour when the scheduled window to run one online archive starts.",
                "format": "int32"
              }
            }
          }
        ]
      },
      "OnlineArchiveSchedule": {
        "title": "Online Archive Schedule",
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of schedule.",
            "enum": ["DEFAULT", "DAILY", "WEEKLY", "MONTHLY"]
          }
        },
        "description": "Regular frequency and duration when archiving process occurs.",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "DEFAULT": "#/components/schemas/DefaultScheduleView",
            "DAILY": "#/components/schemas/DailyScheduleView",
            "WEEKLY": "#/components/schemas/WeeklyScheduleView",
            "MONTHLY": "#/components/schemas/MonthlyScheduleView"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/DefaultScheduleView"
          },
          {
            "$ref": "#/components/schemas/DailyScheduleView"
          },
          {
            "$ref": "#/components/schemas/WeeklyScheduleView"
          },
          {
            "$ref": "#/components/schemas/MonthlyScheduleView"
          }
        ]
      },
      "PartitionFieldView": {
        "title": "Online Archive Partition",
        "required": ["fieldName", "order"],
        "type": "object",
        "properties": {
          "fieldName": {
            "maxLength": 700,
            "type": "string",
            "description": "Human-readable label that identifies the parameter that MongoDB Cloud uses to partition data. To specify a nested parameter, use the dot notation."
          },
          "fieldType": {
            "type": "string",
            "description": "Data type of the parameter that that MongoDB Cloud uses to partition data. Partition parameters of type [UUID](http://bsonspec.org/spec.html) must be of binary subtype 4. MongoDB Cloud skips partition parameters of type UUID with subtype 3.",
            "readOnly": true,
            "enum": ["date", "int", "long", "objectId", "string", "uuid"]
          },
          "order": {
            "type": "integer",
            "description": "Sequence in which MongoDB Cloud slices the collection data to create partitions. The resource expresses this sequence starting with zero. The value of the **criteria.dateField** parameter defaults as the first item in the partition sequence.",
            "format": "int32",
            "default": 0
          }
        },
        "description": "Metadata to partition this online archive."
      },
      "WeeklyScheduleView": {
        "required": ["type"],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/OnlineArchiveSchedule"
          },
          {
            "type": "object",
            "properties": {
              "dayOfWeek": {
                "maximum": 7,
                "minimum": 1,
                "type": "integer",
                "description": "Day of the week when the scheduled archive starts. The week starts with Monday (`1`) and ends with Sunday (`7`).",
                "format": "int32"
              },
              "endHour": {
                "maximum": 23,
                "minimum": 0,
                "type": "integer",
                "description": "Hour of the day when the scheduled window to run one online archive ends.",
                "format": "int32"
              },
              "endMinute": {
                "maximum": 59,
                "minimum": 0,
                "type": "integer",
                "description": "Minute of the hour when the scheduled window to run one online archive ends.",
                "format": "int32"
              },
              "startHour": {
                "maximum": 23,
                "minimum": 0,
                "type": "integer",
                "description": "Hour of the day when the when the scheduled window to run one online archive starts.",
                "format": "int32"
              },
              "startMinute": {
                "maximum": 59,
                "minimum": 0,
                "type": "integer",
                "description": "Minute of the hour when the scheduled window to run one online archive starts.",
                "format": "int32"
              }
            }
          }
        ]
      },
      "AWSCreateDataProcessRegionView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateDataProcessRegionView"
          },
          {
            "type": "object",
            "properties": {
              "region": {
                "type": "string",
                "description": "Human-readable label that identifies the geographic location of the region where you wish to store your archived data.",
                "enum": [
                  "US_EAST_1",
                  "US_WEST_2",
                  "SA_EAST_1",
                  "EU_WEST_1",
                  "EU_WEST_2",
                  "EU_CENTRAL_1",
                  "AP_SOUTH_1",
                  "AP_SOUTHEAST_1",
                  "AP_SOUTHEAST_2"
                ]
              }
            }
          }
        ]
      },
      "AzureCreateDataProcessRegionView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateDataProcessRegionView"
          },
          {
            "type": "object",
            "properties": {
              "region": {
                "type": "string",
                "description": "Human-readable label that identifies the geographic location of the region where you wish to store your archived data.",
                "enum": ["US_EAST_2", "EUROPE_WEST"]
              }
            }
          }
        ]
      },
      "BackupOnlineArchiveCreate": {
        "required": ["collName", "criteria", "dbName"],
        "type": "object",
        "properties": {
          "_id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the online archive.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "clusterName": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the cluster that contains the collection for which you want to create an online archive.",
            "readOnly": true
          },
          "collName": {
            "type": "string",
            "description": "Human-readable label that identifies the collection for which you created the online archive.",
            "writeOnly": true
          },
          "collectionType": {
            "type": "string",
            "description": "Classification of MongoDB database collection that you want to return.\n\nIf you set this parameter to `TIMESERIES`, set `\"criteria.type\" : \"date\"` and `\"criteria.dateFormat\" : \"ISODATE\"`.",
            "writeOnly": true,
            "default": "STANDARD",
            "enum": ["TIMESERIES", "STANDARD"]
          },
          "criteria": {
            "$ref": "#/components/schemas/CriteriaView"
          },
          "dataExpirationRule": {
            "$ref": "#/components/schemas/DataExpirationRuleView"
          },
          "dataProcessRegion": {
            "$ref": "#/components/schemas/CreateDataProcessRegionView"
          },
          "dataSetName": {
            "type": "string",
            "description": "Human-readable label that identifies the dataset that Atlas generates for this online archive.",
            "readOnly": true
          },
          "dbName": {
            "type": "string",
            "description": "Human-readable label of the database that contains the collection that contains the online archive.",
            "writeOnly": true
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that contains the specified cluster. The specified cluster contains the collection for which to create the online archive.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "partitionFields": {
            "minItems": 1,
            "type": "array",
            "description": "List that contains document parameters to use to logically divide data within a collection. Partitions provide a coarse level of filtering of the underlying collection data. To divide your data, specify parameters that you frequently query. If you \"specified :criteria.type\": \"DATE\" in the CREATE ONE ONLINE ARCHIVE endpoint, then you can specify up to three parameters by which to query. One of these parameters must be the DATE value, which is required in this case. If you \"specified :criteria.type\": \"CUSTOM\" in the CREATE ONE ONLINE ARCHIVE endpoint, then you can specify up to two parameters by which to query. Queries that don't use \":criteria.type\": \"DATE\" or \":criteria.type\": \"CUSTOM\" parameters cause MongoDB to scan a full collection of all archived documents. This takes more time and increases your costs.",
            "writeOnly": true,
            "items": {
              "$ref": "#/components/schemas/PartitionFieldView"
            }
          },
          "paused": {
            "type": "boolean",
            "description": "Flag that indicates whether this online archive exists in the paused state. A request to resume fails if the collection has another active online archive. To pause an active online archive or resume a paused online archive, you must include this parameter. To pause an active archive, set this to **true**. To resume a paused archive, set this to **false**."
          },
          "schedule": {
            "$ref": "#/components/schemas/OnlineArchiveSchedule"
          },
          "state": {
            "type": "string",
            "description": "Phase of the process to create this online archive when you made this request.\n\n| State       | Indication |\n|-------------|------------|\n| `PENDING`   | MongoDB Cloud has queued documents for archive. Archiving hasn't started. |\n| `ARCHIVING` | MongoDB Cloud started archiving documents that meet the archival criteria. |\n| `IDLE`      | MongoDB Cloud waits to start the next archival job. |\n| `PAUSING`   | Someone chose to stop archiving. MongoDB Cloud finishes the running archival job then changes the state to `PAUSED` when that job completes. |\n| `PAUSED`    | MongoDB Cloud has stopped archiving. Archived documents can be queried. The specified archiving operation on the active cluster cannot archive additional documents. You can resume archiving for paused archives at any time. |\n| `ORPHANED`  | Someone has deleted the collection associated with an active or paused archive. MongoDB Cloud doesn't delete the archived data. You must manually delete the online archives associated with the deleted collection. |\n| `DELETED`   | Someone has deleted the archive was deleted. When someone deletes an online archive, MongoDB Cloud removes all associated archived documents from the cloud object storage. |",
            "readOnly": true,
            "enum": ["PENDING", "ACTIVE", "PAUSING", "PAUSED", "DELETED", "ORPHANED"]
          }
        }
      },
      "CreateDataProcessRegionView": {
        "type": "object",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Human-readable label that identifies the Cloud service provider where you wish to store your archived data. **AZURE** may be selected only if **AZURE** is the Cloud service provider for the cluster and no **AWS** online archive has been created for the cluster.",
            "enum": ["AWS", "AZURE"]
          }
        },
        "description": "Settings to configure the region where you wish to store your archived data.",
        "writeOnly": true,
        "discriminator": {
          "propertyName": "cloudProvider",
          "mapping": {
            "AWS": "#/components/schemas/AWSCreateDataProcessRegionView",
            "AZURE": "#/components/schemas/AzureCreateDataProcessRegionView"
          }
        }
      },
      "PaginatedOnlineArchiveView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/BackupOnlineArchive"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "ControlPlaneIPAddresses": {
        "title": "Control Plane IP Addresses",
        "type": "object",
        "properties": {
          "inbound": {
            "$ref": "#/components/schemas/InboundControlPlaneCloudProviderIPAddresses"
          },
          "outbound": {
            "$ref": "#/components/schemas/OutboundControlPlaneCloudProviderIPAddresses"
          }
        },
        "description": "List of IP addresses in the Atlas control plane."
      },
      "InboundControlPlaneCloudProviderIPAddresses": {
        "title": "Inbound Control Plane IP Addresses By Cloud Provider",
        "type": "object",
        "properties": {
          "aws": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "description": "Control plane IP addresses in AWS. Each key identifies an Amazon Web Services (AWS) region. Each value identifies control plane IP addresses in the AWS region.",
              "readOnly": true,
              "items": {
                "type": "string",
                "description": "Control plane IP addresses in AWS. Each key identifies an Amazon Web Services (AWS) region. Each value identifies control plane IP addresses in the AWS region.",
                "readOnly": true
              }
            },
            "description": "Control plane IP addresses in AWS. Each key identifies an Amazon Web Services (AWS) region. Each value identifies control plane IP addresses in the AWS region.",
            "readOnly": true
          },
          "azure": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "description": "Control plane IP addresses in Azure. Each key identifies an Azure region. Each value identifies control plane IP addresses in the Azure region.",
              "readOnly": true,
              "items": {
                "type": "string",
                "description": "Control plane IP addresses in Azure. Each key identifies an Azure region. Each value identifies control plane IP addresses in the Azure region.",
                "readOnly": true
              }
            },
            "description": "Control plane IP addresses in Azure. Each key identifies an Azure region. Each value identifies control plane IP addresses in the Azure region.",
            "readOnly": true
          },
          "gcp": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "description": "Control plane IP addresses in GCP. Each key identifies a Google Cloud (GCP) region. Each value identifies control plane IP addresses in the GCP region.",
              "readOnly": true,
              "items": {
                "type": "string",
                "description": "Control plane IP addresses in GCP. Each key identifies a Google Cloud (GCP) region. Each value identifies control plane IP addresses in the GCP region.",
                "readOnly": true
              }
            },
            "description": "Control plane IP addresses in GCP. Each key identifies a Google Cloud (GCP) region. Each value identifies control plane IP addresses in the GCP region.",
            "readOnly": true
          }
        },
        "description": "List of inbound IP addresses to the Atlas control plane, categorized by cloud provider. If your application allows outbound HTTP requests only to specific IP addresses, you must allow access to the following IP addresses so that your API requests can reach the Atlas control plane.",
        "readOnly": true
      },
      "OutboundControlPlaneCloudProviderIPAddresses": {
        "title": "Outbound Control Plane IP Addresses By Cloud Provider",
        "type": "object",
        "properties": {
          "aws": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "description": "Control plane IP addresses in AWS. Each key identifies an Amazon Web Services (AWS) region. Each value identifies control plane IP addresses in the AWS region.",
              "readOnly": true,
              "items": {
                "type": "string",
                "description": "Control plane IP addresses in AWS. Each key identifies an Amazon Web Services (AWS) region. Each value identifies control plane IP addresses in the AWS region.",
                "readOnly": true
              }
            },
            "description": "Control plane IP addresses in AWS. Each key identifies an Amazon Web Services (AWS) region. Each value identifies control plane IP addresses in the AWS region.",
            "readOnly": true
          },
          "azure": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "description": "Control plane IP addresses in Azure. Each key identifies an Azure region. Each value identifies control plane IP addresses in the Azure region.",
              "readOnly": true,
              "items": {
                "type": "string",
                "description": "Control plane IP addresses in Azure. Each key identifies an Azure region. Each value identifies control plane IP addresses in the Azure region.",
                "readOnly": true
              }
            },
            "description": "Control plane IP addresses in Azure. Each key identifies an Azure region. Each value identifies control plane IP addresses in the Azure region.",
            "readOnly": true
          },
          "gcp": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "description": "Control plane IP addresses in GCP. Each key identifies a Google Cloud (GCP) region. Each value identifies control plane IP addresses in the GCP region.",
              "readOnly": true,
              "items": {
                "type": "string",
                "description": "Control plane IP addresses in GCP. Each key identifies a Google Cloud (GCP) region. Each value identifies control plane IP addresses in the GCP region.",
                "readOnly": true
              }
            },
            "description": "Control plane IP addresses in GCP. Each key identifies a Google Cloud (GCP) region. Each value identifies control plane IP addresses in the GCP region.",
            "readOnly": true
          }
        },
        "description": "List of outbound IP addresses from the Atlas control plane, categorized by cloud provider. If your network allows inbound HTTP requests only from specific IP addresses, you must allow access from the following IP addresses so that Atlas can communicate with your webhooks and KMS.",
        "readOnly": true
      },
      "AWSCustomDNSEnabledView": {
        "required": ["enabled"],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the project's clusters deployed to Amazon Web Services (AWS) use a custom Domain Name System (DNS).\nWhen `\"enabled\": true`, connect to your cluster using Private IP for Peering connection strings.",
            "externalDocs": {
              "description": "To learn more, see FAQ: Connection String Options in the MongoDB Atlas documentation.",
              "url": "https://www.mongodb.com/docs/atlas/reference/faq/connection-changes/#how-does-this-affect-aws-vpc-peering-when-i-use-custom-dns-"
            }
          }
        }
      },
      "BaseCloudProviderInstanceSize": {
        "type": "object",
        "description": "Minimum instance size to which your cluster can automatically scale. MongoDB Cloud requires this parameter if `\"replicationSpecs[n].regionConfigs[m].autoScaling.compute.scaleDownEnabled\" : true`.",
        "oneOf": [
          {
            "title": "AWS Instance Sizes",
            "type": "string",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M100",
              "M140",
              "M200",
              "M300",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "R700",
              "M40_NVME",
              "M50_NVME",
              "M60_NVME",
              "M80_NVME",
              "M200_NVME",
              "M400_NVME"
            ]
          },
          {
            "title": "Azure Instance Sizes",
            "type": "string",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M90",
              "M200",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "M60_NVME",
              "M80_NVME",
              "M200_NVME",
              "M300_NVME",
              "M400_NVME",
              "M600_NVME"
            ]
          },
          {
            "title": "GCP Instance Sizes",
            "type": "string",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M140",
              "M200",
              "M250",
              "M300",
              "M400",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "R600"
            ]
          }
        ]
      },
      "MdbAvailableVersion": {
        "type": "object",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Cloud service provider on which MongoDB Cloud provisions the hosts. Set dedicated clusters to `AWS`, `GCP`, `AZURE` or `TENANT`.",
            "enum": ["AWS", "AZURE", "GCP", "TENANT"]
          },
          "defaultStatus": {
            "type": "string",
            "description": "Whether the version is the current default for the Instance Size and Cloud Provider.",
            "enum": ["DEFAULT", "NOT_DEFAULT"]
          },
          "instanceSize": {
            "$ref": "#/components/schemas/BaseCloudProviderInstanceSize"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "version": {
            "type": "string",
            "description": "The MongoDB Major Version in question.",
            "externalDocs": {
              "description": "MongoDB Versioning",
              "url": "https://www.mongodb.com/docs/manual/reference/versioning/"
            }
          }
        }
      },
      "PaginatedAvailableVersionView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/MdbAvailableVersion"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "AWSCloudProviderContainer": {
        "title": "AWS",
        "required": ["regionName"],
        "type": "object",
        "description": "Collection of settings that configures the network container for a virtual private connection on Amazon Web Services.",
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudProviderContainer"
          },
          {
            "type": "object",
            "properties": {
              "atlasCidrBlock": {
                "pattern": "^((([0-9]{1,3}\\.){3}[0-9]{1,3})|(:{0,2}([0-9a-f]{1,4}:){0,7}[0-9a-f]{1,4}[:]{0,2}))((%2[fF]|/)[0-9]{1,3})+$",
                "type": "string",
                "description": "IP addresses expressed in Classless Inter-Domain Routing (CIDR) notation that MongoDB Cloud uses for the network peering containers in your project. MongoDB Cloud assigns all of the project's clusters deployed to this cloud provider an IP address from this range. MongoDB Cloud locks this value if an M10 or greater cluster or a network peering connection exists in this project.\n\nThese CIDR blocks must fall within the ranges reserved per RFC 1918. AWS and Azure further limit the block to between the `/24` and  `/21` ranges.\n\nTo modify the CIDR block, the target project cannot have:\n\n- Any M10 or greater clusters\n- Any other VPC peering connections\n\n You can also create a new project and create a network peering connection to set the desired MongoDB Cloud network peering container CIDR block for that project. MongoDB Cloud limits the number of MongoDB nodes per network peering connection based on the CIDR block and the region selected for the project.\n\n **Example:** A project in an Amazon Web Services (AWS) region supporting three availability zones and an MongoDB CIDR network peering container block of limit of `/24` equals 27 three-node replica sets."
              },
              "regionName": {
                "type": "string",
                "description": "Geographic area that Amazon Web Services (AWS) defines to which MongoDB Cloud deployed this network peering container.",
                "enum": [
                  "US_EAST_1",
                  "US_EAST_2",
                  "US_WEST_1",
                  "US_WEST_2",
                  "CA_CENTRAL_1",
                  "EU_NORTH_1",
                  "EU_WEST_1",
                  "EU_WEST_2",
                  "EU_WEST_3",
                  "EU_CENTRAL_1",
                  "EU_CENTRAL_2",
                  "SA_EAST_1",
                  "AP_EAST_1",
                  "AP_SOUTHEAST_2",
                  "AP_SOUTHEAST_3",
                  "AP_SOUTHEAST_4",
                  "AP_NORTHEAST_1",
                  "AP_NORTHEAST_2",
                  "AP_NORTHEAST_3",
                  "AP_SOUTHEAST_1",
                  "AP_SOUTH_1",
                  "AP_SOUTH_2",
                  "CN_NORTH_1",
                  "CN_NORTHWEST_1",
                  "ME_CENTRAL_1",
                  "ME_SOUTH_1",
                  "AF_SOUTH_1",
                  "EU_SOUTH_1",
                  "EU_SOUTH_2",
                  "IL_CENTRAL_1",
                  "CA_WEST_1",
                  "GLOBAL",
                  "US_GOV_WEST_1",
                  "US_GOV_EAST_1"
                ]
              },
              "vpcId": {
                "minLength": 5,
                "pattern": "^vpc-[0-9a-f]{17}$",
                "type": "string",
                "description": "Unique string that identifies the MongoDB Cloud VPC on AWS.",
                "readOnly": true,
                "example": "vpc-b555d3b0d9cb783b0"
              }
            }
          }
        ]
      },
      "AzureCloudProviderContainer": {
        "title": "AZURE",
        "required": ["atlasCidrBlock", "region"],
        "type": "object",
        "description": "Collection of settings that configures the network container for a virtual private connection on Amazon Web Services.",
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudProviderContainer"
          },
          {
            "type": "object",
            "properties": {
              "atlasCidrBlock": {
                "pattern": "^((([0-9]{1,3}\\.){3}[0-9]{1,3})|(:{0,2}([0-9a-f]{1,4}:){0,7}[0-9a-f]{1,4}[:]{0,2}))((%2[fF]|/)[0-9]{1,3})+$",
                "type": "string",
                "description": "IP addresses expressed in Classless Inter-Domain Routing (CIDR) notation that MongoDB Cloud uses for the network peering containers in your project. MongoDB Cloud assigns all of the project's clusters deployed to this cloud provider an IP address from this range. MongoDB Cloud locks this value if an M10 or greater cluster or a network peering connection exists in this project.\n\nThese CIDR blocks must fall within the ranges reserved per RFC 1918. AWS and Azure further limit the block to between the `/24` and  `/21` ranges.\n\nTo modify the CIDR block, the target project cannot have:\n\n- Any M10 or greater clusters\n- Any other VPC peering connections\n\n You can also create a new project and create a network peering connection to set the desired MongoDB Cloud network peering container CIDR block for that project. MongoDB Cloud limits the number of MongoDB nodes per network peering connection based on the CIDR block and the region selected for the project.\n\n **Example:** A project in an Amazon Web Services (AWS) region supporting three availability zones and an MongoDB CIDR network peering container block of limit of `/24` equals 27 three-node replica sets."
              },
              "azureSubscriptionId": {
                "pattern": "^([a-f0-9]{24})$",
                "type": "string",
                "description": "Unique string that identifies the Azure subscription in which the MongoDB Cloud VNet resides.",
                "readOnly": true,
                "example": "32b6e34b3d91647abb20e7b8"
              },
              "region": {
                "type": "string",
                "description": "Azure region to which MongoDB Cloud deployed this network peering container.",
                "enum": [
                  "US_CENTRAL",
                  "US_EAST",
                  "US_EAST_2",
                  "US_EAST_2_EUAP",
                  "US_NORTH_CENTRAL",
                  "US_WEST",
                  "US_SOUTH_CENTRAL",
                  "EUROPE_NORTH",
                  "EUROPE_WEST",
                  "US_WEST_CENTRAL",
                  "US_WEST_2",
                  "US_WEST_3",
                  "CANADA_EAST",
                  "CANADA_CENTRAL",
                  "BRAZIL_SOUTH",
                  "BRAZIL_SOUTHEAST",
                  "AUSTRALIA_EAST",
                  "AUSTRALIA_SOUTH_EAST",
                  "AUSTRALIA_CENTRAL",
                  "AUSTRALIA_CENTRAL_2",
                  "UAE_NORTH",
                  "GERMANY_CENTRAL",
                  "GERMANY_NORTH_EAST",
                  "GERMANY_WEST_CENTRAL",
                  "GERMANY_NORTH",
                  "SWITZERLAND_NORTH",
                  "SWITZERLAND_WEST",
                  "SWEDEN_CENTRAL",
                  "SWEDEN_SOUTH",
                  "UK_SOUTH",
                  "UK_WEST",
                  "INDIA_CENTRAL",
                  "INDIA_WEST",
                  "INDIA_SOUTH",
                  "CHINA_EAST",
                  "CHINA_NORTH",
                  "ASIA_EAST",
                  "JAPAN_EAST",
                  "JAPAN_WEST",
                  "ASIA_SOUTH_EAST",
                  "KOREA_CENTRAL",
                  "KOREA_SOUTH",
                  "FRANCE_CENTRAL",
                  "FRANCE_SOUTH",
                  "SOUTH_AFRICA_NORTH",
                  "SOUTH_AFRICA_WEST",
                  "NORWAY_EAST",
                  "NORWAY_WEST",
                  "UAE_CENTRAL",
                  "QATAR_CENTRAL",
                  "POLAND_CENTRAL",
                  "ISRAEL_CENTRAL",
                  "ITALY_NORTH"
                ]
              },
              "vnetName": {
                "maxLength": 38,
                "minLength": 38,
                "pattern": "^([-\\w._()])+$",
                "type": "string",
                "description": "Unique string that identifies the Azure VNet in which MongoDB Cloud clusters in this network peering container exist. The response returns **null** if no clusters exist in this network peering container.",
                "readOnly": true
              }
            }
          }
        ]
      },
      "CloudProviderContainer": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the network peering container.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "providerName": {
            "type": "string",
            "description": "Cloud service provider that serves the requested network peering containers.",
            "enum": ["AWS", "GCP", "AZURE", "TENANT", "SERVERLESS"]
          },
          "provisioned": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud clusters exist in the specified network peering container.",
            "readOnly": true
          }
        },
        "description": "Collection of settings that configures the network container for a virtual private connection on Amazon Web Services.",
        "discriminator": {
          "propertyName": "providerName",
          "mapping": {
            "AWS": "#/components/schemas/AWSCloudProviderContainer",
            "AZURE": "#/components/schemas/AzureCloudProviderContainer",
            "GCP": "#/components/schemas/GCPCloudProviderContainer"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/AzureCloudProviderContainer"
          },
          {
            "$ref": "#/components/schemas/GCPCloudProviderContainer"
          },
          {
            "$ref": "#/components/schemas/AWSCloudProviderContainer"
          }
        ]
      },
      "GCPCloudProviderContainer": {
        "title": "GCP",
        "required": ["atlasCidrBlock"],
        "type": "object",
        "description": "Collection of settings that configures the network container for a virtual private connection on Amazon Web Services.",
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudProviderContainer"
          },
          {
            "type": "object",
            "properties": {
              "atlasCidrBlock": {
                "pattern": "^((([0-9]{1,3}\\.){3}[0-9]{1,3})|(:{0,2}([0-9a-f]{1,4}:){0,7}[0-9a-f]{1,4}[:]{0,2}))((%2[fF]|/)[0-9]{1,3})+$",
                "type": "string",
                "description": "IP addresses expressed in Classless Inter-Domain Routing (CIDR) notation that MongoDB Cloud uses for the network peering containers in your project. MongoDB Cloud assigns all of the project's clusters deployed to this cloud provider an IP address from this range. MongoDB Cloud locks this value if an M10 or greater cluster or a network peering connection exists in this project.\n\nThese CIDR blocks must fall within the ranges reserved per RFC 1918. GCP further limits the block to a lower bound of the `/18` range.\n\nTo modify the CIDR block, the target project cannot have:\n\n- Any M10 or greater clusters\n- Any other VPC peering connections\n\n You can also create a new project and create a network peering connection to set the desired MongoDB Cloud network peering container CIDR block for that project. MongoDB Cloud limits the number of MongoDB nodes per network peering connection based on the CIDR block and the region selected for the project.\n\n **Example:** A project in an Google Cloud (GCP) region supporting three availability zones and an MongoDB CIDR network peering container block of limit of `/24` equals 27 three-node replica sets."
              },
              "gcpProjectId": {
                "maxLength": 26,
                "minLength": 26,
                "pattern": "^p-[0-9a-z]{24}$",
                "type": "string",
                "description": "Unique string that identifies the GCP project in which MongoDB Cloud clusters in this network peering container exist. The response returns **null** if no clusters exist in this network peering container.",
                "readOnly": true
              },
              "networkName": {
                "maxLength": 36,
                "minLength": 36,
                "pattern": "^nt-[0-9a-f]{24}-[0-9a-z]{8}$",
                "type": "string",
                "description": "Human-readable label that identifies the network in which MongoDB Cloud clusters in this network peering container exist. MongoDB Cloud returns **null** if no clusters exist in this network peering container.",
                "readOnly": true
              },
              "regions": {
                "type": "array",
                "description": "List of GCP regions to which you want to deploy this MongoDB Cloud network peering container.  In this MongoDB Cloud project, you can deploy clusters only to the GCP regions in this list. To deploy MongoDB Cloud clusters to other GCP regions, create additional projects.",
                "items": {
                  "type": "string",
                  "description": "List of GCP regions to which you want to deploy this MongoDB Cloud network peering container.  In this MongoDB Cloud project, you can deploy clusters only to the GCP regions in this list. To deploy MongoDB Cloud clusters to other GCP regions, create additional projects.",
                  "enum": [
                    "ASIA_EAST_2",
                    "ASIA_NORTHEAST_2",
                    "ASIA_NORTHEAST_3",
                    "ASIA_SOUTH_1",
                    "ASIA_SOUTH_2",
                    "ASIA_SOUTHEAST_2",
                    "AUSTRALIA_SOUTHEAST_1",
                    "AUSTRALIA_SOUTHEAST_2",
                    "CENTRAL_US",
                    "EASTERN_ASIA_PACIFIC",
                    "EASTERN_US",
                    "EUROPE_CENTRAL_2",
                    "EUROPE_NORTH_1",
                    "EUROPE_WEST_2",
                    "EUROPE_WEST_3",
                    "EUROPE_WEST_4",
                    "EUROPE_WEST_6",
                    "EUROPE_WEST_10",
                    "EUROPE_WEST_12",
                    "MIDDLE_EAST_CENTRAL_1",
                    "MIDDLE_EAST_CENTRAL_2",
                    "MIDDLE_EAST_WEST_1",
                    "NORTH_AMERICA_NORTHEAST_1",
                    "NORTH_AMERICA_NORTHEAST_2",
                    "NORTHEASTERN_ASIA_PACIFIC",
                    "SOUTH_AMERICA_EAST_1",
                    "SOUTH_AMERICA_WEST_1",
                    "SOUTHEASTERN_ASIA_PACIFIC",
                    "US_EAST_4",
                    "US_EAST_5",
                    "US_WEST_2",
                    "US_WEST_3",
                    "US_WEST_4",
                    "US_SOUTH_1",
                    "WESTERN_EUROPE",
                    "WESTERN_US"
                  ]
                }
              }
            }
          }
        ]
      },
      "PaginatedCloudProviderContainerView": {
        "title": "Network Peering",
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/CloudProviderContainer"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        },
        "description": "List of Network Peering Containers that Amazon Web Services serves."
      },
      "ClusterStatus": {
        "type": "object",
        "properties": {
          "changeStatus": {
            "type": "string",
            "description": "State of cluster at the time of this request. Atlas returns **Applied** if it completed adding a user to, or removing a user from, your cluster. Atlas returns **Pending** if it's still making the requested user changes. When status is **Pending**, new users can't log in.",
            "enum": ["PENDING", "APPLIED"]
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "AtlasClusterOutageSimulationOutageFilter": {
        "type": "object",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "The cloud provider of the region that undergoes the outage simulation.",
            "enum": ["AWS", "GCP", "AZURE"]
          },
          "regionName": {
            "type": "string",
            "description": "The name of the region to undergo an outage simulation."
          },
          "type": {
            "type": "string",
            "description": "The type of cluster outage to simulate.\n\n| Type       | Description |\n|------------|-------------|\n| `REGION`   | Simulates a cluster outage for a region.|",
            "enum": ["REGION"]
          }
        }
      },
      "ClusterOutageSimulation": {
        "type": "object",
        "properties": {
          "clusterName": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the cluster that undergoes outage simulation.",
            "readOnly": true
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the project that contains the cluster to undergo outage simulation.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the outage simulation.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "outageFilters": {
            "minItems": 1,
            "type": "array",
            "description": "List of settings that specify the type of cluster outage simulation.",
            "items": {
              "$ref": "#/components/schemas/AtlasClusterOutageSimulationOutageFilter"
            }
          },
          "startRequestDate": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud started the regional outage simulation.",
            "format": "date-time",
            "readOnly": true,
            "example": "2022-01-01T00:00:00Z"
          },
          "state": {
            "type": "string",
            "description": "Phase of the outage simulation.\n\n| State       | Indication |\n|-------------|------------|\n| `START_REQUESTED`    | User has requested cluster outage simulation.|\n| `STARTING`           | MongoDB Cloud is starting cluster outage simulation.|\n| `SIMULATING`         | MongoDB Cloud is simulating cluster outage.|\n| `RECOVERY_REQUESTED` | User has requested recovery from the simulated outage.|\n| `RECOVERING`         | MongoDB Cloud is recovering the cluster from the simulated outage.|\n| `COMPLETE`           | MongoDB Cloud has completed the cluster outage simulation.|",
            "readOnly": true,
            "enum": ["START_REQUESTED", "STARTING", "SIMULATING", "RECOVERY_REQUESTED", "RECOVERING", "COMPLETE"]
          }
        }
      },
      "DatabaseInheritedRole": {
        "title": "Inherited Role",
        "required": ["db", "role"],
        "type": "object",
        "properties": {
          "db": {
            "type": "string",
            "description": "Human-readable label that identifies the database on which someone grants the action to one MongoDB user."
          },
          "role": {
            "type": "string",
            "description": "Human-readable label that identifies the role inherited. Set this value to `admin` for every role except `read` or `readWrite`.",
            "externalDocs": {
              "description": "MongoDB Built-In Roles",
              "url": "https://docs.mongodb.com/manual/reference/built-in-roles/"
            }
          }
        },
        "description": "Role inherited from another context for this database user.",
        "externalDocs": {
          "description": "Built-in MongoDB Roles",
          "url": "https://docs.mongodb.com/manual/reference/built-in-roles/"
        }
      },
      "DatabasePermittedNamespaceResource": {
        "title": "Permitted Namespace",
        "required": ["cluster", "collection", "db"],
        "type": "object",
        "properties": {
          "cluster": {
            "type": "boolean",
            "description": "Flag that indicates whether to grant the action on the cluster resource. If `true`, MongoDB Cloud ignores the **actions.resources.collection** and **actions.resources.db** parameters."
          },
          "collection": {
            "type": "string",
            "description": "Human-readable label that identifies the collection on which you grant the action to one MongoDB user. If you don't set this parameter, you grant the action to all collections in the database specified in the **actions.resources.db** parameter. If you set `\"actions.resources.cluster\" : true`, MongoDB Cloud ignores this parameter."
          },
          "db": {
            "type": "string",
            "description": "Human-readable label that identifies the database on which you grant the action to one MongoDB user. If you set `\"actions.resources.cluster\" : true`, MongoDB Cloud ignores this parameter."
          }
        },
        "description": "Namespace to which this database user has access.",
        "externalDocs": {
          "description": "Cluster Resources",
          "url": "https://docs.mongodb.com/manual/reference/resource-document/#cluster-resource"
        }
      },
      "DatabasePrivilegeAction": {
        "title": "Database Privilege Action",
        "required": ["action"],
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Human-readable label that identifies the privilege action.",
            "enum": [
              "FIND",
              "INSERT",
              "REMOVE",
              "UPDATE",
              "BYPASS_DOCUMENT_VALIDATION",
              "USE_UUID",
              "KILL_OP",
              "CREATE_COLLECTION",
              "CREATE_INDEX",
              "DROP_COLLECTION",
              "ENABLE_PROFILER",
              "CHANGE_STREAM",
              "COLL_MOD",
              "COMPACT",
              "CONVERT_TO_CAPPED",
              "DROP_DATABASE",
              "DROP_INDEX",
              "RE_INDEX",
              "RENAME_COLLECTION_SAME_DB",
              "SET_USER_WRITE_BLOCK",
              "BYPASS_USER_WRITE_BLOCK",
              "LIST_SESSIONS",
              "KILL_ANY_SESSION",
              "COLL_STATS",
              "CONN_POOL_STATS",
              "DB_HASH",
              "DB_STATS",
              "GET_CMD_LINE_OPTS",
              "GET_LOG",
              "GET_PARAMETER",
              "GET_SHARD_MAP",
              "HOST_INFO",
              "IN_PROG",
              "LIST_DATABASES",
              "LIST_COLLECTIONS",
              "LIST_INDEXES",
              "LIST_SHARDS",
              "NET_STAT",
              "REPL_SET_GET_CONFIG",
              "REPL_SET_GET_STATUS",
              "SERVER_STATUS",
              "VALIDATE",
              "SHARDING_STATE",
              "TOP",
              "SQL_GET_SCHEMA",
              "SQL_SET_SCHEMA",
              "VIEW_ALL_HISTORY",
              "OUT_TO_S3",
              "STORAGE_GET_CONFIG",
              "STORAGE_SET_CONFIG",
              "FLUSH_ROUTER_CONFIG",
              "GET_STREAM_PROCESSOR",
              "CREATE_STREAM_PROCESSOR",
              "PROCESS_STREAM_PROCESSOR",
              "START_STREAM_PROCESSOR",
              "STOP_STREAM_PROCESSOR",
              "DROP_STREAM_PROCESSOR",
              "SAMPLE_STREAM_PROCESSOR",
              "LIST_STREAM_PROCESSORS",
              "LIST_CONNECTIONS",
              "STREAM_PROCESSOR_STATS"
            ]
          },
          "resources": {
            "type": "array",
            "description": "List of resources on which you grant the action.",
            "items": {
              "$ref": "#/components/schemas/DatabasePermittedNamespaceResource"
            }
          }
        },
        "description": "Privilege action that the role grants."
      },
      "UserCustomDBRole": {
        "required": ["roleName"],
        "type": "object",
        "properties": {
          "actions": {
            "type": "array",
            "description": "List of the individual privilege actions that the role grants.",
            "items": {
              "$ref": "#/components/schemas/DatabasePrivilegeAction"
            }
          },
          "inheritedRoles": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of the built-in roles that this custom role inherits.",
            "items": {
              "$ref": "#/components/schemas/DatabaseInheritedRole"
            }
          },
          "roleName": {
            "type": "string",
            "description": "Human-readable label that identifies the role for the request. This name must be unique for this custom role in this project."
          }
        }
      },
      "UpdateCustomDBRole": {
        "type": "object",
        "properties": {
          "actions": {
            "type": "array",
            "description": "List of the individual privilege actions that the role grants.",
            "items": {
              "$ref": "#/components/schemas/DatabasePrivilegeAction"
            }
          },
          "inheritedRoles": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of the built-in roles that this custom role inherits.",
            "items": {
              "$ref": "#/components/schemas/DatabaseInheritedRole"
            }
          }
        }
      },
      "CloudDatabaseUser": {
        "required": ["databaseName", "groupId", "username"],
        "type": "object",
        "properties": {
          "awsIAMType": {
            "type": "string",
            "description": "Human-readable label that indicates whether the new database user authenticates with the Amazon Web Services (AWS) Identity and Access Management (IAM) credentials associated with the user or the user's role.",
            "default": "NONE",
            "enum": ["NONE", "USER", "ROLE"]
          },
          "databaseName": {
            "type": "string",
            "description": "The database against which the database user authenticates. Database users must provide both a username and authentication database to log into MongoDB. If the user authenticates with AWS IAM, x.509, LDAP, or OIDC Workload this value should be `$external`. If the user authenticates with SCRAM-SHA or OIDC Workforce, this value should be `admin`.",
            "default": "admin",
            "enum": ["admin", "$external"]
          },
          "deleteAfterDate": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud deletes the user. This parameter expresses its value in the ISO 8601 timestamp format in UTC and can include the time zone designation. You must specify a future date that falls within one week of making the Application Programming Interface (API) request.",
            "format": "date-time"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project.",
            "writeOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "labels": {
            "type": "array",
            "description": "List that contains the key-value pairs for tagging and categorizing the MongoDB database user. The labels that you define do not appear in the console.",
            "items": {
              "$ref": "#/components/schemas/ComponentLabel"
            }
          },
          "ldapAuthType": {
            "type": "string",
            "description": "Part of the Lightweight Directory Access Protocol (LDAP) record that the database uses to authenticate this database user on the LDAP host.",
            "default": "NONE",
            "enum": ["NONE", "GROUP", "USER"]
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "oidcAuthType": {
            "type": "string",
            "description": "Human-readable label that indicates whether the new database user or group authenticates with OIDC federated authentication. To create a federated authentication user, specify the value of USER in this field. To create a federated authentication group, specify the value of IDP_GROUP in this field.",
            "default": "NONE",
            "enum": ["NONE", "IDP_GROUP", "USER"]
          },
          "password": {
            "minLength": 8,
            "type": "string",
            "description": "Alphanumeric string that authenticates this database user against the database specified in `databaseName`. To authenticate with SCRAM-SHA, you must specify this parameter. This parameter doesn't appear in this response.",
            "writeOnly": true,
            "externalDocs": {
              "description": "SCRAM-SHA",
              "url": "https://docs.mongodb.com/manual/core/security-scram/"
            }
          },
          "roles": {
            "type": "array",
            "description": "List that provides the pairings of one role with one applicable database.",
            "items": {
              "$ref": "#/components/schemas/DatabaseUserRole"
            }
          },
          "scopes": {
            "type": "array",
            "description": "List that contains clusters, MongoDB Atlas Data Lakes, and MongoDB Atlas Streams Instances that this database user can access. If omitted, MongoDB Cloud grants the database user access to all the clusters, MongoDB Atlas Data Lakes, and MongoDB Atlas Streams Instances in the project.",
            "items": {
              "$ref": "#/components/schemas/UserScope"
            }
          },
          "username": {
            "maxLength": 1024,
            "type": "string",
            "description": "Human-readable label that represents the user that authenticates to MongoDB. The format of this label depends on the method of authentication:\n\n| Authentication Method | Parameter Needed | Parameter Value | username Format |\n|---|---|---|---|\n| AWS IAM | awsIAMType | ROLE | <abbr title=\"Amazon Resource Name\">ARN</abbr> |\n| AWS IAM | awsIAMType | USER | <abbr title=\"Amazon Resource Name\">ARN</abbr> |\n| x.509 | x509Type | CUSTOMER | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| x.509 | x509Type | MANAGED | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| LDAP | ldapAuthType | USER | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| LDAP | ldapAuthType | GROUP | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| OIDC Workforce | oidcAuthType | IDP_GROUP | Atlas OIDC IdP ID (found in federation settings), followed by a '/', followed by the IdP group name |\n| OIDC Workload | oidcAuthType | USER | Atlas OIDC IdP ID (found in federation settings), followed by a '/', followed by the IdP user name |\n| SCRAM-SHA | awsIAMType, x509Type, ldapAuthType, oidcAuthType | NONE | Alphanumeric string |\n"
          },
          "x509Type": {
            "type": "string",
            "description": "X.509 method that MongoDB Cloud uses to authenticate the database user.\n\n- For application-managed X.509, specify `MANAGED`.\n- For self-managed X.509, specify `CUSTOMER`.\n\nUsers created with the `CUSTOMER` method require a Common Name (CN) in the **username** parameter. You must create externally authenticated users on the `$external` database.",
            "default": "NONE",
            "enum": ["NONE", "CUSTOMER", "MANAGED"]
          }
        }
      },
      "ComponentLabel": {
        "title": "Component Label",
        "type": "object",
        "properties": {
          "key": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Key applied to tag and categorize this component."
          },
          "value": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Value set to the Key applied to tag and categorize this component."
          }
        },
        "description": "Human-readable labels applied to this MongoDB Cloud component."
      },
      "DatabaseUserRole": {
        "title": "Database User Role",
        "required": ["databaseName", "roleName"],
        "type": "object",
        "properties": {
          "collectionName": {
            "type": "string",
            "description": "Collection on which this role applies."
          },
          "databaseName": {
            "type": "string",
            "description": "Database to which the user is granted access privileges."
          },
          "roleName": {
            "type": "string",
            "description": "Human-readable label that identifies a group of privileges assigned to a database user. This value can either be a built-in role or a custom role.",
            "enum": [
              "atlasAdmin",
              "backup",
              "clusterMonitor",
              "dbAdmin",
              "dbAdminAnyDatabase",
              "enableSharding",
              "read",
              "readAnyDatabase",
              "readWrite",
              "readWriteAnyDatabase",
              "<a custom role name>"
            ]
          }
        },
        "description": "Range of resources available to this database user."
      },
      "UserScope": {
        "title": "Database User Scope",
        "required": ["name", "type"],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the cluster or MongoDB Atlas Data Lake that this database user can access."
          },
          "type": {
            "type": "string",
            "description": "Category of resource that this database user can access.",
            "enum": ["CLUSTER", "DATA_LAKE", "STREAM"]
          }
        },
        "description": "Range of resources available to this database user."
      },
      "UserCert": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "integer",
            "description": "Unique 24-hexadecimal character string that identifies this certificate.",
            "format": "int64",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created this certificate. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the project.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "monthsUntilExpiration": {
            "maximum": 24,
            "type": "integer",
            "description": "Number of months that the certificate remains valid until it expires.",
            "format": "int32",
            "writeOnly": true,
            "default": 3
          },
          "notAfter": {
            "type": "string",
            "description": "Date and time when this certificate expires. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "subject": {
            "pattern": "^(?:(?<cn>CN=(?<name>[^,]*)),)?(?:(?<path>(?:(?:CN|OU)=[^,]+,?)+),)?(?<domain>(?:DC=[^,]+,?)+)$",
            "type": "string",
            "description": "Subject Alternative Name associated with this certificate. This parameter expresses its value as a distinguished name as defined in [RFC 2253](https://tools.ietf.org/html/2253).",
            "readOnly": true,
            "example": "CN=BindUser,CN=Users,DC=myldapserver,DC=mycompany,DC=com"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "PaginatedApiAtlasDatabaseUserView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/CloudDatabaseUser"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        },
        "description": "List of MongoDB Database users granted access to databases in the specified project."
      },
      "PaginatedUserCertView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/UserCert"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "GroupMaintenanceWindow": {
        "required": ["dayOfWeek"],
        "type": "object",
        "properties": {
          "autoDeferOnceEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud should defer all maintenance windows for one week after you enable them."
          },
          "dayOfWeek": {
            "maximum": 7,
            "minimum": 1,
            "type": "integer",
            "description": "One-based integer that represents the day of the week that the maintenance window starts.\n\n| Value | Day of Week |\n|---|---|\n| `1` | Sunday |\n| `2` | Monday |\n| `3` | Tuesday |\n| `4` | Wednesday |\n| `5` | Thursday |\n| `6` | Friday |\n| `7` | Saturday |\n",
            "format": "int32"
          },
          "hourOfDay": {
            "maximum": 23,
            "minimum": 0,
            "type": "integer",
            "description": "Zero-based integer that represents the hour of the of the day that the maintenance window starts according to a 24-hour clock. Use `0` for midnight and `12` for noon.",
            "format": "int32"
          },
          "numberOfDeferrals": {
            "type": "integer",
            "description": "Number of times the current maintenance event for this project has been deferred.",
            "format": "int32",
            "readOnly": true
          },
          "startASAP": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud starts the maintenance window immediately upon receiving this request. To start the maintenance window immediately for your project, MongoDB Cloud must have maintenance scheduled and you must set a maintenance window. This flag resets to `false` after MongoDB Cloud completes maintenance."
          }
        }
      },
      "AWSCloudProviderSettings": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ClusterProviderSettings"
          },
          {
            "type": "object",
            "properties": {
              "autoScaling": {
                "$ref": "#/components/schemas/CloudProviderAWSAutoScaling"
              },
              "diskIOPS": {
                "type": "integer",
                "description": "Maximum Disk Input/Output Operations per Second (IOPS) that the database host can perform.",
                "format": "int32"
              },
              "encryptEBSVolume": {
                "type": "boolean",
                "description": "Flag that indicates whether the Amazon Elastic Block Store (EBS) encryption feature encrypts the host's root volume for both data at rest within the volume and for data moving between the volume and the cluster. Clusters always have this setting enabled.",
                "deprecated": true,
                "default": true
              },
              "instanceSizeName": {
                "title": "AWS Instance Sizes",
                "type": "string",
                "description": "Cluster tier, with a default storage and memory capacity, that applies to all the data-bearing hosts in your cluster.",
                "enum": [
                  "M10",
                  "M20",
                  "M30",
                  "M40",
                  "M50",
                  "M60",
                  "M80",
                  "M100",
                  "M140",
                  "M200",
                  "M300",
                  "R40",
                  "R50",
                  "R60",
                  "R80",
                  "R200",
                  "R300",
                  "R400",
                  "R700",
                  "M40_NVME",
                  "M50_NVME",
                  "M60_NVME",
                  "M80_NVME",
                  "M200_NVME",
                  "M400_NVME"
                ]
              },
              "regionName": {
                "title": "AWS Regions",
                "type": "string",
                "description": "Physical location where MongoDB Cloud deploys your AWS-hosted MongoDB cluster nodes. The region you choose can affect network latency for clients accessing your databases. When MongoDB Cloud deploys a dedicated cluster, it checks if a VPC or VPC connection exists for that provider and region. If not, MongoDB Cloud creates them as part of the deployment. MongoDB Cloud assigns the VPC a CIDR block. To limit a new VPC peering connection to one CIDR block and region, create the connection first. Deploy the cluster after the connection starts.",
                "externalDocs": {
                  "description": "AWS",
                  "url": "https://docs.atlas.mongodb.com/reference/amazon-aws/#std-label-amazon-aws"
                },
                "enum": [
                  "US_GOV_WEST_1",
                  "US_GOV_EAST_1",
                  "US_EAST_1",
                  "US_EAST_2",
                  "US_WEST_1",
                  "US_WEST_2",
                  "CA_CENTRAL_1",
                  "EU_NORTH_1",
                  "EU_WEST_1",
                  "EU_WEST_2",
                  "EU_WEST_3",
                  "EU_CENTRAL_1",
                  "EU_CENTRAL_2",
                  "AP_EAST_1",
                  "AP_NORTHEAST_1",
                  "AP_NORTHEAST_2",
                  "AP_NORTHEAST_3",
                  "AP_SOUTHEAST_1",
                  "AP_SOUTHEAST_2",
                  "AP_SOUTHEAST_3",
                  "AP_SOUTHEAST_4",
                  "AP_SOUTH_1",
                  "AP_SOUTH_2",
                  "SA_EAST_1",
                  "CN_NORTH_1",
                  "CN_NORTHWEST_1",
                  "ME_SOUTH_1",
                  "ME_CENTRAL_1",
                  "AF_SOUTH_1",
                  "EU_SOUTH_1",
                  "EU_SOUTH_2",
                  "IL_CENTRAL_1",
                  "CA_WEST_1",
                  "GLOBAL"
                ]
              },
              "volumeType": {
                "type": "string",
                "description": "Disk Input/Output Operations per Second (IOPS) setting for Amazon Web Services (AWS) storage that you configure only for abbr title=\"Amazon Web Services\">AWS</abbr>. Specify whether Disk Input/Output Operations per Second (IOPS) must not exceed the default Input/Output Operations per Second (IOPS) rate for the selected volume size (`STANDARD`), or must fall within the allowable Input/Output Operations per Second (IOPS) range for the selected volume size (`PROVISIONED`). You must set this value to (`PROVISIONED`) for NVMe clusters.",
                "enum": ["STANDARD", "PROVISIONED"]
              }
            }
          }
        ]
      },
      "AWSComputeAutoScaling": {
        "title": "AWS",
        "type": "object",
        "properties": {
          "maxInstanceSize": {
            "title": "AWS Instance Sizes",
            "type": "string",
            "description": "Maximum instance size to which your cluster can automatically scale.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M100",
              "M140",
              "M200",
              "M300",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "R700",
              "M40_NVME",
              "M50_NVME",
              "M60_NVME",
              "M80_NVME",
              "M200_NVME",
              "M400_NVME"
            ]
          },
          "minInstanceSize": {
            "title": "AWS Instance Sizes",
            "type": "string",
            "description": "Minimum instance size to which your cluster can automatically scale.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M100",
              "M140",
              "M200",
              "M300",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "R700",
              "M40_NVME",
              "M50_NVME",
              "M60_NVME",
              "M80_NVME",
              "M200_NVME",
              "M400_NVME"
            ]
          }
        },
        "description": "Collection of settings that configures how a cluster might scale its cluster tier and whether the cluster can scale down. Cluster tier auto-scaling is unavailable for clusters using Low CPU or NVME storage classes."
      },
      "AzureCloudProviderSettings": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ClusterProviderSettings"
          },
          {
            "type": "object",
            "properties": {
              "autoScaling": {
                "$ref": "#/components/schemas/CloudProviderAzureAutoScaling"
              },
              "diskTypeName": {
                "type": "string",
                "description": "Disk type that corresponds to the host's root volume for Azure instances. If omitted, the default disk type for the selected **providerSettings.instanceSizeName** applies.",
                "externalDocs": {
                  "description": "Disk type",
                  "url": "https://docs.microsoft.com/en-us/azure/virtual-machines/premium-storage-performance#premium-storage-disk-sizes"
                },
                "enum": ["P2", "P3", "P4", "P6", "P10", "P15", "P20", "P30", "P40", "P50"]
              },
              "instanceSizeName": {
                "title": "Azure Instance Sizes",
                "type": "string",
                "description": "Cluster tier, with a default storage and memory capacity, that applies to all the data-bearing hosts in your cluster.",
                "enum": [
                  "M10",
                  "M20",
                  "M30",
                  "M40",
                  "M50",
                  "M60",
                  "M80",
                  "M90",
                  "M200",
                  "R40",
                  "R50",
                  "R60",
                  "R80",
                  "R200",
                  "R300",
                  "R400",
                  "M60_NVME",
                  "M80_NVME",
                  "M200_NVME",
                  "M300_NVME",
                  "M400_NVME",
                  "M600_NVME"
                ]
              },
              "regionName": {
                "title": "Azure Regions",
                "type": "string",
                "description": "Microsoft Azure Regions.",
                "externalDocs": {
                  "description": "Azure",
                  "url": "https://docs.atlas.mongodb.com/reference/microsoft-azure/"
                },
                "enum": [
                  "US_CENTRAL",
                  "US_EAST",
                  "US_EAST_2",
                  "US_NORTH_CENTRAL",
                  "US_WEST",
                  "US_SOUTH_CENTRAL",
                  "EUROPE_NORTH",
                  "EUROPE_WEST",
                  "US_WEST_CENTRAL",
                  "US_WEST_2",
                  "US_WEST_3",
                  "CANADA_EAST",
                  "CANADA_CENTRAL",
                  "BRAZIL_SOUTH",
                  "BRAZIL_SOUTHEAST",
                  "AUSTRALIA_CENTRAL",
                  "AUSTRALIA_CENTRAL_2",
                  "AUSTRALIA_EAST",
                  "AUSTRALIA_SOUTH_EAST",
                  "GERMANY_CENTRAL",
                  "GERMANY_NORTH_EAST",
                  "GERMANY_WEST_CENTRAL",
                  "GERMANY_NORTH",
                  "SWEDEN_CENTRAL",
                  "SWEDEN_SOUTH",
                  "SWITZERLAND_NORTH",
                  "SWITZERLAND_WEST",
                  "UK_SOUTH",
                  "UK_WEST",
                  "NORWAY_EAST",
                  "NORWAY_WEST",
                  "INDIA_CENTRAL",
                  "INDIA_SOUTH",
                  "INDIA_WEST",
                  "CHINA_EAST",
                  "CHINA_NORTH",
                  "ASIA_EAST",
                  "JAPAN_EAST",
                  "JAPAN_WEST",
                  "ASIA_SOUTH_EAST",
                  "KOREA_CENTRAL",
                  "KOREA_SOUTH",
                  "FRANCE_CENTRAL",
                  "FRANCE_SOUTH",
                  "SOUTH_AFRICA_NORTH",
                  "SOUTH_AFRICA_WEST",
                  "UAE_CENTRAL",
                  "UAE_NORTH",
                  "QATAR_CENTRAL"
                ]
              }
            }
          }
        ]
      },
      "AzureComputeAutoScalingRules": {
        "title": "Azure",
        "type": "object",
        "properties": {
          "maxInstanceSize": {
            "title": "Azure Instance Sizes",
            "type": "string",
            "description": "Maximum instance size to which your cluster can automatically scale.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M90",
              "M200",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "M60_NVME",
              "M80_NVME",
              "M200_NVME",
              "M300_NVME",
              "M400_NVME",
              "M600_NVME"
            ]
          },
          "minInstanceSize": {
            "title": "Azure Instance Sizes",
            "type": "string",
            "description": "Minimum instance size to which your cluster can automatically scale.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M90",
              "M200",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "M60_NVME",
              "M80_NVME",
              "M200_NVME",
              "M300_NVME",
              "M400_NVME",
              "M600_NVME"
            ]
          }
        },
        "description": "Collection of settings that configures how a cluster might scale its cluster tier and whether the cluster can scale down. Cluster tier auto-scaling is unavailable for clusters using Low CPU or NVME storage classes."
      },
      "BiConnector": {
        "title": "MongoDB Connector for Business Intelligence Settings",
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Connector for Business Intelligence is enabled on the specified cluster."
          },
          "readPreference": {
            "type": "string",
            "description": "Data source node designated for the MongoDB Connector for Business Intelligence on MongoDB Cloud. The MongoDB Connector for Business Intelligence on MongoDB Cloud reads data from the primary, secondary, or analytics node based on your read preferences. Defaults to `ANALYTICS` node, or `SECONDARY` if there are no `ANALYTICS` nodes.",
            "externalDocs": {
              "description": "Read preferences for BI Connector",
              "url": "https://docs.atlas.mongodb.com/cluster-config/enable-bic/#std-label-bic-read-preferences"
            },
            "enum": ["PRIMARY", "SECONDARY", "ANALYTICS"]
          }
        },
        "description": "Settings needed to configure the MongoDB Connector for Business Intelligence for this cluster.",
        "externalDocs": {
          "description": "MongoDB Connector for Business Intelligence",
          "url": "https://docs.mongodb.com/bi-connector/current/"
        }
      },
      "CloudGCPProviderSettings": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ClusterProviderSettings"
          },
          {
            "type": "object",
            "properties": {
              "autoScaling": {
                "$ref": "#/components/schemas/CloudProviderGCPAutoScaling"
              },
              "instanceSizeName": {
                "title": "GCP Instance Sizes",
                "type": "string",
                "description": "Cluster tier, with a default storage and memory capacity, that applies to all the data-bearing hosts in your cluster.",
                "enum": [
                  "M10",
                  "M20",
                  "M30",
                  "M40",
                  "M50",
                  "M60",
                  "M80",
                  "M140",
                  "M200",
                  "M250",
                  "M300",
                  "M400",
                  "R40",
                  "R50",
                  "R60",
                  "R80",
                  "R200",
                  "R300",
                  "R400",
                  "R600"
                ]
              },
              "regionName": {
                "title": "GCP Regions",
                "type": "string",
                "description": "Google Compute Regions.",
                "externalDocs": {
                  "description": "GCP",
                  "url": "https://docs.atlas.mongodb.com/reference/google-gcp/"
                },
                "enum": [
                  "EASTERN_US",
                  "GOV_EASTERN_US",
                  "US_EAST_4",
                  "GOV_US_EAST_4",
                  "US_EAST_5",
                  "GOV_US_EAST_5",
                  "US_WEST_2",
                  "GOV_US_WEST_2",
                  "US_WEST_3",
                  "GOV_US_WEST_3",
                  "US_WEST_4",
                  "GOV_US_WEST_4",
                  "US_SOUTH_1",
                  "GOV_US_SOUTH_1",
                  "CENTRAL_US",
                  "GOV_CENTRAL_US",
                  "WESTERN_US",
                  "GOV_WESTERN_US",
                  "NORTH_AMERICA_NORTHEAST_1",
                  "NORTH_AMERICA_NORTHEAST_2",
                  "SOUTH_AMERICA_EAST_1",
                  "SOUTH_AMERICA_WEST_1",
                  "WESTERN_EUROPE",
                  "EUROPE_NORTH_1",
                  "EUROPE_WEST_2",
                  "EUROPE_WEST_3",
                  "EUROPE_WEST_4",
                  "EUROPE_WEST_6",
                  "EUROPE_WEST_8",
                  "EUROPE_WEST_9",
                  "EUROPE_WEST_10",
                  "EUROPE_WEST_12",
                  "EUROPE_SOUTHWEST_1",
                  "EUROPE_CENTRAL_2",
                  "MIDDLE_EAST_CENTRAL_1",
                  "MIDDLE_EAST_CENTRAL_2",
                  "MIDDLE_EAST_WEST_1",
                  "AUSTRALIA_SOUTHEAST_1",
                  "AUSTRALIA_SOUTHEAST_2",
                  "EASTERN_ASIA_PACIFIC",
                  "NORTHEASTERN_ASIA_PACIFIC",
                  "SOUTHEASTERN_ASIA_PACIFIC",
                  "ASIA_EAST_2",
                  "ASIA_NORTHEAST_2",
                  "ASIA_NORTHEAST_3",
                  "ASIA_SOUTH_1",
                  "ASIA_SOUTH_2",
                  "ASIA_SOUTHEAST_2"
                ]
              }
            }
          }
        ]
      },
      "CloudProviderAWSAutoScaling": {
        "type": "object",
        "properties": {
          "compute": {
            "$ref": "#/components/schemas/AWSComputeAutoScaling"
          }
        },
        "description": "Range of instance sizes to which your cluster can scale."
      },
      "CloudProviderAzureAutoScaling": {
        "type": "object",
        "properties": {
          "compute": {
            "$ref": "#/components/schemas/AzureComputeAutoScalingRules"
          }
        },
        "description": "Range of instance sizes to which your cluster can scale."
      },
      "CloudProviderGCPAutoScaling": {
        "type": "object",
        "properties": {
          "compute": {
            "$ref": "#/components/schemas/GCPComputeAutoScaling"
          }
        },
        "description": "Range of instance sizes to which your cluster can scale."
      },
      "ClusterAutoScalingSettings": {
        "title": "Automatic Cluster Scaling Settings",
        "type": "object",
        "properties": {
          "compute": {
            "$ref": "#/components/schemas/ClusterComputeAutoScaling"
          },
          "diskGBEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled disk auto-scaling for this cluster."
          }
        },
        "description": "Range of instance sizes to which your cluster can scale.",
        "externalDocs": {
          "description": "Cluster Auto-Scaling",
          "url": "https://docs.atlas.mongodb.com/cluster-autoscaling/"
        }
      },
      "ClusterComputeAutoScaling": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether cluster tier auto-scaling is enabled. Set to `true` to enable cluster tier auto-scaling. If enabled, you must specify a value for **providerSettings.autoScaling.compute.maxInstanceSize** also. Set to `false` to disable cluster tier auto-scaling."
          },
          "scaleDownEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the cluster tier can scale down. This is required if **autoScaling.compute.enabled** is `true`. If you enable this option, specify a value for **providerSettings.autoScaling.compute.minInstanceSize**."
          }
        },
        "description": "Collection of settings that configures how a cluster might scale its cluster tier and whether the cluster can scale down. Cluster tier auto-scaling is unavailable for clusters using Low CPU or NVME storage classes."
      },
      "ClusterConnectionStrings": {
        "title": "Cluster Connection Strings",
        "type": "object",
        "properties": {
          "awsPrivateLink": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Private endpoint-aware connection strings that use AWS-hosted clusters with Amazon Web Services (AWS) PrivateLink. Each key identifies an Amazon Web Services (AWS) interface endpoint. Each value identifies the related `mongodb://` connection string that you use to connect to MongoDB Cloud through the interface endpoint that the key names.",
              "readOnly": true,
              "externalDocs": {
                "description": "Network Peering Connection",
                "url": "https://docs.atlas.mongodb.com/security-vpc-peering/#std-label-vpc-peering/"
              }
            },
            "description": "Private endpoint-aware connection strings that use AWS-hosted clusters with Amazon Web Services (AWS) PrivateLink. Each key identifies an Amazon Web Services (AWS) interface endpoint. Each value identifies the related `mongodb://` connection string that you use to connect to MongoDB Cloud through the interface endpoint that the key names.",
            "readOnly": true,
            "externalDocs": {
              "description": "Network Peering Connection",
              "url": "https://docs.atlas.mongodb.com/security-vpc-peering/#std-label-vpc-peering/"
            }
          },
          "awsPrivateLinkSrv": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Private endpoint-aware connection strings that use AWS-hosted clusters with Amazon Web Services (AWS) PrivateLink. Each key identifies an Amazon Web Services (AWS) interface endpoint. Each value identifies the related `mongodb://` connection string that you use to connect to Atlas through the interface endpoint that the key names.",
              "readOnly": true,
              "externalDocs": {
                "description": "Network Peering Connection",
                "url": "https://docs.atlas.mongodb.com/security-vpc-peering/#std-label-vpc-peering/"
              }
            },
            "description": "Private endpoint-aware connection strings that use AWS-hosted clusters with Amazon Web Services (AWS) PrivateLink. Each key identifies an Amazon Web Services (AWS) interface endpoint. Each value identifies the related `mongodb://` connection string that you use to connect to Atlas through the interface endpoint that the key names.",
            "readOnly": true,
            "externalDocs": {
              "description": "Network Peering Connection",
              "url": "https://docs.atlas.mongodb.com/security-vpc-peering/#std-label-vpc-peering/"
            }
          },
          "private": {
            "type": "string",
            "description": "Network peering connection strings for each interface Virtual Private Cloud (VPC) endpoint that you configured to connect to this cluster. This connection string uses the `mongodb+srv://` protocol. The resource returns this parameter once someone creates a network peering connection to this cluster. This protocol tells the application to look up the host seed list in the Domain Name System (DNS). This list synchronizes with the nodes in a cluster. If the connection string uses this Uniform Resource Identifier (URI) format, you don't need to append the seed list or change the URI if the nodes change. Use this URI format if your driver supports it. If it doesn't, use connectionStrings.private. For Amazon Web Services (AWS) clusters, this resource returns this parameter only if you enable custom DNS.",
            "readOnly": true,
            "externalDocs": {
              "description": "Network Peering Connection",
              "url": "https://docs.atlas.mongodb.com/security-vpc-peering/#std-label-vpc-peering/"
            }
          },
          "privateEndpoint": {
            "type": "array",
            "description": "List of private endpoint-aware connection strings that you can use to connect to this cluster through a private endpoint. This parameter returns only if you deployed a private endpoint to all regions to which you deployed this clusters' nodes.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ClusterDescriptionConnectionStringsPrivateEndpoint"
            }
          },
          "privateSrv": {
            "type": "string",
            "description": "Network peering connection strings for each interface Virtual Private Cloud (VPC) endpoint that you configured to connect to this cluster. This connection string uses the `mongodb+srv://` protocol. The resource returns this parameter when someone creates a network peering connection to this cluster. This protocol tells the application to look up the host seed list in the Domain Name System (DNS). This list synchronizes with the nodes in a cluster. If the connection string uses this Uniform Resource Identifier (URI) format, you don't need to append the seed list or change the Uniform Resource Identifier (URI) if the nodes change. Use this Uniform Resource Identifier (URI) format if your driver supports it. If it doesn't, use `connectionStrings.private`. For Amazon Web Services (AWS) clusters, this parameter returns only if you [enable custom DNS](https://docs.atlas.mongodb.com/reference/api/aws-custom-dns-update/).",
            "readOnly": true,
            "externalDocs": {
              "description": "Network Peering Connection",
              "url": "https://docs.atlas.mongodb.com/security-vpc-peering/#std-label-vpc-peering/"
            }
          },
          "standard": {
            "type": "string",
            "description": "Public connection string that you can use to connect to this cluster. This connection string uses the `mongodb://` protocol.",
            "readOnly": true,
            "externalDocs": {
              "description": "Connection String URI Format",
              "url": "https://docs.mongodb.com/manual/reference/connection-string/"
            }
          },
          "standardSrv": {
            "type": "string",
            "description": "Public connection string that you can use to connect to this cluster. This connection string uses the `mongodb+srv://` protocol.",
            "readOnly": true,
            "externalDocs": {
              "description": "Connection String URI Format",
              "url": "https://docs.mongodb.com/manual/reference/connection-string/"
            }
          }
        },
        "description": "Collection of Uniform Resource Locators that point to the MongoDB database.",
        "readOnly": true,
        "externalDocs": {
          "description": "Connection string URI format.",
          "url": "https://docs.mongodb.com/manual/reference/connection-string/"
        }
      },
      "ClusterDescriptionConnectionStringsPrivateEndpoint": {
        "title": "Cluster Private Endpoint Connection String",
        "type": "object",
        "properties": {
          "connectionString": {
            "type": "string",
            "description": "Private endpoint-aware connection string that uses the `mongodb://` protocol to connect to MongoDB Cloud through a private endpoint.",
            "readOnly": true
          },
          "endpoints": {
            "type": "array",
            "description": "List that contains the private endpoints through which you connect to MongoDB Cloud when you use **connectionStrings.privateEndpoint[n].connectionString** or **connectionStrings.privateEndpoint[n].srvConnectionString**.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ClusterDescriptionConnectionStringsPrivateEndpointEndpoint"
            }
          },
          "srvConnectionString": {
            "type": "string",
            "description": "Private endpoint-aware connection string that uses the `mongodb+srv://` protocol to connect to MongoDB Cloud through a private endpoint. The `mongodb+srv` protocol tells the driver to look up the seed list of hosts in the Domain Name System (DNS). This list synchronizes with the nodes in a cluster. If the connection string uses this Uniform Resource Identifier (URI) format, you don't need to append the seed list or change the Uniform Resource Identifier (URI) if the nodes change. Use this Uniform Resource Identifier (URI) format if your application supports it. If it doesn't, use connectionStrings.privateEndpoint[n].connectionString.",
            "readOnly": true
          },
          "srvShardOptimizedConnectionString": {
            "type": "string",
            "description": "Private endpoint-aware connection string optimized for sharded clusters that uses the `mongodb+srv://` protocol to connect to MongoDB Cloud through a private endpoint. If the connection string uses this Uniform Resource Identifier (URI) format, you don't need to change the Uniform Resource Identifier (URI) if the nodes change. Use this Uniform Resource Identifier (URI) format if your application and Atlas cluster supports it. If it doesn't, use and consult the documentation for connectionStrings.privateEndpoint[n].srvConnectionString.",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "MongoDB process type to which your application connects. Use `MONGOD` for replica sets and `MONGOS` for sharded clusters.",
            "readOnly": true,
            "enum": ["MONGOD", "MONGOS"]
          }
        },
        "description": "Private endpoint-aware connection string that you can use to connect to this cluster through a private endpoint.",
        "externalDocs": {
          "description": "Private Endpoint for Dedicated Cluster",
          "url": "https://docs.atlas.mongodb.com/security-private-endpoint/"
        }
      },
      "ClusterDescriptionConnectionStringsPrivateEndpointEndpoint": {
        "title": "Cluster Private Endpoint Connection Strings Endpoint",
        "type": "object",
        "properties": {
          "endpointId": {
            "type": "string",
            "description": "Unique string that the cloud provider uses to identify the private endpoint.",
            "readOnly": true
          },
          "providerName": {
            "type": "string",
            "description": "Cloud provider in which MongoDB Cloud deploys the private endpoint.",
            "readOnly": true,
            "enum": ["AWS", "AZURE", "GCP"]
          },
          "region": {
            "type": "string",
            "description": "Region where the private endpoint is deployed.",
            "readOnly": true
          }
        },
        "description": "Details of a private endpoint deployed for this cluster."
      },
      "ClusterFreeAutoScaling": {
        "type": "object",
        "properties": {
          "compute": {
            "title": "Tenant",
            "type": "string",
            "description": "Collection of settings that configures how a cluster might scale its cluster tier and whether the cluster can scale down."
          }
        },
        "description": "Range of instance sizes to which your cluster can scale."
      },
      "ClusterFreeProviderSettings": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ClusterProviderSettings"
          },
          {
            "type": "object",
            "properties": {
              "autoScaling": {
                "$ref": "#/components/schemas/ClusterFreeAutoScaling"
              },
              "backingProviderName": {
                "type": "string",
                "description": "Cloud service provider on which MongoDB Cloud provisioned the multi-tenant host. The resource returns this parameter when **providerSettings.providerName** is `TENANT` and **providerSetting.instanceSizeName** is `M0`, `M2` or `M5`.",
                "enum": ["AWS", "GCP", "AZURE"]
              },
              "instanceSizeName": {
                "title": "Tenant Instance Sizes",
                "type": "string",
                "description": "Cluster tier, with a default storage and memory capacity, that applies to all the data-bearing hosts in your cluster. You must set **providerSettings.providerName** to `TENANT` and specify the cloud service provider in **providerSettings.backingProviderName**.",
                "enum": ["M0", "M2", "M5"]
              },
              "regionName": {
                "type": "string",
                "description": "Human-readable label that identifies the geographic location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases. For a complete list of region names, see [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/#std-label-amazon-aws), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), and [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/). For multi-region clusters, see **replicationSpec.{region}**."
              }
            }
          }
        ]
      },
      "ClusterProviderSettings": {
        "title": "Cloud Service Provider Settings for a Cluster",
        "required": ["providerName"],
        "type": "object",
        "properties": {
          "providerName": {
            "type": "string"
          }
        },
        "description": "Group of cloud provider settings that configure the provisioned MongoDB hosts.",
        "discriminator": {
          "propertyName": "providerName",
          "mapping": {
            "AWS": "#/components/schemas/AWSCloudProviderSettings",
            "AZURE": "#/components/schemas/AzureCloudProviderSettings",
            "GCP": "#/components/schemas/CloudGCPProviderSettings",
            "TENANT": "#/components/schemas/ClusterFreeProviderSettings"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/AWSCloudProviderSettings"
          },
          {
            "$ref": "#/components/schemas/AzureCloudProviderSettings"
          },
          {
            "$ref": "#/components/schemas/CloudGCPProviderSettings"
          },
          {
            "$ref": "#/components/schemas/ClusterFreeProviderSettings"
          }
        ]
      },
      "GCPComputeAutoScaling": {
        "title": "GCP",
        "type": "object",
        "properties": {
          "maxInstanceSize": {
            "title": "GCP Instance Sizes",
            "type": "string",
            "description": "Maximum instance size to which your cluster can automatically scale.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M140",
              "M200",
              "M250",
              "M300",
              "M400",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "R600"
            ]
          },
          "minInstanceSize": {
            "title": "GCP Instance Sizes",
            "type": "string",
            "description": "Minimum instance size to which your cluster can automatically scale.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M140",
              "M200",
              "M250",
              "M300",
              "M400",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "R600"
            ]
          }
        },
        "description": "Collection of settings that configures how a cluster might scale its cluster tier and whether the cluster can scale down. Cluster tier auto-scaling is unavailable for clusters using Low CPU or NVME storage classes."
      },
      "LegacyAtlasCluster": {
        "title": "Cluster Description",
        "type": "object",
        "properties": {
          "acceptDataRisksAndForceReplicaSetReconfig": {
            "type": "string",
            "description": "If reconfiguration is necessary to regain a primary due to a regional outage, submit this field alongside your topology reconfiguration to request a new regional outage resistant topology. Forced reconfigurations during an outage of the majority of electable nodes carry a risk of data loss if replicated writes (even majority committed writes) have not been replicated to the new primary node. MongoDB Atlas docs contain more information. To proceed with an operation which carries that risk, set **acceptDataRisksAndForceReplicaSetReconfig** to the current date.",
            "format": "date-time",
            "externalDocs": {
              "description": "Reconfiguring a Replica Set during a regional outage",
              "url": "https://dochub.mongodb.org/core/regional-outage-reconfigure-replica-set"
            }
          },
          "autoScaling": {
            "$ref": "#/components/schemas/ClusterAutoScalingSettings"
          },
          "backupEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the cluster can perform backups. If set to `true`, the cluster can perform backups. You must set this value to `true` for NVMe clusters. Backup uses Cloud Backups for dedicated clusters and Shared Cluster Backups for tenant clusters. If set to `false`, the cluster doesn't use MongoDB Cloud backups."
          },
          "biConnector": {
            "$ref": "#/components/schemas/BiConnector"
          },
          "clusterType": {
            "type": "string",
            "description": "Configuration of nodes that comprise the cluster.",
            "enum": ["REPLICASET", "SHARDED", "GEOSHARDED"]
          },
          "connectionStrings": {
            "$ref": "#/components/schemas/ClusterConnectionStrings"
          },
          "createDate": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created this serverless instance. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "diskSizeGB": {
            "maximum": 4096,
            "minimum": 10,
            "type": "number",
            "description": "Storage capacity that the host's root volume possesses expressed in gigabytes. Increase this number to add capacity. MongoDB Cloud requires this parameter if you set **replicationSpecs**. If you specify a disk size below the minimum (10 GB), this parameter defaults to the minimum disk size value. Storage charge calculations depend on whether you choose the default value or a custom value.  The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require more storage space, consider upgrading your cluster to a higher tier.",
            "format": "double"
          },
          "diskWarmingMode": {
            "type": "string",
            "description": "Disk warming mode selection.",
            "externalDocs": {
              "description": "Reduce Secondary Disk Warming Impact",
              "url": "https://docs.atlas.mongodb.com/reference/replica-set-tags/#reduce-secondary-disk-warming-impact"
            },
            "default": "FULLY_WARMED",
            "enum": ["FULLY_WARMED", "VISIBLE_EARLIER"]
          },
          "encryptionAtRestProvider": {
            "type": "string",
            "description": "Cloud service provider that manages your customer keys to provide an additional layer of Encryption at Rest for the cluster.",
            "externalDocs": {
              "description": "Encryption at Rest using Customer Key Management",
              "url": "https://www.mongodb.com/docs/atlas/security-kms-encryption/"
            },
            "enum": ["NONE", "AWS", "AZURE", "GCP"]
          },
          "globalClusterSelfManagedSharding": {
            "type": "boolean",
            "description": "Set this field to configure the Sharding Management Mode when creating a new Global Cluster.\n\nWhen set to false, the management mode is set to Atlas-Managed Sharding. This mode fully manages the sharding of your Global Cluster and is built to provide a seamless deployment experience.\n\nWhen set to true, the management mode is set to Self-Managed Sharding. This mode leaves the management of shards in your hands and is built to provide an advanced and flexible deployment experience.\n\nThis setting cannot be changed once the cluster is deployed.",
            "externalDocs": {
              "description": "Creating a Global Cluster",
              "url": "https://dochub.mongodb.org/core/global-cluster-management"
            }
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the project.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the cluster.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "labels": {
            "type": "array",
            "description": "Collection of key-value pairs between 1 to 255 characters in length that tag and categorize the cluster. The MongoDB Cloud console doesn't display your labels.\n\nCluster labels are deprecated and will be removed in a future release. We strongly recommend that you use [resource tags](https://dochub.mongodb.org/core/add-cluster-tag-atlas) instead.",
            "deprecated": true,
            "items": {
              "$ref": "#/components/schemas/ComponentLabel"
            }
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "mongoDBMajorVersion": {
            "type": "string",
            "description": "MongoDB major version of the cluster.\n\nOn creation: Choose from the available versions of MongoDB, or leave unspecified for the current recommended default in the MongoDB Cloud platform. The recommended version is a recent Long Term Support version. The default is not guaranteed to be the most recently released version throughout the entire release cycle. For versions available in a specific project, see the linked documentation or use the API endpoint for [project LTS versions endpoint](#tag/Projects/operation/getProjectLTSVersions).\n\n On update: Increase version only by 1 major version at a time. If the cluster is pinned to a MongoDB feature compatibility version exactly one major version below the current MongoDB version, the MongoDB version can be downgraded to the previous major version.",
            "externalDocs": {
              "description": "Available MongoDB Versions in Atlas",
              "url": "https://www.mongodb.com/docs/atlas/reference/faq/database/#which-versions-of-mongodb-do-service-clusters-use-"
            }
          },
          "mongoDBVersion": {
            "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)",
            "type": "string",
            "description": "Version of MongoDB that the cluster runs."
          },
          "mongoURI": {
            "type": "string",
            "description": "Base connection string that you can use to connect to the cluster. MongoDB Cloud displays the string only after the cluster starts, not while it builds the cluster.",
            "readOnly": true,
            "externalDocs": {
              "description": "Connection string URI format.",
              "url": "https://docs.mongodb.com/manual/reference/connection-string/"
            }
          },
          "mongoURIUpdated": {
            "type": "string",
            "description": "Date and time when someone last updated the connection string. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "mongoURIWithOptions": {
            "type": "string",
            "description": "Connection string that you can use to connect to the cluster including the `replicaSet`, `ssl`, and `authSource` query parameters with values appropriate for the cluster. You may need to add MongoDB database users. The response returns this parameter once the cluster can receive requests, not while it builds the cluster.",
            "readOnly": true,
            "externalDocs": {
              "description": "Connection string URI format.",
              "url": "https://docs.mongodb.com/manual/reference/connection-string/"
            }
          },
          "name": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the cluster."
          },
          "numShards": {
            "maximum": 50,
            "minimum": 1,
            "type": "integer",
            "description": "Number of shards up to 50 to deploy for a sharded cluster. The resource returns `1` to indicate a replica set and values of `2` and higher to indicate a sharded cluster. The returned value equals the number of shards in the cluster.",
            "format": "int32",
            "externalDocs": {
              "description": "Sharding",
              "url": "https://docs.mongodb.com/manual/sharding/"
            },
            "default": 1
          },
          "paused": {
            "type": "boolean",
            "description": "Flag that indicates whether the cluster is paused."
          },
          "pitEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the cluster uses continuous cloud backups.",
            "externalDocs": {
              "description": "Continuous Cloud Backups",
              "url": "https://docs.atlas.mongodb.com/backup/cloud-backup/overview/"
            }
          },
          "providerBackupEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the M10 or higher cluster can perform Cloud Backups. If set to `true`, the cluster can perform backups. If this and **backupEnabled** are set to `false`, the cluster doesn't use MongoDB Cloud backups."
          },
          "providerSettings": {
            "$ref": "#/components/schemas/ClusterProviderSettings"
          },
          "replicationFactor": {
            "type": "integer",
            "description": "Number of members that belong to the replica set. Each member retains a copy of your databases, providing high availability and data redundancy. Use **replicationSpecs** instead.",
            "format": "int32",
            "deprecated": true,
            "default": 3,
            "enum": [3, 5, 7]
          },
          "replicationSpec": {
            "title": "Region Configuration",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/RegionSpec"
            },
            "description": "Physical location where MongoDB Cloud provisions cluster nodes."
          },
          "replicationSpecs": {
            "type": "array",
            "description": "List of settings that configure your cluster regions.\n\n- For Global Clusters, each object in the array represents one zone where MongoDB Cloud deploys your clusters nodes.\n- For non-Global sharded clusters and replica sets, the single object represents where MongoDB Cloud deploys your clusters nodes.",
            "items": {
              "$ref": "#/components/schemas/LegacyReplicationSpec"
            }
          },
          "rootCertType": {
            "type": "string",
            "description": "Root Certificate Authority that MongoDB Atlas clusters uses. MongoDB Cloud supports Internet Security Research Group.",
            "default": "ISRGROOTX1",
            "enum": ["ISRGROOTX1"]
          },
          "srvAddress": {
            "type": "string",
            "description": "Connection string that you can use to connect to the cluster. The `+srv` modifier forces the connection to use Transport Layer Security (TLS). The `mongoURI` parameter lists additional options.",
            "readOnly": true,
            "externalDocs": {
              "description": "Connection string URI format.",
              "url": "https://docs.mongodb.com/manual/reference/connection-string/"
            }
          },
          "stateName": {
            "type": "string",
            "description": "Human-readable label that indicates the current operating condition of the cluster.",
            "readOnly": true,
            "enum": ["IDLE", "CREATING", "UPDATING", "DELETING", "REPAIRING"]
          },
          "tags": {
            "type": "array",
            "description": "List that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the cluster.",
            "externalDocs": {
              "description": "Resource Tags",
              "url": "https://dochub.mongodb.org/core/add-cluster-tag-atlas"
            },
            "items": {
              "$ref": "#/components/schemas/ResourceTag"
            }
          },
          "terminationProtectionEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether termination protection is enabled on the cluster. If set to `true`, MongoDB Cloud won't delete the cluster. If set to `false`, MongoDB Cloud will delete the cluster.",
            "default": false
          },
          "versionReleaseSystem": {
            "type": "string",
            "description": "Method by which the cluster maintains the MongoDB versions. If value is `CONTINUOUS`, you must not specify **mongoDBMajorVersion**.",
            "default": "LTS",
            "enum": ["LTS", "CONTINUOUS"]
          }
        },
        "description": "Group of settings that configure a MongoDB cluster."
      },
      "LegacyRegionsConfig": {
        "title": "Region Configuration",
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/RegionSpec"
        },
        "description": "Physical location where MongoDB Cloud provisions cluster nodes."
      },
      "LegacyReplicationSpec": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the replication object for a zone in a Global Cluster.\n\n- If you include existing zones in the request, you must specify this parameter.\n\n- If you add a new zone to an existing Global Cluster, you may specify this parameter. The request deletes any existing zones in a Global Cluster that you exclude from the request.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "numShards": {
            "type": "integer",
            "description": "Positive integer that specifies the number of shards to deploy in each specified zone If you set this value to `1` and **clusterType** is `SHARDED`, MongoDB Cloud deploys a single-shard sharded cluster. Don't create a sharded cluster with a single shard for production environments. Single-shard sharded clusters don't provide the same benefits as multi-shard configurations.\n\n If you are upgrading a replica set to a sharded cluster, you cannot increase the number of shards in the same update request.  You should wait until after the cluster has completed upgrading to sharded and you have reconnected all application clients to the MongoDB router before adding additional shards. Otherwise, your data might become inconsistent once MongoDB Cloud begins distributing data across shards.",
            "format": "int32",
            "default": 1
          },
          "regionsConfig": {
            "title": "Region Configuration",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/RegionSpec"
            },
            "description": "Physical location where MongoDB Cloud provisions cluster nodes."
          },
          "zoneName": {
            "type": "string",
            "description": "Human-readable label that identifies the zone in a Global Cluster. Provide this value only if **clusterType** is `GEOSHARDED`."
          }
        }
      },
      "RegionSpec": {
        "title": "Region Configuration",
        "type": "object",
        "properties": {
          "analyticsNodes": {
            "type": "integer",
            "description": "Number of analytics nodes in the region. Analytics nodes handle analytic data such as reporting queries from MongoDB Connector for Business Intelligence on MongoDB Cloud. Analytics nodes are read-only, and can never become the primary. Use **replicationSpecs[n].{region}.analyticsNodes** instead.",
            "format": "int32"
          },
          "electableNodes": {
            "type": "integer",
            "description": "Number of electable nodes to deploy in the specified region. Electable nodes can become the primary and can facilitate local reads. Use **replicationSpecs[n].{region}.electableNodes** instead.",
            "format": "int32",
            "enum": [0, 3, 5, 7]
          },
          "priority": {
            "maximum": 7,
            "minimum": 0,
            "type": "integer",
            "description": "Number that indicates the election priority of the region. To identify the Preferred Region of the cluster, set this parameter to `7`. The primary node runs in the **Preferred Region**. To identify a read-only region, set this parameter to `0`.",
            "format": "int32"
          },
          "readOnlyNodes": {
            "type": "integer",
            "description": "Number of read-only nodes in the region. Read-only nodes can never become the primary member, but can facilitate local reads. Use **replicationSpecs[n].{region}.readOnlyNodes** instead.",
            "format": "int32"
          }
        },
        "description": "Physical location where MongoDB Cloud provisions cluster nodes."
      },
      "LegacyAtlasTenantClusterUpgradeRequest": {
        "title": "Tenant Cluster Upgrade Request",
        "required": ["name"],
        "type": "object",
        "properties": {
          "acceptDataRisksAndForceReplicaSetReconfig": {
            "type": "string",
            "description": "If reconfiguration is necessary to regain a primary due to a regional outage, submit this field alongside your topology reconfiguration to request a new regional outage resistant topology. Forced reconfigurations during an outage of the majority of electable nodes carry a risk of data loss if replicated writes (even majority committed writes) have not been replicated to the new primary node. MongoDB Atlas docs contain more information. To proceed with an operation which carries that risk, set **acceptDataRisksAndForceReplicaSetReconfig** to the current date.",
            "format": "date-time",
            "externalDocs": {
              "description": "Reconfiguring a Replica Set during a regional outage",
              "url": "https://dochub.mongodb.org/core/regional-outage-reconfigure-replica-set"
            }
          },
          "autoScaling": {
            "$ref": "#/components/schemas/ClusterAutoScalingSettings"
          },
          "backupEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the cluster can perform backups. If set to `true`, the cluster can perform backups. You must set this value to `true` for NVMe clusters. Backup uses Cloud Backups for dedicated clusters and Shared Cluster Backups for tenant clusters. If set to `false`, the cluster doesn't use MongoDB Cloud backups."
          },
          "biConnector": {
            "$ref": "#/components/schemas/BiConnector"
          },
          "clusterType": {
            "type": "string",
            "description": "Configuration of nodes that comprise the cluster.",
            "enum": ["REPLICASET", "SHARDED", "GEOSHARDED"]
          },
          "connectionStrings": {
            "$ref": "#/components/schemas/ClusterConnectionStrings"
          },
          "createDate": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created this serverless instance. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "diskSizeGB": {
            "maximum": 4096,
            "minimum": 10,
            "type": "number",
            "description": "Storage capacity that the host's root volume possesses expressed in gigabytes. Increase this number to add capacity. MongoDB Cloud requires this parameter if you set **replicationSpecs**. If you specify a disk size below the minimum (10 GB), this parameter defaults to the minimum disk size value. Storage charge calculations depend on whether you choose the default value or a custom value.  The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require more storage space, consider upgrading your cluster to a higher tier.",
            "format": "double"
          },
          "diskWarmingMode": {
            "type": "string",
            "description": "Disk warming mode selection.",
            "externalDocs": {
              "description": "Reduce Secondary Disk Warming Impact",
              "url": "https://docs.atlas.mongodb.com/reference/replica-set-tags/#reduce-secondary-disk-warming-impact"
            },
            "default": "FULLY_WARMED",
            "enum": ["FULLY_WARMED", "VISIBLE_EARLIER"]
          },
          "encryptionAtRestProvider": {
            "type": "string",
            "description": "Cloud service provider that manages your customer keys to provide an additional layer of Encryption at Rest for the cluster.",
            "externalDocs": {
              "description": "Encryption at Rest using Customer Key Management",
              "url": "https://www.mongodb.com/docs/atlas/security-kms-encryption/"
            },
            "enum": ["NONE", "AWS", "AZURE", "GCP"]
          },
          "globalClusterSelfManagedSharding": {
            "type": "boolean",
            "description": "Set this field to configure the Sharding Management Mode when creating a new Global Cluster.\n\nWhen set to false, the management mode is set to Atlas-Managed Sharding. This mode fully manages the sharding of your Global Cluster and is built to provide a seamless deployment experience.\n\nWhen set to true, the management mode is set to Self-Managed Sharding. This mode leaves the management of shards in your hands and is built to provide an advanced and flexible deployment experience.\n\nThis setting cannot be changed once the cluster is deployed.",
            "externalDocs": {
              "description": "Creating a Global Cluster",
              "url": "https://dochub.mongodb.org/core/global-cluster-management"
            }
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the project.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the cluster.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "labels": {
            "type": "array",
            "description": "Collection of key-value pairs between 1 to 255 characters in length that tag and categorize the cluster. The MongoDB Cloud console doesn't display your labels.\n\nCluster labels are deprecated and will be removed in a future release. We strongly recommend that you use [resource tags](https://dochub.mongodb.org/core/add-cluster-tag-atlas) instead.",
            "deprecated": true,
            "items": {
              "$ref": "#/components/schemas/ComponentLabel"
            }
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "mongoDBMajorVersion": {
            "type": "string",
            "description": "MongoDB major version of the cluster.\n\nOn creation: Choose from the available versions of MongoDB, or leave unspecified for the current recommended default in the MongoDB Cloud platform. The recommended version is a recent Long Term Support version. The default is not guaranteed to be the most recently released version throughout the entire release cycle. For versions available in a specific project, see the linked documentation or use the API endpoint for [project LTS versions endpoint](#tag/Projects/operation/getProjectLTSVersions).\n\n On update: Increase version only by 1 major version at a time. If the cluster is pinned to a MongoDB feature compatibility version exactly one major version below the current MongoDB version, the MongoDB version can be downgraded to the previous major version.",
            "externalDocs": {
              "description": "Available MongoDB Versions in Atlas",
              "url": "https://www.mongodb.com/docs/atlas/reference/faq/database/#which-versions-of-mongodb-do-service-clusters-use-"
            }
          },
          "mongoDBVersion": {
            "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)",
            "type": "string",
            "description": "Version of MongoDB that the cluster runs."
          },
          "mongoURI": {
            "type": "string",
            "description": "Base connection string that you can use to connect to the cluster. MongoDB Cloud displays the string only after the cluster starts, not while it builds the cluster.",
            "readOnly": true,
            "externalDocs": {
              "description": "Connection string URI format.",
              "url": "https://docs.mongodb.com/manual/reference/connection-string/"
            }
          },
          "mongoURIUpdated": {
            "type": "string",
            "description": "Date and time when someone last updated the connection string. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "mongoURIWithOptions": {
            "type": "string",
            "description": "Connection string that you can use to connect to the cluster including the `replicaSet`, `ssl`, and `authSource` query parameters with values appropriate for the cluster. You may need to add MongoDB database users. The response returns this parameter once the cluster can receive requests, not while it builds the cluster.",
            "readOnly": true,
            "externalDocs": {
              "description": "Connection string URI format.",
              "url": "https://docs.mongodb.com/manual/reference/connection-string/"
            }
          },
          "name": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the cluster."
          },
          "numShards": {
            "maximum": 50,
            "minimum": 1,
            "type": "integer",
            "description": "Number of shards up to 50 to deploy for a sharded cluster. The resource returns `1` to indicate a replica set and values of `2` and higher to indicate a sharded cluster. The returned value equals the number of shards in the cluster.",
            "format": "int32",
            "externalDocs": {
              "description": "Sharding",
              "url": "https://docs.mongodb.com/manual/sharding/"
            },
            "default": 1
          },
          "paused": {
            "type": "boolean",
            "description": "Flag that indicates whether the cluster is paused."
          },
          "pitEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the cluster uses continuous cloud backups.",
            "externalDocs": {
              "description": "Continuous Cloud Backups",
              "url": "https://docs.atlas.mongodb.com/backup/cloud-backup/overview/"
            }
          },
          "providerBackupEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the M10 or higher cluster can perform Cloud Backups. If set to `true`, the cluster can perform backups. If this and **backupEnabled** are set to `false`, the cluster doesn't use MongoDB Cloud backups."
          },
          "providerSettings": {
            "$ref": "#/components/schemas/ClusterProviderSettings"
          },
          "replicationFactor": {
            "type": "integer",
            "description": "Number of members that belong to the replica set. Each member retains a copy of your databases, providing high availability and data redundancy. Use **replicationSpecs** instead.",
            "format": "int32",
            "deprecated": true,
            "default": 3,
            "enum": [3, 5, 7]
          },
          "replicationSpec": {
            "title": "Region Configuration",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/RegionSpec"
            },
            "description": "Physical location where MongoDB Cloud provisions cluster nodes."
          },
          "replicationSpecs": {
            "type": "array",
            "description": "List of settings that configure your cluster regions.\n\n- For Global Clusters, each object in the array represents one zone where MongoDB Cloud deploys your clusters nodes.\n- For non-Global sharded clusters and replica sets, the single object represents where MongoDB Cloud deploys your clusters nodes.",
            "items": {
              "$ref": "#/components/schemas/LegacyReplicationSpec"
            }
          },
          "rootCertType": {
            "type": "string",
            "description": "Root Certificate Authority that MongoDB Atlas clusters uses. MongoDB Cloud supports Internet Security Research Group.",
            "default": "ISRGROOTX1",
            "enum": ["ISRGROOTX1"]
          },
          "srvAddress": {
            "type": "string",
            "description": "Connection string that you can use to connect to the cluster. The `+srv` modifier forces the connection to use Transport Layer Security (TLS). The `mongoURI` parameter lists additional options.",
            "readOnly": true,
            "externalDocs": {
              "description": "Connection string URI format.",
              "url": "https://docs.mongodb.com/manual/reference/connection-string/"
            }
          },
          "stateName": {
            "type": "string",
            "description": "Human-readable label that indicates the current operating condition of the cluster.",
            "readOnly": true,
            "enum": ["IDLE", "CREATING", "UPDATING", "DELETING", "REPAIRING"]
          },
          "tags": {
            "type": "array",
            "description": "List that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the cluster.",
            "externalDocs": {
              "description": "Resource Tags",
              "url": "https://dochub.mongodb.org/core/add-cluster-tag-atlas"
            },
            "items": {
              "$ref": "#/components/schemas/ResourceTag"
            }
          },
          "terminationProtectionEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether termination protection is enabled on the cluster. If set to `true`, MongoDB Cloud won't delete the cluster. If set to `false`, MongoDB Cloud will delete the cluster.",
            "default": false
          },
          "versionReleaseSystem": {
            "type": "string",
            "description": "Method by which the cluster maintains the MongoDB versions. If value is `CONTINUOUS`, you must not specify **mongoDBMajorVersion**.",
            "default": "LTS",
            "enum": ["LTS", "CONTINUOUS"]
          }
        },
        "description": "Request containing target state of tenant cluster to be upgraded"
      },
      "ClusterServerlessBackupOptions": {
        "title": "Serverless Backup Options",
        "type": "object",
        "properties": {
          "serverlessContinuousBackupEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the serverless instance uses **Serverless Continuous Backup**.\n If this parameter is `false`, the serverless instance uses **Basic Backup**.\n\n | Option | Description |\n |---|---|\n | Serverless Continuous Backup | Atlas takes incremental [snapshots](https://www.mongodb.com/docs/atlas/backup/cloud-backup/overview/#std-label-serverless-snapshots) of the data in your serverless instance every six hours and lets you restore the data from a selected point in time within the last 72 hours. Atlas also takes daily snapshots and retains these daily snapshots for 35 days. To learn more, see [Serverless Instance Costs](https://www.mongodb.com/docs/atlas/billing/serverless-instance-costs/#std-label-serverless-instance-costs). |\n | Basic Backup | Atlas takes incremental [snapshots](https://www.mongodb.com/docs/atlas/backup/cloud-backup/overview/#std-label-serverless-snapshots) of the data in your serverless instance every six hours and retains only the two most recent snapshots. You can use this option for free. |",
            "default": true
          }
        },
        "description": "Group of settings that configure serverless backup."
      },
      "ServerlessConnectionStringsPrivateEndpointItem": {
        "title": "Serverless Instance Private Endpoint Connection Strings Endpoint",
        "type": "object",
        "properties": {
          "endpointId": {
            "type": "string",
            "description": "Unique string that the cloud provider uses to identify the private endpoint.",
            "readOnly": true
          },
          "providerName": {
            "type": "string",
            "description": "Cloud provider where the private endpoint is deployed.",
            "readOnly": true,
            "enum": ["AWS", "AZURE"]
          },
          "region": {
            "type": "string",
            "description": "Region where the private endpoint is deployed.",
            "readOnly": true
          }
        },
        "description": "Details of a private endpoint deployed for this serverless instance."
      },
      "ServerlessConnectionStringsPrivateEndpointList": {
        "title": "Serverless Instance Private Endpoint Connection String",
        "type": "object",
        "properties": {
          "endpoints": {
            "type": "array",
            "description": "List that contains the private endpoints through which you connect to MongoDB Cloud when you use **connectionStrings.privateEndpoint[n].srvConnectionString**.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ServerlessConnectionStringsPrivateEndpointItem"
            }
          },
          "srvConnectionString": {
            "type": "string",
            "description": "Private endpoint-aware connection string that uses the `mongodb+srv://` protocol to connect to MongoDB Cloud through a private endpoint. The `mongodb+srv` protocol tells the driver to look up the seed list of hosts in the Domain Name System (DNS).",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "MongoDB process type to which your application connects.",
            "readOnly": true,
            "enum": ["MONGOS"]
          }
        },
        "description": "Private endpoint connection string that you can use to connect to this serverless instance through a private endpoint.",
        "externalDocs": {
          "description": "Private Endpoint for Serverless Instance",
          "url": "https://docs.atlas.mongodb.com/security-serverless-private-endpoint/"
        }
      },
      "ServerlessInstanceDescription": {
        "title": "Serverless Instance Description",
        "required": ["providerSettings"],
        "type": "object",
        "properties": {
          "connectionStrings": {
            "$ref": "#/components/schemas/ServerlessInstanceDescriptionConnectionStrings"
          },
          "createDate": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created this serverless instance. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the project.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the serverless instance.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "mongoDBVersion": {
            "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)",
            "type": "string",
            "description": "Version of MongoDB that the serverless instance runs.",
            "readOnly": true
          },
          "name": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the serverless instance."
          },
          "providerSettings": {
            "$ref": "#/components/schemas/ServerlessProviderSettings"
          },
          "serverlessBackupOptions": {
            "$ref": "#/components/schemas/ClusterServerlessBackupOptions"
          },
          "stateName": {
            "type": "string",
            "description": "Human-readable label that indicates the current operating condition of the serverless instance.",
            "readOnly": true,
            "enum": ["IDLE", "CREATING", "UPDATING", "DELETING", "REPAIRING"]
          },
          "tags": {
            "type": "array",
            "description": "List that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the serverless instance.",
            "items": {
              "$ref": "#/components/schemas/ResourceTag"
            }
          },
          "terminationProtectionEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether termination protection is enabled on the serverless instance. If set to `true`, MongoDB Cloud won't delete the serverless instance. If set to `false`, MongoDB Cloud will delete the serverless instance.",
            "default": false
          }
        },
        "description": "Group of settings that configure a MongoDB serverless instance."
      },
      "ServerlessInstanceDescriptionConnectionStrings": {
        "title": "Serverless Instance Connection Strings",
        "type": "object",
        "properties": {
          "privateEndpoint": {
            "type": "array",
            "description": "List of private endpoint-aware connection strings that you can use to connect to this serverless instance through a private endpoint. This parameter returns only if you created a private endpoint for this serverless instance and it is AVAILABLE.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ServerlessConnectionStringsPrivateEndpointList"
            }
          },
          "standardSrv": {
            "type": "string",
            "description": "Public connection string that you can use to connect to this serverless instance. This connection string uses the `mongodb+srv://` protocol.",
            "readOnly": true,
            "externalDocs": {
              "description": "Connection String URI Format",
              "url": "https://docs.mongodb.com/manual/reference/connection-string/"
            }
          }
        },
        "description": "Collection of Uniform Resource Locators that point to the MongoDB database.",
        "readOnly": true,
        "externalDocs": {
          "description": "Connection string URI format.",
          "url": "https://docs.mongodb.com/manual/reference/connection-string/"
        }
      },
      "ServerlessProviderSettings": {
        "title": "Cloud Service Provider Settings for a Serverless Instance",
        "required": ["backingProviderName", "regionName"],
        "type": "object",
        "properties": {
          "backingProviderName": {
            "type": "string",
            "description": "Cloud service provider on which MongoDB Cloud provisioned the serverless instance.",
            "enum": ["AWS", "AZURE", "GCP"]
          },
          "providerName": {
            "type": "string",
            "description": "Human-readable label that identifies the cloud service provider.",
            "default": "SERVERLESS",
            "enum": ["SERVERLESS"]
          },
          "regionName": {
            "type": "string",
            "description": "Human-readable label that identifies the geographic location of your MongoDB serverless instance. The region you choose can affect network latency for clients accessing your databases. For a complete list of region names, see [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/#std-label-amazon-aws), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), and [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/)."
          }
        },
        "description": "Group of cloud provider settings that configure the provisioned MongoDB serverless instance."
      },
      "NetworkPermissionEntry": {
        "type": "object",
        "properties": {
          "awsSecurityGroup": {
            "pattern": "^([0-9]*/)?sg-([0-9]*)",
            "type": "string",
            "description": "Unique string of the Amazon Web Services (AWS) security group that you want to add to the project's IP access list. Your IP access list entry can be one **awsSecurityGroup**, one **cidrBlock**, or one **ipAddress**. You must configure Virtual Private Connection (VPC) peering for your project before you can add an AWS security group to an IP access list. You cannot set AWS security groups as temporary access list entries. Don't set this parameter if you set **cidrBlock** or **ipAddress**."
          },
          "cidrBlock": {
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){7}[0-9a-f]{1,4}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){1,6}\\:(%2[fF][0-9]{1,3})?$",
            "type": "string",
            "description": "Range of IP addresses in Classless Inter-Domain Routing (CIDR) notation that you want to add to the project's IP access list. Your IP access list entry can be one **awsSecurityGroup**, one **cidrBlock**, or one **ipAddress**. Don't set this parameter if you set **awsSecurityGroup** or **ipAddress**."
          },
          "comment": {
            "maxLength": 80,
            "type": "string",
            "description": "Remark that explains the purpose or scope of this IP access list entry."
          },
          "deleteAfterDate": {
            "type": "string",
            "description": "Date and time after which MongoDB Cloud deletes the temporary access list entry. This parameter expresses its value in the ISO 8601 timestamp format in UTC and can include the time zone designation. The date must be later than the current date but no later than one week after you submit this request. The resource returns this parameter if you specified an expiration date when creating this IP access list entry.",
            "format": "date-time"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that contains the IP access list to which you want to add one or more entries.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "ipAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IP address that you want to add to the project's IP access list. Your IP access list entry can be one **awsSecurityGroup**, one **cidrBlock**, or one **ipAddress**. Don't set this parameter if you set **awsSecurityGroup** or **cidrBlock**."
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "PaginatedNetworkAccessView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/NetworkPermissionEntry"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "NetworkPermissionEntryStatus": {
        "required": ["STATUS"],
        "type": "object",
        "properties": {
          "STATUS": {
            "type": "string",
            "description": "State of the access list entry when MongoDB Cloud made this request.\n\n| Status | Activity |\n|---|---|\n| `ACTIVE` | This access list entry applies to all relevant cloud providers. |\n| `PENDING` | MongoDB Cloud has started to add access list entry. This access list entry may not apply to all cloud providers at the time of this request. |\n| `FAILED` | MongoDB Cloud didn't succeed in adding this access list entry. |\n",
            "readOnly": true,
            "enum": ["PENDING", "FAILED", "ACTIVE"]
          }
        }
      },
      "AwsNetworkPeeringConnectionSettings": {
        "title": "AWS",
        "required": ["accepterRegionName", "awsAccountId", "containerId", "routeTableCidrBlock", "vpcId"],
        "type": "object",
        "properties": {
          "accepterRegionName": {
            "type": "string",
            "description": "Amazon Web Services (AWS) region where the Virtual Peering Connection (VPC) that you peered with the MongoDB Cloud VPC resides. The resource returns `null` if your VPC and the MongoDB Cloud VPC reside in the same region."
          },
          "awsAccountId": {
            "maxLength": 12,
            "minLength": 12,
            "pattern": "^[0-9]{12}$",
            "type": "string",
            "description": "Unique twelve-digit string that identifies the Amazon Web Services (AWS) account that owns the VPC that you peered with the MongoDB Cloud VPC."
          },
          "connectionId": {
            "type": "string",
            "description": "Unique string that identifies the peering connection on AWS.",
            "readOnly": true
          },
          "containerId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud network container that contains the specified network peering connection.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "errorStateName": {
            "type": "string",
            "description": "Type of error that can be returned when requesting an Amazon Web Services (AWS) peering connection. The resource returns `null` if the request succeeded.",
            "readOnly": true,
            "enum": ["REJECTED", "EXPIRED", "INVALID_ARGUMENT"]
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the network peering connection.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "providerName": {
            "type": "string",
            "description": "Cloud service provider that serves the requested network peering connection.",
            "enum": ["AWS", "AZURE", "GCP"]
          },
          "routeTableCidrBlock": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "Internet Protocol (IP) addresses expressed in Classless Inter-Domain Routing (CIDR) notation of the VPC's subnet that you want to peer with the MongoDB Cloud VPC."
          },
          "statusName": {
            "type": "string",
            "description": "State of the network peering connection at the time you made the request.",
            "readOnly": true,
            "enum": ["INITIATING", "PENDING_ACCEPTANCE", "FAILED", "FINALIZING", "AVAILABLE", "TERMINATING"]
          },
          "vpcId": {
            "minLength": 5,
            "pattern": "^vpc-[0-9a-f]{17}$",
            "type": "string",
            "description": "Unique string that identifies the VPC on Amazon Web Services (AWS) that you want to peer with the MongoDB Cloud VPC."
          }
        },
        "description": "Group of Network Peering connection settings."
      },
      "AzureNetworkPeeringConnectionSettings": {
        "title": "AZURE",
        "required": ["azureDirectoryId", "azureSubscriptionId", "containerId", "resourceGroupName", "vnetName"],
        "type": "object",
        "properties": {
          "azureDirectoryId": {
            "maxLength": 32,
            "minLength": 32,
            "pattern": "^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$",
            "type": "string",
            "description": "Unique string that identifies the Azure AD directory in which the VNet peered with the MongoDB Cloud VNet resides."
          },
          "azureSubscriptionId": {
            "maxLength": 32,
            "minLength": 32,
            "pattern": "^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$",
            "type": "string",
            "description": "Unique string that identifies the Azure subscription in which the VNet you peered with the MongoDB Cloud VNet resides."
          },
          "containerId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud network container that contains the specified network peering connection.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "errorState": {
            "type": "string",
            "description": "Error message returned when a requested Azure network peering resource returns `\"status\" : \"FAILED\"`. The resource returns `null` if the request succeeded.",
            "readOnly": true
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the network peering connection.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "providerName": {
            "type": "string",
            "description": "Cloud service provider that serves the requested network peering connection.",
            "enum": ["AWS", "AZURE", "GCP"]
          },
          "resourceGroupName": {
            "pattern": "^([-\\w._()])+$",
            "type": "string",
            "description": "Human-readable label that identifies the resource group in which the VNet to peer with the MongoDB Cloud VNet resides."
          },
          "status": {
            "type": "string",
            "description": "State of the network peering connection at the time you made the request.",
            "readOnly": true,
            "enum": ["ADDING_PEER", "AVAILABLE", "FAILED", "DELETION_FAILED", "DELETING"]
          },
          "vnetName": {
            "pattern": "^([-\\w._()])+$",
            "type": "string",
            "description": "Human-readable label that identifies the VNet that you want to peer with the MongoDB Cloud VNet."
          }
        },
        "description": "Group of Network Peering connection settings."
      },
      "BaseNetworkPeeringConnectionSettings": {
        "required": ["containerId"],
        "type": "object",
        "properties": {
          "containerId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud network container that contains the specified network peering connection.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the network peering connection.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "providerName": {
            "type": "string",
            "description": "Cloud service provider that serves the requested network peering connection.",
            "enum": ["AWS", "AZURE", "GCP"]
          }
        },
        "discriminator": {
          "propertyName": "providerName",
          "mapping": {
            "AWS": "#/components/schemas/AwsNetworkPeeringConnectionSettings",
            "AZURE": "#/components/schemas/AzureNetworkPeeringConnectionSettings",
            "GCP": "#/components/schemas/GCPNetworkPeeringConnectionSettings"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/AwsNetworkPeeringConnectionSettings"
          },
          {
            "$ref": "#/components/schemas/AzureNetworkPeeringConnectionSettings"
          },
          {
            "$ref": "#/components/schemas/GCPNetworkPeeringConnectionSettings"
          }
        ]
      },
      "GCPNetworkPeeringConnectionSettings": {
        "title": "GCP",
        "required": ["containerId", "gcpProjectId", "networkName"],
        "type": "object",
        "properties": {
          "containerId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud network container that contains the specified network peering connection.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "errorMessage": {
            "type": "string",
            "description": "Details of the error returned when requesting a GCP network peering resource. The resource returns `null` if the request succeeded.",
            "readOnly": true
          },
          "gcpProjectId": {
            "maxLength": 30,
            "minLength": 6,
            "pattern": "^[a-z][0-9a-z-]{4,28}[0-9a-z]{1}",
            "type": "string",
            "description": "Human-readable label that identifies the GCP project that contains the network that you want to peer with the MongoDB Cloud VPC."
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the network peering connection.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "networkName": {
            "maxLength": 63,
            "minLength": 1,
            "pattern": "[a-z]([-a-z0-9]{0,62}[a-z0-9]{0,1})?",
            "type": "string",
            "description": "Human-readable label that identifies the network to peer with the MongoDB Cloud VPC."
          },
          "providerName": {
            "type": "string",
            "description": "Cloud service provider that serves the requested network peering connection.",
            "enum": ["AWS", "AZURE", "GCP"]
          },
          "status": {
            "type": "string",
            "description": "State of the network peering connection at the time you made the request.",
            "readOnly": true,
            "enum": ["ADDING_PEER", "WAITING_FOR_USER", "AVAILABLE", "FAILED", "DELETING"]
          }
        },
        "description": "Group of Network Peering connection settings."
      },
      "PaginatedContainerPeerView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/BaseNetworkPeeringConnectionSettings"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        },
        "description": "Group of Network Peering connection settings."
      },
      "AWSPrivateLinkConnection": {
        "title": "AWS",
        "required": ["cloudProvider"],
        "type": "object",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Cloud service provider that serves the requested endpoint service.",
            "readOnly": true,
            "enum": ["AWS", "AZURE", "GCP"]
          },
          "endpointServiceName": {
            "pattern": "^com\\.amazonaws\\.vpce\\.[a-z-0-9]+\\.vpce-svc-[0-9a-f]{17}",
            "type": "string",
            "description": "Unique string that identifies the Amazon Web Services (AWS) PrivateLink endpoint service. MongoDB Cloud returns null while it creates the endpoint service.",
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message returned when requesting private connection resource. The resource returns `null` if the request succeeded.",
            "readOnly": true
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the Private Endpoint Service.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "interfaceEndpoints": {
            "type": "array",
            "description": "List of strings that identify private endpoint interfaces applied to the specified project.",
            "readOnly": true,
            "items": {
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "type": "string",
              "description": "Unique 24-hexadecimal digit string that identifies the interface endpoint.",
              "readOnly": true,
              "example": "32b6e34b3d91647abb20e7b8"
            }
          },
          "regionName": {
            "type": "string",
            "description": "Cloud provider region that manages this Private Endpoint Service.",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "State of the Private Endpoint Service connection when MongoDB Cloud received this request.",
            "readOnly": true,
            "enum": ["INITIATING", "AVAILABLE", "WAITING_FOR_USER", "FAILED", "DELETING"]
          }
        },
        "description": "Group of Private Endpoint Service settings."
      },
      "AzurePrivateLinkConnection": {
        "title": "AZURE",
        "required": ["cloudProvider"],
        "type": "object",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Cloud service provider that serves the requested endpoint service.",
            "readOnly": true,
            "enum": ["AWS", "AZURE", "GCP"]
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message returned when requesting private connection resource. The resource returns `null` if the request succeeded.",
            "readOnly": true
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the Private Endpoint Service.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "privateEndpoints": {
            "type": "array",
            "description": "List of private endpoints assigned to this Azure Private Link Service.",
            "readOnly": true,
            "items": {
              "pattern": "^\\/subscriptions\\/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\/resource[gG]roups\\/([-\\w._()]+)\\/providers\\/Microsoft\\.Network\\/privateEndpoints\\/([-\\w._()]+)",
              "type": "string",
              "description": "Root-relative path to one private endpoint assigned to this Azure Private Link Service.",
              "readOnly": true
            }
          },
          "privateLinkServiceName": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^pls_[0-9a-f]{24}$",
            "type": "string",
            "description": "Unique string that identifies the Azure Private Link Service that MongoDB Cloud manages.",
            "readOnly": true
          },
          "privateLinkServiceResourceId": {
            "type": "string",
            "description": "Root-relative path that identifies of the Azure Private Link Service that MongoDB Cloud manages. Use this value to create a private endpoint connection to an Azure VNet.",
            "readOnly": true,
            "example": "/subscriptions/ae349d51-d12b-ee3d-2a27-7d53f6479cf0/resourcegroups/KObGGz/providers/Microsoft.Network/privateLinkServices/pls_d1820713f8153388d533e9de"
          },
          "regionName": {
            "type": "string",
            "description": "Cloud provider region that manages this Private Endpoint Service.",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "State of the Private Endpoint Service connection when MongoDB Cloud received this request.",
            "readOnly": true,
            "enum": ["INITIATING", "AVAILABLE", "WAITING_FOR_USER", "FAILED", "DELETING"]
          }
        },
        "description": "Group of Private Endpoint Service settings."
      },
      "EndpointService": {
        "required": ["cloudProvider"],
        "type": "object",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Cloud service provider that serves the requested endpoint service.",
            "readOnly": true,
            "enum": ["AWS", "AZURE", "GCP"]
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message returned when requesting private connection resource. The resource returns `null` if the request succeeded.",
            "readOnly": true
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the Private Endpoint Service.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "regionName": {
            "type": "string",
            "description": "Cloud provider region that manages this Private Endpoint Service.",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "State of the Private Endpoint Service connection when MongoDB Cloud received this request.",
            "readOnly": true,
            "enum": ["INITIATING", "AVAILABLE", "WAITING_FOR_USER", "FAILED", "DELETING"]
          }
        },
        "discriminator": {
          "propertyName": "cloudProvider",
          "mapping": {
            "AWS": "#/components/schemas/AWSPrivateLinkConnection",
            "AZURE": "#/components/schemas/AzurePrivateLinkConnection",
            "GCP": "#/components/schemas/GCPEndpointService"
          }
        }
      },
      "GCPEndpointService": {
        "title": "GCP",
        "required": ["cloudProvider"],
        "type": "object",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Cloud service provider that serves the requested endpoint service.",
            "readOnly": true,
            "enum": ["AWS", "AZURE", "GCP"]
          },
          "endpointGroupNames": {
            "type": "array",
            "description": "List of Google Cloud network endpoint groups that corresponds to the Private Service Connect endpoint service.",
            "externalDocs": {
              "description": "Google Cloud Forwarding Rule Concepts",
              "url": "https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts"
            },
            "items": {
              "type": "string",
              "description": "One Google Cloud network endpoint group that corresponds to the Private Service Connect endpoint service."
            }
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message returned when requesting private connection resource. The resource returns `null` if the request succeeded.",
            "readOnly": true
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the Private Endpoint Service.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "regionName": {
            "type": "string",
            "description": "Cloud provider region that manages this Private Endpoint Service.",
            "readOnly": true
          },
          "serviceAttachmentNames": {
            "type": "array",
            "description": "List of Uniform Resource Locators (URLs) that identifies endpoints that MongoDB Cloud can use to access one Google Cloud Service across a Google Cloud Virtual Private Connection (VPC) network.",
            "externalDocs": {
              "description": "Google Cloud Private Service Connect Service Attachments",
              "url": "https://cloud.google.com/vpc/docs/private-service-connect#service-attachments"
            },
            "items": {
              "pattern": "https:\\/\\/([a-z0-9\\.]+)+\\.[a-z]{2,}(\\/[a-z0-9\\-]+)+\\/projects\\/p-[a-z0-9]+\\/regions\\/[a-z\\-0-9]+\\/serviceAttachments\\/[a-z0-9\\-]+",
              "type": "string",
              "description": "Uniform Resource Locator (URL) that identifies one endpoint that MongoDB Cloud can use to access one Google Cloud Service across a Google Cloud Virtual Private Connection (VPC) network."
            }
          },
          "status": {
            "type": "string",
            "description": "State of the Private Endpoint Service connection when MongoDB Cloud received this request.",
            "readOnly": true,
            "enum": ["INITIATING", "AVAILABLE", "WAITING_FOR_USER", "FAILED", "DELETING"]
          }
        },
        "description": "Group of Private Endpoint Service settings."
      },
      "CloudProviderEndpointServiceRequest": {
        "required": ["providerName", "region"],
        "type": "object",
        "properties": {
          "providerName": {
            "type": "string",
            "description": "Human-readable label that identifies the cloud service provider for which you want to create the private endpoint service.",
            "writeOnly": true,
            "enum": ["AWS", "AZURE", "GCP"]
          },
          "region": {
            "type": "string",
            "description": "Cloud provider region in which you want to create the private endpoint service. Regions accepted as values differ for [Amazon Web Services](https://docs.atlas.mongodb.com/reference/amazon-aws/), [Google Cloud Platform](https://docs.atlas.mongodb.com/reference/google-gcp/), and [Microsoft Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).",
            "writeOnly": true
          }
        }
      },
      "AWSInterfaceEndpoint": {
        "title": "AWS",
        "required": ["cloudProvider"],
        "type": "object",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Cloud service provider that serves the requested endpoint.",
            "readOnly": true,
            "enum": ["AWS", "AZURE", "GCP"]
          },
          "connectionStatus": {
            "type": "string",
            "description": "State of the Amazon Web Service PrivateLink connection when MongoDB Cloud received this request.",
            "readOnly": true,
            "enum": ["PENDING_ACCEPTANCE", "PENDING", "AVAILABLE", "REJECTED", "DELETING"]
          },
          "deleteRequested": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud received a request to remove the specified private endpoint from the private endpoint service.",
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message returned when requesting private connection resource. The resource returns `null` if the request succeeded.",
            "readOnly": true
          },
          "interfaceEndpointId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the interface endpoint.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          }
        },
        "description": "Group of Private Endpoint settings."
      },
      "AzurePrivateEndpoint": {
        "title": "AZURE",
        "required": ["cloudProvider"],
        "type": "object",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Cloud service provider that serves the requested endpoint.",
            "readOnly": true,
            "enum": ["AWS", "AZURE", "GCP"]
          },
          "deleteRequested": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud received a request to remove the specified private endpoint from the private endpoint service.",
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message returned when requesting private connection resource. The resource returns `null` if the request succeeded.",
            "readOnly": true
          },
          "privateEndpointConnectionName": {
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}%2[fF]([-\\w._()]+)%2[fF]([-\\w._()]+)",
            "type": "string",
            "description": "Human-readable label that MongoDB Cloud generates that identifies the private endpoint connection.",
            "readOnly": true
          },
          "privateEndpointIPAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 address of the private endpoint in your Azure VNet that someone added to this private endpoint service."
          },
          "privateEndpointResourceId": {
            "type": "string",
            "description": "Unique string that identifies the Azure private endpoint's network interface that someone added to this private endpoint service.",
            "readOnly": true,
            "example": "/subscriptions/cba6d9c6-1d3f-3c11-03cb-c705d895e636/resourcegroups/qrRTqi4TSN)7yB5YLRjVDveH3.yLzpNR7Br0D3-SGrU3j0.0/providers/Microsoft.Network/privateEndpoints/pVP(vb(XeckpxtXzP0NaOsDjeWDbOK)DX8A2j2E_vBYL2.GEYIdln"
          },
          "status": {
            "type": "string",
            "description": "State of the Azure Private Link Service connection when MongoDB Cloud received this request.",
            "readOnly": true,
            "enum": ["INITIATING", "AVAILABLE", "FAILED", "DELETING"]
          }
        },
        "description": "Group of Private Endpoint settings."
      },
      "GCPConsumerForwardingRule": {
        "type": "object",
        "properties": {
          "endpointName": {
            "type": "string",
            "description": "Human-readable label that identifies the Google Cloud consumer forwarding rule that you created.",
            "readOnly": true,
            "externalDocs": {
              "description": "Google Cloud Forwarding Rule Concepts",
              "url": "https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts"
            }
          },
          "ipAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "One Private Internet Protocol version 4 (IPv4) address to which this Google Cloud consumer forwarding rule resolves.",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "State of the MongoDB Cloud endpoint group when MongoDB Cloud received this request.",
            "readOnly": true,
            "enum": ["INITIATING", "AVAILABLE", "FAILED", "DELETING"]
          }
        }
      },
      "PrivateGCPEndpointGroup": {
        "title": "GCP",
        "required": ["cloudProvider"],
        "type": "object",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Cloud service provider that serves the requested endpoint.",
            "readOnly": true,
            "enum": ["AWS", "AZURE", "GCP"]
          },
          "deleteRequested": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud received a request to remove the specified private endpoint from the private endpoint service.",
            "readOnly": true
          },
          "endpointGroupName": {
            "type": "string",
            "description": "Human-readable label that identifies a set of endpoints.",
            "readOnly": true,
            "externalDocs": {
              "description": "Google Cloud Forwarding Rule Concepts",
              "url": "https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts"
            }
          },
          "endpoints": {
            "type": "array",
            "description": "List of individual private endpoints that comprise this endpoint group.",
            "readOnly": true,
            "externalDocs": {
              "description": "Google Cloud Forwarding Rule Concepts",
              "url": "https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts"
            },
            "items": {
              "$ref": "#/components/schemas/GCPConsumerForwardingRule"
            }
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message returned when requesting private connection resource. The resource returns `null` if the request succeeded.",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "State of the Google Cloud network endpoint group when MongoDB Cloud received this request.",
            "readOnly": true,
            "enum": ["INITIATING", "VERIFIED", "AVAILABLE", "FAILED", "DELETING"]
          }
        },
        "description": "Group of Private Endpoint settings."
      },
      "PrivateLinkEndpoint": {
        "required": ["cloudProvider"],
        "type": "object",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Cloud service provider that serves the requested endpoint.",
            "readOnly": true,
            "enum": ["AWS", "AZURE", "GCP"]
          },
          "deleteRequested": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud received a request to remove the specified private endpoint from the private endpoint service.",
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message returned when requesting private connection resource. The resource returns `null` if the request succeeded.",
            "readOnly": true
          }
        },
        "discriminator": {
          "propertyName": "cloudProvider",
          "mapping": {
            "AWS": "#/components/schemas/AWSInterfaceEndpoint",
            "GCP": "#/components/schemas/PrivateGCPEndpointGroup",
            "AZURE": "#/components/schemas/AzurePrivateEndpoint"
          }
        }
      },
      "CreateAWSEndpointRequest": {
        "title": "AWS",
        "required": ["id"],
        "type": "object",
        "description": "Group of Private Endpoint settings.",
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateEndpointRequest"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "pattern": "^vpce-[0-9a-f]{17}$",
                "type": "string",
                "description": "Unique string that identifies the private endpoint's network interface that someone added to this private endpoint service.",
                "writeOnly": true,
                "example": "vpce-3bf78b0ddee411ba1"
              }
            }
          }
        ]
      },
      "CreateAzureEndpointRequest": {
        "title": "AZURE",
        "required": ["id", "privateEndpointIPAddress"],
        "type": "object",
        "description": "Group of Private Endpoint settings.",
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateEndpointRequest"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique string that identifies the private endpoint's network interface that someone added to this private endpoint service.",
                "writeOnly": true,
                "example": "/subscriptions/cba6d9c6-1d3f-3c11-03cb-c705d895e636/resourcegroups/qrRTqi4TSN)7yB5YLRjVDveH3.yLzpNR7Br0D3-SGrU3j0.0/providers/Microsoft.Network/privateEndpoints/pVP(vb(XeckpxtXzP0NaOsDjeWDbOK)DX8A2j2E_vBYL2.GEYIdln"
              },
              "privateEndpointIPAddress": {
                "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
                "type": "string",
                "description": "IPv4 address of the private endpoint in your Azure VNet that someone added to this private endpoint service."
              }
            }
          }
        ]
      },
      "CreateEndpointRequest": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/CreateAWSEndpointRequest"
          },
          {
            "$ref": "#/components/schemas/CreateAzureEndpointRequest"
          },
          {
            "$ref": "#/components/schemas/CreateGCPEndpointGroupRequest"
          }
        ]
      },
      "CreateGCPEndpointGroupRequest": {
        "title": "GCP",
        "required": ["endpointGroupName", "gcpProjectId"],
        "type": "object",
        "description": "Group of Private Endpoint settings.",
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateEndpointRequest"
          },
          {
            "type": "object",
            "properties": {
              "endpointGroupName": {
                "type": "string",
                "description": "Human-readable label that identifies a set of endpoints.",
                "writeOnly": true
              },
              "endpoints": {
                "type": "array",
                "description": "List of individual private endpoints that comprise this endpoint group.",
                "externalDocs": {
                  "description": "Google Cloud Forwarding Rule Concepts",
                  "url": "https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts"
                },
                "items": {
                  "$ref": "#/components/schemas/CreateGCPForwardingRuleRequest"
                }
              },
              "gcpProjectId": {
                "pattern": "^p-[0-9a-z]{24}$",
                "type": "string",
                "description": "Unique string that identifies the Google Cloud project in which you created the endpoints.",
                "writeOnly": true,
                "example": "p-fdeeb3e43b8e733e5ab627b1",
                "externalDocs": {
                  "description": "Google Cloud Creating and Managing Projects",
                  "url": "https://cloud.google.com/resource-manager/docs/creating-managing-projects"
                }
              }
            }
          }
        ]
      },
      "CreateGCPForwardingRuleRequest": {
        "title": "GCP Forwarding Rules",
        "type": "object",
        "properties": {
          "endpointName": {
            "type": "string",
            "description": "Human-readable label that identifies the Google Cloud consumer forwarding rule that you created.",
            "writeOnly": true,
            "externalDocs": {
              "description": "Google Cloud Forwarding Rule Concepts",
              "url": "https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts"
            }
          },
          "ipAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "One Private Internet Protocol version 4 (IPv4) address to which this Google Cloud consumer forwarding rule resolves.",
            "writeOnly": true
          }
        }
      },
      "ProjectSettingItemView": {
        "required": ["enabled"],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled the regionalized private endpoint setting for the specified project.\n\n- Set this value to `true` to enable regionalized private endpoints. This allows you to create more than one private endpoint in a cloud provider region. You need to enable this setting to connect to multi-region and global MongoDB Cloud sharded clusters. Enabling regionalized private endpoints introduces the following limitations:\n  - Your applications must use the new connection strings for existing multi-region and global sharded clusters. This might cause downtime.\n  - Your MongoDB Cloud project can't contain replica sets nor can you create new replica sets in this project.\n\n  - You can't disable this setting if you have:\n    - more than one private endpoint in more than one region\n    - more than one private endpoint in one region and one private endpoint in one or more regions.\n\n- Set this value to `false` to disable regionalized private endpoints."
          }
        }
      },
      "PrivateIPModeView": {
        "required": ["enabled"],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled **Connect via Peering Only** mode for the specified project."
          }
        }
      },
      "PaginatedPrivateNetworkEndpointIdEntryView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/PrivateNetworkEndpointIdEntry"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "PrivateNetworkEndpointIdEntry": {
        "required": ["endpointId"],
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Human-readable string to associate with this private endpoint."
          },
          "customerEndpointDNSName": {
            "type": "string",
            "description": "Human-readable label to identify customer's VPC endpoint DNS name."
          },
          "endpointId": {
            "maxLength": 22,
            "minLength": 22,
            "pattern": "^vpce-[0-9a-f]{17}$",
            "type": "string",
            "description": "Unique 22-character alphanumeric string that identifies the private endpoint.",
            "example": "vpce-3bf78b0ddee411ba1",
            "externalDocs": {
              "description": "Atlas Data Lake supports Amazon Web Services private endpoints using the AWS PrivateLink feature.",
              "url": "https://aws.amazon.com/privatelink/?privatelink-blogs.sort-by=item.additionalFields.createdDate&privatelink-blogs.sort-order=desc"
            }
          },
          "provider": {
            "type": "string",
            "description": "Human-readable label that identifies the cloud service provider. Atlas Data Lake supports Amazon Web Services only.",
            "default": "AWS",
            "enum": ["AWS"]
          },
          "region": {
            "type": "string",
            "description": "Human-readable label to identify the region of customer's VPC endpoint."
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies the resource type associated with this private endpoint.",
            "default": "DATA_LAKE",
            "enum": ["DATA_LAKE"]
          }
        }
      },
      "CreatePushBasedLogExportProjectRequest": {
        "required": ["bucketName", "iamRoleId", "prefixPath"],
        "type": "object",
        "properties": {
          "bucketName": {
            "type": "string",
            "description": "The name of the bucket to which the agent will send the logs to."
          },
          "iamRoleId": {
            "type": "string",
            "description": "ID of the AWS IAM role that will be used to write to the S3 bucket."
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "prefixPath": {
            "type": "string",
            "description": "S3 directory in which vector will write to in order to store the logs. An empty string denotes the root directory."
          }
        }
      },
      "PushBasedLogExportProject": {
        "type": "object",
        "properties": {
          "bucketName": {
            "type": "string",
            "description": "The name of the bucket to which the agent will send the logs to."
          },
          "createDate": {
            "type": "string",
            "description": "Date and time that this feature was enabled on.",
            "format": "date-time",
            "readOnly": true
          },
          "iamRoleId": {
            "type": "string",
            "description": "ID of the AWS IAM role that will be used to write to the S3 bucket."
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "prefixPath": {
            "type": "string",
            "description": "S3 directory in which vector will write to in order to store the logs. An empty string denotes the root directory."
          },
          "state": {
            "type": "string",
            "description": "Describes whether or not the feature is enabled and what status it is in.",
            "readOnly": true,
            "enum": [
              "UNCONFIGURED",
              "INITIATING",
              "BUCKET_VERIFIED",
              "BUCKET_VERIFICATION_FAILED",
              "ASSUME_ROLE_FAILED",
              "ACTIVE"
            ]
          }
        }
      },
      "LDAPVerifyConnectivityJobRequest": {
        "type": "object",
        "properties": {
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project associated with this Lightweight Directory Access Protocol (LDAP) over Transport Layer Security (TLS) configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "request": {
            "$ref": "#/components/schemas/LDAPVerifyConnectivityJobRequestParams"
          },
          "requestId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this request to verify an Lightweight Directory Access Protocol (LDAP) configuration.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "status": {
            "type": "string",
            "description": "Human-readable string that indicates the status of the Lightweight Directory Access Protocol (LDAP) over Transport Layer Security (TLS) configuration.",
            "readOnly": true,
            "enum": ["FAIL", "PENDING", "SUCCESS"]
          },
          "validations": {
            "type": "array",
            "description": "List that contains the validation messages related to the verification of the provided Lightweight Directory Access Protocol (LDAP) over Transport Layer Security (TLS) configuration details. The list contains a document for each test that MongoDB Cloud runs. MongoDB Cloud stops running tests after the first failure.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/LDAPVerifyConnectivityJobRequestValidation"
            }
          }
        }
      },
      "LDAPVerifyConnectivityJobRequestParams": {
        "required": ["bindPassword", "bindUsername", "hostname", "port"],
        "type": "object",
        "properties": {
          "authzQueryTemplate": {
            "type": "string",
            "description": "Lightweight Directory Access Protocol (LDAP) query template that MongoDB Cloud applies to create an LDAP query to return the LDAP groups associated with the authenticated MongoDB user. MongoDB Cloud uses this parameter only for user authorization.\n\nUse the `{USER}` placeholder in the Uniform Resource Locator (URL) to substitute the authenticated username. The query relates to the host specified with the hostname. Format this query per [RFC 4515](https://datatracker.ietf.org/doc/html/rfc4515) and [RFC 4516](https://datatracker.ietf.org/doc/html/rfc4516).",
            "writeOnly": true,
            "example": "{USER}?memberOf?base",
            "default": "{USER}?memberOf?base"
          },
          "bindPassword": {
            "type": "string",
            "description": "Password that MongoDB Cloud uses to authenticate the **bindUsername**.",
            "writeOnly": true
          },
          "bindUsername": {
            "pattern": "^(?:(?<cn>CN=(?<name>[^,]*)),)?(?:(?<path>(?:(?:CN|OU)=[^,]+,?)+),)?(?<domain>(?:DC=[^,]+,?)+)$",
            "type": "string",
            "description": "Full Distinguished Name (DN) of the Lightweight Directory Access Protocol (LDAP) user that MongoDB Cloud uses to connect to the LDAP host. LDAP distinguished names must be formatted according to RFC 2253.",
            "example": "CN=BindUser,CN=Users,DC=myldapserver,DC=mycompany,DC=com",
            "externalDocs": {
              "description": "RFC 2253",
              "url": "https://tools.ietf.org/html/2253"
            }
          },
          "caCertificate": {
            "type": "string",
            "description": "Certificate Authority (CA) certificate that MongoDB Cloud uses to verify the identity of the Lightweight Directory Access Protocol (LDAP) host. MongoDB Cloud allows self-signed certificates. To delete an assigned value, pass an empty string: `\"caCertificate\": \"\"`."
          },
          "hostname": {
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?$",
            "type": "string",
            "description": "Human-readable label that identifies the hostname or Internet Protocol (IP) address of the Lightweight Directory Access Protocol (LDAP) host. This host must have access to the internet or have a Virtual Private Cloud (VPC) peering connection to your cluster."
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "port": {
            "type": "integer",
            "description": "IANA port to which the Lightweight Directory Access Protocol (LDAP) host listens for client connections.",
            "format": "int32",
            "default": 636
          }
        },
        "description": "Request information needed to verify an Lightweight Directory Access Protocol (LDAP) over Transport Layer Security (TLS) configuration. The response does not return the **bindPassword**."
      },
      "LDAPVerifyConnectivityJobRequestValidation": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Human-readable string that indicates the result of this verification test.",
            "readOnly": true,
            "enum": ["FAIL", "OK"]
          },
          "validationType": {
            "type": "string",
            "description": "Human-readable label that identifies this verification test that MongoDB Cloud runs.",
            "readOnly": true,
            "enum": [
              "AUTHENTICATE",
              "AUTHORIZATION_ENABLED",
              "CONNECT",
              "PARSE_AUTHZ_QUERY",
              "QUERY_SERVER",
              "SERVER_SPECIFIED",
              "TEMPLATE"
            ]
          }
        },
        "description": "One test that MongoDB Cloud runs to test verification of the provided Lightweight Directory Access Protocol (LDAP) over Transport Layer Security (TLS) configuration details.",
        "readOnly": true
      },
      "DBUserTLSX509Settings": {
        "title": "Database User TLS Certificate Settings",
        "type": "object",
        "properties": {
          "cas": {
            "type": "string",
            "description": "Concatenated list of customer certificate authority (CA) certificates needed to authenticate database users. MongoDB Cloud expects this as a PEM-formatted certificate."
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        },
        "description": "Settings to configure TLS Certificates for database users."
      },
      "LDAPSecuritySettings": {
        "title": "LDAP Security Settings",
        "type": "object",
        "properties": {
          "authenticationEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether users can authenticate using an Lightweight Directory Access Protocol (LDAP) host."
          },
          "authorizationEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether users can authorize access to MongoDB Cloud resources using an Lightweight Directory Access Protocol (LDAP) host."
          },
          "authzQueryTemplate": {
            "type": "string",
            "description": "Lightweight Directory Access Protocol (LDAP) query template that MongoDB Cloud runs to obtain the LDAP groups associated with the authenticated user. MongoDB Cloud uses this parameter only for user authorization. Use the `{USER}` placeholder in the Uniform Resource Locator (URL) to substitute the authenticated username. The query relates to the host specified with the hostname. Format this query according to [RFC 4515](https://datatracker.ietf.org/doc/html/rfc4515) and [RFC 4516](https://datatracker.ietf.org/doc/html/rfc4516).",
            "example": "{USER}?memberOf?base",
            "default": "{USER}?memberOf?base"
          },
          "bindPassword": {
            "type": "string",
            "description": "Password that MongoDB Cloud uses to authenticate the **bindUsername**.",
            "writeOnly": true
          },
          "bindUsername": {
            "pattern": "^(?:(?<cn>CN=(?<name>[^,]*)),)?(?:(?<path>(?:(?:CN|OU)=[^,]+,?)+),)?(?<domain>(?:DC=[^,]+,?)+)$",
            "type": "string",
            "description": "Full Distinguished Name (DN) of the Lightweight Directory Access Protocol (LDAP) user that MongoDB Cloud uses to connect to the LDAP host. LDAP distinguished names must be formatted according to RFC 2253.",
            "example": "CN=BindUser,CN=Users,DC=myldapserver,DC=mycompany,DC=com",
            "externalDocs": {
              "description": "RFC 2253",
              "url": "https://tools.ietf.org/html/2253"
            }
          },
          "caCertificate": {
            "type": "string",
            "description": "Certificate Authority (CA) certificate that MongoDB Cloud uses to verify the identity of the Lightweight Directory Access Protocol (LDAP) host. MongoDB Cloud allows self-signed certificates. To delete an assigned value, pass an empty string: `\"caCertificate\": \"\"`."
          },
          "hostname": {
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?$",
            "type": "string",
            "description": "Human-readable label that identifies the hostname or Internet Protocol (IP) address of the Lightweight Directory Access Protocol (LDAP) host. This host must have access to the internet or have a Virtual Private Cloud (VPC) peering connection to your cluster."
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "port": {
            "type": "integer",
            "description": "Port to which the Lightweight Directory Access Protocol (LDAP) host listens for client connections.",
            "format": "int32",
            "default": 636
          },
          "userToDNMapping": {
            "type": "array",
            "description": "User-to-Distinguished Name (DN) map that MongoDB Cloud uses to transform a Lightweight Directory Access Protocol (LDAP) username into an LDAP DN.",
            "items": {
              "$ref": "#/components/schemas/UserToDNMapping"
            }
          }
        },
        "description": "Lightweight Directory Access Protocol (LDAP) over Transport Layer Security (TLS) configuration details that apply to the specified project."
      },
      "UserSecurity": {
        "type": "object",
        "properties": {
          "customerX509": {
            "$ref": "#/components/schemas/DBUserTLSX509Settings"
          },
          "ldap": {
            "$ref": "#/components/schemas/LDAPSecuritySettings"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "UserToDNMapping": {
        "title": "User to Distinguished Name Mapping",
        "required": ["match"],
        "type": "object",
        "properties": {
          "ldapQuery": {
            "type": "string",
            "description": "Lightweight Directory Access Protocol (LDAP) query template that inserts the LDAP name that the regular expression matches into an LDAP query Uniform Resource Identifier (URI). The formatting for the query must conform to [RFC 4515](https://datatracker.ietf.org/doc/html/rfc4515) and [RFC 4516](https://datatracker.ietf.org/doc/html/rfc4516)."
          },
          "match": {
            "type": "string",
            "description": "Regular expression that MongoDB Cloud uses to match against the provided Lightweight Directory Access Protocol (LDAP) username. Each parenthesis-enclosed section represents a regular expression capture group that the substitution or `ldapQuery` template uses.",
            "example": "(.*)"
          },
          "substitution": {
            "type": "string",
            "description": "Lightweight Directory Access Protocol (LDAP) Distinguished Name (DN) template that converts the LDAP username that matches regular expression in the *match* parameter into an LDAP Distinguished Name (DN).",
            "example": "CN={0},CN=Users,DC=my-atlas-ldap-server,DC=example,DC=com"
          }
        },
        "description": "User-to-Distinguished Name (DN) map that MongoDB Cloud uses to transform a Lightweight Directory Access Protocol (LDAP) username into an LDAP DN."
      },
      "GeoSharding": {
        "type": "object",
        "properties": {
          "customZoneMapping": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "List that contains comma-separated key value pairs to map zones to geographic regions. These pairs map an ISO 3166-1a2 location code, with an ISO 3166-2 subdivision code when possible, to a unique 24-hexadecimal string that identifies the custom zone.\n\nThis parameter returns an empty object if no custom zones exist.",
              "readOnly": true
            },
            "description": "List that contains comma-separated key value pairs to map zones to geographic regions. These pairs map an ISO 3166-1a2 location code, with an ISO 3166-2 subdivision code when possible, to a unique 24-hexadecimal string that identifies the custom zone.\n\nThis parameter returns an empty object if no custom zones exist.",
            "readOnly": true
          },
          "managedNamespaces": {
            "type": "array",
            "description": "List that contains a namespace for a Global Cluster. MongoDB Cloud manages this cluster.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ManagedNamespaces"
            }
          },
          "selfManagedSharding": {
            "type": "boolean",
            "description": "Boolean that controls which management mode the Global Cluster is operating under. If this parameter is true Self-Managed Sharding is enabled and users are in control of the zone sharding within the Global Cluster. If this parameter is false Atlas-Managed Sharding is enabled and Atlas is control of zone sharding within the Global Cluster.",
            "readOnly": true
          }
        }
      },
      "ManagedNamespaces": {
        "required": ["collection", "customShardKey", "db"],
        "type": "object",
        "properties": {
          "collection": {
            "type": "string",
            "description": "Human-readable label of the collection to manage for this Global Cluster."
          },
          "customShardKey": {
            "type": "string",
            "description": "Database parameter used to divide the *collection* into shards. Global clusters require a compound shard key. This compound shard key combines the location parameter and the user-selected custom key.",
            "readOnly": true
          },
          "db": {
            "type": "string",
            "description": "Human-readable label of the database to manage for this Global Cluster."
          },
          "isCustomShardKeyHashed": {
            "type": "boolean",
            "description": "Flag that indicates whether someone hashed the custom shard key for the specified collection. If you set this value to `false`, MongoDB Cloud uses ranged sharding.",
            "writeOnly": true,
            "externalDocs": {
              "description": "Hashed Shard Keys",
              "url": "https://www.mongodb.com/docs/manual/reference/method/sh.shardCollection/#hashed-shard-keys"
            },
            "default": false
          },
          "isShardKeyUnique": {
            "type": "boolean",
            "description": "Flag that indicates whether someone [hashed](https://www.mongodb.com/docs/manual/reference/method/sh.shardCollection/#hashed-shard-keys) the custom shard key. If this parameter returns `false`, this cluster uses [ranged sharding](https://www.mongodb.com/docs/manual/core/ranged-sharding/).",
            "writeOnly": true,
            "default": false
          },
          "numInitialChunks": {
            "maximum": 8192,
            "type": "integer",
            "description": "Minimum number of chunks to create initially when sharding an empty collection with a [hashed shard key](https://www.mongodb.com/docs/manual/core/hashed-sharding/).",
            "format": "int64",
            "writeOnly": true,
            "externalDocs": {
              "description": "Global Cluster Sharding",
              "url": "https://www.mongodb.com/docs/atlas/shard-global-collection/"
            }
          },
          "presplitHashedZones": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud should create and distribute initial chunks for an empty or non-existing collection. MongoDB Cloud distributes data based on the defined zones and zone ranges for the collection.",
            "writeOnly": true,
            "externalDocs": {
              "description": "Hashed Shard Key",
              "url": "https://www.mongodb.com/docs/manual/core/hashed-sharding/"
            },
            "default": false
          }
        }
      },
      "CustomZoneMappings": {
        "type": "object",
        "properties": {
          "customZoneMappings": {
            "type": "array",
            "description": "List that contains comma-separated key value pairs to map zones to geographic regions. These pairs map an ISO 3166-1a2 location code, with an ISO 3166-2 subdivision code when possible, to the human-readable label for the desired custom zone. MongoDB Cloud maps the ISO 3166-1a2 code to the nearest geographical zone by default. Include this parameter to override the default mappings.\n\nThis parameter returns an empty object if no custom zones exist.",
            "items": {
              "$ref": "#/components/schemas/ZoneMapping"
            }
          }
        }
      },
      "ZoneMapping": {
        "title": "Global Cluster Zone",
        "required": ["location", "zone"],
        "type": "object",
        "properties": {
          "location": {
            "type": "string",
            "description": "Code that represents a location that maps to a zone in your global cluster. MongoDB Cloud represents this location with a ISO 3166-2 location and subdivision codes when possible."
          },
          "zone": {
            "type": "string",
            "description": "Human-readable label that identifies the zone in your global cluster. This zone maps to a location code."
          }
        },
        "description": "Human-readable label that identifies the subset of a global cluster."
      },
      "ManagedNamespaceView": {
        "type": "object",
        "properties": {
          "collection": {
            "type": "string",
            "description": "Human-readable label of the collection to manage for this Global Cluster."
          },
          "customShardKey": {
            "type": "string",
            "description": "Database parameter used to divide the *collection* into shards. Global clusters require a compound shard key. This compound shard key combines the location parameter and the user-selected custom key."
          },
          "db": {
            "type": "string",
            "description": "Human-readable label of the database to manage for this Global Cluster."
          },
          "isCustomShardKeyHashed": {
            "type": "boolean",
            "description": "Flag that indicates whether someone hashed the custom shard key. If this parameter returns `false`, this cluster uses ranged sharding.",
            "default": false
          },
          "isShardKeyUnique": {
            "type": "boolean",
            "description": "Flag that indicates whether the underlying index enforces unique values.",
            "default": false
          },
          "numInitialChunks": {
            "type": "integer",
            "description": "Minimum number of chunks to create initially when sharding an empty collection with a hashed shard key.",
            "format": "int64"
          },
          "presplitHashedZones": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud should create and distribute initial chunks for an empty or non-existing collection. MongoDB Cloud distributes data based on the defined zones and zone ranges for the collection.",
            "default": false
          }
        }
      },
      "AWSHardwareSpec": {
        "title": "AWS Cluster Hardware Settings",
        "type": "object",
        "properties": {
          "instanceSize": {
            "title": "AWS Instance Sizes",
            "type": "string",
            "description": "Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M100",
              "M140",
              "M200",
              "M300",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "R700",
              "M40_NVME",
              "M50_NVME",
              "M60_NVME",
              "M80_NVME",
              "M200_NVME",
              "M400_NVME"
            ]
          },
          "diskIOPS": {
            "type": "integer",
            "description": "Target throughput desired for storage attached to your AWS-provisioned cluster. Change this parameter only if you:\n\n- set `\"replicationSpecs[n].regionConfigs[m].providerName\" : \"AWS\"`.\n- set `\"replicationSpecs[n].regionConfigs[m].electableSpecs.instanceSize\" : \"M30\"` or greater not including `Mxx_NVME` tiers.\n\nThe maximum input/output operations per second (IOPS) depend on the selected **.instanceSize** and **.diskSizeGB**.\nThis parameter defaults to the cluster tier's standard IOPS value.\nChanging this value impacts cluster cost.\nMongoDB Cloud enforces minimum ratios of storage capacity to system memory for given cluster tiers. This keeps cluster performance consistent with large datasets.\n\n- Instance sizes `M10` to `M40` have a ratio of disk capacity to system memory of 60:1.\n- Instance sizes greater than `M40` have a ratio of 120:1.",
            "format": "int32"
          },
          "ebsVolumeType": {
            "type": "string",
            "description": "Type of storage you want to attach to your AWS-provisioned cluster.\n\n- `STANDARD` volume types can't exceed the default input/output operations per second (IOPS) rate for the selected volume size. \n\n- `PROVISIONED` volume types must fall within the allowable IOPS range for the selected volume size. You must set this value to (`PROVISIONED`) for NVMe clusters.",
            "default": "STANDARD",
            "enum": ["STANDARD", "PROVISIONED"]
          },
          "nodeCount": {
            "type": "integer",
            "description": "Number of nodes of the given type for MongoDB Cloud to deploy to the region.",
            "format": "int32"
          }
        },
        "description": "Hardware specifications for nodes deployed in the region."
      },
      "AWSRegionConfig": {
        "title": "AWS Regional Replication Specifications",
        "type": "object",
        "description": "Details that explain how MongoDB Cloud replicates data in one region on the specified MongoDB database.",
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudRegionConfig"
          },
          {
            "type": "object",
            "properties": {
              "analyticsAutoScaling": {
                "$ref": "#/components/schemas/AdvancedAutoScalingSettings"
              },
              "analyticsSpecs": {
                "$ref": "#/components/schemas/DedicatedHardwareSpec"
              },
              "autoScaling": {
                "$ref": "#/components/schemas/AdvancedAutoScalingSettings"
              },
              "readOnlySpecs": {
                "$ref": "#/components/schemas/DedicatedHardwareSpec"
              }
            }
          }
        ]
      },
      "AdvancedAutoScalingSettings": {
        "title": "Automatic Scaling Settings",
        "type": "object",
        "properties": {
          "compute": {
            "$ref": "#/components/schemas/AdvancedComputeAutoScaling"
          },
          "diskGB": {
            "$ref": "#/components/schemas/DiskGBAutoScaling"
          }
        },
        "description": "Options that determine how this cluster handles resource scaling."
      },
      "AdvancedClusterDescription": {
        "type": "object",
        "properties": {
          "acceptDataRisksAndForceReplicaSetReconfig": {
            "type": "string",
            "description": "If reconfiguration is necessary to regain a primary due to a regional outage, submit this field alongside your topology reconfiguration to request a new regional outage resistant topology. Forced reconfigurations during an outage of the majority of electable nodes carry a risk of data loss if replicated writes (even majority committed writes) have not been replicated to the new primary node. MongoDB Atlas docs contain more information. To proceed with an operation which carries that risk, set **acceptDataRisksAndForceReplicaSetReconfig** to the current date.",
            "format": "date-time",
            "externalDocs": {
              "description": "Reconfiguring a Replica Set during a regional outage",
              "url": "https://dochub.mongodb.org/core/regional-outage-reconfigure-replica-set"
            }
          },
          "backupEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the cluster can perform backups. If set to `true`, the cluster can perform backups. You must set this value to `true` for NVMe clusters. Backup uses [Cloud Backups](https://docs.atlas.mongodb.com/backup/cloud-backup/overview/) for dedicated clusters and [Shared Cluster Backups](https://docs.atlas.mongodb.com/backup/shared-tier/overview/) for tenant clusters. If set to `false`, the cluster doesn't use backups.",
            "default": false
          },
          "biConnector": {
            "$ref": "#/components/schemas/BiConnector"
          },
          "clusterType": {
            "type": "string",
            "description": "Configuration of nodes that comprise the cluster.",
            "enum": ["REPLICASET", "SHARDED", "GEOSHARDED"]
          },
          "connectionStrings": {
            "$ref": "#/components/schemas/ClusterConnectionStrings"
          },
          "createDate": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created this cluster. This parameter expresses its value in ISO 8601 format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "diskSizeGB": {
            "maximum": 4096,
            "minimum": 10,
            "type": "number",
            "description": "Storage capacity that the host's root volume possesses expressed in gigabytes. Increase this number to add capacity. MongoDB Cloud requires this parameter if you set **replicationSpecs**. If you specify a disk size below the minimum (10 GB), this parameter defaults to the minimum disk size value. Storage charge calculations depend on whether you choose the default value or a custom value.  The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require more storage space, consider upgrading your cluster to a higher tier.",
            "format": "double"
          },
          "diskWarmingMode": {
            "type": "string",
            "description": "Disk warming mode selection.",
            "externalDocs": {
              "description": "Reduce Secondary Disk Warming Impact",
              "url": "https://docs.atlas.mongodb.com/reference/replica-set-tags/#reduce-secondary-disk-warming-impact"
            },
            "default": "FULLY_WARMED",
            "enum": ["FULLY_WARMED", "VISIBLE_EARLIER"]
          },
          "encryptionAtRestProvider": {
            "type": "string",
            "description": "Cloud service provider that manages your customer keys to provide an additional layer of encryption at rest for the cluster. To enable customer key management for encryption at rest, the cluster **replicationSpecs[n].regionConfigs[m].{type}Specs.instanceSize** setting must be `M10` or higher and `\"backupEnabled\" : false` or omitted entirely.",
            "externalDocs": {
              "description": "Encryption at Rest using Customer Key Management",
              "url": "https://www.mongodb.com/docs/atlas/security-kms-encryption/"
            },
            "enum": ["NONE", "AWS", "AZURE", "GCP"]
          },
          "globalClusterSelfManagedSharding": {
            "type": "boolean",
            "description": "Set this field to configure the Sharding Management Mode when creating a new Global Cluster.\n\nWhen set to false, the management mode is set to Atlas-Managed Sharding. This mode fully manages the sharding of your Global Cluster and is built to provide a seamless deployment experience.\n\nWhen set to true, the management mode is set to Self-Managed Sharding. This mode leaves the management of shards in your hands and is built to provide an advanced and flexible deployment experience.\n\nThis setting cannot be changed once the cluster is deployed.",
            "externalDocs": {
              "description": "Creating a Global Cluster",
              "url": "https://dochub.mongodb.org/core/global-cluster-management"
            }
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the project.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the cluster.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "labels": {
            "type": "array",
            "description": "Collection of key-value pairs between 1 to 255 characters in length that tag and categorize the cluster. The MongoDB Cloud console doesn't display your labels.\n\nCluster labels are deprecated and will be removed in a future release. We strongly recommend that you use [resource tags](https://dochub.mongodb.org/core/add-cluster-tag-atlas) instead.",
            "deprecated": true,
            "items": {
              "$ref": "#/components/schemas/ComponentLabel"
            }
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "mongoDBMajorVersion": {
            "type": "string",
            "description": "MongoDB major version of the cluster.\n\nOn creation: Choose from the available versions of MongoDB, or leave unspecified for the current recommended default in the MongoDB Cloud platform. The recommended version is a recent Long Term Support version. The default is not guaranteed to be the most recently released version throughout the entire release cycle. For versions available in a specific project, see the linked documentation or use the API endpoint for [project LTS versions endpoint](#tag/Projects/operation/getProjectLTSVersions).\n\n On update: Increase version only by 1 major version at a time. If the cluster is pinned to a MongoDB feature compatibility version exactly one major version below the current MongoDB version, the MongoDB version can be downgraded to the previous major version.",
            "externalDocs": {
              "description": "Available MongoDB Versions in Atlas",
              "url": "https://www.mongodb.com/docs/atlas/reference/faq/database/#which-versions-of-mongodb-do-service-clusters-use-"
            }
          },
          "mongoDBVersion": {
            "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)",
            "type": "string",
            "description": "Version of MongoDB that the cluster runs.",
            "readOnly": true
          },
          "name": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the advanced cluster."
          },
          "paused": {
            "type": "boolean",
            "description": "Flag that indicates whether the cluster is paused."
          },
          "pitEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the cluster uses continuous cloud backups.",
            "externalDocs": {
              "description": "Continuous Cloud Backups",
              "url": "https://docs.atlas.mongodb.com/backup/cloud-backup/overview/"
            }
          },
          "replicationSpecs": {
            "type": "array",
            "description": "List of settings that configure your cluster regions. For Global Clusters, each object in the array represents a zone where your clusters nodes deploy. For non-Global sharded clusters and replica sets, this array has one object representing where your clusters nodes deploy.",
            "items": {
              "$ref": "#/components/schemas/ReplicationSpec"
            }
          },
          "rootCertType": {
            "type": "string",
            "description": "Root Certificate Authority that MongoDB Cloud cluster uses. MongoDB Cloud supports Internet Security Research Group.",
            "default": "ISRGROOTX1",
            "enum": ["ISRGROOTX1"]
          },
          "stateName": {
            "type": "string",
            "description": "Human-readable label that indicates the current operating condition of this cluster.",
            "readOnly": true,
            "enum": ["IDLE", "CREATING", "UPDATING", "DELETING", "REPAIRING"]
          },
          "tags": {
            "type": "array",
            "description": "List that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the cluster.",
            "externalDocs": {
              "description": "Resource Tags",
              "url": "https://dochub.mongodb.org/core/add-cluster-tag-atlas"
            },
            "items": {
              "$ref": "#/components/schemas/ResourceTag"
            }
          },
          "terminationProtectionEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether termination protection is enabled on the cluster. If set to `true`, MongoDB Cloud won't delete the cluster. If set to `false`, MongoDB Cloud will delete the cluster.",
            "default": false
          },
          "versionReleaseSystem": {
            "type": "string",
            "description": "Method by which the cluster maintains the MongoDB versions. If value is `CONTINUOUS`, you must not specify **mongoDBMajorVersion**.",
            "default": "LTS",
            "enum": ["LTS", "CONTINUOUS"]
          }
        }
      },
      "AdvancedComputeAutoScaling": {
        "title": "Automatic Compute Scaling Settings",
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled instance size auto-scaling.\n\n- Set to `true` to enable instance size auto-scaling. If enabled, you must specify a value for **replicationSpecs[n].regionConfigs[m].autoScaling.compute.maxInstanceSize**.\n- Set to `false` to disable instance size automatic scaling."
          },
          "maxInstanceSize": {
            "$ref": "#/components/schemas/BaseCloudProviderInstanceSize"
          },
          "minInstanceSize": {
            "$ref": "#/components/schemas/BaseCloudProviderInstanceSize"
          },
          "scaleDownEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the instance size may scale down. MongoDB Cloud requires this parameter if `\"replicationSpecs[n].regionConfigs[m].autoScaling.compute.enabled\" : true`. If you enable this option, specify a value for **replicationSpecs[n].regionConfigs[m].autoScaling.compute.minInstanceSize**."
          }
        },
        "description": "Options that determine how this cluster handles CPU scaling."
      },
      "AzureHardwareSpec": {
        "type": "object",
        "properties": {
          "instanceSize": {
            "title": "Azure Instance Sizes",
            "type": "string",
            "description": "Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M90",
              "M200",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "M60_NVME",
              "M80_NVME",
              "M200_NVME",
              "M300_NVME",
              "M400_NVME",
              "M600_NVME"
            ]
          },
          "nodeCount": {
            "type": "integer",
            "description": "Number of nodes of the given type for MongoDB Cloud to deploy to the region.",
            "format": "int32"
          }
        }
      },
      "AzureRegionConfig": {
        "title": "Azure Regional Replication Specifications",
        "type": "object",
        "description": "Details that explain how MongoDB Cloud replicates data in one region on the specified MongoDB database.",
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudRegionConfig"
          },
          {
            "type": "object",
            "properties": {
              "analyticsAutoScaling": {
                "$ref": "#/components/schemas/AdvancedAutoScalingSettings"
              },
              "analyticsSpecs": {
                "$ref": "#/components/schemas/DedicatedHardwareSpec"
              },
              "autoScaling": {
                "$ref": "#/components/schemas/AdvancedAutoScalingSettings"
              },
              "readOnlySpecs": {
                "$ref": "#/components/schemas/DedicatedHardwareSpec"
              }
            }
          }
        ]
      },
      "CloudRegionConfig": {
        "title": "Cloud Service Provider Settings for Multi-Cloud Clusters",
        "type": "object",
        "properties": {
          "electableSpecs": {
            "$ref": "#/components/schemas/HardwareSpec"
          },
          "priority": {
            "maximum": 7,
            "minimum": 0,
            "type": "integer",
            "description": "Precedence is given to this region when a primary election occurs. If your **regionConfigs** has only **readOnlySpecs**, **analyticsSpecs**, or both, set this value to `0`. If you have multiple **regionConfigs** objects (your cluster is multi-region or multi-cloud), they must have priorities in descending order. The highest priority is `7`.\n\n**Example:** If you have three regions, their priorities would be `7`, `6`, and `5` respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be `4` and `3` respectively.",
            "format": "int32"
          },
          "providerName": {
            "type": "string",
            "description": "Cloud service provider on which MongoDB Cloud provisions the hosts. Set dedicated clusters to `AWS`, `GCP`, `AZURE` or `TENANT`.",
            "enum": ["AWS", "AZURE", "GCP", "TENANT"]
          },
          "regionName": {
            "type": "object",
            "description": "Physical location of your MongoDB cluster nodes. The region you choose can affect network latency for clients accessing your databases. The region name is only returned in the response for single-region clusters. When MongoDB Cloud deploys a dedicated cluster, it checks if a VPC or VPC connection exists for that provider and region. If not, MongoDB Cloud creates them as part of the deployment. It assigns the VPC a Classless Inter-Domain Routing (CIDR) block. To limit a new VPC peering connection to one Classless Inter-Domain Routing (CIDR) block and region, create the connection first. Deploy the cluster after the connection starts. GCP Clusters and Multi-region clusters require one VPC peering connection for each region. MongoDB nodes can use only the peering connection that resides in the same region as the nodes to communicate with the peered VPC.",
            "oneOf": [
              {
                "title": "AWS Regions",
                "type": "string",
                "description": "Physical location where MongoDB Cloud deploys your AWS-hosted MongoDB cluster nodes. The region you choose can affect network latency for clients accessing your databases. When MongoDB Cloud deploys a dedicated cluster, it checks if a VPC or VPC connection exists for that provider and region. If not, MongoDB Cloud creates them as part of the deployment. MongoDB Cloud assigns the VPC a CIDR block. To limit a new VPC peering connection to one CIDR block and region, create the connection first. Deploy the cluster after the connection starts.",
                "enum": [
                  "US_GOV_WEST_1",
                  "US_GOV_EAST_1",
                  "US_EAST_1",
                  "US_EAST_2",
                  "US_WEST_1",
                  "US_WEST_2",
                  "CA_CENTRAL_1",
                  "EU_NORTH_1",
                  "EU_WEST_1",
                  "EU_WEST_2",
                  "EU_WEST_3",
                  "EU_CENTRAL_1",
                  "EU_CENTRAL_2",
                  "AP_EAST_1",
                  "AP_NORTHEAST_1",
                  "AP_NORTHEAST_2",
                  "AP_NORTHEAST_3",
                  "AP_SOUTHEAST_1",
                  "AP_SOUTHEAST_2",
                  "AP_SOUTHEAST_3",
                  "AP_SOUTHEAST_4",
                  "AP_SOUTH_1",
                  "AP_SOUTH_2",
                  "SA_EAST_1",
                  "CN_NORTH_1",
                  "CN_NORTHWEST_1",
                  "ME_SOUTH_1",
                  "ME_CENTRAL_1",
                  "AF_SOUTH_1",
                  "EU_SOUTH_1",
                  "EU_SOUTH_2",
                  "IL_CENTRAL_1",
                  "CA_WEST_1",
                  "GLOBAL"
                ]
              },
              {
                "title": "Azure Regions",
                "type": "string",
                "description": "Microsoft Azure Regions.",
                "enum": [
                  "US_CENTRAL",
                  "US_EAST",
                  "US_EAST_2",
                  "US_NORTH_CENTRAL",
                  "US_WEST",
                  "US_SOUTH_CENTRAL",
                  "EUROPE_NORTH",
                  "EUROPE_WEST",
                  "US_WEST_CENTRAL",
                  "US_WEST_2",
                  "US_WEST_3",
                  "CANADA_EAST",
                  "CANADA_CENTRAL",
                  "BRAZIL_SOUTH",
                  "BRAZIL_SOUTHEAST",
                  "AUSTRALIA_CENTRAL",
                  "AUSTRALIA_CENTRAL_2",
                  "AUSTRALIA_EAST",
                  "AUSTRALIA_SOUTH_EAST",
                  "GERMANY_CENTRAL",
                  "GERMANY_NORTH_EAST",
                  "GERMANY_WEST_CENTRAL",
                  "GERMANY_NORTH",
                  "SWEDEN_CENTRAL",
                  "SWEDEN_SOUTH",
                  "SWITZERLAND_NORTH",
                  "SWITZERLAND_WEST",
                  "UK_SOUTH",
                  "UK_WEST",
                  "NORWAY_EAST",
                  "NORWAY_WEST",
                  "INDIA_CENTRAL",
                  "INDIA_SOUTH",
                  "INDIA_WEST",
                  "CHINA_EAST",
                  "CHINA_NORTH",
                  "ASIA_EAST",
                  "JAPAN_EAST",
                  "JAPAN_WEST",
                  "ASIA_SOUTH_EAST",
                  "KOREA_CENTRAL",
                  "KOREA_SOUTH",
                  "FRANCE_CENTRAL",
                  "FRANCE_SOUTH",
                  "SOUTH_AFRICA_NORTH",
                  "SOUTH_AFRICA_WEST",
                  "UAE_CENTRAL",
                  "UAE_NORTH",
                  "QATAR_CENTRAL"
                ]
              },
              {
                "title": "GCP Regions",
                "type": "string",
                "description": "Google Compute Regions.",
                "enum": [
                  "EASTERN_US",
                  "GOV_EASTERN_US",
                  "US_EAST_4",
                  "GOV_US_EAST_4",
                  "US_EAST_5",
                  "GOV_US_EAST_5",
                  "US_WEST_2",
                  "GOV_US_WEST_2",
                  "US_WEST_3",
                  "GOV_US_WEST_3",
                  "US_WEST_4",
                  "GOV_US_WEST_4",
                  "US_SOUTH_1",
                  "GOV_US_SOUTH_1",
                  "CENTRAL_US",
                  "GOV_CENTRAL_US",
                  "WESTERN_US",
                  "GOV_WESTERN_US",
                  "NORTH_AMERICA_NORTHEAST_1",
                  "NORTH_AMERICA_NORTHEAST_2",
                  "SOUTH_AMERICA_EAST_1",
                  "SOUTH_AMERICA_WEST_1",
                  "WESTERN_EUROPE",
                  "EUROPE_NORTH_1",
                  "EUROPE_WEST_2",
                  "EUROPE_WEST_3",
                  "EUROPE_WEST_4",
                  "EUROPE_WEST_6",
                  "EUROPE_WEST_8",
                  "EUROPE_WEST_9",
                  "EUROPE_WEST_10",
                  "EUROPE_WEST_12",
                  "EUROPE_SOUTHWEST_1",
                  "EUROPE_CENTRAL_2",
                  "MIDDLE_EAST_CENTRAL_1",
                  "MIDDLE_EAST_CENTRAL_2",
                  "MIDDLE_EAST_WEST_1",
                  "AUSTRALIA_SOUTHEAST_1",
                  "AUSTRALIA_SOUTHEAST_2",
                  "EASTERN_ASIA_PACIFIC",
                  "NORTHEASTERN_ASIA_PACIFIC",
                  "SOUTHEASTERN_ASIA_PACIFIC",
                  "ASIA_EAST_2",
                  "ASIA_NORTHEAST_2",
                  "ASIA_NORTHEAST_3",
                  "ASIA_SOUTH_1",
                  "ASIA_SOUTH_2",
                  "ASIA_SOUTHEAST_2"
                ]
              }
            ]
          }
        },
        "description": "Cloud service provider on which MongoDB Cloud provisions the hosts.",
        "discriminator": {
          "propertyName": "providerName",
          "mapping": {
            "AWS": "#/components/schemas/AWSRegionConfig",
            "AZURE": "#/components/schemas/AzureRegionConfig",
            "GCP": "#/components/schemas/GCPRegionConfig",
            "TENANT": "#/components/schemas/TenantRegionConfig"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/AWSRegionConfig"
          },
          {
            "$ref": "#/components/schemas/AzureRegionConfig"
          },
          {
            "$ref": "#/components/schemas/GCPRegionConfig"
          },
          {
            "$ref": "#/components/schemas/TenantRegionConfig"
          }
        ]
      },
      "DedicatedHardwareSpec": {
        "type": "object",
        "properties": {
          "nodeCount": {
            "type": "integer",
            "description": "Number of nodes of the given type for MongoDB Cloud to deploy to the region.",
            "format": "int32"
          }
        },
        "description": "Hardware specifications for read-only nodes in the region. Read-only nodes can never become the primary member, but can enable local reads.If you don't specify this parameter, no read-only nodes are deployed to the region.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/AWSHardwareSpec"
          },
          {
            "$ref": "#/components/schemas/AzureHardwareSpec"
          },
          {
            "$ref": "#/components/schemas/GCPHardwareSpec"
          }
        ]
      },
      "DiskGBAutoScaling": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether this cluster enables disk auto-scaling. The maximum memory allowed for the selected cluster tier and the oplog size can limit storage auto-scaling."
          }
        },
        "description": "Setting that enables disk auto-scaling."
      },
      "GCPHardwareSpec": {
        "type": "object",
        "properties": {
          "instanceSize": {
            "title": "GCP Instance Sizes",
            "type": "string",
            "description": "Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M140",
              "M200",
              "M250",
              "M300",
              "M400",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "R600"
            ]
          },
          "nodeCount": {
            "type": "integer",
            "description": "Number of nodes of the given type for MongoDB Cloud to deploy to the region.",
            "format": "int32"
          }
        }
      },
      "GCPRegionConfig": {
        "title": "GCP Regional Replication Specifications",
        "type": "object",
        "description": "Details that explain how MongoDB Cloud replicates data in one region on the specified MongoDB database.",
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudRegionConfig"
          },
          {
            "type": "object",
            "properties": {
              "analyticsAutoScaling": {
                "$ref": "#/components/schemas/AdvancedAutoScalingSettings"
              },
              "analyticsSpecs": {
                "$ref": "#/components/schemas/DedicatedHardwareSpec"
              },
              "autoScaling": {
                "$ref": "#/components/schemas/AdvancedAutoScalingSettings"
              },
              "readOnlySpecs": {
                "$ref": "#/components/schemas/DedicatedHardwareSpec"
              }
            }
          }
        ]
      },
      "HardwareSpec": {
        "type": "object",
        "description": "Hardware specifications for all electable nodes deployed in the region. Electable nodes can become the primary and can enable local reads. If you don't specify this option, MongoDB Cloud deploys no electable nodes to the region.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/AWSHardwareSpec"
          },
          {
            "$ref": "#/components/schemas/AzureHardwareSpec"
          },
          {
            "$ref": "#/components/schemas/GCPHardwareSpec"
          },
          {
            "$ref": "#/components/schemas/TenantHardwareSpec"
          }
        ]
      },
      "ReplicationSpec": {
        "title": "Replication Specifications",
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the replication object for a zone in a Multi-Cloud Cluster. If you include existing zones in the request, you must specify this parameter. If you add a new zone to an existing Multi-Cloud Cluster, you may specify this parameter. The request deletes any existing zones in the Multi-Cloud Cluster that you exclude from the request.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "numShards": {
            "minimum": 1,
            "type": "integer",
            "description": "Positive integer that specifies the number of shards to deploy in each specified zone. If you set this value to `1` and **clusterType** is `SHARDED`, MongoDB Cloud deploys a single-shard sharded cluster. Don't create a sharded cluster with a single shard for production environments. Single-shard sharded clusters don't provide the same benefits as multi-shard configurations.\n\n If you are upgrading a replica set to a sharded cluster, you cannot increase the number of shards in the same update request.  You should wait until after the cluster has completed upgrading to sharded and you have reconnected all application clients to the MongoDB router before adding additional shards. Otherwise, your data might become inconsistent once MongoDB Cloud begins distributing data across shards.",
            "format": "int32"
          },
          "regionConfigs": {
            "type": "array",
            "description": "Hardware specifications for nodes set for a given region. Each **regionConfigs** object describes the region's priority in elections and the number and type of MongoDB nodes that MongoDB Cloud deploys to the region. Each **regionConfigs** object must have either an **analyticsSpecs** object, **electableSpecs** object, or **readOnlySpecs** object. Tenant clusters only require **electableSpecs. Dedicated** clusters can specify any of these specifications, but must have at least one **electableSpecs** object within a **replicationSpec**. Every hardware specification must use the same **instanceSize**.\n\n**Example:**\n\nIf you set `\"replicationSpecs[n].regionConfigs[m].analyticsSpecs.instanceSize\" : \"M30\"`, set `\"replicationSpecs[n].regionConfigs[m].electableSpecs.instanceSize\" : `\"M30\"` if you have electable nodes and `\"replicationSpecs[n].regionConfigs[m].readOnlySpecs.instanceSize\" : `\"M30\"` if you have read-only nodes.",
            "items": {
              "$ref": "#/components/schemas/CloudRegionConfig"
            }
          },
          "zoneName": {
            "type": "string",
            "description": "Human-readable label that identifies the zone in a Global Cluster. Provide this value only if `\"clusterType\" : \"GEOSHARDED\"`."
          }
        },
        "description": "Details that explain how MongoDB Cloud replicates data on the specified MongoDB database."
      },
      "TenantHardwareSpec": {
        "type": "object",
        "properties": {
          "instanceSize": {
            "title": "Tenant Instance Sizes",
            "type": "string",
            "description": "Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.",
            "enum": ["M0", "M2", "M5"]
          }
        }
      },
      "TenantRegionConfig": {
        "title": "Tenant Regional Replication Specifications",
        "type": "object",
        "description": "Details that explain how MongoDB Cloud replicates data in one region on the specified MongoDB database.",
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudRegionConfig"
          },
          {
            "type": "object",
            "properties": {
              "backingProviderName": {
                "type": "string",
                "description": "Cloud service provider on which MongoDB Cloud provisioned the multi-tenant cluster. The resource returns this parameter when **providerName** is `TENANT` and **electableSpecs.instanceSize** is `M0`, `M2` or `M5`.",
                "enum": ["AWS", "GCP", "AZURE"]
              }
            }
          }
        ]
      },
      "AWSHardwareSpec20250101": {
        "title": "AWS Cluster Hardware Settings",
        "type": "object",
        "properties": {
          "instanceSize": {
            "title": "AWS Instance Sizes",
            "type": "string",
            "description": "Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M100",
              "M140",
              "M200",
              "M300",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "R700",
              "M40_NVME",
              "M50_NVME",
              "M60_NVME",
              "M80_NVME",
              "M200_NVME",
              "M400_NVME"
            ]
          },
          "diskIOPS": {
            "type": "integer",
            "description": "Target throughput desired for storage attached to your AWS-provisioned cluster. Change this parameter only if you:\n\n- set `\"replicationSpecs[n].regionConfigs[m].providerName\" : \"AWS\"`.\n- set `\"replicationSpecs[n].regionConfigs[m].electableSpecs.instanceSize\" : \"M30\"` or greater not including `Mxx_NVME` tiers.\n\nThe maximum input/output operations per second (IOPS) depend on the selected **.instanceSize** and **.diskSizeGB**.\nThis parameter defaults to the cluster tier's standard IOPS value.\nChanging this value impacts cluster cost.\nMongoDB Cloud enforces minimum ratios of storage capacity to system memory for given cluster tiers. This keeps cluster performance consistent with large datasets.\n\n- Instance sizes `M10` to `M40` have a ratio of disk capacity to system memory of 60:1.\n- Instance sizes greater than `M40` have a ratio of 120:1.",
            "format": "int32"
          },
          "diskSizeGB": {
            "maximum": 4096,
            "minimum": 10,
            "type": "number",
            "description": "Storage capacity that the host's root volume possesses expressed in gigabytes. Increase this number to add capacity. MongoDB Cloud requires this parameter if you set **replicationSpecs**. If you specify a disk size below the minimum (10 GB), this parameter defaults to the minimum disk size value. Storage charge calculations depend on whether you choose the default value or a custom value.  The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require more storage space, consider upgrading your cluster to a higher tier.",
            "format": "double"
          },
          "ebsVolumeType": {
            "type": "string",
            "description": "Type of storage you want to attach to your AWS-provisioned cluster.\n\n- `STANDARD` volume types can't exceed the default input/output operations per second (IOPS) rate for the selected volume size. \n\n- `PROVISIONED` volume types must fall within the allowable IOPS range for the selected volume size. You must set this value to (`PROVISIONED`) for NVMe clusters.",
            "default": "STANDARD",
            "enum": ["STANDARD", "PROVISIONED"]
          },
          "nodeCount": {
            "type": "integer",
            "description": "Number of nodes of the given type for MongoDB Cloud to deploy to the region.",
            "format": "int32"
          }
        },
        "description": "Hardware specifications for nodes deployed in the region."
      },
      "AWSRegionConfig20250101": {
        "title": "AWS Regional Replication Specifications",
        "type": "object",
        "description": "Details that explain how MongoDB Cloud replicates data in one region on the specified MongoDB database.",
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudRegionConfig20250101"
          },
          {
            "type": "object",
            "properties": {
              "analyticsAutoScaling": {
                "$ref": "#/components/schemas/AdvancedAutoScalingSettings"
              },
              "analyticsSpecs": {
                "$ref": "#/components/schemas/DedicatedHardwareSpec20250101"
              },
              "autoScaling": {
                "$ref": "#/components/schemas/AdvancedAutoScalingSettings"
              },
              "readOnlySpecs": {
                "$ref": "#/components/schemas/DedicatedHardwareSpec20250101"
              }
            }
          }
        ]
      },
      "AzureRegionConfig20250101": {
        "title": "Azure Regional Replication Specifications",
        "type": "object",
        "description": "Details that explain how MongoDB Cloud replicates data in one region on the specified MongoDB database.",
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudRegionConfig20250101"
          },
          {
            "type": "object",
            "properties": {
              "analyticsAutoScaling": {
                "$ref": "#/components/schemas/AdvancedAutoScalingSettings"
              },
              "analyticsSpecs": {
                "$ref": "#/components/schemas/DedicatedHardwareSpec20250101"
              },
              "autoScaling": {
                "$ref": "#/components/schemas/AdvancedAutoScalingSettings"
              },
              "readOnlySpecs": {
                "$ref": "#/components/schemas/DedicatedHardwareSpec20250101"
              }
            }
          }
        ]
      },
      "CloudRegionConfig20250101": {
        "title": "Cloud Service Provider Settings",
        "type": "object",
        "properties": {
          "electableSpecs": {
            "$ref": "#/components/schemas/HardwareSpec20250101"
          },
          "priority": {
            "maximum": 7,
            "minimum": 0,
            "type": "integer",
            "description": "Precedence is given to this region when a primary election occurs. If your **regionConfigs** has only **readOnlySpecs**, **analyticsSpecs**, or both, set this value to `0`. If you have multiple **regionConfigs** objects (your cluster is multi-region or multi-cloud), they must have priorities in descending order. The highest priority is `7`.\n\n**Example:** If you have three regions, their priorities would be `7`, `6`, and `5` respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be `4` and `3` respectively.",
            "format": "int32"
          },
          "providerName": {
            "type": "string",
            "description": "Cloud service provider on which MongoDB Cloud provisions the hosts. Set dedicated clusters to `AWS`, `GCP`, `AZURE` or `TENANT`.",
            "enum": ["AWS", "AZURE", "GCP", "TENANT"]
          },
          "regionName": {
            "type": "object",
            "description": "Physical location of your MongoDB cluster nodes. The region you choose can affect network latency for clients accessing your databases. The region name is only returned in the response for single-region clusters. When MongoDB Cloud deploys a dedicated cluster, it checks if a VPC or VPC connection exists for that provider and region. If not, MongoDB Cloud creates them as part of the deployment. It assigns the VPC a Classless Inter-Domain Routing (CIDR) block. To limit a new VPC peering connection to one Classless Inter-Domain Routing (CIDR) block and region, create the connection first. Deploy the cluster after the connection starts. GCP Clusters and Multi-region clusters require one VPC peering connection for each region. MongoDB nodes can use only the peering connection that resides in the same region as the nodes to communicate with the peered VPC.",
            "oneOf": [
              {
                "title": "AWS Regions",
                "type": "string",
                "description": "Physical location where MongoDB Cloud deploys your AWS-hosted MongoDB cluster nodes. The region you choose can affect network latency for clients accessing your databases. When MongoDB Cloud deploys a dedicated cluster, it checks if a VPC or VPC connection exists for that provider and region. If not, MongoDB Cloud creates them as part of the deployment. MongoDB Cloud assigns the VPC a CIDR block. To limit a new VPC peering connection to one CIDR block and region, create the connection first. Deploy the cluster after the connection starts.",
                "enum": [
                  "US_GOV_WEST_1",
                  "US_GOV_EAST_1",
                  "US_EAST_1",
                  "US_EAST_2",
                  "US_WEST_1",
                  "US_WEST_2",
                  "CA_CENTRAL_1",
                  "EU_NORTH_1",
                  "EU_WEST_1",
                  "EU_WEST_2",
                  "EU_WEST_3",
                  "EU_CENTRAL_1",
                  "EU_CENTRAL_2",
                  "AP_EAST_1",
                  "AP_NORTHEAST_1",
                  "AP_NORTHEAST_2",
                  "AP_NORTHEAST_3",
                  "AP_SOUTHEAST_1",
                  "AP_SOUTHEAST_2",
                  "AP_SOUTHEAST_3",
                  "AP_SOUTHEAST_4",
                  "AP_SOUTH_1",
                  "AP_SOUTH_2",
                  "SA_EAST_1",
                  "CN_NORTH_1",
                  "CN_NORTHWEST_1",
                  "ME_SOUTH_1",
                  "ME_CENTRAL_1",
                  "AF_SOUTH_1",
                  "EU_SOUTH_1",
                  "EU_SOUTH_2",
                  "IL_CENTRAL_1",
                  "CA_WEST_1",
                  "GLOBAL"
                ]
              },
              {
                "title": "Azure Regions",
                "type": "string",
                "description": "Microsoft Azure Regions.",
                "enum": [
                  "US_CENTRAL",
                  "US_EAST",
                  "US_EAST_2",
                  "US_NORTH_CENTRAL",
                  "US_WEST",
                  "US_SOUTH_CENTRAL",
                  "EUROPE_NORTH",
                  "EUROPE_WEST",
                  "US_WEST_CENTRAL",
                  "US_WEST_2",
                  "US_WEST_3",
                  "CANADA_EAST",
                  "CANADA_CENTRAL",
                  "BRAZIL_SOUTH",
                  "BRAZIL_SOUTHEAST",
                  "AUSTRALIA_CENTRAL",
                  "AUSTRALIA_CENTRAL_2",
                  "AUSTRALIA_EAST",
                  "AUSTRALIA_SOUTH_EAST",
                  "GERMANY_CENTRAL",
                  "GERMANY_NORTH_EAST",
                  "GERMANY_WEST_CENTRAL",
                  "GERMANY_NORTH",
                  "SWEDEN_CENTRAL",
                  "SWEDEN_SOUTH",
                  "SWITZERLAND_NORTH",
                  "SWITZERLAND_WEST",
                  "UK_SOUTH",
                  "UK_WEST",
                  "NORWAY_EAST",
                  "NORWAY_WEST",
                  "INDIA_CENTRAL",
                  "INDIA_SOUTH",
                  "INDIA_WEST",
                  "CHINA_EAST",
                  "CHINA_NORTH",
                  "ASIA_EAST",
                  "JAPAN_EAST",
                  "JAPAN_WEST",
                  "ASIA_SOUTH_EAST",
                  "KOREA_CENTRAL",
                  "KOREA_SOUTH",
                  "FRANCE_CENTRAL",
                  "FRANCE_SOUTH",
                  "SOUTH_AFRICA_NORTH",
                  "SOUTH_AFRICA_WEST",
                  "UAE_CENTRAL",
                  "UAE_NORTH",
                  "QATAR_CENTRAL"
                ]
              },
              {
                "title": "GCP Regions",
                "type": "string",
                "description": "Google Compute Regions.",
                "enum": [
                  "EASTERN_US",
                  "GOV_EASTERN_US",
                  "US_EAST_4",
                  "GOV_US_EAST_4",
                  "US_EAST_5",
                  "GOV_US_EAST_5",
                  "US_WEST_2",
                  "GOV_US_WEST_2",
                  "US_WEST_3",
                  "GOV_US_WEST_3",
                  "US_WEST_4",
                  "GOV_US_WEST_4",
                  "US_SOUTH_1",
                  "GOV_US_SOUTH_1",
                  "CENTRAL_US",
                  "GOV_CENTRAL_US",
                  "WESTERN_US",
                  "GOV_WESTERN_US",
                  "NORTH_AMERICA_NORTHEAST_1",
                  "NORTH_AMERICA_NORTHEAST_2",
                  "SOUTH_AMERICA_EAST_1",
                  "SOUTH_AMERICA_WEST_1",
                  "WESTERN_EUROPE",
                  "EUROPE_NORTH_1",
                  "EUROPE_WEST_2",
                  "EUROPE_WEST_3",
                  "EUROPE_WEST_4",
                  "EUROPE_WEST_6",
                  "EUROPE_WEST_8",
                  "EUROPE_WEST_9",
                  "EUROPE_WEST_10",
                  "EUROPE_WEST_12",
                  "EUROPE_SOUTHWEST_1",
                  "EUROPE_CENTRAL_2",
                  "MIDDLE_EAST_CENTRAL_1",
                  "MIDDLE_EAST_CENTRAL_2",
                  "MIDDLE_EAST_WEST_1",
                  "AUSTRALIA_SOUTHEAST_1",
                  "AUSTRALIA_SOUTHEAST_2",
                  "EASTERN_ASIA_PACIFIC",
                  "NORTHEASTERN_ASIA_PACIFIC",
                  "SOUTHEASTERN_ASIA_PACIFIC",
                  "ASIA_EAST_2",
                  "ASIA_NORTHEAST_2",
                  "ASIA_NORTHEAST_3",
                  "ASIA_SOUTH_1",
                  "ASIA_SOUTH_2",
                  "ASIA_SOUTHEAST_2"
                ]
              }
            ]
          }
        },
        "description": "Cloud service provider on which MongoDB Cloud provisions the hosts.",
        "discriminator": {
          "propertyName": "providerName",
          "mapping": {
            "AWS": "#/components/schemas/AWSRegionConfig20250101",
            "AZURE": "#/components/schemas/AzureRegionConfig20250101",
            "GCP": "#/components/schemas/GCPRegionConfig20250101",
            "TENANT": "#/components/schemas/TenantRegionConfig20250101"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/AWSRegionConfig20250101"
          },
          {
            "$ref": "#/components/schemas/AzureRegionConfig20250101"
          },
          {
            "$ref": "#/components/schemas/GCPRegionConfig20250101"
          },
          {
            "$ref": "#/components/schemas/TenantRegionConfig20250101"
          }
        ]
      },
      "ClusterDescription20250101": {
        "type": "object",
        "properties": {
          "acceptDataRisksAndForceReplicaSetReconfig": {
            "type": "string",
            "description": "If reconfiguration is necessary to regain a primary due to a regional outage, submit this field alongside your topology reconfiguration to request a new regional outage resistant topology. Forced reconfigurations during an outage of the majority of electable nodes carry a risk of data loss if replicated writes (even majority committed writes) have not been replicated to the new primary node. MongoDB Atlas docs contain more information. To proceed with an operation which carries that risk, set **acceptDataRisksAndForceReplicaSetReconfig** to the current date.",
            "format": "date-time",
            "externalDocs": {
              "description": "Reconfiguring a Replica Set during a regional outage",
              "url": "https://dochub.mongodb.org/core/regional-outage-reconfigure-replica-set"
            }
          },
          "backupEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the cluster can perform backups. If set to `true`, the cluster can perform backups. You must set this value to `true` for NVMe clusters. Backup uses [Cloud Backups](https://docs.atlas.mongodb.com/backup/cloud-backup/overview/) for dedicated clusters and [Shared Cluster Backups](https://docs.atlas.mongodb.com/backup/shared-tier/overview/) for tenant clusters. If set to `false`, the cluster doesn't use backups.",
            "default": false
          },
          "biConnector": {
            "$ref": "#/components/schemas/BiConnector"
          },
          "clusterType": {
            "type": "string",
            "description": "Configuration of nodes that comprise the cluster.",
            "enum": ["REPLICASET", "SHARDED", "GEOSHARDED"]
          },
          "connectionStrings": {
            "$ref": "#/components/schemas/ClusterConnectionStrings"
          },
          "createDate": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created this cluster. This parameter expresses its value in ISO 8601 format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "diskWarmingMode": {
            "type": "string",
            "description": "Disk warming mode selection.",
            "externalDocs": {
              "description": "Reduce Secondary Disk Warming Impact",
              "url": "https://docs.atlas.mongodb.com/reference/replica-set-tags/#reduce-secondary-disk-warming-impact"
            },
            "default": "FULLY_WARMED",
            "enum": ["FULLY_WARMED", "VISIBLE_EARLIER"]
          },
          "encryptionAtRestProvider": {
            "type": "string",
            "description": "Cloud service provider that manages your customer keys to provide an additional layer of encryption at rest for the cluster. To enable customer key management for encryption at rest, the cluster **replicationSpecs[n].regionConfigs[m].{type}Specs.instanceSize** setting must be `M10` or higher and `\"backupEnabled\" : false` or omitted entirely.",
            "externalDocs": {
              "description": "Encryption at Rest using Customer Key Management",
              "url": "https://www.mongodb.com/docs/atlas/security-kms-encryption/"
            },
            "enum": ["NONE", "AWS", "AZURE", "GCP"]
          },
          "globalClusterSelfManagedSharding": {
            "type": "boolean",
            "description": "Set this field to configure the Sharding Management Mode when creating a new Global Cluster.\n\nWhen set to false, the management mode is set to Atlas-Managed Sharding. This mode fully manages the sharding of your Global Cluster and is built to provide a seamless deployment experience.\n\nWhen set to true, the management mode is set to Self-Managed Sharding. This mode leaves the management of shards in your hands and is built to provide an advanced and flexible deployment experience.\n\nThis setting cannot be changed once the cluster is deployed.",
            "externalDocs": {
              "description": "Creating a Global Cluster",
              "url": "https://dochub.mongodb.org/core/global-cluster-management"
            }
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the project.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the cluster.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "labels": {
            "type": "array",
            "description": "Collection of key-value pairs between 1 to 255 characters in length that tag and categorize the cluster. The MongoDB Cloud console doesn't display your labels.\n\nCluster labels are deprecated and will be removed in a future release. We strongly recommend that you use [resource tags](https://dochub.mongodb.org/core/add-cluster-tag-atlas) instead.",
            "deprecated": true,
            "items": {
              "$ref": "#/components/schemas/ComponentLabel"
            }
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "mongoDBMajorVersion": {
            "type": "string",
            "description": "MongoDB major version of the cluster.\n\nOn creation: Choose from the available versions of MongoDB, or leave unspecified for the current recommended default in the MongoDB Cloud platform. The recommended version is a recent Long Term Support version. The default is not guaranteed to be the most recently released version throughout the entire release cycle. For versions available in a specific project, see the linked documentation or use the API endpoint for [project LTS versions endpoint](#tag/Projects/operation/getProjectLTSVersions).\n\n On update: Increase version only by 1 major version at a time. If the cluster is pinned to a MongoDB feature compatibility version exactly one major version below the current MongoDB version, the MongoDB version can be downgraded to the previous major version.",
            "externalDocs": {
              "description": "Available MongoDB Versions in Atlas",
              "url": "https://www.mongodb.com/docs/atlas/reference/faq/database/#which-versions-of-mongodb-do-service-clusters-use-"
            }
          },
          "mongoDBVersion": {
            "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)",
            "type": "string",
            "description": "Version of MongoDB that the cluster runs.",
            "readOnly": true
          },
          "name": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the cluster."
          },
          "paused": {
            "type": "boolean",
            "description": "Flag that indicates whether the cluster is paused."
          },
          "pitEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the cluster uses continuous cloud backups.",
            "externalDocs": {
              "description": "Continuous Cloud Backups",
              "url": "https://docs.atlas.mongodb.com/backup/cloud-backup/overview/"
            }
          },
          "replicationSpecs": {
            "type": "array",
            "description": "List of settings that configure your cluster regions. For Global Clusters, each object in the array represents a zone where your clusters nodes deploy. For non-Global sharded clusters and replica sets, this array has one object representing where your clusters nodes deploy.",
            "items": {
              "$ref": "#/components/schemas/ReplicationSpec20250101"
            }
          },
          "rootCertType": {
            "type": "string",
            "description": "Root Certificate Authority that MongoDB Cloud cluster uses. MongoDB Cloud supports Internet Security Research Group.",
            "default": "ISRGROOTX1",
            "enum": ["ISRGROOTX1"]
          },
          "stateName": {
            "type": "string",
            "description": "Human-readable label that indicates the current operating condition of this cluster.",
            "readOnly": true,
            "enum": ["IDLE", "CREATING", "UPDATING", "DELETING", "REPAIRING"]
          },
          "tags": {
            "type": "array",
            "description": "List that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the cluster.",
            "externalDocs": {
              "description": "Resource Tags",
              "url": "https://dochub.mongodb.org/core/add-cluster-tag-atlas"
            },
            "items": {
              "$ref": "#/components/schemas/ResourceTag"
            }
          },
          "terminationProtectionEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether termination protection is enabled on the cluster. If set to `true`, MongoDB Cloud won't delete the cluster. If set to `false`, MongoDB Cloud will delete the cluster.",
            "default": false
          },
          "versionReleaseSystem": {
            "type": "string",
            "description": "Method by which the cluster maintains the MongoDB versions. If value is `CONTINUOUS`, you must not specify **mongoDBMajorVersion**.",
            "default": "LTS",
            "enum": ["LTS", "CONTINUOUS"]
          }
        }
      },
      "DedicatedHardwareSpec20250101": {
        "type": "object",
        "properties": {
          "diskSizeGB": {
            "maximum": 4096,
            "minimum": 10,
            "type": "number",
            "description": "Storage capacity that the host's root volume possesses expressed in gigabytes. Increase this number to add capacity. MongoDB Cloud requires this parameter if you set **replicationSpecs**. If you specify a disk size below the minimum (10 GB), this parameter defaults to the minimum disk size value. Storage charge calculations depend on whether you choose the default value or a custom value.  The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require more storage space, consider upgrading your cluster to a higher tier.",
            "format": "double"
          },
          "nodeCount": {
            "type": "integer",
            "description": "Number of nodes of the given type for MongoDB Cloud to deploy to the region.",
            "format": "int32"
          }
        },
        "description": "Hardware specifications for read-only nodes in the region. Read-only nodes can never become the primary member, but can enable local reads. If you don't specify this parameter, no read-only nodes are deployed to the region.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/AWSHardwareSpec20250101"
          },
          {
            "$ref": "#/components/schemas/AzureHardwareSpec"
          },
          {
            "$ref": "#/components/schemas/GCPHardwareSpec"
          }
        ]
      },
      "GCPHardwareSpec20250101": {
        "type": "object",
        "properties": {
          "instanceSize": {
            "title": "GCP Instance Sizes",
            "type": "string",
            "description": "Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in the region.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M140",
              "M200",
              "M250",
              "M300",
              "M400",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "R600"
            ]
          },
          "diskSizeGB": {
            "maximum": 4096,
            "minimum": 10,
            "type": "number",
            "description": "Storage capacity that the host's root volume possesses expressed in gigabytes. Increase this number to add capacity. MongoDB Cloud requires this parameter if you set **replicationSpecs**. If you specify a disk size below the minimum (10 GB), this parameter defaults to the minimum disk size value. Storage charge calculations depend on whether you choose the default value or a custom value.  The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require more storage space, consider upgrading your cluster to a higher tier.",
            "format": "double"
          },
          "nodeCount": {
            "type": "integer",
            "description": "Number of nodes of the given type for MongoDB Cloud to deploy to the region.",
            "format": "int32"
          }
        }
      },
      "GCPRegionConfig20250101": {
        "title": "GCP Regional Replication Specifications",
        "type": "object",
        "description": "Details that explain how MongoDB Cloud replicates data in one region on the specified MongoDB database.",
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudRegionConfig20250101"
          },
          {
            "type": "object",
            "properties": {
              "analyticsAutoScaling": {
                "$ref": "#/components/schemas/AdvancedAutoScalingSettings"
              },
              "analyticsSpecs": {
                "$ref": "#/components/schemas/DedicatedHardwareSpec20250101"
              },
              "autoScaling": {
                "$ref": "#/components/schemas/AdvancedAutoScalingSettings"
              },
              "readOnlySpecs": {
                "$ref": "#/components/schemas/DedicatedHardwareSpec20250101"
              }
            }
          }
        ]
      },
      "HardwareSpec20250101": {
        "type": "object",
        "properties": {
          "diskSizeGB": {
            "maximum": 4096,
            "minimum": 10,
            "type": "number",
            "description": "Storage capacity that the host's root volume possesses expressed in gigabytes. Increase this number to add capacity. MongoDB Cloud requires this parameter if you set **replicationSpecs**. If you specify a disk size below the minimum (10 GB), this parameter defaults to the minimum disk size value. Storage charge calculations depend on whether you choose the default value or a custom value.  The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require more storage space, consider upgrading your cluster to a higher tier.",
            "format": "double"
          }
        },
        "description": "Hardware specifications for all electable nodes deployed in the region. Electable nodes can become the primary and can enable local reads. If you don't specify this option, MongoDB Cloud deploys no electable nodes to the region.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/AWSHardwareSpec20250101"
          },
          {
            "$ref": "#/components/schemas/AzureHardwareSpec"
          },
          {
            "$ref": "#/components/schemas/GCPHardwareSpec20250101"
          },
          {
            "$ref": "#/components/schemas/TenantHardwareSpec20250101"
          }
        ]
      },
      "ReplicationSpec20250101": {
        "title": "Replication Specifications",
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the replication object for a shard in a Cluster. If you include existing shard replication configurations in the request, you must specify this parameter. If you add a new shard to an existing Cluster, you may specify this parameter. The request deletes any existing shards  in the Cluster that you exclude from the request.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "regionConfigs": {
            "type": "array",
            "description": "Hardware specifications for nodes set for a given region. Each **regionConfigs** object describes the region's priority in elections and the number and type of MongoDB nodes that MongoDB Cloud deploys to the region. Each **regionConfigs** object must have either an **analyticsSpecs** object, **electableSpecs** object, or **readOnlySpecs** object. Tenant clusters only require **electableSpecs. Dedicated** clusters can specify any of these specifications, but must have at least one **electableSpecs** object within a **replicationSpec**.\n\n**Example:**\n\nIf you set `\"replicationSpecs[n].regionConfigs[m].analyticsSpecs.instanceSize\" : \"M30\"`, set `\"replicationSpecs[n].regionConfigs[m].electableSpecs.instanceSize\" : `\"M30\"` if you have electable nodes and `\"replicationSpecs[n].regionConfigs[m].readOnlySpecs.instanceSize\" : `\"M30\"` if you have read-only nodes.",
            "items": {
              "$ref": "#/components/schemas/CloudRegionConfig20250101"
            }
          },
          "zoneId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the zone in a Global Cluster. Provide this value only if `\"clusterType\" : \"GEOSHARDED\"`.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "zoneName": {
            "type": "string",
            "description": "Human-readable label that describes the zone in a Global Cluster. Provide this value only if `\"clusterType\" : \"GEOSHARDED\"`."
          }
        },
        "description": "Details that explain how MongoDB Cloud replicates data on the specified MongoDB database."
      },
      "TenantHardwareSpec20250101": {
        "type": "object",
        "properties": {
          "instanceSize": {
            "title": "Tenant Instance Sizes",
            "type": "string",
            "description": "Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in the region.",
            "enum": ["M0", "M2", "M5"]
          },
          "diskSizeGB": {
            "maximum": 4096,
            "minimum": 10,
            "type": "number",
            "description": "Storage capacity that the host's root volume possesses expressed in gigabytes. Increase this number to add capacity. MongoDB Cloud requires this parameter if you set **replicationSpecs**. If you specify a disk size below the minimum (10 GB), this parameter defaults to the minimum disk size value. Storage charge calculations depend on whether you choose the default value or a custom value.  The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require more storage space, consider upgrading your cluster to a higher tier.",
            "format": "double"
          }
        }
      },
      "TenantRegionConfig20250101": {
        "title": "Tenant Regional Replication Specifications",
        "type": "object",
        "description": "Details that explain how MongoDB Cloud replicates data in one region on the specified MongoDB database.",
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudRegionConfig20250101"
          },
          {
            "type": "object",
            "properties": {
              "backingProviderName": {
                "type": "string",
                "description": "Cloud service provider on which MongoDB Cloud provisioned the multi-tenant cluster. The resource returns this parameter when **providerName** is `TENANT` and **electableSpecs.instanceSize** is `M0`, `M2` or `M5`.",
                "enum": ["AWS", "GCP", "AZURE"]
              }
            }
          }
        ]
      },
      "PaginatedLegacyClusterView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/LegacyAtlasCluster"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "PaginatedAdvancedClusterDescriptionView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/AdvancedClusterDescription"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "PaginatedClusterDescription20250101": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ClusterDescription20250101"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "ClusterDescriptionProcessArgs": {
        "type": "object",
        "properties": {
          "chunkMigrationConcurrency": {
            "type": "integer",
            "description": "Number of threads on the source shard and the receiving shard for chunk migration. The number of threads should not exceed the half the total number of CPU cores in the sharded cluster.",
            "format": "int32",
            "externalDocs": {
              "description": "This option corresponds to the `chunkMigrationConcurrency` `mongod` configuration file option.",
              "url": "https://www.mongodb.com/docs/manual/reference/parameters/#mongodb-parameter-param.chunkMigrationConcurrency"
            }
          },
          "defaultReadConcern": {
            "type": "string",
            "description": "Default level of acknowledgment requested from MongoDB for read operations set for this cluster.\n\nMongoDB 4.4 clusters default to `available`. MongoDB 5.0 and later clusters default to `local`.",
            "externalDocs": {
              "description": "This option corresponds to the global default read concern.",
              "url": "https://docs.mongodb.com/manual/reference/read-concern/"
            },
            "default": "available",
            "enum": ["local", "available"]
          },
          "defaultWriteConcern": {
            "type": "string",
            "description": "Default level of acknowledgment requested from MongoDB for write operations when none is specified by the driver.",
            "externalDocs": {
              "description": "This option corresponds to the the implicit default write concern.",
              "url": "https://docs.mongodb.com/manual/reference/write-concern/"
            }
          },
          "failIndexKeyTooLong": {
            "type": "boolean",
            "description": "Flag that indicates whether you can insert or update documents where all indexed entries don't exceed 1024 bytes. If you set this to false, [mongod](https://docs.mongodb.com/upcoming/reference/program/mongod/#mongodb-binary-bin.mongod) writes documents that exceed this limit but doesn't index them. This parameter has been removed as of [MongoDB 4.4](https://www.mongodb.com/docs/manual/reference/parameters/#mongodb-parameter-param.failIndexKeyTooLong).",
            "externalDocs": {
              "description": "This option corresponds to the `failIndexKeyTooLong` `mongod` configuration file option.",
              "url": "https://docs.mongodb.com/upcoming/reference/parameters/#mongodb-parameter-param.failIndexKeyTooLong"
            },
            "deprecated": true,
            "default": true
          },
          "javascriptEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the cluster allows execution of operations that perform server-side executions of JavaScript.",
            "externalDocs": {
              "description": "This option corresponds to modifying the `security.javascriptEnabled` configuration file option for each `mongod` and `mongos` in the cluster.",
              "url": "https://docs.mongodb.com/upcoming/reference/configuration-options/#mongodb-setting-security.javascriptEnabled"
            }
          },
          "minimumEnabledTlsProtocol": {
            "type": "string",
            "description": "Minimum Transport Layer Security (TLS) version that the cluster accepts for incoming connections. Clusters using TLS 1.0 or 1.1 should consider setting TLS 1.2 as the minimum TLS protocol version.",
            "externalDocs": {
              "description": "This option corresponds to the `net.ssl.disabledProtocols` `mongod` configuration file option.",
              "url": "https://docs.mongodb.com/upcoming/reference/configuration-options/#mongodb-setting-net.ssl.disabledProtocols"
            },
            "enum": ["TLS1_0", "TLS1_1", "TLS1_2"]
          },
          "noTableScan": {
            "type": "boolean",
            "description": "Flag that indicates whether the cluster disables executing any query that requires a collection scan to return results.",
            "externalDocs": {
              "description": "This option corresponds to the `notablescan` `mongod` configuration file option.",
              "url": "https://docs.mongodb.com/upcoming/reference/parameters/#mongodb-parameter-param.notablescan"
            }
          },
          "oplogMinRetentionHours": {
            "type": "number",
            "description": "Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.",
            "format": "double",
            "nullable": true,
            "externalDocs": {
              "description": "This option corresponds to the `storage.oplogMinRetentionHours` `mongod` configuration file option.",
              "url": "https://docs.mongodb.com/upcoming/reference/configuration-options/#mongodb-setting-storage.oplogMinRetentionHours"
            }
          },
          "oplogSizeMB": {
            "type": "integer",
            "description": "Storage limit of cluster's oplog expressed in megabytes. A value of null indicates that the cluster uses the default oplog size that MongoDB Cloud calculates.",
            "format": "int32",
            "nullable": true,
            "externalDocs": {
              "description": "This option corresponds to the `replication.oplogSizeMB` `mongod` configuration file option.",
              "url": "https://docs.mongodb.com/upcoming/reference/configuration-options/#mongodb-setting-replication.oplogSizeMB"
            }
          },
          "queryStatsLogVerbosity": {
            "type": "integer",
            "description": "May be set to 1 (disabled) or 3 (enabled). When set to 3, Atlas will include redacted and anonymized $queryStats output in MongoDB logs. $queryStats output does not contain literals or field values. Enabling this setting might impact the performance of your cluster.",
            "format": "int32",
            "externalDocs": {
              "description": "This option corresponds to the queryStats component for the logComponentVerbosity server parameter.",
              "url": "https://www.mongodb.com/docs/manual/reference/parameters/#mongodb-parameter-param.logComponentVerbosity"
            }
          },
          "sampleRefreshIntervalBIConnector": {
            "minimum": 0,
            "type": "integer",
            "description": "Interval in seconds at which the mongosqld process re-samples data to create its relational schema.",
            "format": "int32",
            "externalDocs": {
              "description": "This option corresponds to the `sampleRefreshIntervalSecs` `mongosqld` option.",
              "url": "https://docs.mongodb.com/bi-connector/current/reference/mongosqld/#std-option-mongosqld.--schemaRefreshIntervalSecs"
            },
            "default": 0
          },
          "sampleSizeBIConnector": {
            "minimum": 0,
            "type": "integer",
            "description": "Number of documents per database to sample when gathering schema information.",
            "format": "int32",
            "externalDocs": {
              "description": "This option corresponds to the `sampleSize` `mongosqld` option.",
              "url": "https://docs.mongodb.com/bi-connector/current/reference/mongosqld/#std-option-mongosqld.--sampleSize"
            }
          },
          "transactionLifetimeLimitSeconds": {
            "minimum": 1,
            "type": "integer",
            "description": "Lifetime, in seconds, of multi-document transactions. Atlas considers the transactions that exceed this limit as expired and so aborts them through a periodic cleanup process.",
            "format": "int64",
            "externalDocs": {
              "description": "This option corresponds to the `transactionLifetimeLimitSeconds` `mongod` configuration file option.",
              "url": "https://www.mongodb.com/docs/upcoming/reference/parameters/#mongodb-parameter-param.transactionLifetimeLimitSeconds"
            }
          }
        }
      },
      "ClusterDescriptionProcessArgs20250101": {
        "type": "object",
        "properties": {
          "chunkMigrationConcurrency": {
            "type": "integer",
            "description": "Number of threads on the source shard and the receiving shard for chunk migration. The number of threads should not exceed the half the total number of CPU cores in the sharded cluster.",
            "format": "int32",
            "externalDocs": {
              "description": "This option corresponds to the `chunkMigrationConcurrency` `mongod` configuration file option.",
              "url": "https://www.mongodb.com/docs/manual/reference/parameters/#mongodb-parameter-param.chunkMigrationConcurrency"
            }
          },
          "defaultWriteConcern": {
            "type": "string",
            "description": "Default level of acknowledgment requested from MongoDB for write operations when none is specified by the driver.",
            "externalDocs": {
              "description": "This option corresponds to the the implicit default write concern.",
              "url": "https://docs.mongodb.com/manual/reference/write-concern/"
            }
          },
          "javascriptEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the cluster allows execution of operations that perform server-side executions of JavaScript.",
            "externalDocs": {
              "description": "This option corresponds to modifying the `security.javascriptEnabled` configuration file option for each `mongod` and `mongos` in the cluster.",
              "url": "https://docs.mongodb.com/upcoming/reference/configuration-options/#mongodb-setting-security.javascriptEnabled"
            }
          },
          "minimumEnabledTlsProtocol": {
            "type": "string",
            "description": "Minimum Transport Layer Security (TLS) version that the cluster accepts for incoming connections. Clusters using TLS 1.0 or 1.1 should consider setting TLS 1.2 as the minimum TLS protocol version.",
            "externalDocs": {
              "description": "This option corresponds to the `net.ssl.disabledProtocols` `mongod` configuration file option.",
              "url": "https://docs.mongodb.com/upcoming/reference/configuration-options/#mongodb-setting-net.ssl.disabledProtocols"
            },
            "enum": ["TLS1_0", "TLS1_1", "TLS1_2"]
          },
          "noTableScan": {
            "type": "boolean",
            "description": "Flag that indicates whether the cluster disables executing any query that requires a collection scan to return results.",
            "externalDocs": {
              "description": "This option corresponds to the `notablescan` `mongod` configuration file option.",
              "url": "https://docs.mongodb.com/upcoming/reference/parameters/#mongodb-parameter-param.notablescan"
            }
          },
          "oplogMinRetentionHours": {
            "type": "number",
            "description": "Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.",
            "format": "double",
            "nullable": true,
            "externalDocs": {
              "description": "This option corresponds to the `storage.oplogMinRetentionHours` `mongod` configuration file option.",
              "url": "https://docs.mongodb.com/upcoming/reference/configuration-options/#mongodb-setting-storage.oplogMinRetentionHours"
            }
          },
          "oplogSizeMB": {
            "type": "integer",
            "description": "Storage limit of cluster's oplog expressed in megabytes. A value of null indicates that the cluster uses the default oplog size that MongoDB Cloud calculates.",
            "format": "int32",
            "nullable": true,
            "externalDocs": {
              "description": "This option corresponds to the `replication.oplogSizeMB` `mongod` configuration file option.",
              "url": "https://docs.mongodb.com/upcoming/reference/configuration-options/#mongodb-setting-replication.oplogSizeMB"
            }
          },
          "queryStatsLogVerbosity": {
            "type": "integer",
            "description": "May be set to 1 (disabled) or 3 (enabled). When set to 3, Atlas will include redacted and anonymized $queryStats output in MongoDB logs. $queryStats output does not contain literals or field values. Enabling this setting might impact the performance of your cluster.",
            "format": "int32",
            "externalDocs": {
              "description": "This option corresponds to the queryStats component for the logComponentVerbosity server parameter.",
              "url": "https://www.mongodb.com/docs/manual/reference/parameters/#mongodb-parameter-param.logComponentVerbosity"
            }
          },
          "sampleRefreshIntervalBIConnector": {
            "minimum": 0,
            "type": "integer",
            "description": "Interval in seconds at which the mongosqld process re-samples data to create its relational schema.",
            "format": "int32",
            "externalDocs": {
              "description": "This option corresponds to the `sampleRefreshIntervalSecs` `mongosqld` option.",
              "url": "https://docs.mongodb.com/bi-connector/current/reference/mongosqld/#std-option-mongosqld.--schemaRefreshIntervalSecs"
            },
            "default": 0
          },
          "sampleSizeBIConnector": {
            "minimum": 0,
            "type": "integer",
            "description": "Number of documents per database to sample when gathering schema information.",
            "format": "int32",
            "externalDocs": {
              "description": "This option corresponds to the `sampleSize` `mongosqld` option.",
              "url": "https://docs.mongodb.com/bi-connector/current/reference/mongosqld/#std-option-mongosqld.--sampleSize"
            }
          },
          "transactionLifetimeLimitSeconds": {
            "minimum": 1,
            "type": "integer",
            "description": "Lifetime, in seconds, of multi-document transactions. Atlas considers the transactions that exceed this limit as expired and so aborts them through a periodic cleanup process.",
            "format": "int64",
            "externalDocs": {
              "description": "This option corresponds to the `transactionLifetimeLimitSeconds` `mongod` configuration file option.",
              "url": "https://www.mongodb.com/docs/upcoming/reference/parameters/#mongodb-parameter-param.transactionLifetimeLimitSeconds"
            }
          }
        }
      },
      "SampleDatasetStatus": {
        "type": "object",
        "properties": {
          "_id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies this sample dataset.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "clusterName": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the cluster into which you loaded the sample dataset.",
            "readOnly": true
          },
          "completeDate": {
            "type": "string",
            "description": "Date and time when the sample dataset load job completed. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "createDate": {
            "type": "string",
            "description": "Date and time when you started the sample dataset load job. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "description": "Details of the error returned when MongoDB Cloud loads the sample dataset. This endpoint returns null if state has a value other than FAILED.",
            "readOnly": true
          },
          "state": {
            "type": "string",
            "description": "Status of the sample dataset load job.",
            "readOnly": true,
            "enum": ["WORKING", "FAILED", "COMPLETED"]
          }
        }
      },
      "ServerlessInstanceDescriptionCreate": {
        "title": "Serverless Instance Description Create",
        "required": ["name", "providerSettings"],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the serverless instance.",
            "writeOnly": true
          },
          "providerSettings": {
            "$ref": "#/components/schemas/ServerlessProviderSettings"
          },
          "serverlessBackupOptions": {
            "$ref": "#/components/schemas/ClusterServerlessBackupOptions"
          },
          "stateName": {
            "type": "string",
            "description": "Human-readable label that indicates the current operating condition of the serverless instance.",
            "readOnly": true,
            "enum": ["IDLE", "CREATING", "UPDATING", "DELETING", "REPAIRING"]
          },
          "tags": {
            "type": "array",
            "description": "List that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the serverless instance.",
            "items": {
              "$ref": "#/components/schemas/ResourceTag"
            }
          },
          "terminationProtectionEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether termination protection is enabled on the serverless instance. If set to `true`, MongoDB Cloud won't delete the serverless instance. If set to `false`, MongoDB Cloud will delete the serverless instance.",
            "default": false
          }
        },
        "description": "Settings that you can specify when you create a serverless instance."
      },
      "PaginatedServerlessInstanceDescriptionView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ServerlessInstanceDescription"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "ServerlessInstanceDescriptionUpdate": {
        "title": "Serverless Instance Description Update",
        "type": "object",
        "properties": {
          "serverlessBackupOptions": {
            "$ref": "#/components/schemas/ClusterServerlessBackupOptions"
          },
          "tags": {
            "type": "array",
            "description": "List that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the serverless instance.",
            "items": {
              "$ref": "#/components/schemas/ResourceTag"
            }
          },
          "terminationProtectionEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether termination protection is enabled on the serverless instance. If set to `true`, MongoDB Cloud won't delete the serverless instance. If set to `false`, MongoDB Cloud will delete the serverless instance.",
            "default": false
          }
        },
        "description": "Settings that you can update when you request a serverless cluster update."
      },
      "ServerlessAWSTenantEndpoint": {
        "title": "AWS",
        "type": "object",
        "properties": {
          "_id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the private endpoint.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "cloudProviderEndpointId": {
            "pattern": "^vpce-[0-9a-f]{17}$",
            "type": "string",
            "description": "Unique string that identifies the private endpoint's network interface.",
            "readOnly": true
          },
          "comment": {
            "maxLength": 80,
            "type": "string",
            "description": "Human-readable comment associated with the private endpoint.",
            "readOnly": true
          },
          "endpointServiceName": {
            "pattern": "^com\\.amazonaws\\.vpce\\.[a-z-0-9]+\\.vpce-svc-[0-9a-f]{17}",
            "type": "string",
            "description": "Unique string that identifies the Amazon Web Services (AWS) PrivateLink endpoint service. MongoDB Cloud returns null while it creates the endpoint service.",
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "description": "Human-readable error message that indicates error condition associated with establishing the private endpoint connection.",
            "readOnly": true
          },
          "providerName": {
            "type": "string",
            "description": "Human-readable label that identifies the cloud service provider.",
            "readOnly": true,
            "enum": ["AWS"]
          },
          "status": {
            "type": "string",
            "description": "Human-readable label that indicates the current operating status of the private endpoint.",
            "readOnly": true,
            "enum": ["RESERVATION_REQUESTED", "RESERVED", "INITIATING", "AVAILABLE", "FAILED", "DELETING"]
          }
        },
        "description": "View for a serverless AWS tenant endpoint."
      },
      "ServerlessAzureTenantEndpoint": {
        "title": "Azure",
        "type": "object",
        "properties": {
          "_id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the private endpoint.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "cloudProviderEndpointId": {
            "pattern": "^/subscriptions/[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}/resource[gG]roups/private[Ll]ink/providers/Microsoft\\.Network/privateEndpoints/[-\\w._()]+$",
            "type": "string",
            "description": "Unique string that identifies the Azure private endpoint's network interface that someone added to this private endpoint service.",
            "readOnly": true
          },
          "comment": {
            "maxLength": 80,
            "type": "string",
            "description": "Human-readable comment associated with the private endpoint.",
            "readOnly": true
          },
          "endpointServiceName": {
            "pattern": "^pls_[0-9a-f]{24}$",
            "type": "string",
            "description": "Unique string that identifies the Azure private endpoint service. MongoDB Cloud returns null while it creates the endpoint service.",
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "description": "Human-readable error message that indicates error condition associated with establishing the private endpoint connection.",
            "readOnly": true
          },
          "privateEndpointIpAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IPv4 address of the private endpoint in your Azure VNet that someone added to this private endpoint service.",
            "readOnly": true
          },
          "privateLinkServiceResourceId": {
            "type": "string",
            "description": "Root-relative path that identifies the Azure Private Link Service that MongoDB Cloud manages. MongoDB Cloud returns null while it creates the endpoint service.",
            "readOnly": true
          },
          "providerName": {
            "type": "string",
            "description": "Human-readable label that identifies the cloud service provider.",
            "readOnly": true,
            "enum": ["AZURE"]
          },
          "status": {
            "type": "string",
            "description": "Human-readable label that indicates the current operating status of the private endpoint.",
            "readOnly": true,
            "enum": ["RESERVATION_REQUESTED", "RESERVED", "INITIATING", "AVAILABLE", "FAILED", "DELETING"]
          }
        },
        "description": "View for a serverless Azure tenant endpoint."
      },
      "ServerlessTenantEndpoint": {
        "type": "object",
        "properties": {
          "_id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the private endpoint.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "cloudProviderEndpointId": {
            "type": "string",
            "description": "Unique string that identifies the private endpoint's network interface.",
            "readOnly": true
          },
          "comment": {
            "maxLength": 80,
            "type": "string",
            "description": "Human-readable comment associated with the private endpoint.",
            "readOnly": true
          },
          "endpointServiceName": {
            "pattern": "^com\\.amazonaws\\.vpce\\.[a-z-0-9]+\\.vpce-svc-[0-9a-f]{17}|pls_[0-9a-f]{24}$",
            "type": "string",
            "description": "Unique string that identifies the PrivateLink endpoint service. MongoDB Cloud returns null while it creates the endpoint service.",
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "description": "Human-readable error message that indicates error condition associated with establishing the private endpoint connection.",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "Human-readable label that indicates the current operating status of the private endpoint.",
            "readOnly": true,
            "enum": ["RESERVATION_REQUESTED", "RESERVED", "INITIATING", "AVAILABLE", "FAILED", "DELETING"]
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/ServerlessAWSTenantEndpoint"
          },
          {
            "$ref": "#/components/schemas/ServerlessAzureTenantEndpoint"
          }
        ]
      },
      "ServerlessTenantCreateRequest": {
        "type": "object",
        "properties": {
          "comment": {
            "maxLength": 80,
            "type": "string",
            "description": "Human-readable comment associated with the private endpoint.",
            "writeOnly": true
          }
        }
      },
      "ServerlessAWSTenantEndpointUpdate": {
        "title": "AWS",
        "required": ["providerName"],
        "type": "object",
        "description": "Updates to a serverless AWS tenant endpoint.",
        "allOf": [
          {
            "$ref": "#/components/schemas/ServerlessTenantEndpointUpdate"
          },
          {
            "type": "object",
            "properties": {
              "cloudProviderEndpointId": {
                "pattern": "^vpce-[0-9a-f]{17}$",
                "type": "string",
                "description": "Unique string that identifies the private endpoint's network interface.",
                "writeOnly": true
              }
            }
          }
        ]
      },
      "ServerlessAzureTenantEndpointUpdate": {
        "title": "AZURE",
        "required": ["providerName"],
        "type": "object",
        "description": "Updates to a serverless Azure tenant endpoint.",
        "allOf": [
          {
            "$ref": "#/components/schemas/ServerlessTenantEndpointUpdate"
          },
          {
            "type": "object",
            "properties": {
              "cloudProviderEndpointId": {
                "pattern": "^/subscriptions/[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}/resource[gG]roups/private[Ll]ink/providers/Microsoft\\.Network/privateEndpoints/[-\\w._()]+$",
                "type": "string",
                "description": "Unique string that identifies the Azure private endpoint's network interface for this private endpoint service.",
                "writeOnly": true
              },
              "privateEndpointIpAddress": {
                "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
                "type": "string",
                "description": "IPv4 address of the private endpoint in your Azure VNet that someone added to this private endpoint service.",
                "writeOnly": true
              }
            }
          }
        ]
      },
      "ServerlessTenantEndpointUpdate": {
        "required": ["providerName"],
        "type": "object",
        "properties": {
          "comment": {
            "maxLength": 80,
            "type": "string",
            "description": "Human-readable comment associated with the private endpoint.",
            "writeOnly": true
          },
          "providerName": {
            "type": "string",
            "description": "Human-readable label that identifies the cloud provider of the tenant endpoint.",
            "writeOnly": true,
            "enum": ["AWS", "AZURE"]
          }
        },
        "description": "Update view for a serverless tenant endpoint.",
        "discriminator": {
          "propertyName": "providerName",
          "mapping": {
            "AWS": "#/components/schemas/ServerlessAWSTenantEndpointUpdate",
            "AZURE": "#/components/schemas/ServerlessAzureTenantEndpointUpdate"
          }
        }
      },
      "USSBackupSettings20250101": {
        "title": "USS backup configuration",
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether backups are performed for this USS instance. Backup uses [TODO](TODO) for USS instances.",
            "readOnly": true,
            "default": true
          }
        },
        "description": "USS backup configuration",
        "readOnly": true
      },
      "USSConnectionStrings20250101": {
        "title": "USS Instance Connection Strings",
        "type": "object",
        "properties": {
          "standard": {
            "type": "string",
            "description": "Public connection string that you can use to connect to this cluster. This connection string uses the mongodb:// protocol.",
            "readOnly": true,
            "externalDocs": {
              "description": "Connection String URI Format",
              "url": "https://docs.mongodb.com/manual/reference/connection-string/"
            }
          },
          "standardSrv": {
            "type": "string",
            "description": "Public connection string that you can use to connect to this USS instance. This connection string uses the `mongodb+srv://` protocol.",
            "readOnly": true,
            "externalDocs": {
              "description": "Connection String URI Format",
              "url": "https://docs.mongodb.com/manual/reference/connection-string/"
            }
          }
        },
        "description": "Collection of Uniform Resource Locators that point to the MongoDB database.",
        "readOnly": true,
        "externalDocs": {
          "description": "Connection string URI format.",
          "url": "https://docs.mongodb.com/manual/reference/connection-string/"
        }
      },
      "USSInstanceDescription20250101": {
        "title": "USS Instance Description",
        "required": ["providerSettings"],
        "type": "object",
        "properties": {
          "backupSettings": {
            "$ref": "#/components/schemas/USSBackupSettings20250101"
          },
          "clusterType": {
            "type": "string",
            "description": "USS instance topology.",
            "readOnly": true,
            "enum": ["REPLICASET", "LOADBALANCED"]
          },
          "connectionStrings": {
            "$ref": "#/components/schemas/USSConnectionStrings20250101"
          },
          "createDate": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created this instance. This parameter expresses its value in ISO 8601 format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the project.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the instance.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "mongoDBVersion": {
            "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)",
            "type": "string",
            "description": "Version of MongoDB that the instance runs.",
            "readOnly": true
          },
          "name": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the instance.",
            "readOnly": true
          },
          "providerSettings": {
            "$ref": "#/components/schemas/USSProviderSettings20250101"
          },
          "stateName": {
            "type": "string",
            "description": "Human-readable label that indicates the current operating condition of this instance.",
            "readOnly": true,
            "enum": ["IDLE", "CREATING", "UPDATING", "DELETING", "REPAIRING"]
          },
          "tags": {
            "type": "array",
            "description": "List that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the instance.",
            "externalDocs": {
              "description": "Resource Tags",
              "url": "https://dochub.mongodb.org/core/add-cluster-tag-atlas"
            },
            "items": {
              "$ref": "#/components/schemas/ResourceTag"
            }
          },
          "terminationProtectionEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether termination protection is enabled on the cluster. If set to `true`, MongoDB Cloud won't delete the cluster. If set to `false`, MongoDB Cloud will delete the cluster.",
            "default": false
          },
          "versionReleaseSystem": {
            "type": "string",
            "description": "Method by which the cluster maintains the MongoDB versions.",
            "readOnly": true,
            "default": "LTS",
            "enum": ["LTS"]
          }
        },
        "description": "Group of settings that configure a MongoDB USS instance."
      },
      "USSProviderSettings20250101": {
        "title": "Cloud Service Provider Settings for a USS Instance",
        "type": "object",
        "properties": {
          "backingProviderName": {
            "type": "string",
            "description": "Cloud service provider on which MongoDB Cloud provisioned the USS instance.",
            "readOnly": true,
            "enum": ["AWS", "AZURE", "GCP"]
          },
          "diskSizeGB": {
            "type": "number",
            "description": "Storage capacity available to the USS instance expressed in gigabytes.",
            "format": "double",
            "readOnly": true
          },
          "providerName": {
            "type": "string",
            "description": "Human-readable label that identifies the cloud service provider.",
            "readOnly": true,
            "default": "USS",
            "enum": ["USS"]
          },
          "regionName": {
            "type": "string",
            "description": "Human-readable label that identifies the geographic location of your MongoDB USS instance. The region you choose can affect network latency for clients accessing your databases. For a complete list of region names, see [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/#std-label-amazon-aws), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), and [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).",
            "readOnly": true
          }
        },
        "description": "Group of cloud provider settings that configure the provisioned MongoDB USS instance.",
        "readOnly": true
      },
      "USSInstanceDescriptionCreate20250101": {
        "title": "USS Instance Description Create",
        "required": ["name", "providerSettings"],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the instance.",
            "writeOnly": true
          },
          "providerSettings": {
            "$ref": "#/components/schemas/USSProviderSettingsCreate20250101"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "tags": {
            "type": "array",
            "description": "List that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the instance.",
            "externalDocs": {
              "description": "Resource Tags",
              "url": "https://dochub.mongodb.org/core/add-cluster-tag-atlas"
            },
            "items": {
              "$ref": "#/components/schemas/ResourceTag"
            }
          },
          "terminationProtectionEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether termination protection is enabled on the cluster. If set to `true`, MongoDB Cloud won't delete the cluster. If set to `false`, MongoDB Cloud will delete the cluster.",
            "default": false
          }
        },
        "description": "Settings that you can specify when you create a USS instance."
      },
      "USSProviderSettingsCreate20250101": {
        "title": "Cloud Service Provider Settings for a USS Instance",
        "required": ["backingProviderName", "regionName"],
        "type": "object",
        "properties": {
          "backingProviderName": {
            "type": "string",
            "description": "Cloud service provider on which MongoDB Cloud provisioned the serverless instance.",
            "writeOnly": true,
            "enum": ["AWS", "AZURE", "GCP"]
          },
          "regionName": {
            "type": "string",
            "description": "Human-readable label that identifies the geographic location of your MongoDB USS instance. The region you choose can affect network latency for clients accessing your databases. For a complete list of region names, see [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/#std-label-amazon-aws), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), and [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).",
            "writeOnly": true
          },
          "diskSizeGB": {
            "type": "number",
            "description": "Storage capacity available to the USS instance expressed in gigabytes.",
            "format": "double",
            "readOnly": true
          },
          "providerName": {
            "type": "string",
            "description": "Human-readable label that identifies the cloud service provider.",
            "readOnly": true,
            "default": "USS",
            "enum": ["USS"]
          }
        },
        "description": "Group of cloud provider settings that configure the provisioned MongoDB USS instance.",
        "writeOnly": true
      },
      "PaginatedUSSInstance20250101": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "type": "object"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "AtlasOrganization": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Flag that indicates whether this organization has been deleted.",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "name": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[\\p{L}\\p{N}\\-_.(),:&@+']{1,64}$",
            "type": "string",
            "description": "Human-readable label that identifies the organization."
          }
        },
        "description": "Details that describe the organization."
      },
      "CreateOrganizationResponse": {
        "type": "object",
        "properties": {
          "apiKey": {
            "$ref": "#/components/schemas/ApiKeyUserDetails"
          },
          "federationSettingsId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the federation that you linked the newly created organization to.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "orgOwnerId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud user that you assigned the Organization Owner role in the new organization.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "organization": {
            "$ref": "#/components/schemas/AtlasOrganization"
          }
        }
      },
      "CreateAtlasOrganizationApiKey": {
        "required": ["desc", "roles"],
        "type": "object",
        "properties": {
          "desc": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "Purpose or explanation provided when someone created this organization API key."
          },
          "roles": {
            "minItems": 1,
            "type": "array",
            "description": "List of roles to grant this API key. If you provide this list, provide a minimum of one role and ensure each role applies to this organization.",
            "items": {
              "type": "string",
              "enum": [
                "ORG_OWNER",
                "ORG_MEMBER",
                "ORG_GROUP_CREATOR",
                "ORG_BILLING_ADMIN",
                "ORG_READ_ONLY",
                "ORG_TEAM_MEMBERS_ADMIN"
              ]
            }
          }
        },
        "description": "Details of the programmatic API key to be created."
      },
      "CreateOrganizationRequest": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "apiKey": {
            "$ref": "#/components/schemas/CreateAtlasOrganizationApiKey"
          },
          "federationSettingsId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the federation to link the newly created organization to. If specified, the proposed Organization Owner of the new organization must have the Organization Owner role in an organization associated with the federation.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "name": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[\\p{L}\\p{N}\\-_.(),:&@+']{1,64}$",
            "type": "string",
            "description": "Human-readable label that identifies the organization."
          },
          "orgOwnerId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud user that you want to assign the Organization Owner role. This user must be a member of the same organization as the calling API key. If you provide `federationSettingsId`,  this user must instead have the Organization Owner role on an organization in the specified federation. This parameter is required only when you authenticate with Programmatic API Keys.",
            "example": "32b6e34b3d91647abb20e7b8"
          }
        }
      },
      "PaginatedApiUserAccessListResponseView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/UserAccessListResponse"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "UserAccessListResponse": {
        "type": "object",
        "properties": {
          "cidrBlock": {
            "pattern": "^((([0-9]{1,3}\\.){3}[0-9]{1,3})|([\\:]{0,2}([0-9a-f]{1,4}\\:){0,7}[0-9a-f]{1,4}[\\:]{0,2}))((%2[fF]|\\/)[0-9]{1,3})+$",
            "type": "string",
            "description": "Range of IP addresses in Classless Inter-Domain Routing (CIDR) notation in the access list for the API key.",
            "example": "203.0.113.0/24"
          },
          "count": {
            "minimum": 1,
            "type": "integer",
            "description": "Total number of requests that have originated from the Internet Protocol (IP) address given as the value of the *lastUsedAddress* parameter.",
            "format": "int32",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "description": "Date and time when someone added the network addresses to the specified API access list. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "ipAddress": {
            "pattern": "^((([0-9]{1,3}\\.){3}[0-9]{1,3})|([\\:]{0,2}([0-9a-f]{1,4}\\:){0,7}[0-9a-f]{1,4}[\\:]{0,2}))$",
            "type": "string",
            "description": "Network address in the access list for the API key.",
            "example": "203.0.113.10"
          },
          "lastUsed": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud received the most recent request that originated from this Internet Protocol version 4 or version 6 address. The resource returns this parameter when at least one request has originated from this IP address. MongoDB Cloud updates this parameter each time a client accesses the permitted resource. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "lastUsedAddress": {
            "pattern": "^((([0-9]{1,3}\\.){3}[0-9]{1,3})|([\\:]{0,2}([0-9a-f]{1,4}\\:){0,7}[0-9a-f]{1,4}[\\:]{0,2}))$",
            "type": "string",
            "description": "Network address that issued the most recent request to the API. This parameter requires the address to be expressed as one Internet Protocol version 4 or version 6 address. The resource returns this parameter after this IP address made at least one request.",
            "readOnly": true,
            "example": "203.0.113.10"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "UserAccessListRequest": {
        "type": "object",
        "properties": {
          "cidrBlock": {
            "pattern": "^((([0-9]{1,3}\\.){3}[0-9]{1,3})|(:{0,2}([0-9a-f]{1,4}:){0,7}[0-9a-f]{1,4}[:]{0,2}))((%2[fF]|/)[0-9]{1,3})+$",
            "type": "string",
            "description": "Range of network addresses that you want to add to the access list for the API key. This parameter requires the range to be expressed in classless inter-domain routing (CIDR) notation of Internet Protocol version 4 or version 6 addresses. You can set a value for this parameter or **ipAddress** but not both in the same request.",
            "example": "203.0.113.0/24"
          },
          "ipAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "Network address that you want to add to the access list for the API key. This parameter requires the address to be expressed as one Internet Protocol version 4 or version 6 address. You can set a value for this parameter or **cidrBlock** but not both in the same request.",
            "example": "203.0.113.10"
          }
        }
      },
      "UpdateAtlasOrganizationApiKey": {
        "type": "object",
        "properties": {
          "desc": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "Purpose or explanation provided when someone creates this organization API key."
          },
          "roles": {
            "type": "array",
            "description": "List of roles to grant this API key. If you provide this list, provide a minimum of one role and ensure each role applies to this organization.",
            "items": {
              "type": "string",
              "enum": [
                "ORG_OWNER",
                "ORG_MEMBER",
                "ORG_GROUP_CREATOR",
                "ORG_BILLING_ADMIN",
                "ORG_READ_ONLY",
                "ORG_TEAM_MEMBERS_ADMIN"
              ]
            }
          }
        }
      },
      "PaginatedApiAppUserView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/CloudAppUser"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "AddUserToTeam": {
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud user.",
            "example": "32b6e34b3d91647abb20e7b8"
          }
        }
      },
      "Team": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this team.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the team."
          },
          "usernames": {
            "uniqueItems": true,
            "type": "array",
            "description": "List that contains the MongoDB Cloud users in this team.",
            "items": {
              "type": "string",
              "description": "List that contains email addresses that identify MongoDB Cloud users to in this team.",
              "format": "email"
            }
          }
        }
      },
      "TeamResponse": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this team.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the team."
          }
        }
      },
      "PaginatedTeamView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/TeamResponse"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "TeamUpdate": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the team.",
            "writeOnly": true
          }
        }
      },
      "PaginatedOrganizationView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/AtlasOrganization"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "OrgFederationSettings": {
        "title": "Organization Federation Settings",
        "type": "object",
        "properties": {
          "federatedDomains": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of domains associated with the organization's identity provider.",
            "items": {
              "type": "string"
            }
          },
          "hasRoleMappings": {
            "type": "boolean",
            "description": "Flag that indicates whether this organization has role mappings configured."
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this federation.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "identityProviderId": {
            "maxLength": 20,
            "minLength": 20,
            "pattern": "^([a-f0-9]{20})$",
            "type": "string",
            "description": "Legacy 20-hexadecimal digit string that identifies the identity provider connected to this organization.",
            "example": "c2777a9eca931f29fc2f"
          },
          "identityProviderStatus": {
            "type": "string",
            "description": "String enum that indicates whether the identity provider is active.",
            "enum": ["ACTIVE", "INACTIVE"]
          }
        },
        "description": "Details that define how to connect one MongoDB Cloud organization to one federated authentication service."
      },
      "OrganizationSettings": {
        "type": "object",
        "properties": {
          "apiAccessListRequired": {
            "type": "boolean",
            "description": "Flag that indicates whether to require API operations to originate from an IP Address added to the API access list for the specified organization."
          },
          "multiFactorAuthRequired": {
            "type": "boolean",
            "description": "Flag that indicates whether to require users to set up Multi-Factor Authentication (MFA) before accessing the specified organization. To learn more, see: https://www.mongodb.com/docs/atlas/security-multi-factor-authentication/."
          },
          "restrictEmployeeAccess": {
            "type": "boolean",
            "description": "Flag that indicates whether to block MongoDB Support from accessing Atlas infrastructure for any deployment in the specified organization without explicit permission. Once this setting is turned on, you can grant MongoDB Support a 24-hour bypass access to the Atlas deployment to resolve support issues. To learn more, see: https://www.mongodb.com/docs/atlas/security-restrict-support-access/."
          }
        },
        "description": "Collection of settings that configures the organization."
      },
      "UpdateOrgRolesForUser": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgRoles": {
            "uniqueItems": true,
            "type": "array",
            "description": "One or more organization level roles to assign to the MongoDB Cloud user.",
            "items": {
              "type": "string",
              "enum": ["ORG_OWNER", "ORG_MEMBER", "ORG_GROUP_CREATOR", "ORG_BILLING_ADMIN", "ORG_READ_ONLY"]
            }
          }
        }
      },
      "BillingInvoiceMetadata": {
        "type": "object",
        "properties": {
          "amountBilledCents": {
            "type": "integer",
            "description": "Sum of services that the specified organization consumed in the period covered in this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "format": "int64",
            "readOnly": true
          },
          "amountPaidCents": {
            "type": "integer",
            "description": "Sum that the specified organization paid toward this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "format": "int64",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created this invoice. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "creditsCents": {
            "type": "integer",
            "description": "Sum that MongoDB credited the specified organization toward this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "format": "int64",
            "readOnly": true
          },
          "endDate": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud finished the billing period that this invoice covers. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the invoice submitted to the specified organization. Charges typically post the next day.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "linkedInvoices": {
            "type": "array",
            "description": "List that contains the invoices for organizations linked to the paying organization.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/BillingInvoiceMetadata"
            }
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization charged for services consumed from MongoDB Cloud.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "salesTaxCents": {
            "type": "integer",
            "description": "Sum of sales tax applied to this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "format": "int64",
            "readOnly": true
          },
          "startDate": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud began the billing period that this invoice covers. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "startingBalanceCents": {
            "type": "integer",
            "description": "Sum that the specified organization owed to MongoDB when MongoDB issued this invoice. This parameter expresses its value in US Dollars.",
            "format": "int64",
            "readOnly": true
          },
          "statusName": {
            "type": "string",
            "description": "Phase of payment processing in which this invoice exists when you made this request. Accepted phases include:\n\n| Phase Value | Reason |\n|---|---|\n| CLOSED | MongoDB finalized all charges in the billing cycle but has yet to charge the customer. |\n| FAILED | MongoDB attempted to charge the provided credit card but charge for that amount failed. |\n| FORGIVEN | Customer initiated payment which MongoDB later forgave. |\n| FREE | All charges totalled zero so the customer won't be charged. |\n| INVOICED | MongoDB handled these charges using elastic invoicing. |\n| PAID | MongoDB succeeded in charging the provided credit card. |\n| PENDING | Invoice includes charges for the current billing cycle. |\n| PREPAID | Customer has a pre-paid plan so they won't be charged. |\n",
            "enum": ["PENDING", "CLOSED", "FORGIVEN", "FAILED", "PAID", "FREE", "PREPAID", "INVOICED"]
          },
          "subtotalCents": {
            "type": "integer",
            "description": "Sum of all positive invoice line items contained in this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "format": "int64",
            "readOnly": true
          },
          "updated": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud last updated the value of this payment. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "PaginatedApiInvoiceMetadataView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/BillingInvoiceMetadata"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "BillingInvoice": {
        "type": "object",
        "properties": {
          "amountBilledCents": {
            "type": "integer",
            "description": "Sum of services that the specified organization consumed in the period covered in this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "format": "int64",
            "readOnly": true
          },
          "amountPaidCents": {
            "type": "integer",
            "description": "Sum that the specified organization paid toward this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "format": "int64",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created this invoice. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "creditsCents": {
            "type": "integer",
            "description": "Sum that MongoDB credited the specified organization toward this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "format": "int64",
            "readOnly": true
          },
          "endDate": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud finished the billing period that this invoice covers. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the invoice submitted to the specified organization. Charges typically post the next day.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "lineItems": {
            "type": "array",
            "description": "List that contains individual services included in this invoice.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/InvoiceLineItem"
            }
          },
          "linkedInvoices": {
            "type": "array",
            "description": "List that contains the invoices for organizations linked to the paying organization.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/BillingInvoice"
            }
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "orgId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization charged for services consumed from MongoDB Cloud.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "payments": {
            "type": "array",
            "description": "List that contains funds transferred to MongoDB to cover the specified service noted in this invoice.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/BillingPayment"
            }
          },
          "refunds": {
            "type": "array",
            "description": "List that contains payments that MongoDB returned to the organization for this invoice.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/BillingRefund"
            }
          },
          "salesTaxCents": {
            "type": "integer",
            "description": "Sum of sales tax applied to this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "format": "int64",
            "readOnly": true
          },
          "startDate": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud began the billing period that this invoice covers. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "startingBalanceCents": {
            "type": "integer",
            "description": "Sum that the specified organization owed to MongoDB when MongoDB issued this invoice. This parameter expresses its value in US Dollars.",
            "format": "int64",
            "readOnly": true
          },
          "statusName": {
            "type": "string",
            "description": "Phase of payment processing in which this invoice exists when you made this request. Accepted phases include:\n\n| Phase Value | Reason |\n|---|---|\n| CLOSED | MongoDB finalized all charges in the billing cycle but has yet to charge the customer. |\n| FAILED | MongoDB attempted to charge the provided credit card but charge for that amount failed. |\n| FORGIVEN | Customer initiated payment which MongoDB later forgave. |\n| FREE | All charges totalled zero so the customer won't be charged. |\n| INVOICED | MongoDB handled these charges using elastic invoicing. |\n| PAID | MongoDB succeeded in charging the provided credit card. |\n| PENDING | Invoice includes charges for the current billing cycle. |\n| PREPAID | Customer has a pre-paid plan so they won't be charged. |\n",
            "enum": ["PENDING", "CLOSED", "FORGIVEN", "FAILED", "PAID", "FREE", "PREPAID", "INVOICED"]
          },
          "subtotalCents": {
            "type": "integer",
            "description": "Sum of all positive invoice line items contained in this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "format": "int64",
            "readOnly": true
          },
          "updated": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud last updated the value of this payment. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "BillingPayment": {
        "title": "Payment",
        "type": "object",
        "properties": {
          "amountBilledCents": {
            "type": "integer",
            "description": "Sum of services that the specified organization consumed in the period covered in this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "format": "int64",
            "readOnly": true
          },
          "amountPaidCents": {
            "type": "integer",
            "description": "Sum that the specified organization paid toward the associated invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "format": "int64",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "description": "Date and time when the customer made this payment attempt. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "currency": {
            "type": "string",
            "description": "The currency in which payment was paid. This parameter expresses its value in 3-letter ISO 4217 currency code.",
            "readOnly": true
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this payment toward the associated invoice.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "salesTaxCents": {
            "type": "integer",
            "description": "Sum of sales tax applied to this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "format": "int64",
            "readOnly": true
          },
          "statusName": {
            "type": "string",
            "description": "Phase of payment processing for the associated invoice when you made this request.\n\nThese phases include:\n\n| Phase Value | Reason |\n|---|---|\n| `CANCELLED` | Customer or MongoDB cancelled the payment. |\n| `ERROR` | Issue arose when attempting to complete payment. |\n| `FAILED` | MongoDB tried to charge the credit card without success. |\n| `FAILED_AUTHENTICATION` | Strong Customer Authentication has failed. Confirm that your payment method is authenticated. |\n| `FORGIVEN` | Customer initiated payment which MongoDB later forgave. |\n| `INVOICED` | MongoDB issued an invoice that included this line item. |\n| `NEW` | Customer provided a method of payment, but MongoDB hasn't tried to charge the credit card. |\n| `PAID` | Customer submitted a successful payment. |\n| `PARTIAL_PAID` | Customer paid for part of this line item. |\n",
            "enum": [
              "NEW",
              "FORGIVEN",
              "FAILED",
              "PAID",
              "PARTIAL_PAID",
              "CANCELLED",
              "INVOICED",
              "ERROR",
              "FAILED_AUTHENTICATION",
              "PROCESSING",
              "PENDING_REVERSAL",
              "REFUNDED"
            ]
          },
          "subtotalCents": {
            "type": "integer",
            "description": "Sum of all positive invoice line items contained in this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "format": "int64",
            "readOnly": true
          },
          "unitPrice": {
            "type": "string",
            "description": "The unit price applied to amountBilledCents to compute total payment amount. This value is represented as a decimal string.",
            "readOnly": true
          },
          "updated": {
            "type": "string",
            "description": "Date and time when the customer made an update to this payment attempt. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Funds transferred to MongoDB to cover the specified service in this invoice."
      },
      "BillingRefund": {
        "title": "Refund",
        "type": "object",
        "properties": {
          "amountCents": {
            "type": "integer",
            "description": "Sum of the funds returned to the specified organization expressed in cents (100th of US Dollar).",
            "format": "int64",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created this refund. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "paymentId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the payment that the organization had made.",
            "readOnly": true
          },
          "reason": {
            "type": "string",
            "description": "Justification that MongoDB accepted to return funds to the organization.",
            "readOnly": true
          }
        },
        "description": "One payment that MongoDB returned to the organization for this invoice."
      },
      "InvoiceLineItem": {
        "title": "Line Item",
        "type": "object",
        "properties": {
          "clusterName": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "type": "string",
            "description": "Human-readable label that identifies the cluster that incurred the charge.",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created this line item. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "discountCents": {
            "type": "integer",
            "description": "Sum by which MongoDB discounted this line item. MongoDB Cloud expresses this value in cents (100ths of one US Dollar). The resource returns this parameter when a discount applies.",
            "format": "int64",
            "readOnly": true
          },
          "endDate": {
            "type": "string",
            "description": "Date and time when when MongoDB Cloud finished charging for this line item. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project associated to this line item.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "groupName": {
            "type": "string",
            "description": "Human-readable label that identifies the project."
          },
          "note": {
            "type": "string",
            "description": "Comment that applies to this line item.",
            "readOnly": true
          },
          "percentDiscount": {
            "type": "number",
            "description": "Percentage by which MongoDB discounted this line item. The resource returns this parameter when a discount applies.",
            "format": "float",
            "readOnly": true
          },
          "quantity": {
            "type": "number",
            "description": "Number of units included for the line item. These can be expressions of storage (GB), time (hours), or other units.",
            "format": "double",
            "readOnly": true
          },
          "sku": {
            "type": "string",
            "description": "Human-readable description of the service that this line item provided. This Stock Keeping Unit (SKU) could be the instance type, a support charge, advanced security, or another service.",
            "readOnly": true,
            "enum": [
              "CLASSIC_BACKUP_OPLOG",
              "CLASSIC_BACKUP_STORAGE",
              "CLASSIC_BACKUP_SNAPSHOT_CREATE",
              "CLASSIC_BACKUP_DAILY_MINIMUM",
              "CLASSIC_BACKUP_FREE_TIER",
              "CLASSIC_COUPON",
              "BACKUP_STORAGE_FREE_TIER",
              "BACKUP_STORAGE",
              "FLEX_CONSULTING",
              "CLOUD_MANAGER_CLASSIC",
              "CLOUD_MANAGER_BASIC_FREE_TIER",
              "CLOUD_MANAGER_BASIC",
              "CLOUD_MANAGER_PREMIUM",
              "CLOUD_MANAGER_FREE_TIER",
              "CLOUD_MANAGER_STANDARD_FREE_TIER",
              "CLOUD_MANAGER_STANDARD_ANNUAL",
              "CLOUD_MANAGER_STANDARD",
              "CLOUD_MANAGER_FREE_TRIAL",
              "ATLAS_INSTANCE_M0",
              "ATLAS_INSTANCE_M2",
              "ATLAS_INSTANCE_M5",
              "ATLAS_AWS_INSTANCE_M10",
              "ATLAS_AWS_INSTANCE_M20",
              "ATLAS_AWS_INSTANCE_M30",
              "ATLAS_AWS_INSTANCE_M40",
              "ATLAS_AWS_INSTANCE_M50",
              "ATLAS_AWS_INSTANCE_M60",
              "ATLAS_AWS_INSTANCE_M80",
              "ATLAS_AWS_INSTANCE_M100",
              "ATLAS_AWS_INSTANCE_M140",
              "ATLAS_AWS_INSTANCE_M200",
              "ATLAS_AWS_INSTANCE_M300",
              "ATLAS_AWS_INSTANCE_M40_LOW_CPU",
              "ATLAS_AWS_INSTANCE_M50_LOW_CPU",
              "ATLAS_AWS_INSTANCE_M60_LOW_CPU",
              "ATLAS_AWS_INSTANCE_M80_LOW_CPU",
              "ATLAS_AWS_INSTANCE_M200_LOW_CPU",
              "ATLAS_AWS_INSTANCE_M300_LOW_CPU",
              "ATLAS_AWS_INSTANCE_M400_LOW_CPU",
              "ATLAS_AWS_INSTANCE_M700_LOW_CPU",
              "ATLAS_AWS_INSTANCE_M40_NVME",
              "ATLAS_AWS_INSTANCE_M50_NVME",
              "ATLAS_AWS_INSTANCE_M60_NVME",
              "ATLAS_AWS_INSTANCE_M80_NVME",
              "ATLAS_AWS_INSTANCE_M200_NVME",
              "ATLAS_AWS_INSTANCE_M400_NVME",
              "ATLAS_AWS_INSTANCE_M10_PAUSED",
              "ATLAS_AWS_INSTANCE_M20_PAUSED",
              "ATLAS_AWS_INSTANCE_M30_PAUSED",
              "ATLAS_AWS_INSTANCE_M40_PAUSED",
              "ATLAS_AWS_INSTANCE_M50_PAUSED",
              "ATLAS_AWS_INSTANCE_M60_PAUSED",
              "ATLAS_AWS_INSTANCE_M80_PAUSED",
              "ATLAS_AWS_INSTANCE_M100_PAUSED",
              "ATLAS_AWS_INSTANCE_M140_PAUSED",
              "ATLAS_AWS_INSTANCE_M200_PAUSED",
              "ATLAS_AWS_INSTANCE_M300_PAUSED",
              "ATLAS_AWS_INSTANCE_M40_LOW_CPU_PAUSED",
              "ATLAS_AWS_INSTANCE_M50_LOW_CPU_PAUSED",
              "ATLAS_AWS_INSTANCE_M60_LOW_CPU_PAUSED",
              "ATLAS_AWS_INSTANCE_M80_LOW_CPU_PAUSED",
              "ATLAS_AWS_INSTANCE_M200_LOW_CPU_PAUSED",
              "ATLAS_AWS_INSTANCE_M300_LOW_CPU_PAUSED",
              "ATLAS_AWS_INSTANCE_M400_LOW_CPU_PAUSED",
              "ATLAS_AWS_INSTANCE_M700_LOW_CPU_PAUSED",
              "ATLAS_AWS_SEARCH_INSTANCE_S20_COMPUTE_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S30_COMPUTE_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S40_COMPUTE_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S50_COMPUTE_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S60_COMPUTE_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S70_COMPUTE_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S80_COMPUTE_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S30_MEMORY_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S40_MEMORY_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S50_MEMORY_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S60_MEMORY_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S80_MEMORY_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S90_MEMORY_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S100_MEMORY_NVME",
              "ATLAS_AWS_SEARCH_INSTANCE_S110_MEMORY_NVME",
              "ATLAS_AWS_STORAGE_PROVISIONED",
              "ATLAS_AWS_STORAGE_STANDARD",
              "ATLAS_AWS_STORAGE_STANDARD_GP3",
              "ATLAS_AWS_STORAGE_IOPS",
              "ATLAS_AWS_DATA_TRANSFER_SAME_REGION",
              "ATLAS_AWS_DATA_TRANSFER_DIFFERENT_REGION",
              "ATLAS_AWS_DATA_TRANSFER_INTERNET",
              "ATLAS_AWS_BACKUP_SNAPSHOT_STORAGE",
              "ATLAS_AWS_BACKUP_DOWNLOAD_VM",
              "ATLAS_AWS_BACKUP_DOWNLOAD_VM_STORAGE",
              "ATLAS_AWS_BACKUP_DOWNLOAD_VM_STORAGE_IOPS",
              "ATLAS_AWS_PRIVATE_ENDPOINT",
              "ATLAS_AWS_PRIVATE_ENDPOINT_CAPACITY_UNITS",
              "ATLAS_GCP_SEARCH_INSTANCE_S20_COMPUTE_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S30_COMPUTE_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S40_COMPUTE_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S50_COMPUTE_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S60_COMPUTE_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S70_COMPUTE_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S80_COMPUTE_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S30_MEMORY_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S40_MEMORY_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S50_MEMORY_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S60_MEMORY_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S70_MEMORY_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S80_MEMORY_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S90_MEMORY_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S100_MEMORY_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S110_MEMORY_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S120_MEMORY_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S130_MEMORY_LOCALSSD",
              "ATLAS_GCP_SEARCH_INSTANCE_S140_MEMORY_LOCALSSD",
              "ATLAS_GCP_INSTANCE_M10",
              "ATLAS_GCP_INSTANCE_M20",
              "ATLAS_GCP_INSTANCE_M30",
              "ATLAS_GCP_INSTANCE_M40",
              "ATLAS_GCP_INSTANCE_M50",
              "ATLAS_GCP_INSTANCE_M60",
              "ATLAS_GCP_INSTANCE_M80",
              "ATLAS_GCP_INSTANCE_M140",
              "ATLAS_GCP_INSTANCE_M200",
              "ATLAS_GCP_INSTANCE_M250",
              "ATLAS_GCP_INSTANCE_M300",
              "ATLAS_GCP_INSTANCE_M400",
              "ATLAS_GCP_INSTANCE_M40_LOW_CPU",
              "ATLAS_GCP_INSTANCE_M50_LOW_CPU",
              "ATLAS_GCP_INSTANCE_M60_LOW_CPU",
              "ATLAS_GCP_INSTANCE_M80_LOW_CPU",
              "ATLAS_GCP_INSTANCE_M200_LOW_CPU",
              "ATLAS_GCP_INSTANCE_M300_LOW_CPU",
              "ATLAS_GCP_INSTANCE_M400_LOW_CPU",
              "ATLAS_GCP_INSTANCE_M600_LOW_CPU",
              "ATLAS_GCP_INSTANCE_M10_PAUSED",
              "ATLAS_GCP_INSTANCE_M20_PAUSED",
              "ATLAS_GCP_INSTANCE_M30_PAUSED",
              "ATLAS_GCP_INSTANCE_M40_PAUSED",
              "ATLAS_GCP_INSTANCE_M50_PAUSED",
              "ATLAS_GCP_INSTANCE_M60_PAUSED",
              "ATLAS_GCP_INSTANCE_M80_PAUSED",
              "ATLAS_GCP_INSTANCE_M140_PAUSED",
              "ATLAS_GCP_INSTANCE_M200_PAUSED",
              "ATLAS_GCP_INSTANCE_M250_PAUSED",
              "ATLAS_GCP_INSTANCE_M300_PAUSED",
              "ATLAS_GCP_INSTANCE_M400_PAUSED",
              "ATLAS_GCP_INSTANCE_M40_LOW_CPU_PAUSED",
              "ATLAS_GCP_INSTANCE_M50_LOW_CPU_PAUSED",
              "ATLAS_GCP_INSTANCE_M60_LOW_CPU_PAUSED",
              "ATLAS_GCP_INSTANCE_M80_LOW_CPU_PAUSED",
              "ATLAS_GCP_INSTANCE_M200_LOW_CPU_PAUSED",
              "ATLAS_GCP_INSTANCE_M300_LOW_CPU_PAUSED",
              "ATLAS_GCP_INSTANCE_M400_LOW_CPU_PAUSED",
              "ATLAS_GCP_INSTANCE_M600_LOW_CPU_PAUSED",
              "ATLAS_GCP_DATA_TRANSFER_INTERNET",
              "ATLAS_GCP_STORAGE_SSD",
              "ATLAS_GCP_DATA_TRANSFER_INTER_CONNECT",
              "ATLAS_GCP_DATA_TRANSFER_INTER_ZONE",
              "ATLAS_GCP_DATA_TRANSFER_INTER_REGION",
              "ATLAS_GCP_DATA_TRANSFER_GOOGLE",
              "ATLAS_GCP_BACKUP_SNAPSHOT_STORAGE",
              "ATLAS_GCP_BACKUP_DOWNLOAD_VM",
              "ATLAS_GCP_BACKUP_DOWNLOAD_VM_STORAGE",
              "ATLAS_GCP_PRIVATE_ENDPOINT",
              "ATLAS_GCP_PRIVATE_ENDPOINT_CAPACITY_UNITS",
              "ATLAS_GCP_SNAPSHOT_COPY_DATA_TRANSFER",
              "ATLAS_AZURE_INSTANCE_M10",
              "ATLAS_AZURE_INSTANCE_M20",
              "ATLAS_AZURE_INSTANCE_M30",
              "ATLAS_AZURE_INSTANCE_M40",
              "ATLAS_AZURE_INSTANCE_M50",
              "ATLAS_AZURE_INSTANCE_M60",
              "ATLAS_AZURE_INSTANCE_M80",
              "ATLAS_AZURE_INSTANCE_M90",
              "ATLAS_AZURE_INSTANCE_M200",
              "ATLAS_AZURE_INSTANCE_R40",
              "ATLAS_AZURE_INSTANCE_R50",
              "ATLAS_AZURE_INSTANCE_R60",
              "ATLAS_AZURE_INSTANCE_R80",
              "ATLAS_AZURE_INSTANCE_R200",
              "ATLAS_AZURE_INSTANCE_R300",
              "ATLAS_AZURE_INSTANCE_R400",
              "ATLAS_AZURE_INSTANCE_M60_NVME",
              "ATLAS_AZURE_INSTANCE_M80_NVME",
              "ATLAS_AZURE_INSTANCE_M200_NVME",
              "ATLAS_AZURE_INSTANCE_M300_NVME",
              "ATLAS_AZURE_INSTANCE_M400_NVME",
              "ATLAS_AZURE_INSTANCE_M600_NVME",
              "ATLAS_AZURE_INSTANCE_M10_PAUSED",
              "ATLAS_AZURE_INSTANCE_M20_PAUSED",
              "ATLAS_AZURE_INSTANCE_M30_PAUSED",
              "ATLAS_AZURE_INSTANCE_M40_PAUSED",
              "ATLAS_AZURE_INSTANCE_M50_PAUSED",
              "ATLAS_AZURE_INSTANCE_M60_PAUSED",
              "ATLAS_AZURE_INSTANCE_M80_PAUSED",
              "ATLAS_AZURE_INSTANCE_M90_PAUSED",
              "ATLAS_AZURE_INSTANCE_M200_PAUSED",
              "ATLAS_AZURE_INSTANCE_R40_PAUSED",
              "ATLAS_AZURE_INSTANCE_R50_PAUSED",
              "ATLAS_AZURE_INSTANCE_R60_PAUSED",
              "ATLAS_AZURE_INSTANCE_R80_PAUSED",
              "ATLAS_AZURE_INSTANCE_R200_PAUSED",
              "ATLAS_AZURE_INSTANCE_R300_PAUSED",
              "ATLAS_AZURE_INSTANCE_R400_PAUSED",
              "ATLAS_AZURE_SEARCH_INSTANCE_S20_COMPUTE_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S30_COMPUTE_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S40_COMPUTE_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S50_COMPUTE_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S60_COMPUTE_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S70_COMPUTE_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S80_COMPUTE_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S40_MEMORY_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S50_MEMORY_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S60_MEMORY_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S80_MEMORY_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S90_MEMORY_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S100_MEMORY_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S110_MEMORY_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S130_MEMORY_LOCALSSD",
              "ATLAS_AZURE_SEARCH_INSTANCE_S135_MEMORY_LOCALSSD",
              "ATLAS_AZURE_STORAGE_P2",
              "ATLAS_AZURE_STORAGE_P3",
              "ATLAS_AZURE_STORAGE_P4",
              "ATLAS_AZURE_STORAGE_P6",
              "ATLAS_AZURE_STORAGE_P10",
              "ATLAS_AZURE_STORAGE_P15",
              "ATLAS_AZURE_STORAGE_P20",
              "ATLAS_AZURE_STORAGE_P30",
              "ATLAS_AZURE_STORAGE_P40",
              "ATLAS_AZURE_STORAGE_P50",
              "ATLAS_AZURE_DATA_TRANSFER",
              "ATLAS_AZURE_DATA_TRANSFER_REGIONAL_VNET_IN",
              "ATLAS_AZURE_DATA_TRANSFER_REGIONAL_VNET_OUT",
              "ATLAS_AZURE_DATA_TRANSFER_GLOBAL_VNET_IN",
              "ATLAS_AZURE_DATA_TRANSFER_GLOBAL_VNET_OUT",
              "ATLAS_AZURE_DATA_TRANSFER_AVAILABILITY_ZONE_IN",
              "ATLAS_AZURE_DATA_TRANSFER_AVAILABILITY_ZONE_OUT",
              "ATLAS_AZURE_DATA_TRANSFER_INTER_REGION_INTRA_CONTINENT",
              "ATLAS_AZURE_DATA_TRANSFER_INTER_REGION_INTER_CONTINENT",
              "ATLAS_AZURE_BACKUP_SNAPSHOT_STORAGE",
              "ATLAS_AZURE_BACKUP_DOWNLOAD_VM",
              "ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P2",
              "ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P3",
              "ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P4",
              "ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P6",
              "ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P10",
              "ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P15",
              "ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P20",
              "ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P30",
              "ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P40",
              "ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_P50",
              "ATLAS_AZURE_STANDARD_STORAGE",
              "ATLAS_AZURE_EXTENDED_STANDARD_IOPS",
              "ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE",
              "ATLAS_AZURE_BACKUP_DOWNLOAD_VM_STORAGE_EXTENDED_IOPS",
              "ATLAS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE",
              "ATLAS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_EXTENDED_IOPS",
              "ATLAS_BI_CONNECTOR",
              "ATLAS_ADVANCED_SECURITY",
              "ATLAS_ENTERPRISE_AUDITING",
              "ATLAS_FREE_SUPPORT",
              "ATLAS_SUPPORT",
              "STITCH_DATA_DOWNLOADED_FREE_TIER",
              "STITCH_DATA_DOWNLOADED",
              "STITCH_COMPUTE_FREE_TIER",
              "STITCH_COMPUTE",
              "CREDIT",
              "MINIMUM_CHARGE",
              "CHARTS_DATA_DOWNLOADED_FREE_TIER",
              "CHARTS_DATA_DOWNLOADED",
              "ATLAS_DATA_LAKE_AWS_DATA_RETURNED_SAME_REGION",
              "ATLAS_DATA_LAKE_AWS_DATA_RETURNED_DIFFERENT_REGION",
              "ATLAS_DATA_LAKE_AWS_DATA_RETURNED_INTERNET",
              "ATLAS_DATA_LAKE_AWS_DATA_SCANNED",
              "ATLAS_DATA_LAKE_AWS_DATA_TRANSFERRED_FROM_DIFFERENT_REGION",
              "ATLAS_NDS_AWS_DATA_LAKE_STORAGE_ACCESS",
              "ATLAS_NDS_AWS_DATA_LAKE_STORAGE",
              "ATLAS_DATA_FEDERATION_AZURE_DATA_RETURNED_SAME_REGION",
              "ATLAS_DATA_FEDERATION_AZURE_DATA_RETURNED_SAME_CONTINENT",
              "ATLAS_DATA_FEDERATION_AZURE_DATA_RETURNED_DIFFERENT_CONTINENT",
              "ATLAS_DATA_FEDERATION_AZURE_DATA_RETURNED_INTERNET",
              "ATLAS_DATA_FEDERATION_GCP_DATA_RETURNED_SAME_REGION",
              "ATLAS_DATA_FEDERATION_GCP_DATA_RETURNED_DIFFERENT_REGION",
              "ATLAS_DATA_FEDERATION_GCP_DATA_RETURNED_INTERNET",
              "ATLAS_DATA_FEDERATION_AZURE_DATA_SCANNED",
              "ATLAS_NDS_AZURE_DATA_LAKE_STORAGE_ACCESS",
              "ATLAS_NDS_AZURE_DATA_LAKE_STORAGE",
              "ATLAS_DATA_FEDERATION_GCP_DATA_SCANNED",
              "ATLAS_NDS_GCP_DATA_LAKE_STORAGE_ACCESS",
              "ATLAS_NDS_GCP_DATA_LAKE_STORAGE",
              "ATLAS_NDS_AWS_OBJECT_STORAGE_ACCESS",
              "ATLAS_NDS_AWS_COMPRESSED_OBJECT_STORAGE",
              "ATLAS_NDS_AZURE_OBJECT_STORAGE_ACCESS",
              "ATLAS_NDS_AZURE_OBJECT_STORAGE",
              "ATLAS_NDS_AZURE_COMPRESSED_OBJECT_STORAGE",
              "ATLAS_NDS_GCP_OBJECT_STORAGE_ACCESS",
              "ATLAS_NDS_GCP_OBJECT_STORAGE",
              "ATLAS_NDS_GCP_COMPRESSED_OBJECT_STORAGE",
              "ATLAS_ARCHIVE_ACCESS_PARTITION_LOCATE",
              "ATLAS_NDS_AWS_PIT_RESTORE_STORAGE_FREE_TIER",
              "ATLAS_NDS_AWS_PIT_RESTORE_STORAGE",
              "ATLAS_NDS_GCP_PIT_RESTORE_STORAGE_FREE_TIER",
              "ATLAS_NDS_GCP_PIT_RESTORE_STORAGE",
              "ATLAS_NDS_AZURE_PIT_RESTORE_STORAGE_FREE_TIER",
              "ATLAS_NDS_AZURE_PIT_RESTORE_STORAGE",
              "ATLAS_NDS_AZURE_PRIVATE_ENDPOINT_CAPACITY_UNITS",
              "ATLAS_NDS_AWS_OBJECT_STORAGE",
              "ATLAS_NDS_AWS_SNAPSHOT_EXPORT_UPLOAD",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_UPLOAD",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_M40",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_M50",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_M60",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P2",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P3",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P4",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P6",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P10",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P15",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P20",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P30",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P40",
              "ATLAS_NDS_AZURE_SNAPSHOT_EXPORT_VM_STORAGE_P50",
              "ATLAS_NDS_AWS_SNAPSHOT_EXPORT_VM",
              "ATLAS_NDS_AWS_SNAPSHOT_EXPORT_VM_M40",
              "ATLAS_NDS_AWS_SNAPSHOT_EXPORT_VM_M50",
              "ATLAS_NDS_AWS_SNAPSHOT_EXPORT_VM_M60",
              "ATLAS_NDS_AWS_SNAPSHOT_EXPORT_VM_STORAGE",
              "ATLAS_NDS_AWS_SNAPSHOT_EXPORT_VM_STORAGE_IOPS",
              "ATLAS_NDS_GCP_SNAPSHOT_EXPORT_VM",
              "ATLAS_NDS_GCP_SNAPSHOT_EXPORT_VM_M40",
              "ATLAS_NDS_GCP_SNAPSHOT_EXPORT_VM_M50",
              "ATLAS_NDS_GCP_SNAPSHOT_EXPORT_VM_M60",
              "ATLAS_NDS_GCP_SNAPSHOT_EXPORT_VM_STORAGE",
              "ATLAS_NDS_AWS_SERVERLESS_RPU",
              "ATLAS_NDS_AWS_SERVERLESS_WPU",
              "ATLAS_NDS_AWS_SERVERLESS_STORAGE",
              "ATLAS_NDS_AWS_SERVERLESS_CONTINUOUS_BACKUP",
              "ATLAS_NDS_AWS_SERVERLESS_BACKUP_RESTORE_VM",
              "ATLAS_NDS_AWS_SERVERLESS_DATA_TRANSFER_PREVIEW",
              "ATLAS_NDS_AWS_SERVERLESS_DATA_TRANSFER",
              "ATLAS_NDS_AWS_SERVERLESS_DATA_TRANSFER_REGIONAL",
              "ATLAS_NDS_AWS_SERVERLESS_DATA_TRANSFER_CROSS_REGION",
              "ATLAS_NDS_AWS_SERVERLESS_DATA_TRANSFER_INTERNET",
              "ATLAS_NDS_GCP_SERVERLESS_RPU",
              "ATLAS_NDS_GCP_SERVERLESS_WPU",
              "ATLAS_NDS_GCP_SERVERLESS_STORAGE",
              "ATLAS_NDS_GCP_SERVERLESS_CONTINUOUS_BACKUP",
              "ATLAS_NDS_GCP_SERVERLESS_BACKUP_RESTORE_VM",
              "ATLAS_NDS_GCP_SERVERLESS_DATA_TRANSFER_PREVIEW",
              "ATLAS_NDS_GCP_SERVERLESS_DATA_TRANSFER",
              "ATLAS_NDS_GCP_SERVERLESS_DATA_TRANSFER_REGIONAL",
              "ATLAS_NDS_GCP_SERVERLESS_DATA_TRANSFER_CROSS_REGION",
              "ATLAS_NDS_GCP_SERVERLESS_DATA_TRANSFER_INTERNET",
              "ATLAS_NDS_AZURE_SERVERLESS_RPU",
              "ATLAS_NDS_AZURE_SERVERLESS_WPU",
              "ATLAS_NDS_AZURE_SERVERLESS_STORAGE",
              "ATLAS_NDS_AZURE_SERVERLESS_CONTINUOUS_BACKUP",
              "ATLAS_NDS_AZURE_SERVERLESS_BACKUP_RESTORE_VM",
              "ATLAS_NDS_AZURE_SERVERLESS_DATA_TRANSFER_PREVIEW",
              "ATLAS_NDS_AZURE_SERVERLESS_DATA_TRANSFER",
              "ATLAS_NDS_AZURE_SERVERLESS_DATA_TRANSFER_REGIONAL",
              "ATLAS_NDS_AZURE_SERVERLESS_DATA_TRANSFER_CROSS_REGION",
              "ATLAS_NDS_AZURE_SERVERLESS_DATA_TRANSFER_INTERNET",
              "REALM_APP_REQUESTS_FREE_TIER",
              "REALM_APP_REQUESTS",
              "REALM_APP_COMPUTE_FREE_TIER",
              "REALM_APP_COMPUTE",
              "REALM_APP_SYNC_FREE_TIER",
              "REALM_APP_SYNC",
              "REALM_APP_DATA_TRANSFER_FREE_TIER",
              "REALM_APP_DATA_TRANSFER",
              "GCP_SNAPSHOT_COPY_DISK",
              "ATLAS_AWS_STREAM_PROCESSING_INSTANCE_SP10",
              "ATLAS_AWS_STREAM_PROCESSING_INSTANCE_SP30",
              "ATLAS_AWS_STREAM_PROCESSING_INSTANCE_SP50",
              "ATLAS_AZURE_STREAM_PROCESSING_INSTANCE_SP10",
              "ATLAS_AZURE_STREAM_PROCESSING_INSTANCE_SP30",
              "ATLAS_AZURE_STREAM_PROCESSING_INSTANCE_SP50",
              "ATLAS_AWS_STREAM_PROCESSING_DATA_TRANSFER",
              "ATLAS_AZURE_STREAM_PROCESSING_DATA_TRANSFER",
              "ATLAS_AWS_STREAM_PROCESSING_VPC_PEERING"
            ]
          },
          "startDate": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud began charging for this line item. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "format": "date-time",
            "readOnly": true
          },
          "stitchAppName": {
            "type": "string",
            "description": "Human-readable label that identifies the Atlas App Services application associated with this line item.",
            "readOnly": true,
            "externalDocs": {
              "description": "Create a new Atlas App Service",
              "url": "https://www.mongodb.com/docs/atlas/app-services/manage-apps/create/create-with-ui/"
            }
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "description": "A map of key-value pairs corresponding to the tags associated with the line item resource.",
              "readOnly": true,
              "items": {
                "type": "string",
                "description": "A map of key-value pairs corresponding to the tags associated with the line item resource.",
                "readOnly": true
              }
            },
            "description": "A map of key-value pairs corresponding to the tags associated with the line item resource.",
            "readOnly": true
          },
          "tierLowerBound": {
            "type": "number",
            "description": "Lower bound for usage amount range in current SKU tier. \n\n**NOTE**: **lineItems[n].tierLowerBound** appears only if your **lineItems[n].sku** is tiered.",
            "format": "double",
            "readOnly": true
          },
          "tierUpperBound": {
            "type": "number",
            "description": "Upper bound for usage amount range in current SKU tier. \n\n**NOTE**: **lineItems[n].tierUpperBound** appears only if your **lineItems[n].sku** is tiered.",
            "format": "double",
            "readOnly": true
          },
          "totalPriceCents": {
            "type": "integer",
            "description": "Sum of the cost set for this line item. MongoDB Cloud expresses this value in cents (100ths of one US Dollar) and calculates this value as **unitPriceDollars** × **quantity** × 100.",
            "format": "int64",
            "readOnly": true
          },
          "unit": {
            "type": "string",
            "description": "Element used to express what **quantity** this line item measures. This value can be elements of time, storage capacity, and the like.",
            "readOnly": true
          },
          "unitPriceDollars": {
            "type": "number",
            "description": "Value per **unit** for this line item expressed in US Dollars.",
            "format": "double",
            "readOnly": true
          }
        },
        "description": "One service included in this invoice."
      },
      "PaginatedApiInvoiceView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/BillingInvoice"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "DBRoleToExecute": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "role": {
            "type": "string",
            "description": "The name of the role to use. Can be a built in role or a custom role."
          },
          "type": {
            "title": "DB Role Type",
            "type": "string",
            "description": "Type of the DB role. Can be either BuiltIn or Custom.",
            "enum": ["BUILT_IN", "CUSTOM"]
          }
        },
        "description": "The name of a Built in or Custom DB Role to connect to an Atlas Cluster."
      },
      "ProxyInfo": {
        "type": "object",
        "properties": {
          "authKey": {
            "type": "string",
            "description": "Authentication key for the proxy."
          },
          "dnsName": {
            "type": "string",
            "description": "DNS name to use to reach the proxy/s."
          }
        },
        "description": "VPC Proxy Information."
      },
      "StreamsClusterConnection": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/StreamsConnection"
          },
          {
            "type": "object",
            "properties": {
              "clusterName": {
                "type": "string",
                "description": "Name of the cluster configured for this connection."
              },
              "dbRoleToExecute": {
                "$ref": "#/components/schemas/DBRoleToExecute"
              }
            }
          }
        ]
      },
      "StreamsConnection": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the stream connection. In the case of the Sample type, this is the name of the sample source."
          },
          "type": {
            "type": "string",
            "description": "Type of the connection. Can be either Cluster or Kafka.",
            "enum": ["Kafka", "Cluster", "Sample"]
          }
        },
        "description": "Settings that define a connection to an external data store.",
        "readOnly": true,
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "Cluster": "#/components/schemas/StreamsClusterConnection",
            "Kafka": "#/components/schemas/StreamsKafkaConnection",
            "Sample": "#/components/schemas/StreamsSampleConnection"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/StreamsClusterConnection"
          },
          {
            "$ref": "#/components/schemas/StreamsKafkaConnection"
          },
          {
            "$ref": "#/components/schemas/StreamsSampleConnection"
          }
        ]
      },
      "StreamsKafkaAuthentication": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "Password of the account to connect to the Kafka cluster.",
            "format": "password",
            "writeOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "mechanism": {
            "type": "string",
            "description": "Style of authentication. Can be one of PLAIN, SCRAM-256, or SCRAM-512."
          },
          "username": {
            "type": "string",
            "description": "Username of the account to connect to the Kafka cluster."
          }
        },
        "description": "User credentials required to connect to a Kafka Cluster. Includes the authentication type, as well as the parameters for that authentication mode."
      },
      "StreamsKafkaConnection": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/StreamsConnection"
          },
          {
            "type": "object",
            "properties": {
              "authentication": {
                "$ref": "#/components/schemas/StreamsKafkaAuthentication"
              },
              "bootstrapServers": {
                "type": "string",
                "description": "Comma separated list of server addresses."
              },
              "config": {
                "type": "object",
                "additionalProperties": {
                  "type": "string",
                  "description": "A map of Kafka key-value pairs for optional configuration. This is a flat object, and keys can have '.' characters.",
                  "example": "{\"group.protocol.type\":\"consumer\",\"debug\":\"queue, msg, protocol\"}"
                },
                "description": "A map of Kafka key-value pairs for optional configuration. This is a flat object, and keys can have '.' characters.",
                "example": {
                  "group.protocol.type": "consumer",
                  "debug": "queue, msg, protocol"
                }
              },
              "networking": {
                "$ref": "#/components/schemas/StreamsKafkaNetworking"
              },
              "proxyInfo": {
                "$ref": "#/components/schemas/ProxyInfo"
              },
              "security": {
                "$ref": "#/components/schemas/StreamsKafkaSecurity"
              }
            }
          }
        ]
      },
      "StreamsKafkaNetworking": {
        "type": "object",
        "properties": {
          "access": {
            "$ref": "#/components/schemas/StreamsKafkaNetworkingAccess"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        },
        "description": "Networking Access Type can either be 'PUBLIC' (default) or VPC. VPC type is in public preview, please file a support ticket to enable VPC Network Access"
      },
      "StreamsKafkaNetworkingAccess": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "name": {
            "type": "string",
            "description": "Id of the vpc peer when the type is VPC."
          },
          "type": {
            "title": "Networking Access Type",
            "type": "string",
            "description": "Selected networking type. Either PUBLIC or VPC. Defaults to PUBLIC",
            "enum": ["PUBLIC", "VPC"]
          }
        },
        "description": "Information about the networking access."
      },
      "StreamsKafkaSecurity": {
        "type": "object",
        "properties": {
          "brokerPublicCertificate": {
            "type": "string",
            "description": "A trusted, public x509 certificate for connecting to Kafka over SSL."
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "protocol": {
            "type": "string",
            "description": "Describes the transport type. Can be either PLAINTEXT or SSL."
          }
        },
        "description": "Properties for the secure transport connection to Kafka. For SSL, this can include the trusted certificate to use."
      },
      "StreamsSampleConnection": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/StreamsConnection"
          }
        ]
      },
      "StreamsDLQ": {
        "type": "object",
        "properties": {
          "coll": {
            "type": "string",
            "description": "Name of the collection that will be used for the DLQ."
          },
          "connectionName": {
            "type": "string",
            "description": "Connection name that will be used to write DLQ messages to. Has to be an Atlas connection."
          },
          "db": {
            "type": "string",
            "description": "Name of the database that will be used for the DLQ."
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        },
        "description": "Dead letter queue for the stream processor."
      },
      "StreamsProcessor": {
        "type": "object",
        "properties": {
          "_id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the stream processor.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "dlq": {
            "$ref": "#/components/schemas/StreamsDLQ"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "name": {
            "type": "string",
            "description": "Human-readable name of the stream processor."
          },
          "pipeline": {
            "type": "string",
            "description": "Stream aggregation pipeline you want to apply to your streaming data."
          }
        },
        "description": "An atlas stream processor."
      },
      "ApiStreamsAWSRegionView": {
        "type": "string",
        "description": "Atlas Streams AWS Regions.",
        "enum": ["VIRGINIA_USA"]
      },
      "BaseStreamsRegion": {
        "type": "object",
        "description": "Name of the cloud provider region hosting Atlas Stream Processing.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/ApiStreamsAWSRegionView"
          }
        ]
      },
      "StreamConfig": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "tier": {
            "title": "Stream Instance Tier",
            "type": "string",
            "description": "Selected tier for the Stream Instance. Configures Memory / VCPU allowances.",
            "enum": ["SP30", "SP10"]
          }
        },
        "description": "Configuration options for an Atlas Stream Processing Instance.",
        "nullable": true
      },
      "StreamsDataProcessRegion": {
        "required": ["cloudProvider", "region"],
        "type": "object",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Label that identifies the cloud service provider where MongoDB Cloud performs stream processing. Currently, this parameter supports AWS only.",
            "enum": ["AWS", "GCP", "AZURE", "TENANT", "SERVERLESS"]
          },
          "region": {
            "$ref": "#/components/schemas/BaseStreamsRegion"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        },
        "description": "Information about the cloud provider region in which MongoDB Cloud processes the stream."
      },
      "StreamsTenant": {
        "type": "object",
        "properties": {
          "_id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the project.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "connections": {
            "type": "array",
            "description": "List of connections configured in the stream instance.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/StreamsConnection"
            }
          },
          "dataProcessRegion": {
            "$ref": "#/components/schemas/StreamsDataProcessRegion"
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the project.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "hostnames": {
            "type": "array",
            "description": "List that contains the hostnames assigned to the stream instance.",
            "readOnly": true,
            "items": {
              "type": "string",
              "description": "Unique hostname assigned to the stream instance.",
              "readOnly": true
            }
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the stream instance."
          },
          "streamConfig": {
            "$ref": "#/components/schemas/StreamConfig"
          }
        }
      },
      "PaginatedApiStreamsConnectionView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/StreamsConnection"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "PaginatedApiStreamsTenantView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud providers when completing this request.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/StreamsTenant"
            }
          },
          "totalCount": {
            "minimum": 0,
            "type": "integer",
            "description": "Total number of documents available. MongoDB Cloud omits this value if `includeCount` is set to `false`.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "Document": {
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "description": "The stats associated with the stream processor.",
          "readOnly": true
        },
        "description": "The stats associated with the stream processor.",
        "readOnly": true
      },
      "StreamsProcessorWithStats": {
        "required": ["_id", "name", "pipeline", "state"],
        "type": "object",
        "properties": {
          "_id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the stream processor.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "name": {
            "type": "string",
            "description": "Human-readable name of the stream processor.",
            "readOnly": true
          },
          "pipeline": {
            "type": "string",
            "description": "Stream aggregation pipeline you want to apply to your streaming data.",
            "readOnly": true
          },
          "state": {
            "type": "string",
            "description": "The state of the stream processor.",
            "readOnly": true
          },
          "stats": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "The stats associated with the stream processor.",
              "readOnly": true
            },
            "description": "The stats associated with the stream processor.",
            "readOnly": true
          }
        },
        "description": "An atlas stream processor with optional stats."
      },
      "AccessListItemView": {
        "required": ["ipAddress"],
        "type": "object",
        "properties": {
          "cidrBlock": {
            "pattern": "^((([0-9]{1,3}\\.){3}[0-9]{1,3})|(:{0,2}([0-9a-f]{1,4}:){0,7}[0-9a-f]{1,4}[:]{0,2}))((%2[fF]|/)[0-9]{1,3})+$",
            "type": "string",
            "description": "Range of IP addresses in Classless Inter-Domain Routing (CIDR) notation that found in this project's access list.",
            "readOnly": true
          },
          "ipAddress": {
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
            "type": "string",
            "description": "IP address included in the API access list.",
            "readOnly": true
          }
        }
      },
      "ApiKey": {
        "required": ["id", "publicKey"],
        "type": "object",
        "properties": {
          "accessList": {
            "type": "array",
            "description": "List of network addresses granted access to this API using this API key.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/AccessListItemView"
            }
          },
          "id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this organization API key.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "publicKey": {
            "maxLength": 8,
            "minLength": 8,
            "type": "string",
            "description": "Public API key value set for the specified organization API key.",
            "readOnly": true
          },
          "roles": {
            "type": "array",
            "description": "List that contains roles that the API key needs to have. All roles you provide must be valid for the specified project or organization. Each request must include a minimum of one valid role. The resource returns all project and organization roles assigned to the Cloud user.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/CloudAccessRoleAssignment"
            }
          }
        },
        "description": "Details contained in one API key.",
        "nullable": true,
        "readOnly": true
      },
      "SystemStatus": {
        "required": ["apiKey", "appName", "build", "throttling"],
        "type": "object",
        "properties": {
          "apiKey": {
            "$ref": "#/components/schemas/ApiKey"
          },
          "appName": {
            "type": "string",
            "description": "Human-readable label that identifies the service from which you requested this response.",
            "readOnly": true,
            "enum": ["MongoDB Atlas"]
          },
          "build": {
            "type": "string",
            "description": "Unique 40-hexadecimal digit hash that identifies the latest git commit merged for this application.",
            "readOnly": true,
            "example": "83be55e140f493c88e7f578aae96548dd881587b"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "throttling": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled throttling on this service.",
            "readOnly": true
          }
        }
      },
      "TargetOrg": {
        "required": ["linkToken"],
        "type": "object",
        "properties": {
          "linkToken": {
            "type": "string",
            "description": "Link token that contains all the information required to complete the link."
          }
        }
      },
      "TargetOrgRequest": {
        "type": "object",
        "properties": {
          "accessListIps": {
            "type": "array",
            "description": "IP address access list entries associated with the API key.",
            "items": {
              "type": "string",
              "description": "One IP address access list entry associated with the API key."
            }
          }
        }
      },
      "AvailableClustersDeployment": {
        "title": "Available Clusters",
        "required": ["featureCompatibilityVersion", "managed", "mongoDBVersion", "name", "sharded", "tlsEnabled"],
        "type": "object",
        "properties": {
          "agentVersion": {
            "type": "string",
            "description": "Version of MongoDB Agent that monitors/manages the cluster.",
            "readOnly": true
          },
          "clusterId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the cluster.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "dbSizeBytes": {
            "type": "integer",
            "description": "Size of this database on disk at the time of the request expressed in bytes.",
            "format": "int64",
            "readOnly": true,
            "example": 8192
          },
          "featureCompatibilityVersion": {
            "type": "string",
            "description": "Version of MongoDB [features](https://docs.mongodb.com/manual/reference/command/setFeatureCompatibilityVersion) that this cluster supports.",
            "readOnly": true
          },
          "managed": {
            "type": "boolean",
            "description": "Flag that indicates whether Automation manages this cluster.",
            "readOnly": true
          },
          "mongoDBVersion": {
            "type": "string",
            "description": "Version of MongoDB that this cluster runs.",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies this cluster.",
            "readOnly": true,
            "example": "Project X sharded cluster"
          },
          "oplogSizeMB": {
            "type": "integer",
            "description": "Size of the Oplog on disk at the time of the request expressed in MB.",
            "format": "int32",
            "readOnly": true,
            "example": 3
          },
          "sharded": {
            "type": "boolean",
            "description": "Flag that indicates whether someone configured this cluster as a sharded cluster.\n\n- If `true`, this cluster serves as a sharded cluster.\n- If `false`, this cluster serves as a replica set.",
            "readOnly": true
          },
          "shardsSize": {
            "type": "integer",
            "description": "Number of shards that comprise this cluster.",
            "format": "int32",
            "readOnly": true,
            "example": 3
          },
          "tlsEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled TLS for this cluster.",
            "readOnly": true
          }
        },
        "description": "Deployments that can be migrated to MongoDB Atlas."
      },
      "LiveImportAvailableProject": {
        "required": ["name", "projectId"],
        "type": "object",
        "properties": {
          "deployments": {
            "type": "array",
            "description": "List of clusters that can be migrated to MongoDB Cloud.",
            "items": {
              "$ref": "#/components/schemas/AvailableClustersDeployment"
            }
          },
          "migrationHosts": {
            "type": "array",
            "description": "Hostname of MongoDB Agent list that you configured to perform a migration.",
            "items": {
              "type": "string",
              "description": "Hostname of MongoDB Agent that you configured to perform a migration."
            }
          },
          "name": {
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "description": "Human-readable label that identifies this project.",
            "readOnly": true
          },
          "projectId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project to be migrated.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          }
        }
      },
      "LiveMigrationResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the migration job.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "lagTimeSeconds": {
            "type": "integer",
            "description": "Replication lag between the source and destination clusters. Atlas returns this setting only during an active migration, before the cutover phase.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "migrationHosts": {
            "type": "array",
            "description": "List of hosts running MongoDB Agents. These Agents can transfer your MongoDB data between one source and one target cluster.",
            "readOnly": true,
            "items": {
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?$",
              "type": "string",
              "description": "One host running a MongoDB Agent. This Agent can transfer your MongoDB data between one source and one target cluster.",
              "example": "vm001.example.com"
            }
          },
          "readyForCutover": {
            "type": "boolean",
            "description": "Flag that indicates the migrated cluster can be cut over to MongoDB Atlas.",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "Progress made in migrating one cluster to MongoDB Atlas.\n\n| Status   | Explanation |\n|----------|-------------|\n| NEW      | Someone scheduled a local cluster migration to MongoDB Atlas. |\n| FAILED   | The cluster migration to MongoDB Atlas failed.                |\n| COMPLETE | The cluster migration to MongoDB Atlas succeeded.             |\n| EXPIRED  | MongoDB Atlas prepares to begin the cut over of the migrating cluster when source and target clusters have almost synchronized. If `\"readyForCutover\" : true`, this synchronization starts a timer of 120 hours. You can extend this timer. If the timer expires, MongoDB Atlas returns this status. |\n| WORKING  | The cluster migration to MongoDB Atlas is performing one of the following tasks:<ul><li>Preparing connections to source and target clusters</li><li>Replicating data from source to target</li><li>Verifying MongoDB Atlas connection settings</li><li>Stopping replication after the cut over</li></ul> |\n",
            "readOnly": true,
            "enum": ["NEW", "WORKING", "FAILED", "COMPLETE", "EXPIRED"]
          }
        }
      },
      "LiveImportValidation": {
        "type": "object",
        "properties": {
          "_id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the validation.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "errorMessage": {
            "type": "string",
            "description": "Reason why the validation job failed.",
            "nullable": true,
            "readOnly": true
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project to validate.",
            "readOnly": true,
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "sourceGroupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the source project.",
            "example": "32b6e34b3d91647abb20e7b8"
          },
          "status": {
            "type": "string",
            "description": "State of the specified validation job returned at the time of the request.",
            "nullable": true,
            "readOnly": true,
            "enum": ["PENDING", "SUCCESS", "FAILED"]
          }
        }
      },
      "Destination": {
        "required": ["clusterName", "groupId", "hostnameSchemaType"],
        "type": "object",
        "properties": {
          "clusterName": {
            "type": "string",
            "description": "Label that identifies the destination cluster."
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the destination project.",
            "example": "9b43a5b329223c3a1591a678"
          },
          "hostnameSchemaType": {
            "type": "string",
            "description": "The network type to use between the migration host and the target cluster.",
            "default": "PUBLIC",
            "enum": ["PUBLIC", "PRIVATE_LINK", "VPC_PEERING"]
          },
          "privateLinkId": {
            "type": "string",
            "description": "Represents the endpoint to use when the host schema type is `PRIVATE_LINK`."
          }
        },
        "description": "Document that describes the destination of the migration."
      },
      "LiveMigrationRequest20240530": {
        "required": ["destination", "source"],
        "type": "object",
        "properties": {
          "_id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the migration request.",
            "readOnly": true,
            "example": "507f1f77bcf86cd799439011"
          },
          "destination": {
            "$ref": "#/components/schemas/Destination"
          },
          "dropDestinationData": {
            "type": "boolean",
            "description": "Flag that indicates whether the migration process drops all collections from the destination cluster before the migration starts.",
            "writeOnly": true,
            "default": false
          },
          "migrationHosts": {
            "maxItems": 1,
            "minItems": 1,
            "type": "array",
            "description": "List of migration hosts used for this migration.",
            "items": {
              "type": "string",
              "example": "vm001.example.com"
            }
          },
          "sharding": {
            "$ref": "#/components/schemas/ShardingRequest"
          },
          "source": {
            "$ref": "#/components/schemas/Source"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "readOnly": true,
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "ShardEntry": {
        "required": ["collection", "database", "shardCollection"],
        "type": "object",
        "properties": {
          "collection": {
            "type": "string",
            "description": "Human-readable label that identifies the collection to be sharded on the destination cluster.",
            "writeOnly": true
          },
          "database": {
            "type": "string",
            "description": "Human-readable label that identifies the database that contains the collection to be sharded on the destination cluster.",
            "writeOnly": true
          },
          "shardCollection": {
            "$ref": "#/components/schemas/ShardKeys"
          }
        },
        "description": "Sharding configuration for a collection to be sharded on the destination cluster."
      },
      "ShardKeys": {
        "type": "object",
        "properties": {
          "key": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of fields to use for the shard key.",
            "writeOnly": true,
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        },
        "description": "Document that configures the shard key on the destination cluster.",
        "writeOnly": true
      },
      "ShardingRequest": {
        "required": ["createSupportingIndexes"],
        "type": "object",
        "properties": {
          "createSupportingIndexes": {
            "type": "boolean",
            "description": "Flag that lets the migration create supporting indexes for the shard keys, if none exists, as the destination cluster also needs compatible indexes for the specified shard keys.",
            "writeOnly": true
          },
          "shardingEntries": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of shard configurations to shard destination collections. Atlas shards only those collections that you include in the sharding entries array.",
            "writeOnly": true,
            "items": {
              "$ref": "#/components/schemas/ShardEntry"
            }
          }
        },
        "description": "Document that configures sharding on the destination cluster when migrating from a replica set source to a sharded cluster destination on MongoDB 6.0 or higher. If you don't wish to shard any collections on the destination cluster, leave this empty.",
        "writeOnly": true
      },
      "Source": {
        "required": ["clusterName", "groupId", "managedAuthentication", "ssl"],
        "type": "object",
        "properties": {
          "caCertificatePath": {
            "type": "string",
            "description": "Path to the CA certificate that signed SSL certificates use to authenticate to the source cluster."
          },
          "clusterName": {
            "type": "string",
            "description": "Label that identifies the source cluster name."
          },
          "groupId": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the source project.",
            "example": "9b43a5b329223c3a1591a678"
          },
          "managedAuthentication": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Automation manages authentication to the source cluster. If true, do not provide values for username and password."
          },
          "password": {
            "type": "string",
            "description": "Password that authenticates the username to the source cluster.",
            "writeOnly": true
          },
          "ssl": {
            "type": "boolean",
            "description": "Flag that indicates whether you have SSL enabled."
          },
          "username": {
            "type": "string",
            "description": "Label that identifies the SCRAM-SHA user that connects to the source cluster.",
            "writeOnly": true
          }
        },
        "description": "Document that describes the source of the migration."
      },
      "LiveMigrationRequest": {
        "required": ["destination", "dropEnabled", "source"],
        "type": "object",
        "properties": {
          "_id": {
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the migration request.",
            "readOnly": true,
            "example": "507f1f77bcf86cd799439011"
          },
          "destination": {
            "$ref": "#/components/schemas/Destination"
          },
          "dropEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the migration process drops all collections from the destination cluster before the migration starts.",
            "writeOnly": true
          },
          "migrationHosts": {
            "maxItems": 1,
            "minItems": 1,
            "type": "array",
            "description": "List of migration hosts used for this migration.",
            "items": {
              "type": "string",
              "example": "vm001.example.com"
            }
          },
          "sharding": {
            "$ref": "#/components/schemas/ShardingRequest"
          },
          "source": {
            "$ref": "#/components/schemas/Source"
          }
        }
      },
      "ApiAtlasFTSAnalyzersViewManual": {
        "title": "analyzers",
        "required": ["name", "tokenizer"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Human-readable name that identifies the custom analyzer. Names must be unique within an index, and must not start with any of the following strings:\n- `lucene.`\n- `builtin.`\n- `mongodb.`"
          },
          "charFilters": {
            "type": "array",
            "description": "Filters that examine text one character at a time and perform filtering operations.",
            "items": {
              "type": "object",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/charFilterhtmlStrip"
                },
                {
                  "$ref": "#/components/schemas/charFiltericuNormalize"
                },
                {
                  "$ref": "#/components/schemas/charFiltermapping"
                },
                {
                  "$ref": "#/components/schemas/charFilterpersian"
                }
              ]
            }
          },
          "tokenizer": {
            "type": "object",
            "description": "Tokenizer that you want to use to create tokens. Tokens determine how Atlas Search splits up text into discrete chunks for indexing.",
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "edgeGram": "#/components/schemas/tokenizeredgeGram",
                "keyword": "#/components/schemas/tokenizerkeyword",
                "nGram": "#/components/schemas/tokenizernGram",
                "regexCaptureGroup": "#/components/schemas/tokenizerregexCaptureGroup",
                "regexSplit": "#/components/schemas/tokenizerregexSplit",
                "standard": "#/components/schemas/tokenizerstandard",
                "uaxUrlEmail": "#/components/schemas/tokenizeruaxUrlEmail",
                "whitespace": "#/components/schemas/tokenizerwhitespace"
              }
            },
            "oneOf": [
              {
                "$ref": "#/components/schemas/tokenizeredgeGram"
              },
              {
                "$ref": "#/components/schemas/tokenizerkeyword"
              },
              {
                "$ref": "#/components/schemas/tokenizernGram"
              },
              {
                "$ref": "#/components/schemas/tokenizerregexCaptureGroup"
              },
              {
                "$ref": "#/components/schemas/tokenizerregexSplit"
              },
              {
                "$ref": "#/components/schemas/tokenizerstandard"
              },
              {
                "$ref": "#/components/schemas/tokenizeruaxUrlEmail"
              },
              {
                "$ref": "#/components/schemas/tokenizerwhitespace"
              }
            ]
          },
          "tokenFilters": {
            "type": "array",
            "description": "Filter that performs operations such as:\n\n- Stemming, which reduces related words, such as \"talking\", \"talked\", and \"talks\" to their root word \"talk\".\n\n- Redaction, the removal of sensitive information from public documents.",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/tokenFilterasciiFolding"
                },
                {
                  "$ref": "#/components/schemas/tokenFilterdaitchMokotoffSoundex"
                },
                {
                  "$ref": "#/components/schemas/tokenFilteredgeGram"
                },
                {
                  "$ref": "#/components/schemas/TokenFilterEnglishPossessive"
                },
                {
                  "$ref": "#/components/schemas/TokenFilterFlattenGraph"
                },
                {
                  "$ref": "#/components/schemas/tokenFiltericuFolding"
                },
                {
                  "$ref": "#/components/schemas/tokenFiltericuNormalizer"
                },
                {
                  "$ref": "#/components/schemas/TokenFilterkStemming"
                },
                {
                  "$ref": "#/components/schemas/tokenFilterlength"
                },
                {
                  "$ref": "#/components/schemas/tokenFilterlowercase"
                },
                {
                  "$ref": "#/components/schemas/tokenFilternGram"
                },
                {
                  "$ref": "#/components/schemas/TokenFilterPorterStemming"
                },
                {
                  "$ref": "#/components/schemas/tokenFilterregex"
                },
                {
                  "$ref": "#/components/schemas/tokenFilterreverse"
                },
                {
                  "$ref": "#/components/schemas/tokenFiltershingle"
                },
                {
                  "$ref": "#/components/schemas/tokenFiltersnowballStemming"
                },
                {
                  "$ref": "#/components/schemas/TokenFilterSpanishPluralStemming"
                },
                {
                  "$ref": "#/components/schemas/TokenFilterStempel"
                },
                {
                  "$ref": "#/components/schemas/tokenFilterstopword"
                },
                {
                  "$ref": "#/components/schemas/tokenFiltertrim"
                },
                {
                  "$ref": "#/components/schemas/TokenFilterWordDelimiterGraph"
                }
              ]
            }
          }
        },
        "description": "Settings that describe one Atlas Search custom analyzer."
      },
      "charFilterhtmlStrip": {
        "title": "htmlStrip",
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this character filter type.",
            "enum": ["htmlStrip"]
          },
          "ignoredTags": {
            "type": "array",
            "description": "The HTML tags that you want to exclude from filtering.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Filter that strips out HTML constructs."
      },
      "charFiltericuNormalize": {
        "title": "icuNormalize",
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this character filter type.",
            "enum": ["icuNormalize"]
          }
        },
        "description": "Filter that processes normalized text with the ICU Normalizer. It is based on Lucene's ICUNormalizer2CharFilter.",
        "externalDocs": {
          "description": "ICUNormalizer2CharFilter",
          "url": "https://lucene.apache.org/core/8_3_0/analyzers-icu/org/apache/lucene/analysis/icu/ICUNormalizer2CharFilter.html"
        }
      },
      "charFiltermapping": {
        "title": "mapping",
        "required": ["mappings", "type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this character filter type.",
            "enum": ["mapping"]
          },
          "mappings": {
            "type": "object",
            "properties": {
              "additionalProperties": {
                "type": "string"
              }
            },
            "description": "Comma-separated list of mappings. A mapping indicates that one character or group of characters should be substituted for another, using the following format:\n\n`<original> : <replacement>`"
          }
        },
        "description": "Filter that applies normalization mappings that you specify to characters."
      },
      "charFilterpersian": {
        "title": "persian",
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this character filter type.",
            "enum": ["persian"]
          }
        },
        "description": "Filter that replaces instances of a zero-width non-joiner with an ordinary space. It is based on Lucene's PersianCharFilter.",
        "externalDocs": {
          "description": "PersianCharFilter",
          "url": "https://lucene.apache.org/core/8_0_0/analyzers-common/org/apache/lucene/analysis/fa/PersianCharFilter.html"
        }
      },
      "tokenizernGram": {
        "title": "nGram",
        "required": ["maxGram", "minGram", "type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this tokenizer type.",
            "enum": ["edgeGram"]
          },
          "minGram": {
            "type": "integer",
            "description": "Characters to include in the shortest token that Atlas Search creates."
          },
          "maxGram": {
            "type": "integer",
            "description": "Characters to include in the longest token that Atlas Search creates."
          }
        },
        "description": "Tokenizer that splits input into text chunks, or \"n-grams\", of into given sizes. You can't use the nGram tokenizer in synonym or autocomplete mapping definitions."
      },
      "tokenizeredgeGram": {
        "title": "edgeGram",
        "required": ["maxGram", "minGram", "type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this tokenizer type.",
            "enum": ["edgeGram"]
          },
          "minGram": {
            "type": "integer",
            "description": "Characters to include in the shortest token that Atlas Search creates."
          },
          "maxGram": {
            "type": "integer",
            "description": "Characters to include in the longest token that Atlas Search creates."
          }
        },
        "description": "Tokenizer that splits input from the left side, or \"edge\", of a text input into n-grams of given sizes. You can't use the edgeGram tokenizer in synonym or autocomplete mapping definitions."
      },
      "tokenizerkeyword": {
        "title": "keyword",
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this tokenizer type.",
            "enum": ["keyword"]
          }
        },
        "description": "Tokenizer that combines the entire input as a single token."
      },
      "tokenizerregexCaptureGroup": {
        "title": "regexCaptureGroup",
        "required": ["group", "pattern", "type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this tokenizer type.",
            "enum": ["regexCaptureGroup"]
          },
          "pattern": {
            "type": "string",
            "description": "Regular expression to match against."
          },
          "group": {
            "type": "integer",
            "description": "Index of the character group within the matching expression to extract into tokens. Use `0` to extract all character groups."
          }
        },
        "description": "Tokenizer that uses a regular expression pattern to extract tokens."
      },
      "tokenizerregexSplit": {
        "title": "regexSplit",
        "required": ["pattern", "type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this tokenizer type.",
            "enum": ["regexSplit"]
          },
          "pattern": {
            "type": "string",
            "description": "Regular expression to match against."
          }
        },
        "description": "Tokenizer that splits tokens using a regular-expression based delimiter."
      },
      "tokenizerstandard": {
        "title": "standard",
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this tokenizer type.",
            "enum": ["standard"]
          },
          "maxTokenLength": {
            "type": "integer",
            "description": "Maximum number of characters in a single token. Tokens greater than this length are split at this length into multiple tokens.",
            "default": 255
          }
        },
        "description": "Tokenizer that splits tokens based on word break rules from the Unicode Text Segmentation algorithm.",
        "externalDocs": {
          "description": "Unicode Text Segmentation Algorithm",
          "url": "https://www.unicode.org/L2/L2019/19034-uax29-34-draft.pdf"
        }
      },
      "tokenizeruaxUrlEmail": {
        "title": "uaxUrlEmail",
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this tokenizer type.",
            "enum": ["uaxUrlEmail"]
          },
          "maxTokenLength": {
            "type": "integer",
            "description": "Maximum number of characters in a single token. Tokens greater than this length are split at this length into multiple tokens.",
            "default": 255
          }
        },
        "description": "Tokenizer that creates tokens from URLs and email addresses. Although this tokenizer uses word break rules from the Unicode Text Segmentation algorithm, we recommend using it only when the indexed field value includes URLs and email addresses. For fields that don't include URLs or email addresses, use the **standard** tokenizer to create tokens based on word break rules.",
        "externalDocs": {
          "description": "Unicode Text Segmentation Algorithm",
          "url": "https://www.unicode.org/L2/L2019/19034-uax29-34-draft.pdf"
        }
      },
      "tokenizerwhitespace": {
        "title": "whitespace",
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this tokenizer type.",
            "enum": ["whitespace"]
          },
          "maxTokenLength": {
            "type": "integer",
            "description": "Maximum number of characters in a single token. Tokens greater than this length are split at this length into multiple tokens.",
            "default": 255
          }
        },
        "description": "Tokenizer that creates tokens based on occurrences of whitespace between words."
      },
      "tokenFilterasciiFolding": {
        "title": "asciiFolding",
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": ["asciiFolding"]
          },
          "originalTokens": {
            "type": "string",
            "description": "Value that indicates whether to include or omit the original tokens in the output of the token filter.\n\nChoose `include` if you want to support queries on both the original tokens as well as the converted forms.\n\n Choose `omit` if you want to query only on the converted forms of the original tokens.",
            "default": "omit",
            "enum": ["omit", "include"]
          }
        },
        "description": "Filter that converts alphabetic, numeric, and symbolic Unicode characters that are not in the Basic Latin Unicode block to their ASCII equivalents, if available.",
        "externalDocs": {
          "description": "Basic Latin Unicode block",
          "url": "https://en.wikipedia.org/wiki/Basic_Latin_(Unicode_block)"
        }
      },
      "tokenFilterdaitchMokotoffSoundex": {
        "title": "daitchMokotoffSoundex",
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": ["daitchMokotoffSoundex"]
          },
          "originalTokens": {
            "type": "string",
            "description": "Value that indicates whether to include or omit the original tokens in the output of the token filter.\n\nChoose `include` if you want to support queries on both the original tokens as well as the converted forms.\n\n Choose `omit` if you want to query only on the converted forms of the original tokens.",
            "default": "include",
            "enum": ["omit", "include"]
          }
        },
        "description": "Filter that creates tokens for words that sound the same based on the Daitch-Mokotoff Soundex phonetic algorithm. This filter can generate multiple encodings for each input, where each encoded token is a 6 digit number.\n\n**NOTE**: Don't use the **daitchMokotoffSoundex** token filter in:\n\n-Synonym or autocomplete mapping definitions\n- Operators where **fuzzy** is enabled. Atlas Search supports the **fuzzy** option only for the **autocomplete**, **term**, and **text** operators.",
        "externalDocs": {
          "description": "Daitch-Mokotoff Soundex phonetic algorithm",
          "url": "https://en.wikipedia.org/wiki/Daitch%E2%80%93Mokotoff_Soundex"
        }
      },
      "tokenFilteredgeGram": {
        "title": "edgeGram",
        "required": ["maxGram", "minGram", "type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": ["edgeGram"]
          },
          "minGram": {
            "type": "integer",
            "description": "Value that specifies the minimum length of generated n-grams. This value must be less than or equal to **maxGram**."
          },
          "maxGram": {
            "type": "integer",
            "description": "Value that specifies the maximum length of generated n-grams. This value must be greater than or equal to **minGram**."
          },
          "termNotInBounds": {
            "type": "string",
            "description": "Value that indicates whether to index tokens shorter than **minGram** or longer than **maxGram**.",
            "default": "omit",
            "enum": ["omit", "include"]
          }
        },
        "description": "Filter that tokenizes input from the left side, or \"edge\", of a text input into n-grams of configured sizes. You can't use this token filter in synonym or autocomplete mapping definitions."
      },
      "TokenFilterEnglishPossessive": {
        "title": "englishPossessive",
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": ["englishPossessive"]
          }
        },
        "description": "Filter that removes possessives (trailing 's) from words."
      },
      "TokenFilterFlattenGraph": {
        "title": "flattenGraph",
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": ["flattenGraph"]
          }
        },
        "description": "Filter that transforms a token filter graph, such as the token filter graph that the wordDelimiterGraph token filter produces, into a flat form suitable for indexing."
      },
      "tokenFiltericuFolding": {
        "title": "icuFolding",
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": ["icuFolding"]
          }
        },
        "description": "Filter that applies character folding from Unicode Technical Report #30.",
        "externalDocs": {
          "description": "Unicode Technical Report #30",
          "url": "http://www.unicode.org/reports/tr30/tr30-4.html"
        }
      },
      "tokenFiltericuNormalizer": {
        "title": "icuNormalizer",
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": ["icuNormalizer"]
          },
          "normalizationForm": {
            "type": "string",
            "description": "Normalization form to apply.",
            "default": "nfc",
            "enum": ["nfd", "nfc", "nfkd", "nfkc"]
          }
        },
        "description": "Filter that normalizes tokens using a standard Unicode Normalization Mode.",
        "externalDocs": {
          "description": "Unicode Normalization Mode",
          "url": "https://unicode.org/reports/tr15/"
        }
      },
      "TokenFilterkStemming": {
        "title": "kStemming",
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": ["kStemming"]
          }
        },
        "description": "Filter that combines algorithmic stemming with a built-in dictionary for the English language to stem words."
      },
      "tokenFilterlength": {
        "title": "length",
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": ["length"]
          },
          "min": {
            "type": "integer",
            "description": "Number that specifies the minimum length of a token. This value must be less than or equal to **max**.",
            "default": 0
          },
          "max": {
            "type": "integer",
            "description": "Number that specifies the maximum length of a token. Value must be greater than or equal to **min**.",
            "default": 255
          }
        },
        "description": "Filter that removes tokens that are too short or too long."
      },
      "tokenFilterlowercase": {
        "title": "lowercase",
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": ["lowercase"]
          }
        },
        "description": "Filter that normalizes token text to lowercase."
      },
      "tokenFilternGram": {
        "title": "nGram",
        "required": ["maxGram", "minGram", "type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": ["nGram"]
          },
          "minGram": {
            "type": "integer",
            "description": "Value that specifies the minimum length of generated n-grams. This value must be less than or equal to **maxGram**."
          },
          "maxGram": {
            "type": "integer",
            "description": "Value that specifies the maximum length of generated n-grams. This value must be greater than or equal to **minGram**."
          },
          "termNotInBounds": {
            "type": "string",
            "description": "Value that indicates whether to index tokens shorter than **minGram** or longer than **maxGram**.",
            "default": "omit",
            "enum": ["omit", "include"]
          }
        },
        "description": "Filter that tokenizes input into n-grams of configured sizes. You can't use this token filter in synonym or autocomplete mapping definitions."
      },
      "TokenFilterPorterStemming": {
        "title": "porterStemming",
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": ["porterStemming"]
          }
        },
        "description": "Filter that uses the porter stemming algorithm to remove the common morphological and inflectional suffixes from words in English. It expects lowercase text and doesn't work as expected for uppercase text."
      },
      "tokenFilterregex": {
        "title": "regex",
        "required": ["matches", "pattern", "replacement", "type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": ["regex"]
          },
          "pattern": {
            "type": "string",
            "description": "Regular expression pattern to apply to each token."
          },
          "replacement": {
            "type": "string",
            "description": "Replacement string to substitute wherever a matching pattern occurs."
          },
          "matches": {
            "type": "string",
            "description": "Value that indicates whether to replace only the first matching pattern or all matching patterns.",
            "enum": ["all", "first"]
          }
        },
        "description": "Filter that applies a regular expression to each token, replacing matches with a specified string."
      },
      "tokenFilterreverse": {
        "title": "reverse",
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": ["reverse"]
          }
        },
        "description": "Filter that reverses each string token."
      },
      "tokenFiltershingle": {
        "title": "shingle",
        "required": ["maxShingleSize", "minShingleSize", "type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": ["shingle"]
          },
          "minShingleSize": {
            "type": "integer",
            "description": "Value that specifies the minimum number of tokens per shingle. This value must be less than or equal to **maxShingleSize**."
          },
          "maxShingleSize": {
            "type": "integer",
            "description": "Value that specifies the maximum number of tokens per shingle. This value must be greater than or equal to **minShingleSize**."
          }
        },
        "description": "Filter that constructs shingles (token n-grams) from a series of tokens. You can't use this token filter in synonym or autocomplete mapping definitions."
      },
      "tokenFiltersnowballStemming": {
        "title": "snowballStemming",
        "required": ["stemmerName", "type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": ["snowballStemming"]
          },
          "stemmerName": {
            "type": "string",
            "description": "Snowball-generated stemmer to use.",
            "enum": [
              "arabic",
              "armenian",
              "basque",
              "catalan",
              "danish",
              "dutch",
              "english",
              "finnish",
              "french",
              "german",
              "german2",
              "hungarian",
              "irish",
              "italian",
              "kp",
              "lithuanian",
              "lovins",
              "norwegian",
              "porter",
              "portuguese",
              "romanian",
              "russian",
              "spanish",
              "swedish",
              "turkish"
            ]
          }
        },
        "description": "Filter that stems tokens using a Snowball-generated stemmer.",
        "externalDocs": {
          "description": "Snowball-generated stemmer",
          "url": "https://snowballstem.org/"
        }
      },
      "TokenFilterSpanishPluralStemming": {
        "title": "spanishPluralStemming",
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": ["spanishPluralStemming"]
          }
        },
        "description": "Filter that stems Spanish plural words. It expects lowercase text."
      },
      "TokenFilterStempel": {
        "title": "stempel",
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": ["stempel"]
          }
        },
        "description": "Filter that uses Lucene's default Polish stemmer table to stem words in the Polish language. It expects lowercase text.",
        "externalDocs": {
          "description": "Default Polish stemmer table",
          "url": "https://lucene.apache.org/core/9_2_0/analysis/stempel/org/apache/lucene/analysis/pl/PolishAnalyzer.html#DEFAULT_STEMMER_FILE"
        }
      },
      "tokenFilterstopword": {
        "title": "stopword",
        "required": ["tokens", "type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": ["stopword"]
          },
          "tokens": {
            "type": "array",
            "description": "The stop words that correspond to the tokens to remove. Value must be one or more stop words.",
            "items": {
              "type": "string"
            }
          },
          "ignoreCase": {
            "type": "boolean",
            "description": "Flag that indicates whether to ignore the case of stop words when filtering the tokens to remove.",
            "default": true
          }
        },
        "description": "Filter that removes tokens that correspond to the specified stop words. This token filter doesn't analyze the stop words that you specify."
      },
      "tokenFiltertrim": {
        "title": "trim",
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": ["trim"]
          }
        },
        "description": "Filter that trims leading and trailing whitespace from tokens."
      },
      "TokenFilterWordDelimiterGraph": {
        "title": "wordDelimiterGraph",
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": ["wordDelimiterGraph"]
          },
          "delimiterOptions": {
            "type": "object",
            "properties": {
              "generateWordParts": {
                "type": "boolean",
                "description": "Flag that indicates whether to split tokens based on sub-words.",
                "default": true
              },
              "generateNumberParts": {
                "type": "boolean",
                "description": "Flag that indicates whether to split tokens based on sub-numbers. For example, if `true`, this option splits `100-2` into `100` and `2`.",
                "default": true
              },
              "concatenateWords": {
                "type": "boolean",
                "description": "Flag that indicates whether to concatenate runs of sub-words.",
                "default": false
              },
              "concatenateNumbers": {
                "type": "boolean",
                "description": "Flag that indicates whether to concatenate runs of sub-numbers.",
                "default": false
              },
              "concatenateAll": {
                "type": "boolean",
                "description": "Flag that indicates whether to concatenate runs.",
                "default": false
              },
              "preserveOriginal": {
                "type": "boolean",
                "description": "Flag that indicates whether to generate tokens of the original words.",
                "default": true
              },
              "splitOnCaseChange": {
                "type": "boolean",
                "description": "Flag that indicates whether to split tokens based on letter-case transitions.",
                "default": true
              },
              "splitOnNumerics": {
                "type": "boolean",
                "description": "Flag that indicates whether to split tokens based on letter-number transitions.",
                "default": true
              },
              "stemEnglishPossessive": {
                "type": "boolean",
                "description": "Flag that indicates whether to remove trailing possessives from each sub-word.",
                "default": true
              },
              "ignoreKeywords": {
                "type": "boolean",
                "description": "Flag that indicates whether to skip tokens with the `keyword` attribute set to `true`",
                "default": false
              }
            },
            "description": "Object that contains the rules that determine how to split words into sub-words."
          },
          "protectedWords": {
            "required": ["words"],
            "type": "object",
            "properties": {
              "words": {
                "type": "array",
                "description": "List that contains the tokens to protect from delimination.",
                "items": {
                  "type": "string"
                }
              },
              "ignoreCase": {
                "type": "boolean",
                "description": "Flag that indicates whether to ignore letter case sensitivity for protected words.",
                "default": true
              }
            },
            "description": "Object that contains options for protected words."
          }
        },
        "description": "Filter that splits tokens into sub-tokens based on configured rules."
      }
    },
    "responses": {
      "accepted": {
        "description": "Accepted."
      },
      "badRequest": {
        "description": "Bad Request.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            },
            "example": {
              "error": 400,
              "reason": "Bad Request",
              "errorCode": "VALIDATION_ERROR",
              "detail": "(This is just an example, the exception may not be related to this endpoint) No provider AWS exists."
            }
          }
        }
      },
      "notFound": {
        "description": "Not Found.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            },
            "example": {
              "error": 404,
              "reason": "Not Found",
              "errorCode": "RESOURCE_NOT_FOUND",
              "detail": "(This is just an example, the exception may not be related to this endpoint) Cannot find resource AWS"
            }
          }
        }
      },
      "conflict": {
        "description": "Conflict.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            },
            "example": {
              "error": 409,
              "reason": "Conflict",
              "errorCode": "CANNOT_DELETE_ORG_ACTIVE_LIVE_MIGRATION_ATLAS_ORG_LINK",
              "detail": "(This is just an example, the exception may not be related to this endpoint) Cannot delete organization link while there is active migration in following project ids: 60c4fd418ebe251047c50554"
            }
          }
        }
      },
      "noBody": {
        "description": "This endpoint does not return a response body."
      },
      "unauthorized": {
        "description": "Unauthorized.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            },
            "example": {
              "error": 401,
              "reason": "Unauthorized",
              "errorCode": "NOT_ORG_GROUP_CREATOR",
              "detail": "(This is just an example, the exception may not be related to this endpoint)"
            }
          }
        }
      },
      "gone": {
        "description": "Gone.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            },
            "example": {
              "error": 410,
              "reason": "Gone",
              "errorCode": "VERSION_GONE",
              "detail": "This happens when a resource is marked for sunset and the sunset date is in the past."
            }
          }
        }
      },
      "paymentRequired": {
        "description": "Payment Required.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            },
            "example": {
              "error": 402,
              "reason": "Payment Required",
              "errorCode": "NO_PAYMENT_INFORMATION_FOUND",
              "detail": "(This is just an example, the exception may not be related to this endpoint)"
            }
          }
        }
      },
      "forbidden": {
        "description": "Forbidden.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            },
            "example": {
              "error": 403,
              "reason": "Forbidden",
              "errorCode": "CANNOT_CHANGE_GROUP_NAME",
              "detail": "(This is just an example, the exception may not be related to this endpoint)"
            }
          }
        }
      },
      "methodNotAllowed": {
        "description": "Method Not Allowed.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            },
            "example": {
              "error": 405,
              "reason": "Method Not Allowed",
              "errorCode": "ATLAS_BACKUP_CANCEL_SHARD_RESTORE_JOB_NOT_ALLOWED",
              "detail": "(This is just an example, the exception may not be related to this endpoint)"
            }
          }
        }
      },
      "internalServerError": {
        "description": "Internal Server Error.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            },
            "example": {
              "error": 500,
              "reason": "Internal Server Error",
              "errorCode": "UNEXPECTED_ERROR",
              "detail": "(This is just an example, the exception may not be related to this endpoint)"
            }
          }
        }
      }
    },
    "parameters": {
      "envelope": {
        "name": "envelope",
        "in": "query",
        "description": "Flag that indicates whether Application wraps the response in an `envelope` JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.",
        "required": false,
        "schema": {
          "type": "boolean",
          "example": false,
          "default": false
        }
      },
      "pretty": {
        "name": "pretty",
        "in": "query",
        "description": "Flag that indicates whether the response body should be in the <a href=\"https://en.wikipedia.org/wiki/Prettyprint\" target=\"_blank\" rel=\"noopener noreferrer\">prettyprint</a> format.",
        "required": false,
        "schema": {
          "type": "boolean",
          "example": false,
          "default": false
        }
      },
      "orgId": {
        "name": "orgId",
        "in": "path",
        "description": "Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the [/orgs](#tag/Organizations/operation/listOrganizations) endpoint to retrieve all organizations to which the authenticated user has access.",
        "required": true,
        "schema": {
          "maxLength": 24,
          "minLength": 24,
          "pattern": "^([a-f0-9]{24})$",
          "type": "string",
          "example": "4888442a3354817a7320eb61"
        }
      },
      "federationSettingsId": {
        "name": "federationSettingsId",
        "in": "path",
        "description": "Unique 24-hexadecimal digit string that identifies your federation.",
        "required": true,
        "schema": {
          "maxLength": 24,
          "minLength": 24,
          "pattern": "^([a-f0-9]{24})$",
          "type": "string",
          "example": "55fa922fb343282757d9554e"
        }
      },
      "identityProviderId": {
        "name": "identityProviderId",
        "in": "path",
        "description": "Legacy 20-hexadecimal digit string that identifies the identity provider. This id can be found within the Federation Management Console > Identity Providers tab by clicking the info icon in the IdP ID row of a configured identity provider.",
        "required": true,
        "schema": {
          "maxLength": 20,
          "minLength": 20,
          "pattern": "^([a-f0-9]{20})$",
          "type": "string",
          "example": "c2777a9eca931f29fc2f"
        }
      },
      "groupId": {
        "name": "groupId",
        "in": "path",
        "description": "Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.\n\n**NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.",
        "required": true,
        "schema": {
          "maxLength": 24,
          "minLength": 24,
          "pattern": "^([a-f0-9]{24})$",
          "type": "string",
          "example": "32b6e34b3d91647abb20e7b8"
        }
      },
      "processId": {
        "name": "processId",
        "in": "path",
        "description": "Combination of hostname and IANA port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (mongod or mongos). The port must be the IANA port on which the MongoDB process listens for requests.",
        "required": true,
        "schema": {
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
          "type": "string",
          "example": "my.host.name.com:27017"
        }
      },
      "liveMigrationId": {
        "name": "liveMigrationId",
        "in": "path",
        "description": "Unique 24-hexadecimal digit string that identifies the migration.",
        "required": true,
        "schema": {
          "maxLength": 24,
          "minLength": 24,
          "pattern": "^([a-f0-9]{24})$",
          "type": "string",
          "example": "6296fb4c7c7aa997cf94e9a8"
        }
      },
      "databaseName": {
        "name": "databaseName",
        "in": "path",
        "description": "Human-readable label that identifies the database.",
        "required": true,
        "schema": {
          "type": "string",
          "example": "mydb"
        }
      },
      "collectionName": {
        "name": "collectionName",
        "in": "path",
        "description": "Human-readable label that identifies the collection.",
        "required": true,
        "schema": {
          "type": "string",
          "example": "mycoll"
        }
      },
      "indexName": {
        "name": "indexName",
        "in": "path",
        "description": "Human-readable label that identifies the index.",
        "required": true,
        "schema": {
          "type": "string",
          "example": "myindex"
        }
      },
      "includeCount": {
        "name": "includeCount",
        "in": "query",
        "description": "Flag that indicates whether the response returns the total number of items (**totalCount**) in the response.",
        "required": false,
        "schema": {
          "type": "boolean",
          "example": true,
          "default": true
        }
      },
      "itemsPerPage": {
        "name": "itemsPerPage",
        "in": "query",
        "description": "Number of items that the response returns per page.",
        "required": false,
        "schema": {
          "maximum": 500,
          "minimum": 1,
          "type": "integer",
          "example": 100,
          "default": 100
        }
      },
      "pageNum": {
        "name": "pageNum",
        "in": "query",
        "description": "Number of the page that displays the current set of the total objects that the response returns.",
        "required": false,
        "schema": {
          "minimum": 1,
          "type": "integer",
          "example": 1,
          "default": 1
        }
      },
      "granularity": {
        "name": "granularity",
        "in": "query",
        "description": "Duration that specifies the interval at which Atlas reports the metrics. This parameter expresses its value in the ISO 8601 duration format in UTC.",
        "required": true,
        "schema": {
          "type": "string",
          "example": "PT1M"
        }
      },
      "period": {
        "name": "period",
        "in": "query",
        "description": "Duration over which Atlas reports the metrics. This parameter expresses its value in the ISO 8601 duration format in UTC. Include this parameter when you do not set **start** and **end**.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "PT10H"
        }
      },
      "start": {
        "name": "start",
        "in": "query",
        "description": "Date and time when MongoDB Cloud begins reporting the metrics. This parameter expresses its value in the ISO 8601 timestamp format in UTC. Include this parameter when you do not set **period**.",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "end": {
        "name": "end",
        "in": "query",
        "description": "Date and time when MongoDB Cloud stops reporting the metrics. This parameter expresses its value in the ISO 8601 timestamp format in UTC. Include this parameter when you do not set **period**.",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "securitySchemes": {
      "DigestAuth": {
        "type": "http",
        "scheme": "digest"
      }
    }
  }
}
