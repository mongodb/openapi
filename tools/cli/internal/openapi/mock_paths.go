// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/openapi/tools/cli/internal/openapi (interfaces: NoExtensionDiff)
//
// Generated by this command:
//
//	mockgen -destination=../openapi/mock_paths.go -package=openapi github.com/mongodb/openapi/tools/cli/internal/openapi NoExtensionDiff
//

// Package openapi is a generated GoMock package.
package openapi

import (
	reflect "reflect"

	openapi3 "github.com/getkin/kin-openapi/openapi3"
	diff "github.com/tufin/oasdiff/diff"
	gomock "go.uber.org/mock/gomock"
)

// MockNoExtensionDiff is a mock of NoExtensionDiff interface.
type MockNoExtensionDiff struct {
	ctrl     *gomock.Controller
	recorder *MockNoExtensionDiffMockRecorder
}

// MockNoExtensionDiffMockRecorder is the mock recorder for MockNoExtensionDiff.
type MockNoExtensionDiffMockRecorder struct {
	mock *MockNoExtensionDiff
}

// NewMockNoExtensionDiff creates a new mock instance.
func NewMockNoExtensionDiff(ctrl *gomock.Controller) *MockNoExtensionDiff {
	mock := &MockNoExtensionDiff{ctrl: ctrl}
	mock.recorder = &MockNoExtensionDiffMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNoExtensionDiff) EXPECT() *MockNoExtensionDiffMockRecorder {
	return m.recorder
}

// GetPathDiffWithoutExtensions mocks base method.
func (m *MockNoExtensionDiff) GetPathDiffWithoutExtensions(arg0, arg1 *openapi3.T) (*diff.Diff, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPathDiffWithoutExtensions", arg0, arg1)
	ret0, _ := ret[0].(*diff.Diff)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPathDiffWithoutExtensions indicates an expected call of GetPathDiffWithoutExtensions.
func (mr *MockNoExtensionDiffMockRecorder) GetPathDiffWithoutExtensions(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPathDiffWithoutExtensions", reflect.TypeOf((*MockNoExtensionDiff)(nil).GetPathDiffWithoutExtensions), arg0, arg1)
}
